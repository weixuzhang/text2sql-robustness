[
    "SELECT COUNT(*) FROM singer",
    "SELECT COUNT(*) FROM singer",
    "SELECT name, country, age  FROM singer  ORDER BY age DESC",
    "SELECT name, country, age FROM singer ORDER BY age DESC",
    "SELECT AVG(age), MIN(age), MAX(age) FROM singer WHERE country = 'France'",
    "SELECT AVG(age), MIN(age), MAX(age) FROM singer WHERE country = 'France'",
    "SELECT s.name, s.song_release_year FROM singer s WHERE s.age = (SELECT MIN(age) FROM singer)",
    "SELECT song_name, song_release_year FROM singer WHERE age = (SELECT MIN(age) FROM singer)",
    "SELECT DISTINCT country FROM singer WHERE age > 20",
    "SELECT DISTINCT country FROM singer WHERE age > 20;",
    "SELECT singer.country, COUNT(DISTINCT singer.singer_id) as num_singers FROM singer GROUP BY singer.country",
    "SELECT country, COUNT(*) AS num_singers FROM singer GROUP BY country",
    "SELECT song_name  FROM singer  WHERE age > (SELECT AVG(age) FROM singer)",
    "SELECT DISTINCT song_name  FROM singer  WHERE age > (SELECT AVG(age) FROM singer);",
    "SELECT location, name FROM stadium WHERE capacity >= 5000 AND capacity <= 10000",
    "SELECT location, name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",
    "SELECT MAX(capacity), AVG(capacity) FROM stadium",
    "SELECT AVG(capacity), MAX(capacity) FROM stadium",
    "SELECT name, capacity FROM stadium WHERE average = (SELECT MAX(average) FROM stadium)",
    "SELECT name, capacity FROM stadium WHERE average = (SELECT MAX(average) FROM stadium)",
    "SELECT count(*) FROM concert WHERE year = 2014 OR year = 2015;",
    "SELECT COUNT(*) FROM concert WHERE year IN (2014, 2015)",
    "SELECT stadium.name, count(*) as num_concerts FROM concert JOIN stadium ON concert.stadium_id = stadium.stadium_id GROUP BY stadium.name",
    "SELECT stadium.name, COUNT(concert.concert_id)  FROM stadium  LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id  GROUP BY stadium.name",
    "SELECT stadium.name, stadium.capacity FROM concert JOIN stadium ON concert.stadium_id = stadium.stadium_id WHERE concert.year >= 2014 GROUP BY stadium.stadium_id, stadium.name, stadium.capacity ORDER BY COUNT(concert.concert_id) DESC LIMIT 1;",
    "SELECT name, capacity FROM stadium WHERE stadium_id = (     SELECT stadium_id     FROM concert     WHERE year > 2013     GROUP BY stadium_id     ORDER BY COUNT(*) DESC     LIMIT 1 )",
    "SELECT year, COUNT(*) AS num_concerts  FROM concert  GROUP BY year  ORDER BY num_concerts DESC  LIMIT 1",
    "SELECT year FROM concert GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1",
    "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)",
    "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert);",
    "SELECT DISTINCT s1.country FROM singer s1, singer s2, singer_in_concert sc1, singer_in_concert sc2, concert c WHERE s1.age > 40 AND s2.age < 30 AND s1.singer_id = sc1.singer_id AND s2.singer_id = sc2.singer_id AND sc1.concert_id = c.concert_id AND sc2.concert_id = c.concert_id",
    "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert WHERE year = 2014)",
    "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert WHERE year = 2014)",
    "SELECT concert.concert_name, concert.theme, COUNT(singer_in_concert.singer_id) AS num_singers FROM concert  INNER JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id GROUP BY concert.concert_id, concert.concert_name, concert.theme",
    "SELECT concert_name, theme, COUNT(singer_id) AS num_singers  FROM concert  JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id  GROUP BY concert.concert_id",
    "SELECT singer.name, COUNT(singer_in_concert.concert_id) AS number_of_concerts FROM singer  INNER JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id GROUP BY singer.name",
    "SELECT singer.name, COUNT(concert.concert_id) AS number_of_concerts FROM singer JOIN singer_in_concert ON singer_in_concert.singer_id = singer.singer_id JOIN concert ON concert.concert_id = singer_in_concert.concert_id GROUP BY singer.singer_id;",
    "SELECT DISTINCT singer.name FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id WHERE concert.year = 2014",
    "SELECT DISTINCT singer.name FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON concert.concert_id = singer_in_concert.concert_id WHERE concert.year = 2014",
    "SELECT name, country FROM singer WHERE song_name LIKE '%Hey%'",
    "SELECT singer.name, singer.country FROM singer WHERE singer.song_name LIKE '%Hey%'",
    "SELECT DISTINCT s.name, s.location FROM stadium s JOIN concert c ON s.stadium_id = c.stadium_id WHERE c.year = 2014 AND s.stadium_id IN (     SELECT stadium_id FROM concert WHERE year = 2015 )",
    "SELECT DISTINCT s.name, s.location  FROM stadium s  INNER JOIN concert c1 ON s.stadium_id = c1.stadium_id AND c1.year = 2014  INNER JOIN concert c2 ON s.stadium_id = c2.stadium_id AND c2.year = 2015",
    "SELECT COUNT(*) FROM concert WHERE stadium_id = (SELECT stadium_id FROM stadium ORDER BY capacity DESC LIMIT 1)",
    "SELECT COUNT(*) FROM concert WHERE stadium_id = (SELECT stadium_id FROM stadium ORDER BY capacity DESC LIMIT 1)",
    "SELECT COUNT(*) FROM pets WHERE weight > 10.",
    "SELECT COUNT(*) FROM pets WHERE weight > 10",
    "SELECT MIN(weight) FROM pets WHERE pettype = 'dog' AND pet_age = (SELECT MIN(pet_age) FROM pets WHERE pettype = 'dog')",
    "SELECT MIN(weight) FROM pets WHERE pettype='dog'",
    "SELECT pettype, MAX(weight) as max_weight FROM pets GROUP BY pettype",
    "SELECT pettype, MAX(weight) AS MaxWeight, MAX(pettype) AS MaxType  FROM pets  GROUP BY pettype;",
    "SELECT COUNT(pets.petid) FROM has_pet JOIN pets ON has_pet.petid = pets.petid JOIN student ON has_pet.stuid = student.stuid WHERE student.age > 20",
    "SELECT COUNT(DISTINCT has_pet.petid) FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE student.age > 20",
    "SELECT COUNT(*)  FROM pets_1 p JOIN has_pet hp ON p.petid = hp.petid JOIN student s ON hp.stuid = s.stuid WHERE p.pettype = 'dog' AND s.sex = 'F'",
    "SELECT COUNT(DISTINCT has_pet.petid)  FROM has_pet  JOIN pets ON has_pet.petid = pets.petid  JOIN student ON has_pet.stuid = student.stuid  WHERE pets.pettype = 'dog' AND student.sex = 'F'",
    "SELECT COUNT(DISTINCT pettype) FROM pets",
    "SELECT COUNT(DISTINCT pettype) FROM pets",
    "SELECT DISTINCT student.fname FROM student INNER JOIN has_pet ON student.stuid = has_pet.stuid INNER JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype IN ('cat', 'dog')",
    "SELECT DISTINCT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat' OR pets.pettype = 'dog'",
    "SELECT DISTINCT s.fname FROM student s JOIN has_pet hp1 ON s.stuid = hp1.stuid  JOIN pets p1 ON hp1.petid = p1.petid AND p1.pettype = 'cat' JOIN has_pet hp2 ON s.stuid = hp2.stuid  JOIN pets p2 ON hp2.petid = p2.petid AND p2.pettype = 'dog'",
    "SELECT DISTINCT student.fname FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' AND student.stuid IN      (SELECT stuid FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'dog')",
    "SELECT major, age FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE pettype = 'cat')",
    "SELECT s.major, s.age FROM student s WHERE s.stuid NOT IN (SELECT h.stuid FROM has_pet h JOIN pets p ON h.petid = p.petid WHERE p.pettype = 'cat')",
    "SELECT stuid FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat')",
    "SELECT student.stuid FROM student WHERE student.stuid NOT IN (SELECT has_pet.stuid FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat')",
    "SELECT fname, age  FROM student  WHERE stuid IN (SELECT stuid FROM has_pet JOIN pets ON has_pet.petid=pets.petid WHERE pettype='Dog')  AND stuid NOT IN (SELECT stuid FROM has_pet JOIN pets ON has_pet.petid=pets.petid WHERE pettype='Cat') ORDER BY stuid LIMIT 1;",
    "SELECT student.fname FROM student WHERE student.stuid IN (SELECT has_pet.stuid FROM has_pet, pets WHERE has_pet.petid = pets.petid AND pets.pettype = 'dog') AND student.stuid NOT IN (SELECT has_pet.stuid FROM has_pet, pets WHERE has_pet.petid = pets.petid AND pets.pettype = 'cat')",
    "SELECT pettype, weight FROM pets WHERE pet_age = (SELECT MIN(pet_age) FROM pets)",
    "SELECT pettype, weight FROM pets WHERE pet_age = (SELECT MIN(pet_age) FROM pets)",
    "SELECT petid, weight FROM pets WHERE pet_age > 1",
    "SELECT petid, weight FROM pets WHERE pet_age > 1",
    "SELECT pettype, AVG(pet_age) AS avg_age, MAX(pet_age) AS max_age FROM pets GROUP BY pettype;",
    "SELECT pettype, AVG(pet_age) AS avg_age, MAX(pet_age) AS max_age FROM pets GROUP BY pettype",
    "SELECT pettype, AVG(weight) as avg_weight FROM pets GROUP BY pettype.",
    "SELECT pettype, AVG(weight) FROM pets GROUP BY pettype",
    "SELECT s.fname, s.age FROM student s INNER JOIN has_pet hp ON s.stuid = hp.stuid INNER JOIN pets p ON hp.petid = p.petid",
    "SELECT DISTINCT student.fname, student.age FROM student INNER JOIN has_pet ON student.stuid = has_pet.stuid INNER JOIN pets ON has_pet.petid = pets.petid",
    "SELECT petid FROM has_pet JOIN student ON has_pet.stuid = student.stuid JOIN pets ON has_pet.petid = pets.petid WHERE student.lname = 'Smith'",
    "SELECT petid FROM has_pet WHERE stuid IN (SELECT stuid FROM student WHERE lname='Smith')",
    "SELECT has_pet.stuid, COUNT(pets.petid) FROM has_pet JOIN pets ON has_pet.petid = pets.petid GROUP BY has_pet.stuid;",
    "SELECT has_pet.stuid, COUNT(*)  FROM has_pet  JOIN pets ON has_pet.petid = pets.petid  GROUP BY has_pet.stuid",
    "SELECT fname, sex FROM student WHERE stuid IN (SELECT stuid FROM has_pet GROUP BY stuid HAVING COUNT(*) > 1)",
    "SELECT student.fname, student.sex FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  GROUP BY student.stuid  HAVING COUNT(has_pet.petid) > 1",
    "SELECT lname FROM student WHERE stuid IN (SELECT stuid FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE pettype = 'cat' AND pet_age = 3) ORDER BY stuid DESC LIMIT 1",
    "SELECT lname FROM student WHERE stuid IN (SELECT stuid FROM has_pet INNER JOIN pets ON has_pet.petid = pets.petid WHERE pettype = 'cat' AND pet_age = 3) ORDER BY stuid DESC LIMIT 1",
    "SELECT AVG(age)  FROM student  WHERE stuid NOT IN (SELECT stuid FROM has_pet)",
    "SELECT AVG(age) FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet)",
    "SELECT COUNT(*) FROM continents;",
    "SELECT COUNT(*) FROM continents.",
    "SELECT      continents.contid AS continent_id,     continents.continent AS continent_name,     COUNT(countries.countryid) AS number_of_countries FROM      continents      JOIN countries ON continents.contid = countries.continent GROUP BY      continents.contid,     continents.continent ORDER BY      continents.contid ASC;",
    "SELECT continents.contid, continents.continent, COUNT(countries.countryid) AS num_countries FROM continents LEFT JOIN countries ON continents.contid = countries.continent GROUP BY continents.contid, continents.continent",
    "SELECT COUNT(*) FROM countries",
    "SELECT count(*) FROM countries",
    "SELECT car_makers.fullname, car_makers.id, COUNT(DISTINCT model_list.modelid) FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.fullname, car_makers.id",
    "SELECT car_makers.id, car_makers.fullname, COUNT(model_list.modelid) AS number_of_models_produced  FROM car_makers  JOIN model_list ON car_makers.maker=model_list.maker  GROUP BY car_makers.id, car_makers.fullname",
    "SELECT model FROM car_names JOIN cars_data ON car_names.modelid = cars_data.id WHERE horsepower = (SELECT MIN(horsepower) FROM cars_data)",
    "SELECT model FROM model_list JOIN cars_data ON model_list.modelid = cars_data.id WHERE horsepower = (SELECT MIN(horsepower) FROM cars_data)",
    "SELECT model  FROM car_names JOIN cars_data ON car_names.makeid = cars_data.id WHERE weight < (SELECT AVG(weight) FROM cars_data)",
    "SELECT model FROM model_list WHERE weight < (SELECT AVG(weight) FROM cars_data)",
    "SELECT DISTINCT car_makers.maker  FROM car_makers JOIN cars_data ON car_makers.id = cars_data.id  WHERE cars_data.year = 1970",
    "SELECT DISTINCT car_makers.maker FROM car_makers JOIN cars_data ON car_makers.id = cars_data.id AND cars_data.year = 1970;",
    "SELECT make, production_time FROM car_names  JOIN cars_data ON car_names.makeid = cars_data.id WHERE year = (SELECT MIN(year) FROM cars_data)",
    "SELECT car_makers.maker, MIN(cars_data.year) FROM cars_data JOIN car_makers ON cars_data.id = car_makers.id GROUP BY car_makers.maker ORDER BY MIN(cars_data.year) LIMIT 1;",
    "SELECT DISTINCT model FROM model_list JOIN cars_data ON model_list.modelid = cars_data.id WHERE cars_data.year > 1980",
    "SELECT DISTINCT model FROM model_list  JOIN car_names ON model_list.modelid = car_names.modelid  JOIN cars_data ON car_names.makeid = cars_data.id  WHERE year > 1980",
    "SELECT continents.continent, COUNT(DISTINCT car_makers.maker) as count FROM continents JOIN countries ON continents.contid=countries.continent JOIN car_makers ON countries.countryid=car_makers.country GROUP BY continents.continent",
    "SELECT continents.continent, COUNT(DISTINCT car_makers.id) AS num_car_makers  FROM continents  JOIN countries ON continents.contid=countries.continent  JOIN car_makers ON countries.countryid=car_makers.country  GROUP BY continents.continent",
    "SELECT countries.countryname  FROM countries  JOIN car_makers ON countries.countryid = car_makers.country  GROUP BY countries.countryname  ORDER BY COUNT(DISTINCT car_makers.maker) DESC  LIMIT 1",
    "SELECT countryname FROM countries WHERE countryid = (     SELECT country     FROM car_makers     GROUP BY country     ORDER BY COUNT(DISTINCT maker) DESC     LIMIT 1 )",
    "SELECT car_makers.fullname, COUNT(DISTINCT model_list.modelid) AS count_models  FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.fullname;",
    "SELECT cm.id, cm.fullname, COUNT(DISTINCT ml.modelid) AS num_models FROM car_makers cm JOIN model_list ml ON cm.maker = ml.maker GROUP BY cm.id, cm.fullname;",
    "SELECT accelerate FROM cars_data  JOIN car_names ON cars_data.id = car_names.makeid  WHERE car_names.model = 'hornet sportabout (sw)' AND car_names.make = 'amc'",
    "SELECT accelerate FROM cars_data  INNER JOIN car_names ON cars_data.id = car_names.makeid  WHERE model='hornet sportabout (sw)' AND maker='amc'",
    "SELECT COUNT(DISTINCT id) FROM car_makers WHERE country = 'france'",
    "SELECT COUNT(*) FROM car_makers WHERE maker = 'care' AND country = 'France'",
    "SELECT COUNT(DISTINCT modelid) FROM model_list ml JOIN car_makers cm ON ml.maker = cm.maker AND cm.country = 'usa'",
    "SELECT COUNT(DISTINCT model) FROM car_names JOIN car_makers ON car_names.makeid = car_makers.id JOIN countries ON car_makers.country = countries.countryid JOIN continents ON countries.continent = continents.contid WHERE continents.continent = 'United States'",
    "SELECT AVG(mpg) FROM cars_data WHERE cylinders = 4",
    "SELECT AVG(mpg) FROM cars_data WHERE cylinders = 4",
    "SELECT MIN(weight) FROM cars_data WHERE cylinders = 8 AND year = 1974",
    "SELECT MIN(weight) FROM cars_data WHERE cylinders = 8 AND year = 1974",
    "SELECT maker, model FROM model_list",
    "SELECT maker, model FROM car_makers cm JOIN model_list ml ON cm.id = ml.maker JOIN car_names cn ON cm.id = cn.makeid;",
    "SELECT DISTINCT countryid, countryname FROM countries c  JOIN car_makers cm ON c.countryid = cm.countryid",
    "SELECT DISTINCT countries.countryid, countries.countryname  FROM countries  INNER JOIN car_makers ON countries.countryid=car_makers.country",
    "SELECT COUNT(*) FROM cars_data WHERE horsepower > 150.",
    "SELECT COUNT(*) FROM cars_data WHERE horsepower > 150",
    "SELECT AVG(weight) FROM cars_data GROUP BY year;",
    "SELECT year, AVG(weight) AS avg_weight, AVG(year) AS avg_year  FROM cars_data  GROUP BY year",
    "SELECT DISTINCT countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country WHERE countries.continent = 'europe' GROUP BY countries.countryname HAVING COUNT(DISTINCT car_makers.maker) >= 3",
    "SELECT countryname  FROM countries  WHERE continent = 'Europe'  AND countryid IN (     SELECT country FROM (         SELECT COUNT(*) AS num_makers, country          FROM car_makers          GROUP BY country          HAVING num_makers >= 3     ) AS maker_counts )",
    "SELECT MAX(horsepower), make FROM cars_data  INNER JOIN car_names ON cars_data.id = car_names.makeid  INNER JOIN model_list ON car_names.model = model_list.model  WHERE cars_data.cylinders = 3 GROUP BY make",
    "SELECT MAX(horsepower), maker  FROM model_list JOIN cars_data ON model_list.modelid = cars_data.id WHERE cylinders = 3",
    "SELECT model FROM cars_data ORDER BY mpg DESC LIMIT 1",
    "SELECT model FROM model_list INNER JOIN cars_data ON model_list.modelid = cars_data.id ORDER BY mpg DESC LIMIT 1",
    "SELECT AVG(horsepower) FROM cars_data WHERE year < 1980",
    "SELECT AVG(horsepower) FROM cars_data WHERE year < 1980",
    "SELECT AVG(c.edispl) FROM car_makers cm, model_list ml, car_names cn, cars_data c WHERE cm.maker = 'volvo' AND cm.id = ml.maker AND ml.modelid = cn.model AND cn.makeid = c.id",
    "SELECT AVG(edispl) FROM car_names  JOIN cars_data ON car_names.makeid = cars_data.id  WHERE car_names.make = 'volvo'",
    "SELECT cylinders, MAX(accelerate) FROM cars_data GROUP BY cylinders",
    "SELECT MAX(accelerate) FROM cars_data GROUP BY cylinders",
    "SELECT model_list.model  FROM model_list  INNER JOIN car_names ON model_list.modelid = car_names.model  GROUP BY model_list.model  ORDER BY COUNT(car_names.makeid) DESC LIMIT 1;",
    "SELECT model, COUNT(DISTINCT makeid) as num_versions FROM model_list JOIN car_names ON model_list.modelid = car_names.model GROUP BY model ORDER BY num_versions DESC LIMIT 1",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 4",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 4",
    "SELECT COUNT(*) FROM cars_data WHERE year=1980",
    "SELECT COUNT(*)  FROM cars_data  WHERE year = 1980",
    "SELECT COUNT(DISTINCT model) FROM model_list JOIN car_makers ON model_list.maker = car_makers.maker WHERE car_makers.fullname = 'American Motor Company'",
    "SELECT COUNT(DISTINCT modelid) FROM model_list WHERE maker = 'American Motor Company'",
    "SELECT car_makers.id, car_makers.fullname  FROM car_makers  INNER JOIN model_list ON car_makers.id = model_list.maker  GROUP BY car_makers.id, car_makers.fullname  HAVING COUNT(DISTINCT model_list.modelid) > 3",
    "SELECT id, maker FROM car_makers WHERE id IN (SELECT maker FROM model_list GROUP BY maker HAVING COUNT(*) > 3)",
    "SELECT DISTINCT model FROM model_list WHERE maker IN (SELECT maker FROM car_makers WHERE fullname = 'General Motors') OR model_list.modelid IN (SELECT cars_data.id FROM cars_data WHERE weight > 3500)",
    "SELECT DISTINCT model  FROM car_names  WHERE makeid IN ( \tSELECT id  \tFROM car_makers  \tWHERE maker = 'General Motors' ) OR weight > 3500",
    "SELECT DISTINCT year FROM cars_data WHERE weight >= 3000 AND weight <= 4000 ORDER BY year ASC",
    "SELECT DISTINCT year  FROM cars_data WHERE weight < 4000 AND weight > 3000",
    "SELECT horsepower FROM cars_data WHERE accelerate = (SELECT MAX(accelerate) FROM cars_data)",
    "SELECT horsepower FROM cars_data ORDER BY accelerate DESC LIMIT 1",
    "SELECT cylinders FROM cars_data WHERE model = \"volvo\" AND accelerate = (SELECT MIN(accelerate) FROM cars_data WHERE model = \"volvo\") LIMIT 1",
    "SELECT cylinders FROM cars_data WHERE model = 'volvo' ORDER BY accelerate LIMIT 1",
    "SELECT COUNT(*) FROM cars_data WHERE accelerate > (SELECT MAX(accelerate) FROM cars_data WHERE horsepower = (SELECT MAX(horsepower) FROM cars_data))",
    "SELECT COUNT(*) FROM cars_data WHERE accelerate > (SELECT MAX(accelerate) FROM cars_data WHERE horsepower = (SELECT MAX(horsepower) FROM cars_data))",
    "SELECT COUNT(DISTINCT countries.countryid) FROM countries INNER JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryid HAVING COUNT(DISTINCT car_makers.maker) > 2",
    "SELECT COUNT(DISTINCT countryid)  FROM car_makers  JOIN countries ON car_makers.country = countries.countryid  GROUP BY countries.countryid  HAVING COUNT(DISTINCT car_makers.maker) > 2",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 6",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 6",
    "SELECT model  FROM car_names  INNER JOIN cars_data ON car_names.makeid = cars_data.id  WHERE cylinders = 4  ORDER BY horsepower DESC  LIMIT 1",
    "SELECT model  FROM car_names  INNER JOIN cars_data ON car_names.id = cars_data.id  WHERE cylinders = 4  ORDER BY horsepower DESC  LIMIT 1",
    "SELECT makeid, maker FROM car_names  WHERE horsepower > (SELECT MIN(horsepower) FROM cars_data)  AND cylinders <= 3",
    "SELECT makeid, maker FROM car_names WHERE cylinders < 4 AND horsepower > (     SELECT MIN(horsepower)     FROM cars_data )",
    "SELECT MAX(mpg) FROM cars_data WHERE cylinders = 8 AND year < 1980",
    "SELECT MAX(mpg) FROM cars_data WHERE cylinders = 8 OR year < 1980",
    "SELECT model FROM car_names INNER JOIN cars_data ON car_names.makeid = cars_data.id INNER JOIN model_list ON car_names.model = model_list.model INNER JOIN car_makers ON model_list.maker = car_makers.maker WHERE weight < 3500 AND car_makers.country != 'Ford Motor Company'",
    "SELECT DISTINCT model FROM model_list INNER JOIN cars_data ON model_list.modelid = cars_data.id INNER JOIN car_makers ON model_list.maker = car_makers.maker WHERE weight < 3500 AND car_makers.country NOT IN (     SELECT country FROM car_makers WHERE maker = 'Ford Motor Company' )",
    "SELECT countryname FROM countries WHERE countryid NOT IN (SELECT DISTINCT country FROM car_makers)",
    "SELECT countryname FROM countries LEFT JOIN car_makers ON countries.countryid = car_makers.country WHERE id IS NULL",
    "SELECT id, maker FROM car_makers WHERE id IN (SELECT maker FROM model_list GROUP BY maker HAVING COUNT(DISTINCT modelid) >= 2) AND id IN (SELECT maker FROM car_names GROUP BY makeid HAVING COUNT(DISTINCT makeid) > 3)",
    "SELECT id, maker FROM car_makers WHERE id IN (SELECT maker FROM model_list GROUP BY maker HAVING COUNT(DISTINCT model) >= 2) AND id IN (SELECT makeid FROM car_names GROUP BY makeid HAVING COUNT(*) > 3)",
    "SELECT countryid, countryname FROM countries WHERE countryid IN (     SELECT country FROM car_makers      GROUP BY country      HAVING COUNT(DISTINCT maker) > 3 ) OR countryid IN (     SELECT country FROM car_makers      WHERE maker = 'fiat' )",
    "SELECT countryid, countryname FROM countries WHERE countryid IN (SELECT country FROM car_makers GROUP BY country HAVING COUNT(DISTINCT maker) > 3) OR countryid IN (SELECT country FROM car_makers WHERE maker = 'fiat')",
    "SELECT country  FROM airlines  WHERE airline = 'JetBlue Airways'",
    "SELECT country FROM airlines WHERE airline = 'Jetblue Airways'",
    "SELECT abbreviation FROM airlines WHERE airline = 'JetBlue Airways'.",
    "SELECT abbreviation FROM airlines WHERE airline = 'Jetblue Airways'",
    "SELECT airline, abbreviation FROM airlines WHERE country = 'USA'",
    "SELECT airline, abbreviation FROM airlines WHERE country = 'USA'",
    "SELECT airportcode, airportname  FROM airports  WHERE city = 'Anthony'",
    "SELECT airportcode, airportname FROM airports WHERE city='Anthony'",
    "SELECT COUNT(*) FROM airlines",
    "SELECT COUNT(*) FROM airlines",
    "SELECT COUNT(*) FROM airports",
    "SELECT COUNT(*) FROM airports",
    "SELECT COUNT(*) FROM flights",
    "SELECT COUNT(*) FROM flights",
    "SELECT airline FROM airlines WHERE abbreviation = 'UAL'",
    "SELECT airline FROM airlines WHERE abbreviation = 'UAL'",
    "SELECT COUNT(*) FROM airlines WHERE country = 'USA'",
    "SELECT COUNT(*) FROM airlines WHERE country = 'USA'",
    "SELECT city, country FROM airports WHERE airportname = 'Alton airport';",
    "SELECT city, country FROM airports WHERE airportname = 'Alton airport'",
    "SELECT airportname FROM airports WHERE airportcode = 'AKO'"
]