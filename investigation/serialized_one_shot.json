[
    "Here is an examples including input and output:\n input: question: What is the name and distance of every aircraft that can cover a distance of more than 5000 and which at least 5 people can fly? serialized_schema:  | flight_1 | flight : flno , origin , destination , distance , departure_date , arrival_date , price , aid | aircraft : aid , name , distance | employee : eid , name , salary | certificate : eid , aid output: SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid WHERE T2.distance  >  5000 GROUP BY T1.aid ORDER BY count(*)  >=  5\n Now please use valid SQLite to answer the following questions: How many singers do we have?",
    "Here is an examples including input and output:\n input: question: How many devices are there? serialized_schema:  | device | device : device_id , device , carrier , package_version , applications , software_platform | shop : shop_id , shop_name , location , open_date , open_year | stock : shop_id , device_id , quantity output: SELECT count(*) FROM device\n Now please use valid SQLite to answer the following questions: What is the total number of singers?",
    "Here is an examples including input and output:\n input: question: Show the title and director for all films. serialized_schema:  | cinema | film : film_id , rank_in_series , number_in_season , title , directed_by , original_air_date , production_code | cinema : cinema_id , name , openning_year , capacity , location | schedule : cinema_id , film_id , date , show_times_per_day , price output: SELECT title ,  directed_by FROM film\n Now please use valid SQLite to answer the following questions: Show name, country, age for all singers ordered by age from the oldest to the youngest.",
    "Here is an examples including input and output:\n input: question: What is the name of the department with the student that has the lowest GPA? serialized_schema:  | college_1 | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num output: SELECT T2.dept_name FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code ORDER BY stu_gpa LIMIT 1\n Now please use valid SQLite to answer the following questions: What are the names, countries, and ages for every singer in descending order of age?",
    "Here is an examples including input and output:\n input: question: Find all the rooms that have a price higher than 160 and can accommodate more than 2 people. Report room names and ids. serialized_schema:  | inn_1 | rooms : roomid , roomname , beds , bedtype , maxoccupancy , baseprice , decor | reservations : code , room , checkin , checkout , rate , lastname , firstname , adults , kids output: SELECT roomName ,  RoomId FROM Rooms WHERE basePrice  >  160 AND maxOccupancy  >  2;\n Now please use valid SQLite to answer the following questions: What is the average, minimum, and maximum age of all singers from France?",
    "Here is an examples including input and output:\n input: question: What is the name of the youngest male? serialized_schema:  | network_2 | person : name , age , city , gender , job | personfriend : name , friend , year output: SELECT name FROM Person WHERE gender  =  'male' AND age  =  (SELECT min(age) FROM person WHERE gender  =  'male' )\n Now please use valid SQLite to answer the following questions: What is the average, minimum, and maximum age for all French singers?",
    "Here is an examples including input and output:\n input: question: What are the names of customers with checking balances lower than the average checking balance? serialized_schema:  | small_bank_1 | accounts : custid , name | savings : custid , balance | checking : custid , balance output: SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT avg(balance) FROM checking)\n Now please use valid SQLite to answer the following questions: Show the name and the release year of the song by the youngest singer.",
    "Here is an examples including input and output:\n input: question: Find the full name of employee who supported the most number of customers. serialized_schema:  | store_1 | artists : id , name | sqlite_sequence : name , seq | albums : id , title , artist_id | employees : id , last_name , first_name , title , reports_to , birth_date , hire_date , address , city , state , country , postal_code , phone , fax , email | customers : id , first_name , last_name , company , address , city , state , country , postal_code , phone , fax , email , support_rep_id | genres : id , name | invoices : id , customer_id , invoice_date , billing_address , billing_city , billing_state , billing_country , billing_postal_code , total | media_types : id , name | tracks : id , name , album_id , media_type_id , genre_id , composer , milliseconds , bytes , unit_price | invoice_lines : id , invoice_id , track_id , unit_price , quantity | playlists : id , name | playlist_tracks : playlist_id , track_id output: SELECT T1.first_name , T1.last_name FROM employees AS T1 JOIN customers AS T2 ON T1.id  =  T2.support_rep_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: What are the names and release years for all the songs of the youngest singer?",
    "Here is an examples including input and output:\n input: question: Find the id and address of the shops whose score is below the average score. serialized_schema:  | coffee_shop | shop : shop_id , address , num_of_staff , score , open_year | member : member_id , name , membership_card , age , time_of_purchase , level_of_membership , address | happy_hour : hh_id , shop_id , month , num_of_shaff_in_charge | happy_hour_member : hh_id , member_id , total_amount output: SELECT shop_id ,  address FROM shop WHERE score  <  (SELECT avg(score) FROM shop)\n Now please use valid SQLite to answer the following questions: What are all distinct countries where singers above age 20 are from?",
    "Here is an examples including input and output:\n input: question: find the number of different programs that are broadcast during night time. serialized_schema:  | program_share | program : program_id , name , origin , launch , owner | channel : channel_id , name , owner , share_in_percent , rating_in_percent | broadcast : channel_id , program_id , time_of_day | broadcast_share : channel_id , program_id , date , share_in_percent output: SELECT count(DISTINCT program_id) FROM broadcast WHERE time_of_day  =  'Night'\n Now please use valid SQLite to answer the following questions: What are  the different countries with singers above age 20?",
    "Here is an examples including input and output:\n input: question: Show different parties of people along with the number of people in each party. serialized_schema:  | debate | people : people_id , district , name , party , age | debate : debate_id , date , venue , num_of_audience | debate_people : debate_id , affirmative , negative , if_affirmative_win output: SELECT Party ,  COUNT(*) FROM people GROUP BY Party\n Now please use valid SQLite to answer the following questions: Show all countries and the number of singers in each country.",
    "Here is an examples including input and output:\n input: question: Give the building that the instructor who teaches the greatest number of courses lives in. serialized_schema:  | college_3 | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building | department : dno , division , dname , room , building , dphone | member_of : facid , dno , appt_type | course : cid , cname , credits , instructor , days , hours , dno | minor_in : stuid , dno | enrolled_in : stuid , cid , grade | gradeconversion : lettergrade , gradepoint output: SELECT T2.Building FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: How many singers are from each country?",
    "Here is an examples including input and output:\n input: question: What are the clean and jerk score of the body builder with the highest total score? serialized_schema:  | body_builder | body_builder : body_builder_id , people_id , snatch , clean_jerk , total | people : people_id , name , height , weight , birth_date , birth_place output: SELECT Clean_Jerk FROM body_builder ORDER BY Total DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: List all song names by singers above the average age.",
    "Here is an examples including input and output:\n input: question: What is the id and name of the browser that is compatible with the most web accelerators? serialized_schema:  | browser_web | web_client_accelerator : id , name , operating_system , client , connection | browser : id , name , market_share | accelerator_compatible_browser : accelerator_id , browser_id , compatible_since_year output: SELECT T1.id ,  T1.name FROM browser AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id  =  T2.browser_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: What are all the song names by singers who are older than average?",
    "Here is an examples including input and output:\n input: question: What is the average song rating for each language? serialized_schema:  | music_1 | genre : g_name , rating , most_popular_in | artist : artist_name , country , gender , preferred_genre | files : f_id , artist_name , file_size , duration , formats | song : song_name , artist_name , country , f_id , genre_is , rating , languages , releasedate , resolution output: SELECT avg(rating) ,  languages FROM song GROUP BY languages\n Now please use valid SQLite to answer the following questions: Show location and name for all stadiums with a capacity between 5000 and 10000.",
    "Here is an examples including input and output:\n input: question: Show the name of the county with the biggest population. serialized_schema:  | election | county : county_id , county_name , population , zip_code | party : party_id , year , party , governor , lieutenant_governor , comptroller , attorney_general , us_senate | election : election_id , counties_represented , district , delegate , party , first_elected , committee output: SELECT County_name FROM county ORDER BY Population DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: What are the locations and names of all stations with capacity between 5000 and 10000?",
    "Here is an examples including input and output:\n input: question: Find the names of customers who have used both the service \"Close a policy\" and the service \"New policy application\". serialized_schema:  | insurance_fnol | customers : customer_id , customer_name | services : service_id , service_name | available_policies : policy_id , policy_type_code , customer_phone | customers_policies : customer_id , policy_id , date_opened , date_closed | first_notification_of_loss : fnol_id , customer_id , policy_id , service_id | claims : claim_id , fnol_id , effective_date | settlements : settlement_id , claim_id , effective_date , settlement_amount output: SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  \"Close a policy\" INTERSECT SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  \"New policy application\"\n Now please use valid SQLite to answer the following questions: What is the maximum capacity and the average of all stadiums ?",
    "Here is an examples including input and output:\n input: question: Return each apartment type code with the number of apartments having that apartment type, in ascending order of the number of apartments. serialized_schema:  | apartment_rentals | apartment_buildings : building_id , building_short_name , building_full_name , building_description , building_address , building_manager , building_phone | apartments : apt_id , building_id , apt_type_code , apt_number , bathroom_count , bedroom_count , room_count | apartment_facilities : apt_id , facility_code | guests : guest_id , gender_code , guest_first_name , guest_last_name , date_of_birth | apartment_bookings : apt_booking_id , apt_id , guest_id , booking_status_code , booking_start_date , booking_end_date | view_unit_status : apt_id , apt_booking_id , status_date , available_yn output: SELECT apt_type_code ,  COUNT(*) FROM Apartments GROUP BY apt_type_code ORDER BY COUNT(*) ASC\n Now please use valid SQLite to answer the following questions: What is the average and maximum capacities for all stadiums ?",
    "Here is an examples including input and output:\n input: question: What are the characters and duration of actors? serialized_schema:  | musical | musical : musical_id , name , year , award , category , nominee , result | actor : actor_id , name , musical_id , character , duration , age output: SELECT Character ,  Duration FROM actor\n Now please use valid SQLite to answer the following questions: What is the name and capacity for the stadium with highest average attendance?",
    "Here is an examples including input and output:\n input: question: For each party, return its theme and the name of its host. serialized_schema:  | party_host | party : party_id , party_theme , location , first_year , last_year , number_of_hosts | host : host_id , name , nationality , age | party_host : party_id , host_id , is_main_in_charge output: SELECT T3.Party_Theme ,  T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID\n Now please use valid SQLite to answer the following questions: What is the name and capacity for the stadium with the highest average attendance?",
    "Here is an examples including input and output:\n input: question: What are the ids and names of customers with addressed that contain WY and who do not use a credit card for payment? serialized_schema:  | department_store | addresses : address_id , address_details | staff : staff_id , staff_gender , staff_name | suppliers : supplier_id , supplier_name , supplier_phone | department_store_chain : dept_store_chain_id , dept_store_chain_name | customers : customer_id , payment_method_code , customer_code , customer_name , customer_address , customer_phone , customer_email | products : product_id , product_type_code , product_name , product_price | supplier_addresses : supplier_id , address_id , date_from , date_to | customer_addresses : customer_id , address_id , date_from , date_to | customer_orders : order_id , customer_id , order_status_code , order_date | department_stores : dept_store_id , dept_store_chain_id , store_name , store_address , store_phone , store_email | departments : department_id , dept_store_id , department_name | order_items : order_item_id , order_id , product_id | product_suppliers : product_id , supplier_id , date_supplied_from , date_supplied_to , total_amount_purchased , total_value_purchased | staff_department_assignments : staff_id , department_id , date_assigned_from , job_title_code , date_assigned_to output: SELECT customer_id ,  customer_name FROM customers WHERE customer_address LIKE \"%WY%\" AND payment_method_code != \"Credit Card\"\n Now please use valid SQLite to answer the following questions: How many concerts are there in year 2014 or 2015?",
    "Here is an examples including input and output:\n input: question: What is the full name and id of the customer who has the lowest total amount of payment? serialized_schema:  | sakila_1 | actor : actor_id , first_name , last_name , last_update | address : address_id , address , address2 , district , city_id , postal_code , phone , last_update | category : category_id , name , last_update | city : city_id , city , country_id , last_update | country : country_id , country , last_update | customer : customer_id , store_id , first_name , last_name , email , address_id , active , create_date , last_update | film : film_id , title , description , release_year , language_id , original_language_id , rental_duration , rental_rate , length , replacement_cost , rating , special_features , last_update | film_actor : actor_id , film_id , last_update | film_category : film_id , category_id , last_update | film_text : film_id , title , description | inventory : inventory_id , film_id , store_id , last_update | language : language_id , name , last_update | payment : payment_id , customer_id , staff_id , rental_id , amount , payment_date , last_update | rental : rental_id , rental_date , inventory_id , customer_id , return_date , staff_id , last_update | staff : staff_id , first_name , last_name , address_id , picture , email , store_id , active , username , password , last_update | store : store_id , manager_staff_id , address_id , last_update output: SELECT T1.first_name ,  T1.last_name ,  T1.customer_id FROM customer AS T1 JOIN payment AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY sum(amount) ASC LIMIT 1\n Now please use valid SQLite to answer the following questions: How many concerts occurred in 2014 or 2015?",
    "Here is an examples including input and output:\n input: question: Return the different nominees of musicals that have an award that is not the Tony Award. serialized_schema:  | musical | musical : musical_id , name , year , award , category , nominee , result | actor : actor_id , name , musical_id , character , duration , age output: SELECT DISTINCT Nominee FROM musical WHERE Award != \"Tony Award\"\n Now please use valid SQLite to answer the following questions: Show the stadium name and the number of concerts in each stadium.",
    "Here is an examples including input and output:\n input: question: Which tourist attractions do the tourists Vincent and Marcelle visit? Tell me the names of the attractions. serialized_schema:  | cre_Theme_park | ref_hotel_star_ratings : star_rating_code , star_rating_description | locations : location_id , location_name , address , other_details | ref_attraction_types : attraction_type_code , attraction_type_description | visitors : tourist_id , tourist_details | features : feature_id , feature_details | hotels : hotel_id , star_rating_code , pets_allowed_yn , price_range , other_hotel_details | tourist_attractions : tourist_attraction_id , attraction_type_code , location_id , how_to_get_there , name , description , opening_hours , other_details | street_markets : market_id , market_details | shops : shop_id , shop_details | museums : museum_id , museum_details | royal_family : royal_family_id , royal_family_details | theme_parks : theme_park_id , theme_park_details | visits : visit_id , tourist_attraction_id , tourist_id , visit_date , visit_details | photos : photo_id , tourist_attraction_id , name , description , filename , other_details | staff : staff_id , tourist_attraction_id , name , other_details | tourist_attraction_features : tourist_attraction_id , feature_id output: SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Vincent\" INTERSECT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Marcelle\"\n Now please use valid SQLite to answer the following questions: For each stadium, how many concerts play there?",
    "Here is an examples including input and output:\n input: question: What is the marketing region code that has the most drama workshop groups? serialized_schema:  | cre_Drama_Workshop_Groups | ref_payment_methods : payment_method_code , payment_method_description | ref_service_types : service_type_code , parent_service_type_code , service_type_description | addresses : address_id , line_1 , line_2 , city_town , state_county , other_details | products : product_id , product_name , product_price , product_description , other_product_service_details | marketing_regions : marketing_region_code , marketing_region_name , marketing_region_descriptrion , other_details | clients : client_id , address_id , customer_email_address , customer_name , customer_phone , other_details | drama_workshop_groups : workshop_group_id , address_id , currency_code , marketing_region_code , store_name , store_phone , store_email_address , other_details | performers : performer_id , address_id , customer_name , customer_phone , customer_email_address , other_details | customers : customer_id , address_id , customer_name , customer_phone , customer_email_address , other_details | stores : store_id , address_id , marketing_region_code , store_name , store_phone , store_email_address , other_details | bookings : booking_id , customer_id , workshop_group_id , status_code , store_id , order_date , planned_delivery_date , actual_delivery_date , other_order_details | performers_in_bookings : order_id , performer_id | customer_orders : order_id , customer_id , store_id , order_date , planned_delivery_date , actual_delivery_date , other_order_details | order_items : order_item_id , order_id , product_id , order_quantity , other_item_details | invoices : invoice_id , order_id , payment_method_code , product_id , order_quantity , other_item_details , order_item_id | services : service_id , service_type_code , workshop_group_id , product_description , product_name , product_price , other_product_service_details | bookings_services : order_id , product_id | invoice_items : invoice_item_id , invoice_id , order_id , order_item_id , product_id , order_quantity , other_item_details output: SELECT Marketing_Region_Code FROM Drama_Workshop_Groups GROUP BY Marketing_Region_Code ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: Show the stadium name and capacity with most number of concerts in year 2014 or after.",
    "Here is an examples including input and output:\n input: question: What are the name and level of catalog structure with level number between 5 and 10 serialized_schema:  | product_catalog | attribute_definitions : attribute_id , attribute_name , attribute_data_type | catalogs : catalog_id , catalog_name , catalog_publisher , date_of_publication , date_of_latest_revision | catalog_structure : catalog_level_number , catalog_id , catalog_level_name | catalog_contents : catalog_entry_id , catalog_level_number , parent_entry_id , previous_entry_id , next_entry_id , catalog_entry_name , product_stock_number , price_in_dollars , price_in_euros , price_in_pounds , capacity , length , height , width | catalog_contents_additional_attributes : catalog_entry_id , catalog_level_number , attribute_id , attribute_value output: SELECT catalog_level_name ,  catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10\n Now please use valid SQLite to answer the following questions: What is the name and capacity of the stadium with the most concerts after 2013 ?",
    "Here is an examples including input and output:\n input: question: how many female dependents are there? serialized_schema:  | company_1 | works_on : essn , pno , hours | employee : fname , minit , lname , ssn , bdate , address , sex , salary , super_ssn , dno | department : dname , dnumber , mgr_ssn , mgr_start_date | project : pname , pnumber , plocation , dnum | dependent : essn , dependent_name , sex , bdate , relationship | dept_locations : dnumber , dlocation output: SELECT count(*) FROM dependent WHERE sex  =  'F'\n Now please use valid SQLite to answer the following questions: Which year has most number of concerts?",
    "Here is an examples including input and output:\n input: question: Return all the distinct payment methods used by customers. serialized_schema:  | customers_and_addresses | addresses : address_id , address_content , city , zip_postcode , state_province_county , country , other_address_details | products : product_id , product_details | customers : customer_id , payment_method , customer_name , date_became_customer , other_customer_details | customer_addresses : customer_id , address_id , date_address_from , address_type , date_address_to | customer_contact_channels : customer_id , channel_code , active_from_date , active_to_date , contact_number | customer_orders : order_id , customer_id , order_status , order_date , order_details | order_items : order_id , product_id , order_quantity output: SELECT DISTINCT payment_method FROM customers\n Now please use valid SQLite to answer the following questions: What is the year that had the most concerts?",
    "Here is an examples including input and output:\n input: question: How many appointments are there? serialized_schema:  | hospital_1 | physician : employeeid , name , position , ssn | department : departmentid , name , head | affiliated_with : physician , department , primaryaffiliation | procedures : code , name , cost | trained_in : physician , treatment , certificationdate , certificationexpires | patient : ssn , name , address , phone , insuranceid , pcp | nurse : employeeid , name , position , registered , ssn | appointment : appointmentid , patient , prepnurse , physician , start , end , examinationroom | medication : code , name , brand , description | prescribes : physician , patient , medication , date , appointment , dose | block : blockfloor , blockcode | room : roomnumber , roomtype , blockfloor , blockcode , unavailable | on_call : nurse , blockfloor , blockcode , oncallstart , oncallend | stay : stayid , patient , room , staystart , stayend | undergoes : patient , procedures , stay , dateundergoes , physician , assistingnurse output: SELECT count(*) FROM appointment\n Now please use valid SQLite to answer the following questions: Show the stadium names without any concert.",
    "Here is an examples including input and output:\n input: question: What is the salaray and name of the employee with the most certificates to fly planes more than 5000? serialized_schema:  | flight_1 | flight : flno , origin , destination , distance , departure_date , arrival_date , price , aid | aircraft : aid , name , distance | employee : eid , name , salary | certificate : eid , aid output: SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.distance  >  5000 GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: What are the names of the stadiums without any concerts?",
    "Here is an examples including input and output:\n input: question: What is the alphabetically ordered list of all the distinct names of nurses? serialized_schema:  | hospital_1 | physician : employeeid , name , position , ssn | department : departmentid , name , head | affiliated_with : physician , department , primaryaffiliation | procedures : code , name , cost | trained_in : physician , treatment , certificationdate , certificationexpires | patient : ssn , name , address , phone , insuranceid , pcp | nurse : employeeid , name , position , registered , ssn | appointment : appointmentid , patient , prepnurse , physician , start , end , examinationroom | medication : code , name , brand , description | prescribes : physician , patient , medication , date , appointment , dose | block : blockfloor , blockcode | room : roomnumber , roomtype , blockfloor , blockcode , unavailable | on_call : nurse , blockfloor , blockcode , oncallstart , oncallend | stay : stayid , patient , room , staystart , stayend | undergoes : patient , procedures , stay , dateundergoes , physician , assistingnurse output: SELECT DISTINCT name FROM nurse ORDER BY name\n Now please use valid SQLite to answer the following questions: Show countries where a singer above age 40 and a singer below 30 are from.",
    "Here is an examples including input and output:\n input: question: Return the name of the team and the acc during the regular season for the school that was founded the earliest. serialized_schema:  | university_basketball | basketball_match : team_id , school_id , team_name , acc_regular_season , acc_percent , acc_home , acc_road , all_games , all_games_percent , all_home , all_road , all_neutral | university : school_id , school , location , founded , affiliation , enrollment , nickname , primary_conference output: SELECT t2.team_name ,  t2.ACC_Regular_Season FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id ORDER BY t1.founded LIMIT 1\n Now please use valid SQLite to answer the following questions: Show names for all stadiums except for stadiums having a concert in year 2014.",
    "Here is an examples including input and output:\n input: question: List all restaurant types. serialized_schema:  | restaurant_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | restaurant : resid , resname , address , rating | type_of_restaurant : resid , restypeid | restaurant_type : restypeid , restypename , restypedescription | visits_restaurant : stuid , resid , time , spent output: SELECT ResTypeName FROM Restaurant_Type;\n Now please use valid SQLite to answer the following questions: What are the names of all stadiums that did not have a concert in 2014?",
    "Here is an examples including input and output:\n input: question: Return the names and classes of ships that do not have a captain? serialized_schema:  | ship_1 | captain : captain_id , name , ship_id , age , class , rank | ship : ship_id , name , type , built_year , class , flag output: SELECT name ,  CLASS FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain)\n Now please use valid SQLite to answer the following questions: Show the name and theme for all concerts and the number of singers in each concert.",
    "Here is an examples including input and output:\n input: question: How many rooms have king beds? Report the number for each decor type. serialized_schema:  | inn_1 | rooms : roomid , roomname , beds , bedtype , maxoccupancy , baseprice , decor | reservations : code , room , checkin , checkout , rate , lastname , firstname , adults , kids output: SELECT decor ,  count(*) FROM Rooms WHERE bedType = \"King\" GROUP BY decor;\n Now please use valid SQLite to answer the following questions: What are the names , themes , and number of singers for every concert ?",
    "Here is an examples including input and output:\n input: question: What are the full names of faculties with sex M and who live in building NEB? serialized_schema:  | college_3 | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building | department : dno , division , dname , room , building , dphone | member_of : facid , dno , appt_type | course : cid , cname , credits , instructor , days , hours , dno | minor_in : stuid , dno | enrolled_in : stuid , cid , grade | gradeconversion : lettergrade , gradepoint output: SELECT Fname ,  Lname FROM FACULTY WHERE sex  =  \"M\" AND Building  =  \"NEB\"\n Now please use valid SQLite to answer the following questions: List singer names and number of concerts for each singer.",
    "Here is an examples including input and output:\n input: question: List the date of perpetrators in descending order of the number of people killed. serialized_schema:  | perpetrator | perpetrator : perpetrator_id , people_id , date , year , location , country , killed , injured | people : people_id , name , height , weight , home town output: SELECT Date FROM perpetrator ORDER BY Killed DESC\n Now please use valid SQLite to answer the following questions: What are the names of the singers and number of concerts for each person?",
    "Here is an examples including input and output:\n input: question: How many type of jobs do they have? serialized_schema:  | network_2 | person : name , age , city , gender , job | personfriend : name , friend , year output: SELECT count(DISTINCT job) FROM Person\n Now please use valid SQLite to answer the following questions: List all singer names in concerts in year 2014.",
    "Here is an examples including input and output:\n input: question: how many ships are there? serialized_schema:  | ship_1 | captain : captain_id , name , ship_id , age , class , rank | ship : ship_id , name , type , built_year , class , flag output: SELECT count(*) FROM ship\n Now please use valid SQLite to answer the following questions: What are the names of the singers who performed in a concert in 2014?",
    "Here is an examples including input and output:\n input: question: What are the first name and department name of all employees? serialized_schema:  | hr_1 | regions : region_id , region_name | countries : country_id , country_name , region_id | departments : department_id , department_name , manager_id , location_id | jobs : job_id , job_title , min_salary , max_salary | employees : employee_id , first_name , last_name , email , phone_number , hire_date , job_id , salary , commission_pct , manager_id , department_id | job_history : employee_id , start_date , end_date , job_id , department_id | locations : location_id , street_address , postal_code , city , state_province , country_id output: SELECT T1.first_name ,  T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id\n Now please use valid SQLite to answer the following questions: what is the name and nation of the singer who have a song having 'Hey' in its name?",
    "Here is an examples including input and output:\n input: question: show the train name and station name for each train. serialized_schema:  | train_station | station : station_id , name , annual_entry_exit , annual_interchanges , total_passengers , location , main_services , number_of_platforms | train : train_id , name , time , service | train_station : train_id , station_id output: SELECT T2.name ,  T3.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id\n Now please use valid SQLite to answer the following questions: What is the name and country of origin of every singer who has a song with the word 'Hey' in its title?",
    "Here is an examples including input and output:\n input: question: List the number of invoices from Chicago, IL. serialized_schema:  | store_1 | artists : id , name | sqlite_sequence : name , seq | albums : id , title , artist_id | employees : id , last_name , first_name , title , reports_to , birth_date , hire_date , address , city , state , country , postal_code , phone , fax , email | customers : id , first_name , last_name , company , address , city , state , country , postal_code , phone , fax , email , support_rep_id | genres : id , name | invoices : id , customer_id , invoice_date , billing_address , billing_city , billing_state , billing_country , billing_postal_code , total | media_types : id , name | tracks : id , name , album_id , media_type_id , genre_id , composer , milliseconds , bytes , unit_price | invoice_lines : id , invoice_id , track_id , unit_price , quantity | playlists : id , name | playlist_tracks : playlist_id , track_id output: SELECT COUNT(*) FROM invoices WHERE billing_city  =  \"Chicago\" AND billing_state  =  \"IL\";\n Now please use valid SQLite to answer the following questions: Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015.",
    "Here is an examples including input and output:\n input: question: How many residents does each property have? List property id and resident count. serialized_schema:  | local_govt_and_lot | customers : customer_id , customer_details | properties : property_id , property_type_code , property_address , other_details | residents : resident_id , property_id , date_moved_in , date_moved_out , other_details | organizations : organization_id , parent_organization_id , organization_details | services : service_id , organization_id , service_type_code , service_details | residents_services : resident_id , service_id , date_moved_in , property_id , date_requested , date_provided , other_details | things : thing_id , organization_id , type_of_thing_code , service_type_code , service_details | customer_events : customer_event_id , customer_id , date_moved_in , property_id , resident_id , thing_id | customer_event_notes : customer_event_note_id , customer_event_id , service_type_code , resident_id , property_id , date_moved_in | timed_status_of_things : thing_id , date_and_date , status_of_thing_code | timed_locations_of_things : thing_id , date_and_time , location_code output: SELECT T1.property_id ,  count(*) FROM properties AS T1 JOIN residents AS T2 ON T1.property_id  =  T2.property_id GROUP BY T1.property_id\n Now please use valid SQLite to answer the following questions: What are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2015?",
    "Here is an examples including input and output:\n input: question: Count the number of cinemas. serialized_schema:  | cinema | film : film_id , rank_in_series , number_in_season , title , directed_by , original_air_date , production_code | cinema : cinema_id , name , openning_year , capacity , location | schedule : cinema_id , film_id , date , show_times_per_day , price output: SELECT count(*) FROM cinema\n Now please use valid SQLite to answer the following questions: Find the number of concerts happened in the stadium with the highest capacity .",
    "Here is an examples including input and output:\n input: question: What are the names of mountains that have a height of over 5000 or a prominence of over 1000? serialized_schema:  | climbing | mountain : mountain_id , name , height , prominence , range , country | climber : climber_id , name , country , time , points , mountain_id output: SELECT Name FROM mountain WHERE Height  >  5000 OR Prominence  >  1000\n Now please use valid SQLite to answer the following questions: What are the number of concerts that occurred in the stadium with the largest capacity ?",
    "Here is an examples including input and output:\n input: question: What are the first name, last name, and phone number of all the female faculty members? serialized_schema:  | activity_1 | activity : actid , activity_name | participates_in : stuid , actid | faculty_participates_in : facid , actid | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building output: SELECT Fname ,  Lname ,  phone FROM Faculty WHERE Sex  =  'F'\n Now please use valid SQLite to answer the following questions: Find the number of pets whose weight is heavier than 10.",
    "Here is an examples including input and output:\n input: question: What are the titles of all the albums? serialized_schema:  | store_1 | artists : id , name | sqlite_sequence : name , seq | albums : id , title , artist_id | employees : id , last_name , first_name , title , reports_to , birth_date , hire_date , address , city , state , country , postal_code , phone , fax , email | customers : id , first_name , last_name , company , address , city , state , country , postal_code , phone , fax , email , support_rep_id | genres : id , name | invoices : id , customer_id , invoice_date , billing_address , billing_city , billing_state , billing_country , billing_postal_code , total | media_types : id , name | tracks : id , name , album_id , media_type_id , genre_id , composer , milliseconds , bytes , unit_price | invoice_lines : id , invoice_id , track_id , unit_price , quantity | playlists : id , name | playlist_tracks : playlist_id , track_id output: SELECT title FROM albums;\n Now please use valid SQLite to answer the following questions: How many pets have a greater weight than 10?",
    "Here is an examples including input and output:\n input: question: Find the name of different colleges involved in the tryout in alphabetical order. serialized_schema:  | soccer_2 | college : cname , state , enr | player : pid , pname , ycard , hs | tryout : pid , cname , ppos , decision output: SELECT DISTINCT cName FROM tryout ORDER BY cName\n Now please use valid SQLite to answer the following questions: Find the weight of the youngest dog.",
    "Here is an examples including input and output:\n input: question: How many editors are there? serialized_schema:  | journal_committee | journal : journal_id , date , theme , sales | editor : editor_id , name , age | journal_committee : editor_id , journal_id , work_type output: SELECT count(*) FROM editor\n Now please use valid SQLite to answer the following questions: How much does the youngest dog weigh?",
    "Here is an examples including input and output:\n input: question: How many songs are there? serialized_schema:  | music_2 | songs : songid , title | albums : aid , title , year , label , type | band : id , firstname , lastname | instruments : songid , bandmateid , instrument | performance : songid , bandmate , stageposition | tracklists : albumid , position , songid | vocals : songid , bandmate , type output: SELECT count(*) FROM Songs\n Now please use valid SQLite to answer the following questions: Find the maximum weight for each type of pet. List the maximum weight and pet type.",
    "Here is an examples including input and output:\n input: question: List each test result and its count in descending order of count. serialized_schema:  | e_learning | course_authors_and_tutors : author_id , author_tutor_atb , login_name , password , personal_name , middle_name , family_name , gender_mf , address_line_1 | students : student_id , date_of_registration , date_of_latest_logon , login_name , password , personal_name , middle_name , family_name | subjects : subject_id , subject_name | courses : course_id , author_id , subject_id , course_name , course_description | student_course_enrolment : registration_id , student_id , course_id , date_of_enrolment , date_of_completion | student_tests_taken : registration_id , date_test_taken , test_result output: SELECT test_result ,  COUNT(*) FROM Student_Tests_Taken GROUP BY test_result ORDER BY COUNT(*) DESC\n Now please use valid SQLite to answer the following questions: List the maximum weight and type for each type of pet.",
    "Here is an examples including input and output:\n input: question: List all information about customer master index, and sort them by details in descending order. serialized_schema:  | local_govt_mdm | customer_master_index : master_customer_id , cmi_details | cmi_cross_references : cmi_cross_ref_id , master_customer_id , source_system_code | council_tax : council_tax_id , cmi_cross_ref_id | business_rates : business_rates_id , cmi_cross_ref_id | benefits_overpayments : council_tax_id , cmi_cross_ref_id | parking_fines : council_tax_id , cmi_cross_ref_id | rent_arrears : council_tax_id , cmi_cross_ref_id | electoral_register : electoral_register_id , cmi_cross_ref_id output: SELECT * FROM customer_master_index ORDER BY cmi_details DESC\n Now please use valid SQLite to answer the following questions: Find number of pets owned by students who are older than 20.",
    "Here is an examples including input and output:\n input: question: What is the total number of residents for the districts with the 3 largest areas? serialized_schema:  | store_product | product : product_id , product , dimensions , dpi , pages_per_minute_color , max_page_size , interface | store : store_id , store_name , type , area_size , number_of_product_category , ranking | district : district_id , district_name , headquartered_city , city_population , city_area | store_product : store_id , product_id | store_district : store_id , district_id output: SELECT sum(city_population) FROM district ORDER BY city_area DESC LIMIT 3\n Now please use valid SQLite to answer the following questions: How many pets are owned by students that have an age greater than 20?",
    "Here is an examples including input and output:\n input: question: How many students have each different allergy? serialized_schema:  | allergy_1 | allergy_type : allergy , allergytype | has_allergy : stuid , allergy | student : stuid , lname , fname , age , sex , major , advisor , city_code output: SELECT Allergy ,  count(*) FROM Has_allergy GROUP BY Allergy\n Now please use valid SQLite to answer the following questions: Find the number of dog pets that are raised by female students (with sex F).",
    "Here is an examples including input and output:\n input: question: What are the names, checking balances, and savings balances for all customers? serialized_schema:  | small_bank_1 | accounts : custid , name | savings : custid , balance | checking : custid , balance output: SELECT T2.balance ,  T3.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid\n Now please use valid SQLite to answer the following questions: How many dog pets are raised by female students?",
    "Here is an examples including input and output:\n input: question: Find names of the document without any images. serialized_schema:  | document_management | roles : role_code , role_description | users : user_id , role_code , user_name , user_login , password | document_structures : document_structure_code , parent_document_structure_code , document_structure_description | functional_areas : functional_area_code , parent_functional_area_code , functional_area_description | images : image_id , image_alt_text , image_name , image_url | documents : document_code , document_structure_code , document_type_code , access_count , document_name | document_functional_areas : document_code , functional_area_code | document_sections : section_id , document_code , section_sequence , section_code , section_title | document_sections_images : section_id , image_id output: SELECT document_name FROM documents EXCEPT SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code JOIN document_sections_images AS t3 ON t2.section_id  =  t3.section_id\n Now please use valid SQLite to answer the following questions: Find the number of distinct type of pets.",
    "Here is an examples including input and output:\n input: question: Who is performing in the back stage position for the song \"Badlands\"? Show the first name and the last name. serialized_schema:  | music_2 | songs : songid , title | albums : aid , title , year , label , type | band : id , firstname , lastname | instruments : songid , bandmateid , instrument | performance : songid , bandmate , stageposition | tracklists : albumid , position , songid | vocals : songid , bandmate , type output: SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Badlands\" AND T1.StagePosition  =  \"back\"\n Now please use valid SQLite to answer the following questions: How many different types of pet are there?",
    "Here is an examples including input and output:\n input: question: Give me a list of all the distinct building descriptions. serialized_schema:  | apartment_rentals | apartment_buildings : building_id , building_short_name , building_full_name , building_description , building_address , building_manager , building_phone | apartments : apt_id , building_id , apt_type_code , apt_number , bathroom_count , bedroom_count , room_count | apartment_facilities : apt_id , facility_code | guests : guest_id , gender_code , guest_first_name , guest_last_name , date_of_birth | apartment_bookings : apt_booking_id , apt_id , guest_id , booking_status_code , booking_start_date , booking_end_date | view_unit_status : apt_id , apt_booking_id , status_date , available_yn output: SELECT DISTINCT building_description FROM Apartment_Buildings\n Now please use valid SQLite to answer the following questions: Find the first name of students who have cat or dog pet.",
    "Here is an examples including input and output:\n input: question: What are the names and types of the companies that have ever operated a flight? serialized_schema:  | flight_company | airport : id , city , country , iata , icao , name | operate_company : id , name , type , principal_activities , incorporated_in , group_equity_shareholding | flight : id , vehicle_flight_number , date , pilot , velocity , altitude , airport_id , company_id output: SELECT T1.name ,  T1.type FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id\n Now please use valid SQLite to answer the following questions: What are the first names of every student who has a cat or dog as a pet?",
    "Here is an examples including input and output:\n input: question: What is the title of the newest movie? serialized_schema:  | movie_1 | movie : mid , title , year , director | reviewer : rid , name | rating : rid , mid , stars , ratingdate output: SELECT title FROM Movie WHERE YEAR  =  (SELECT max(YEAR) FROM Movie)\n Now please use valid SQLite to answer the following questions: Find the first name of students who have both cat and dog pets .",
    "Here is an examples including input and output:\n input: question: What is the total number of points for all players? serialized_schema:  | sports_competition | club : club_id , name , region , start_year | club_rank : rank , club_id , gold , silver , bronze , total | player : player_id , name , position , club_id , apps , tries , goals , points | competition : competition_id , year , competition_type , country | competition_result : competition_id , club_id_1 , club_id_2 , score output: SELECT sum(Points) FROM player\n Now please use valid SQLite to answer the following questions: What are the students' first names who have both cats and dogs as pets?",
    "Here is an examples including input and output:\n input: question: Show the number of documents. serialized_schema:  | cre_Docs_and_Epenses | ref_document_types : document_type_code , document_type_name , document_type_description | ref_budget_codes : budget_type_code , budget_type_description | projects : project_id , project_details | documents : document_id , document_type_code , project_id , document_date , document_name , document_description , other_details | statements : statement_id , statement_details | documents_with_expenses : document_id , budget_type_code , document_details | accounts : account_id , statement_id , account_details output: SELECT count(*) FROM Documents\n Now please use valid SQLite to answer the following questions: Find the major and age of students who do not have a cat pet.",
    "Here is an examples including input and output:\n input: question: Eduardo Martins is a customer at which company? serialized_schema:  | store_1 | artists : id , name | sqlite_sequence : name , seq | albums : id , title , artist_id | employees : id , last_name , first_name , title , reports_to , birth_date , hire_date , address , city , state , country , postal_code , phone , fax , email | customers : id , first_name , last_name , company , address , city , state , country , postal_code , phone , fax , email , support_rep_id | genres : id , name | invoices : id , customer_id , invoice_date , billing_address , billing_city , billing_state , billing_country , billing_postal_code , total | media_types : id , name | tracks : id , name , album_id , media_type_id , genre_id , composer , milliseconds , bytes , unit_price | invoice_lines : id , invoice_id , track_id , unit_price , quantity | playlists : id , name | playlist_tracks : playlist_id , track_id output: SELECT company FROM customers WHERE first_name = \"Eduardo\" AND last_name = \"Martins\";\n Now please use valid SQLite to answer the following questions: What major is every student who does not own a cat as a pet, and also how old are they?",
    "Here is an examples including input and output:\n input: question: Which papers have \"Stephanie Weirich\" as an author? serialized_schema:  | icfp_1 | inst : instid , name , country | authors : authid , lname , fname | papers : paperid , title | authorship : authid , instid , paperid , authorder output: SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t1.fname  =  \"Stephanie\" AND t1.lname  =  \"Weirich\"\n Now please use valid SQLite to answer the following questions: Find the id of students who do not have a cat pet.",
    "Here is an examples including input and output:\n input: question: What are the majors only less than three students are studying? serialized_schema:  | voter_2 | student : stuid , lname , fname , age , sex , major , advisor , city_code | voting_record : stuid , registration_date , election_cycle , president_vote , vice_president_vote , secretary_vote , treasurer_vote , class_president_vote , class_senator_vote output: SELECT Major FROM STUDENT GROUP BY Major HAVING COUNT(*)  <  3\n Now please use valid SQLite to answer the following questions: What are the ids of the students who do not own cats as pets?",
    "Here is an examples including input and output:\n input: question: Return each apartment type code along with the maximum and minimum number of rooms among each type. serialized_schema:  | apartment_rentals | apartment_buildings : building_id , building_short_name , building_full_name , building_description , building_address , building_manager , building_phone | apartments : apt_id , building_id , apt_type_code , apt_number , bathroom_count , bedroom_count , room_count | apartment_facilities : apt_id , facility_code | guests : guest_id , gender_code , guest_first_name , guest_last_name , date_of_birth | apartment_bookings : apt_booking_id , apt_id , guest_id , booking_status_code , booking_start_date , booking_end_date | view_unit_status : apt_id , apt_booking_id , status_date , available_yn output: SELECT apt_type_code ,  max(room_count) ,  min(room_count) FROM Apartments GROUP BY apt_type_code\n Now please use valid SQLite to answer the following questions: Find the first name and age of students who have a dog but do not have a cat as a pet.",
    "Here is an examples including input and output:\n input: question: Which third party companies have at least 2 maintenance engineers or have at least 2 maintenance contracts? List the company id and name. serialized_schema:  | assets_maintenance | third_party_companies : company_id , company_type , company_name , company_address , other_company_details | maintenance_contracts : maintenance_contract_id , maintenance_contract_company_id , contract_start_date , contract_end_date , other_contract_details | parts : part_id , part_name , chargeable_yn , chargeable_amount , other_part_details | skills : skill_id , skill_code , skill_description | staff : staff_id , staff_name , gender , other_staff_details | assets : asset_id , maintenance_contract_id , supplier_company_id , asset_details , asset_make , asset_model , asset_acquired_date , asset_disposed_date , other_asset_details | asset_parts : asset_id , part_id | maintenance_engineers : engineer_id , company_id , first_name , last_name , other_details | engineer_skills : engineer_id , skill_id | fault_log : fault_log_entry_id , asset_id , recorded_by_staff_id , fault_log_entry_datetime , fault_description , other_fault_details | engineer_visits : engineer_visit_id , contact_staff_id , engineer_id , fault_log_entry_id , fault_status , visit_start_datetime , visit_end_datetime , other_visit_details | part_faults : part_fault_id , part_id , fault_short_name , fault_description , other_fault_details | fault_log_parts : fault_log_entry_id , part_fault_id , fault_status | skills_required_to_fix : part_fault_id , skill_id output: SELECT T1.company_id ,  T1.company_name FROM Third_Party_Companies AS T1 JOIN Maintenance_Engineers AS T2 ON T1.company_id  =  T2.company_id GROUP BY T1.company_id HAVING count(*)  >=  2 UNION SELECT T3.company_id ,  T3.company_name FROM Third_Party_Companies AS T3 JOIN Maintenance_Contracts AS T4 ON T3.company_id  =  T4.maintenance_contract_company_id GROUP BY T3.company_id HAVING count(*)  >=  2\n Now please use valid SQLite to answer the following questions: What is the first name of every student who has a dog but does not have a cat?",
    "Here is an examples including input and output:\n input: question: What are the names of all the Japanese constructors that have earned more than 5 points? serialized_schema:  | formula_1 | circuits : circuitid , circuitref , name , location , country , lat , lng , alt , url | races : raceid , year , round , circuitid , name , date , time , url | drivers : driverid , driverref , number , code , forename , surname , dob , nationality , url | status : statusid , status | seasons : year , url | constructors : constructorid , constructorref , name , nationality , url | constructorstandings : constructorstandingsid , raceid , constructorid , points , position , positiontext , wins | results : resultid , raceid , driverid , constructorid , number , grid , position , positiontext , positionorder , points , laps , time , milliseconds , fastestlap , rank , fastestlaptime , fastestlapspeed , statusid | driverstandings : driverstandingsid , raceid , driverid , points , position , positiontext , wins | constructorresults : constructorresultsid , raceid , constructorid , points , status | qualifying : qualifyid , raceid , driverid , constructorid , number , position , q1 , q2 , q3 | pitstops : raceid , driverid , stop , lap , time , duration , milliseconds | laptimes : raceid , driverid , lap , position , time , milliseconds output: SELECT T1.name FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = \"Japanese\" AND T2.points > 5\n Now please use valid SQLite to answer the following questions: Find the type and weight of the youngest pet.",
    "Here is an examples including input and output:\n input: question: What are the full names, departments, cities, and state provinces for each employee? serialized_schema:  | hr_1 | regions : region_id , region_name | countries : country_id , country_name , region_id | departments : department_id , department_name , manager_id , location_id | jobs : job_id , job_title , min_salary , max_salary | employees : employee_id , first_name , last_name , email , phone_number , hire_date , job_id , salary , commission_pct , manager_id , department_id | job_history : employee_id , start_date , end_date , job_id , department_id | locations : location_id , street_address , postal_code , city , state_province , country_id output: SELECT T1.first_name ,  T1.last_name ,  T2.department_name ,  T3.city ,  T3.state_province FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id\n Now please use valid SQLite to answer the following questions: What type of pet is the youngest animal, and how much does it weigh?",
    "Here is an examples including input and output:\n input: question: Show all company names and headquarters in the descending order of market value. serialized_schema:  | gas_company | company : company_id , rank , company , headquarters , main_industry , sales_billion , profits_billion , assets_billion , market_value | gas_station : station_id , open_year , location , manager_name , vice_manager_name , representative_name | station_company : station_id , company_id , rank_of_the_year output: SELECT company ,  headquarters FROM company ORDER BY market_value DESC\n Now please use valid SQLite to answer the following questions: Find the id and weight of all pets whose age is older than 1.",
    "Here is an examples including input and output:\n input: question: Find the name and country of origin for all artists who have release at least one song of resolution above 900. serialized_schema:  | music_1 | genre : g_name , rating , most_popular_in | artist : artist_name , country , gender , preferred_genre | files : f_id , artist_name , file_size , duration , formats | song : song_name , artist_name , country , f_id , genre_is , rating , languages , releasedate , resolution output: SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.resolution  >  900 GROUP BY T2.artist_name HAVING count(*)  >=  1\n Now please use valid SQLite to answer the following questions: What is the id and weight of every pet who is older than 1?",
    "Here is an examples including input and output:\n input: question: List the authors who do not have submission to any workshop. serialized_schema:  | workshop_paper | workshop : workshop_id , date , venue , name | submission : submission_id , scores , author , college | acceptance : submission_id , workshop_id , result output: SELECT Author FROM submission WHERE Submission_ID NOT IN (SELECT Submission_ID FROM acceptance)\n Now please use valid SQLite to answer the following questions: Find the average and maximum age for each type of pet.",
    "Here is an examples including input and output:\n input: question: Show all account ids and account details. serialized_schema:  | cre_Docs_and_Epenses | ref_document_types : document_type_code , document_type_name , document_type_description | ref_budget_codes : budget_type_code , budget_type_description | projects : project_id , project_details | documents : document_id , document_type_code , project_id , document_date , document_name , document_description , other_details | statements : statement_id , statement_details | documents_with_expenses : document_id , budget_type_code , document_details | accounts : account_id , statement_id , account_details output: SELECT account_id ,  account_details FROM Accounts\n Now please use valid SQLite to answer the following questions: What is the average and maximum age for each pet type?",
    "Here is an examples including input and output:\n input: question: What are the distinct years in which the competitions type is not \"Tournament\"? serialized_schema:  | sports_competition | club : club_id , name , region , start_year | club_rank : rank , club_id , gold , silver , bronze , total | player : player_id , name , position , club_id , apps , tries , goals , points | competition : competition_id , year , competition_type , country | competition_result : competition_id , club_id_1 , club_id_2 , score output: SELECT DISTINCT YEAR FROM competition WHERE Competition_type != \"Tournament\"\n Now please use valid SQLite to answer the following questions: Find the average weight for each pet type.",
    "Here is an examples including input and output:\n input: question: How many lessons taught by staff whose first name has letter 'a' in it? serialized_schema:  | driving_school | addresses : address_id , line_1_number_building , city , zip_postcode , state_province_county , country | staff : staff_id , staff_address_id , nickname , first_name , middle_name , last_name , date_of_birth , date_joined_staff , date_left_staff | vehicles : vehicle_id , vehicle_details | customers : customer_id , customer_address_id , customer_status_code , date_became_customer , date_of_birth , first_name , last_name , amount_outstanding , email_address , phone_number , cell_mobile_phone_number | customer_payments : customer_id , datetime_payment , payment_method_code , amount_payment | lessons : lesson_id , customer_id , lesson_status_code , staff_id , vehicle_id , lesson_date , lesson_time , price output: SELECT count(*) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name LIKE \"%a%\"\n Now please use valid SQLite to answer the following questions: What is the average weight for each type of pet?",
    "Here is an examples including input and output:\n input: question: What are the classes of races that have two or more corresponding races? serialized_schema:  | race_track | race : race_id , name , class , date , track_id | track : track_id , name , location , seating , year_opened output: SELECT CLASS FROM race GROUP BY CLASS HAVING count(*)  >=  2\n Now please use valid SQLite to answer the following questions: Find the first name and age of students who have a pet.",
    "Here is an examples including input and output:\n input: question: Find the most prominent max page size among all the products. serialized_schema:  | store_product | product : product_id , product , dimensions , dpi , pages_per_minute_color , max_page_size , interface | store : store_id , store_name , type , area_size , number_of_product_category , ranking | district : district_id , district_name , headquartered_city , city_population , city_area | store_product : store_id , product_id | store_district : store_id , district_id output: SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: What are the different first names and ages of the students who do have pets?",
    "Here is an examples including input and output:\n input: question: Find the claims that led to more than two settlements or have the maximum claim value. For each of them, return the date the claim was made and the id of the claim. serialized_schema:  | insurance_policies | customers : customer_id , customer_details | customer_policies : policy_id , customer_id , policy_type_code , start_date , end_date | claims : claim_id , policy_id , date_claim_made , date_claim_settled , amount_claimed , amount_settled | settlements : settlement_id , claim_id , date_claim_made , date_claim_settled , amount_claimed , amount_settled , customer_policy_id | payments : payment_id , settlement_id , payment_method_code , date_payment_made , amount_payment output: SELECT T1.Date_Claim_Made ,  T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id GROUP BY T1.Claim_id HAVING count(*)  >  2 UNION SELECT T1.Date_Claim_Made ,  T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id WHERE T1.Amount_Claimed  =  ( SELECT max(Amount_Claimed) FROM Claims )\n Now please use valid SQLite to answer the following questions: Find the id of the pet owned by student whose last name is ‘Smith’.",
    "Here is an examples including input and output:\n input: question: What are the first and last names of the instructors who teach the top 3 number of courses? serialized_schema:  | college_3 | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building | department : dno , division , dname , room , building , dphone | member_of : facid , dno , appt_type | course : cid , cname , credits , instructor , days , hours , dno | minor_in : stuid , dno | enrolled_in : stuid , cid , grade | gradeconversion : lettergrade , gradepoint output: SELECT T2.Fname ,  T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 3\n Now please use valid SQLite to answer the following questions: What is the id of the pet owned by the student whose last name is 'Smith'?",
    "Here is an examples including input and output:\n input: question: How many faculty lines are there at San Francisco State University in 2004? serialized_schema:  | csu_1 | campuses : id , campus , location , county , year | csu_fees : campus , year , campusfee | degrees : year , campus , degrees | discipline_enrollments : campus , discipline , year , undergraduate , graduate | enrollments : campus , year , totalenrollment_ay , fte_ay | faculty : campus , year , faculty output: SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus  =  T2.id WHERE T1.year  =  2004 AND T2.campus  =  \"San Francisco State University\"\n Now please use valid SQLite to answer the following questions: Find the number of pets for each student who has any pet and student id.",
    "Here is an examples including input and output:\n input: question: What are the the full names and ids for all customers, and how many accounts does each have? serialized_schema:  | customers_and_invoices | customers : customer_id , customer_first_name , customer_middle_initial , customer_last_name , gender , email_address , login_name , login_password , phone_number , town_city , state_county_province , country | orders : order_id , customer_id , date_order_placed , order_details | invoices : invoice_number , order_id , invoice_date | accounts : account_id , customer_id , date_account_opened , account_name , other_account_details | product_categories : production_type_code , product_type_description , vat_rating | products : product_id , parent_product_id , production_type_code , unit_price , product_name , product_color , product_size | financial_transactions : transaction_id , account_id , invoice_number , transaction_type , transaction_date , transaction_amount , transaction_comment , other_transaction_details | order_items : order_item_id , order_id , product_id , product_quantity , other_order_item_details | invoice_line_items : order_item_id , invoice_number , product_id , product_title , product_quantity , product_price , derived_product_cost , derived_vat_payable , derived_total_cost output: SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name ,  count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id\n Now please use valid SQLite to answer the following questions: For students who have pets , how many pets does each student have ? list their ids instead of names .",
    "Here is an examples including input and output:\n input: question: How many games in total did team Boston Red Stockings attend from 2000 to 2010? serialized_schema:  | baseball_1 | all_star : player_id , year , game_num , game_id , team_id , league_id , gp , starting_pos | appearances : year , team_id , league_id , player_id , g_all , gs , g_batting , g_defense , g_p , g_c , g_1b , g_2b , g_3b , g_ss , g_lf , g_cf , g_rf , g_of , g_dh , g_ph , g_pr | manager_award : player_id , award_id , year , league_id , tie , notes | player_award : player_id , award_id , year , league_id , tie , notes | manager_award_vote : award_id , year , league_id , player_id , points_won , points_max , votes_first | player_award_vote : award_id , year , league_id , player_id , points_won , points_max , votes_first | batting : player_id , year , stint , team_id , league_id , g , ab , r , h , double , triple , hr , rbi , sb , cs , bb , so , ibb , hbp , sh , sf , g_idp | batting_postseason : year , round , player_id , team_id , league_id , g , ab , r , h , double , triple , hr , rbi , sb , cs , bb , so , ibb , hbp , sh , sf , g_idp | player_college : player_id , college_id , year | fielding : player_id , year , stint , team_id , league_id , pos , g , gs , inn_outs , po , a , e , dp , pb , wp , sb , cs , zr | fielding_outfield : player_id , year , stint , glf , gcf , grf | fielding_postseason : player_id , year , team_id , league_id , round , pos , g , gs , inn_outs , po , a , e , dp , tp , pb , sb , cs | hall_of_fame : player_id , yearid , votedby , ballots , needed , votes , inducted , category , needed_note | home_game : year , league_id , team_id , park_id , span_first , span_last , games , openings , attendance | manager : player_id , year , team_id , league_id , inseason , g , w , l , rank , plyr_mgr | manager_half : player_id , year , team_id , league_id , inseason , half , g , w , l , rank | player : player_id , birth_year , birth_month , birth_day , birth_country , birth_state , birth_city , death_year , death_month , death_day , death_country , death_state , death_city , name_first , name_last , name_given , weight , height , bats , throws , debut , final_game , retro_id , bbref_id | park : park_id , park_name , park_alias , city , state , country | pitching : player_id , year , stint , team_id , league_id , w , l , g , gs , cg , sho , sv , ipouts , h , er , hr , bb , so , baopp , era , ibb , wp , hbp , bk , bfp , gf , r , sh , sf , g_idp | pitching_postseason : player_id , year , round , team_id , league_id , w , l , g , gs , cg , sho , sv , ipouts , h , er , hr , bb , so , baopp , era , ibb , wp , hbp , bk , bfp , gf , r , sh , sf , g_idp | salary : year , team_id , league_id , player_id , salary | college : college_id , name_full , city , state , country | postseason : year , round , team_id_winner , league_id_winner , team_id_loser , league_id_loser , wins , losses , ties | team : year , league_id , team_id , franchise_id , div_id , rank , g , ghome , w , l , div_win , wc_win , lg_win , ws_win , r , ab , h , double , triple , hr , bb , so , sb , cs , hbp , sf , ra , er , era , cg , sho , sv , ipouts , ha , hra , bba , soa , e , dp , fp , name , park , attendance , bpf , ppf , team_id_br , team_id_lahman45 , team_id_retro | team_franchise : franchise_id , franchise_name , active , na_assoc | team_half : year , league_id , team_id , half , div_id , div_win , rank , g , w , l output: SELECT sum(T1.attendance) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' AND T1.year BETWEEN 2000 AND 2010;\n Now please use valid SQLite to answer the following questions: Find the first name and gender of student who have more than one pet.",
    "Here is an examples including input and output:\n input: question: Return the city with the customer type code \"Good Credit Rating\" that had the fewest customers. serialized_schema:  | customer_complaints | staff : staff_id , gender , first_name , last_name , email_address , phone_number | customers : customer_id , customer_type_code , address_line_1 , address_line_2 , town_city , state , email_address , phone_number | products : product_id , parent_product_id , product_category_code , date_product_first_available , date_product_discontinued , product_name , product_description , product_price | complaints : complaint_id , product_id , customer_id , complaint_outcome_code , complaint_status_code , complaint_type_code , date_complaint_raised , date_complaint_closed , staff_id output: SELECT town_city FROM customers WHERE customer_type_code  =  \"Good Credit Rating\" GROUP BY town_city ORDER BY count(*) LIMIT 1\n Now please use valid SQLite to answer the following questions: What is the first name and gender of the all the students who have more than one pet?",
    "Here is an examples including input and output:\n input: question: How many settlements were made on the claim with the most recent claim settlement date? List the number and the claim id. serialized_schema:  | insurance_policies | customers : customer_id , customer_details | customer_policies : policy_id , customer_id , policy_type_code , start_date , end_date | claims : claim_id , policy_id , date_claim_made , date_claim_settled , amount_claimed , amount_settled | settlements : settlement_id , claim_id , date_claim_made , date_claim_settled , amount_claimed , amount_settled , customer_policy_id | payments : payment_id , settlement_id , payment_method_code , date_payment_made , amount_payment output: SELECT count(*) ,  T1.claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id ORDER BY T1.Date_Claim_Settled DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: Find the last name of the student who has a cat that is age 3.",
    "Here is an examples including input and output:\n input: question: Find the name of rooms whose base price is between 120 and 150. serialized_schema:  | inn_1 | rooms : roomid , roomname , beds , bedtype , maxoccupancy , baseprice , decor | reservations : code , room , checkin , checkout , rate , lastname , firstname , adults , kids output: SELECT roomname FROM rooms WHERE baseprice BETWEEN 120 AND 150\n Now please use valid SQLite to answer the following questions: What is the last name of the student who has a cat that is 3 years old?",
    "Here is an examples including input and output:\n input: question: What are the first and last names of all students who are not living in the city HKG and order the results by age? serialized_schema:  | dorm_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | dorm : dormid , dorm_name , student_capacity , gender | dorm_amenity : amenid , amenity_name | has_amenity : dormid , amenid | lives_in : stuid , dormid , room_number output: SELECT fname ,  lname FROM student WHERE city_code != 'HKG' ORDER BY age\n Now please use valid SQLite to answer the following questions: Find the average age of students who do not have any pet .",
    "Here is an examples including input and output:\n input: question: What are the names and number of works for all artists who have sung at least one song in English? serialized_schema:  | music_1 | genre : g_name , rating , most_popular_in | artist : artist_name , country , gender , preferred_genre | files : f_id , artist_name , file_size , duration , formats | song : song_name , artist_name , country , f_id , genre_is , rating , languages , releasedate , resolution output: SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"english\" GROUP BY T2.artist_name HAVING count(*)  >=  1\n Now please use valid SQLite to answer the following questions: What is the average age for all students who do not own any pets ?",
    "Here is an examples including input and output:\n input: question: What are all of the products whose name includes the substring \"Scanner\"? serialized_schema:  | store_product | product : product_id , product , dimensions , dpi , pages_per_minute_color , max_page_size , interface | store : store_id , store_name , type , area_size , number_of_product_category , ranking | district : district_id , district_name , headquartered_city , city_population , city_area | store_product : store_id , product_id | store_district : store_id , district_id output: SELECT product FROM product WHERE product LIKE \"%Scanner%\"\n Now please use valid SQLite to answer the following questions: How many continents are there?",
    "Here is an examples including input and output:\n input: question: What is the id and name of the aircraft that can cover the maximum distance? serialized_schema:  | flight_1 | flight : flno , origin , destination , distance , departure_date , arrival_date , price , aid | aircraft : aid , name , distance | employee : eid , name , salary | certificate : eid , aid output: SELECT aid ,  name FROM Aircraft ORDER BY distance DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: What is the number of continents?",
    "Here is an examples including input and output:\n input: question: How many different players trained for more than 1000 hours? serialized_schema:  | soccer_2 | college : cname , state , enr | player : pid , pname , ycard , hs | tryout : pid , cname , ppos , decision output: SELECT count(*) FROM Player WHERE HS  >  1000\n Now please use valid SQLite to answer the following questions: How many countries does each continent have? List the continent id, continent name and the number of countries.",
    "Here is an examples including input and output:\n input: question: What is the average amount due for all the payments? serialized_schema:  | products_for_hire | discount_coupons : coupon_id , date_issued , coupon_amount | customers : customer_id , coupon_id , good_or_bad_customer , first_name , last_name , gender_mf , date_became_customer , date_last_hire | bookings : booking_id , customer_id , booking_status_code , returned_damaged_yn , booking_start_date , booking_end_date , count_hired , amount_payable , amount_of_discount , amount_outstanding , amount_of_refund | products_for_hire : product_id , product_type_code , daily_hire_cost , product_name , product_description | payments : payment_id , booking_id , customer_id , payment_type_code , amount_paid_in_full_yn , payment_date , amount_due , amount_paid | products_booked : booking_id , product_id , returned_yn , returned_late_yn , booked_count , booked_amount | view_product_availability : product_id , booking_id , status_date , available_yn output: SELECT avg(amount_due) FROM payments\n Now please use valid SQLite to answer the following questions: For each continent, list its id, name, and how many countries it has?",
    "Here is an examples including input and output:\n input: question: For all the faults of different parts, what are all the decriptions of the skills required to fix them? List the name of the faults and the skill description. serialized_schema:  | assets_maintenance | third_party_companies : company_id , company_type , company_name , company_address , other_company_details | maintenance_contracts : maintenance_contract_id , maintenance_contract_company_id , contract_start_date , contract_end_date , other_contract_details | parts : part_id , part_name , chargeable_yn , chargeable_amount , other_part_details | skills : skill_id , skill_code , skill_description | staff : staff_id , staff_name , gender , other_staff_details | assets : asset_id , maintenance_contract_id , supplier_company_id , asset_details , asset_make , asset_model , asset_acquired_date , asset_disposed_date , other_asset_details | asset_parts : asset_id , part_id | maintenance_engineers : engineer_id , company_id , first_name , last_name , other_details | engineer_skills : engineer_id , skill_id | fault_log : fault_log_entry_id , asset_id , recorded_by_staff_id , fault_log_entry_datetime , fault_description , other_fault_details | engineer_visits : engineer_visit_id , contact_staff_id , engineer_id , fault_log_entry_id , fault_status , visit_start_datetime , visit_end_datetime , other_visit_details | part_faults : part_fault_id , part_id , fault_short_name , fault_description , other_fault_details | fault_log_parts : fault_log_entry_id , part_fault_id , fault_status | skills_required_to_fix : part_fault_id , skill_id output: SELECT T1.fault_short_name ,  T3.skill_description FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id  =  T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id\n Now please use valid SQLite to answer the following questions: How many countries are listed?",
    "Here is an examples including input and output:\n input: question: List the status shared by more than two roller coaster. serialized_schema:  | roller_coaster | roller_coaster : roller_coaster_id , name , park , country_id , length , height , speed , opened , status | country : country_id , name , population , area , languages output: SELECT Status FROM roller_coaster GROUP BY Status HAVING COUNT(*)  >  2\n Now please use valid SQLite to answer the following questions: How many countries exist?",
    "Here is an examples including input and output:\n input: question: What are the names of the characteristics of the product 'sesame' that have the characteristic type code 'Grade'? serialized_schema:  | products_gen_characteristics | ref_characteristic_types : characteristic_type_code , characteristic_type_description | ref_colors : color_code , color_description | ref_product_categories : product_category_code , product_category_description , unit_of_measure | characteristics : characteristic_id , characteristic_type_code , characteristic_data_type , characteristic_name , other_characteristic_details | products : product_id , color_code , product_category_code , product_name , typical_buying_price , typical_selling_price , product_description , other_product_details | product_characteristics : product_id , characteristic_id , product_characteristic_value output: SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"sesame\" AND t3.characteristic_type_code  =  \"Grade\"\n Now please use valid SQLite to answer the following questions: How many models does each car maker produce? List maker full name, id and the number.",
    "Here is an examples including input and output:\n input: question: What are the names of projects that have not been assigned? serialized_schema:  | scientist_1 | scientists : ssn , name | projects : code , name , hours | assignedto : scientist , project output: SELECT Name FROM Projects WHERE Code NOT IN (SELECT Project FROM AssignedTo)\n Now please use valid SQLite to answer the following questions: What is the full name of each car maker, along with its id and how many models it produces?",
    "Here is an examples including input and output:\n input: question: What are the names of all the playlists? serialized_schema:  | store_1 | artists : id , name | sqlite_sequence : name , seq | albums : id , title , artist_id | employees : id , last_name , first_name , title , reports_to , birth_date , hire_date , address , city , state , country , postal_code , phone , fax , email | customers : id , first_name , last_name , company , address , city , state , country , postal_code , phone , fax , email , support_rep_id | genres : id , name | invoices : id , customer_id , invoice_date , billing_address , billing_city , billing_state , billing_country , billing_postal_code , total | media_types : id , name | tracks : id , name , album_id , media_type_id , genre_id , composer , milliseconds , bytes , unit_price | invoice_lines : id , invoice_id , track_id , unit_price , quantity | playlists : id , name | playlist_tracks : playlist_id , track_id output: SELECT name FROM playlists;\n Now please use valid SQLite to answer the following questions: Which model of the car has the minimum horsepower?",
    "Here is an examples including input and output:\n input: question: Find the number of activities Mark Giuliano is involved in. serialized_schema:  | activity_1 | activity : actid , activity_name | participates_in : stuid , actid | faculty_participates_in : facid , actid | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building output: SELECT count(*) FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID WHERE T1.fname  =  \"Mark\" AND T1.lname  =  \"Giuliano\"\n Now please use valid SQLite to answer the following questions: What is the model of the car with the smallest amount of horsepower?",
    "Here is an examples including input and output:\n input: question: Find the number of students that have at least one grade \"B\". serialized_schema:  | college_3 | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building | department : dno , division , dname , room , building , dphone | member_of : facid , dno , appt_type | course : cid , cname , credits , instructor , days , hours , dno | minor_in : stuid , dno | enrolled_in : stuid , cid , grade | gradeconversion : lettergrade , gradepoint output: SELECT COUNT(DISTINCT StuID) FROM ENROLLED_IN WHERE Grade  =  \"B\"\n Now please use valid SQLite to answer the following questions: Find the model of the car whose weight is below the average weight.",
    "Here is an examples including input and output:\n input: question: What is the name of the song that was released most recently? serialized_schema:  | music_1 | genre : g_name , rating , most_popular_in | artist : artist_name , country , gender , preferred_genre | files : f_id , artist_name , file_size , duration , formats | song : song_name , artist_name , country , f_id , genre_is , rating , languages , releasedate , resolution output: SELECT song_name ,  releasedate FROM song ORDER BY releasedate DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: What is the model for the car with a weight smaller than the average?",
    "Here is an examples including input and output:\n input: question: List the open date of open year of the shop named \"Apple\". serialized_schema:  | device | device : device_id , device , carrier , package_version , applications , software_platform | shop : shop_id , shop_name , location , open_date , open_year | stock : shop_id , device_id , quantity output: SELECT Open_Date ,  Open_Year FROM shop WHERE Shop_Name  =  \"Apple\"\n Now please use valid SQLite to answer the following questions: Find the name of the makers that produced some cars in the year of 1970?",
    "Here is an examples including input and output:\n input: question: Find all the catalog publishers whose name contains \"Murray\" serialized_schema:  | product_catalog | attribute_definitions : attribute_id , attribute_name , attribute_data_type | catalogs : catalog_id , catalog_name , catalog_publisher , date_of_publication , date_of_latest_revision | catalog_structure : catalog_level_number , catalog_id , catalog_level_name | catalog_contents : catalog_entry_id , catalog_level_number , parent_entry_id , previous_entry_id , next_entry_id , catalog_entry_name , product_stock_number , price_in_dollars , price_in_euros , price_in_pounds , capacity , length , height , width | catalog_contents_additional_attributes : catalog_entry_id , catalog_level_number , attribute_id , attribute_value output: SELECT distinct(catalog_publisher) FROM catalogs WHERE catalog_publisher LIKE \"%Murray%\"\n Now please use valid SQLite to answer the following questions: What is the name of the different car makers who produced a car in 1970?",
    "Here is an examples including input and output:\n input: question: Which parts have more than 2 faults? Show the part name and id. serialized_schema:  | assets_maintenance | third_party_companies : company_id , company_type , company_name , company_address , other_company_details | maintenance_contracts : maintenance_contract_id , maintenance_contract_company_id , contract_start_date , contract_end_date , other_contract_details | parts : part_id , part_name , chargeable_yn , chargeable_amount , other_part_details | skills : skill_id , skill_code , skill_description | staff : staff_id , staff_name , gender , other_staff_details | assets : asset_id , maintenance_contract_id , supplier_company_id , asset_details , asset_make , asset_model , asset_acquired_date , asset_disposed_date , other_asset_details | asset_parts : asset_id , part_id | maintenance_engineers : engineer_id , company_id , first_name , last_name , other_details | engineer_skills : engineer_id , skill_id | fault_log : fault_log_entry_id , asset_id , recorded_by_staff_id , fault_log_entry_datetime , fault_description , other_fault_details | engineer_visits : engineer_visit_id , contact_staff_id , engineer_id , fault_log_entry_id , fault_status , visit_start_datetime , visit_end_datetime , other_visit_details | part_faults : part_fault_id , part_id , fault_short_name , fault_description , other_fault_details | fault_log_parts : fault_log_entry_id , part_fault_id , fault_status | skills_required_to_fix : part_fault_id , skill_id output: SELECT T1.part_name ,  T1.part_id FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_id HAVING count(*)  >  2\n Now please use valid SQLite to answer the following questions: Find the make and production time of the cars that were produced in the earliest year?",
    "Here is an examples including input and output:\n input: question: What is the theme, date, and attendance for the exhibition in year 2004? serialized_schema:  | theme_gallery | artist : artist_id , name , country , year_join , age | exhibition : exhibition_id , year , theme , artist_id , ticket_price | exhibition_record : exhibition_id , date , attendance output: SELECT T2.theme ,  T1.date ,  T1.attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T2.year  =  2004\n Now please use valid SQLite to answer the following questions: What is the maker of the carr produced in the earliest year and what year was it?",
    "Here is an examples including input and output:\n input: question: How many distinct currency codes are there for all drama workshop groups? serialized_schema:  | cre_Drama_Workshop_Groups | ref_payment_methods : payment_method_code , payment_method_description | ref_service_types : service_type_code , parent_service_type_code , service_type_description | addresses : address_id , line_1 , line_2 , city_town , state_county , other_details | products : product_id , product_name , product_price , product_description , other_product_service_details | marketing_regions : marketing_region_code , marketing_region_name , marketing_region_descriptrion , other_details | clients : client_id , address_id , customer_email_address , customer_name , customer_phone , other_details | drama_workshop_groups : workshop_group_id , address_id , currency_code , marketing_region_code , store_name , store_phone , store_email_address , other_details | performers : performer_id , address_id , customer_name , customer_phone , customer_email_address , other_details | customers : customer_id , address_id , customer_name , customer_phone , customer_email_address , other_details | stores : store_id , address_id , marketing_region_code , store_name , store_phone , store_email_address , other_details | bookings : booking_id , customer_id , workshop_group_id , status_code , store_id , order_date , planned_delivery_date , actual_delivery_date , other_order_details | performers_in_bookings : order_id , performer_id | customer_orders : order_id , customer_id , store_id , order_date , planned_delivery_date , actual_delivery_date , other_order_details | order_items : order_item_id , order_id , product_id , order_quantity , other_item_details | invoices : invoice_id , order_id , payment_method_code , product_id , order_quantity , other_item_details , order_item_id | services : service_id , service_type_code , workshop_group_id , product_description , product_name , product_price , other_product_service_details | bookings_services : order_id , product_id | invoice_items : invoice_item_id , invoice_id , order_id , order_item_id , product_id , order_quantity , other_item_details output: SELECT count(DISTINCT Currency_Code) FROM Drama_Workshop_Groups\n Now please use valid SQLite to answer the following questions: Which distinct car models are the produced after 1980?",
    "Here is an examples including input and output:\n input: question: Which studios have never worked with the director Walter Hill? serialized_schema:  | film_rank | film : film_id , title , studio , director , gross_in_dollar | market : market_id , country , number_cities | film_market_estimation : estimation_id , low_estimate , high_estimate , film_id , type , market_id , year output: SELECT Studio FROM film EXCEPT SELECT Studio FROM film WHERE Director  =  \"Walter Hill\"\n Now please use valid SQLite to answer the following questions: What are the different models for the cards produced after 1980?",
    "Here is an examples including input and output:\n input: question: What are the distinct reigns of wrestlers whose location is not \"Tokyo,Japan\" ? serialized_schema:  | wrestler | wrestler : wrestler_id , name , reign , days_held , location , event | elimination : elimination_id , wrestler_id , team , eliminated_by , elimination_move , time output: SELECT DISTINCT Reign FROM wrestler WHERE LOCATION != \"Tokyo , Japan\"\n Now please use valid SQLite to answer the following questions: How many car makers are there in each continents? List the continent name and the count.",
    "Here is an examples including input and output:\n input: question: What is the location with the most cinemas opened in year 2010 or later? serialized_schema:  | cinema | film : film_id , rank_in_series , number_in_season , title , directed_by , original_air_date , production_code | cinema : cinema_id , name , openning_year , capacity , location | schedule : cinema_id , film_id , date , show_times_per_day , price output: SELECT LOCATION FROM cinema WHERE openning_year  >=  2010 GROUP BY LOCATION ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: What is the name of each continent and how many car makers are there in each one?",
    "Here is an examples including input and output:\n input: question: How many faculty members do we have for each rank and gender? serialized_schema:  | activity_1 | activity : actid , activity_name | participates_in : stuid , actid | faculty_participates_in : facid , actid | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building output: SELECT rank ,  sex ,  count(*) FROM Faculty GROUP BY rank ,  sex\n Now please use valid SQLite to answer the following questions: Which of the countries has the most car makers? List the country name.",
    "Here is an examples including input and output:\n input: question: What is the name of the artist, for each language, that has the most songs with a higher resolution than 500? serialized_schema:  | music_1 | genre : g_name , rating , most_popular_in | artist : artist_name , country , gender , preferred_genre | files : f_id , artist_name , file_size , duration , formats | song : song_name , artist_name , country , f_id , genre_is , rating , languages , releasedate , resolution output: SELECT artist_name FROM song WHERE resolution  >  500 GROUP BY languages ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: What is the name of the country with the most car makers?",
    "Here is an examples including input and output:\n input: question: Show the customer id and number of accounts with most accounts. serialized_schema:  | customers_card_transactions | accounts : account_id , customer_id , account_name , other_account_details | customers : customer_id , customer_first_name , customer_last_name , customer_address , customer_phone , customer_email , other_customer_details | customers_cards : card_id , customer_id , card_type_code , card_number , date_valid_from , date_valid_to , other_card_details | financial_transactions : transaction_id , previous_transaction_id , account_id , card_id , transaction_type , transaction_date , transaction_amount , transaction_comment , other_transaction_details output: SELECT customer_id ,  count(*) FROM Accounts GROUP BY customer_id ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: How many car models are produced by each maker ? Only list the count and the maker full name .",
    "Here is an examples including input and output:\n input: question: Which catalog publisher has published the most catalogs? serialized_schema:  | product_catalog | attribute_definitions : attribute_id , attribute_name , attribute_data_type | catalogs : catalog_id , catalog_name , catalog_publisher , date_of_publication , date_of_latest_revision | catalog_structure : catalog_level_number , catalog_id , catalog_level_name | catalog_contents : catalog_entry_id , catalog_level_number , parent_entry_id , previous_entry_id , next_entry_id , catalog_entry_name , product_stock_number , price_in_dollars , price_in_euros , price_in_pounds , capacity , length , height , width | catalog_contents_additional_attributes : catalog_entry_id , catalog_level_number , attribute_id , attribute_value output: SELECT catalog_publisher FROM catalogs GROUP BY catalog_publisher ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: What is the number of car models that are produced by each maker and what is the id and full name of each maker?",
    "Here is an examples including input and output:\n input: question: For each classroom, show the classroom number and find how many students are using it. serialized_schema:  | student_1 | list : lastname , firstname , grade , classroom | teachers : lastname , firstname , classroom output: SELECT classroom ,  count(*) FROM list GROUP BY classroom\n Now please use valid SQLite to answer the following questions: What is the accelerate of the car make amc hornet sportabout (sw)?",
    "Here is an examples including input and output:\n input: question: Return the average total amount purchased and total value purchased for the supplier who supplies the greatest number of products. serialized_schema:  | department_store | addresses : address_id , address_details | staff : staff_id , staff_gender , staff_name | suppliers : supplier_id , supplier_name , supplier_phone | department_store_chain : dept_store_chain_id , dept_store_chain_name | customers : customer_id , payment_method_code , customer_code , customer_name , customer_address , customer_phone , customer_email | products : product_id , product_type_code , product_name , product_price | supplier_addresses : supplier_id , address_id , date_from , date_to | customer_addresses : customer_id , address_id , date_from , date_to | customer_orders : order_id , customer_id , order_status_code , order_date | department_stores : dept_store_id , dept_store_chain_id , store_name , store_address , store_phone , store_email | departments : department_id , dept_store_id , department_name | order_items : order_item_id , order_id , product_id | product_suppliers : product_id , supplier_id , date_supplied_from , date_supplied_to , total_amount_purchased , total_value_purchased | staff_department_assignments : staff_id , department_id , date_assigned_from , job_title_code , date_assigned_to output: SELECT avg(total_amount_purchased) ,  avg(total_value_purchased) FROM Product_Suppliers WHERE supplier_id  =  (SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id ORDER BY count(*) DESC LIMIT 1)\n Now please use valid SQLite to answer the following questions: How much does the car accelerate that makes amc hornet sportabout (sw)?",
    "Here is an examples including input and output:\n input: question: How many statements do we have? serialized_schema:  | cre_Docs_and_Epenses | ref_document_types : document_type_code , document_type_name , document_type_description | ref_budget_codes : budget_type_code , budget_type_description | projects : project_id , project_details | documents : document_id , document_type_code , project_id , document_date , document_name , document_description , other_details | statements : statement_id , statement_details | documents_with_expenses : document_id , budget_type_code , document_details | accounts : account_id , statement_id , account_details output: SELECT count(*) FROM Statements\n Now please use valid SQLite to answer the following questions: How many car makers are there in france?",
    "Here is an examples including input and output:\n input: question: Count the number of countries. serialized_schema:  | county_public_safety | county_public_safety : county_id , name , population , police_officers , residents_per_officer , case_burden , crime_rate , police_force , location | city : city_id , county_id , name , white , black , amerindian , asian , multiracial , hispanic output: SELECT count(*) FROM county_public_safety\n Now please use valid SQLite to answer the following questions: What is the number of makers of care in France?",
    "Here is an examples including input and output:\n input: question: Find the name of amenities of the dorm where the student with last name Smith is living in. serialized_schema:  | dorm_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | dorm : dormid , dorm_name , student_capacity , gender | dorm_amenity : amenid , amenity_name | has_amenity : dormid , amenid | lives_in : stuid , dormid , room_number output: SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid JOIN lives_in AS T4 ON T4.dormid  =  T1.dormid JOIN student AS T5 ON T5.stuid  =  T4.stuid WHERE T5.lname  =  'Smith'\n Now please use valid SQLite to answer the following questions: How many car models are produced in the usa?",
    "Here is an examples including input and output:\n input: question: Which district has the least area? serialized_schema:  | store_product | product : product_id , product , dimensions , dpi , pages_per_minute_color , max_page_size , interface | store : store_id , store_name , type , area_size , number_of_product_category , ranking | district : district_id , district_name , headquartered_city , city_population , city_area | store_product : store_id , product_id | store_district : store_id , district_id output: SELECT district_name FROM district ORDER BY city_area ASC LIMIT 1\n Now please use valid SQLite to answer the following questions: What is the count of the car models produced in the United States?",
    "Here is an examples including input and output:\n input: question: What are the names of all the dorms that can accomdate more than 300 students? serialized_schema:  | dorm_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | dorm : dormid , dorm_name , student_capacity , gender | dorm_amenity : amenid , amenity_name | has_amenity : dormid , amenid | lives_in : stuid , dormid , room_number output: SELECT dorm_name FROM dorm WHERE student_capacity  >  300\n Now please use valid SQLite to answer the following questions: What is the average miles per gallon(mpg) of the cars with 4 cylinders?",
    "Here is an examples including input and output:\n input: question: What are the support, consider, and oppose rates of each candidate, ordered ascending by their unsure rate? serialized_schema:  | candidate_poll | candidate : candidate_id , people_id , poll_source , date , support_rate , consider_rate , oppose_rate , unsure_rate | people : people_id , sex , name , date_of_birth , height , weight output: SELECT Support_rate ,  Consider_rate ,  Oppose_rate FROM candidate ORDER BY unsure_rate\n Now please use valid SQLite to answer the following questions: What is the average miles per gallon of all the cards with 4 cylinders?",
    "Here is an examples including input and output:\n input: question: Which campus was opened between 1935 and 1939? serialized_schema:  | csu_1 | campuses : id , campus , location , county , year | csu_fees : campus , year , campusfee | degrees : year , campus , degrees | discipline_enrollments : campus , discipline , year , undergraduate , graduate | enrollments : campus , year , totalenrollment_ay , fte_ay | faculty : campus , year , faculty output: SELECT campus FROM campuses WHERE YEAR  >=  1935 AND YEAR  <=  1939\n Now please use valid SQLite to answer the following questions: What is the smallest weight of the car produced with 8 cylinders on 1974 ?",
    "Here is an examples including input and output:\n input: question: Count the number of customers. serialized_schema:  | customers_card_transactions | accounts : account_id , customer_id , account_name , other_account_details | customers : customer_id , customer_first_name , customer_last_name , customer_address , customer_phone , customer_email , other_customer_details | customers_cards : card_id , customer_id , card_type_code , card_number , date_valid_from , date_valid_to , other_card_details | financial_transactions : transaction_id , previous_transaction_id , account_id , card_id , transaction_type , transaction_date , transaction_amount , transaction_comment , other_transaction_details output: SELECT count(*) FROM Customers\n Now please use valid SQLite to answer the following questions: What is the minimum weight of the car with 8 cylinders produced in 1974 ?",
    "Here is an examples including input and output:\n input: question: For each aircraft that has won an award, what is its name and how many time has it won? serialized_schema:  | aircraft | pilot : pilot_id , name , age | aircraft : aircraft_id , aircraft , description , max_gross_weight , total_disk_area , max_disk_loading | match : round , location , country , date , fastest_qualifying , winning_pilot , winning_aircraft | airport : airport_id , airport_name , total_passengers , %_change_2007 , international_passengers , domestic_passengers , transit_passengers , aircraft_movements , freight_metric_tonnes | airport_aircraft : id , airport_id , aircraft_id output: SELECT T1.Aircraft ,  COUNT(*) FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft\n Now please use valid SQLite to answer the following questions: What are all the makers and models?",
    "Here is an examples including input and output:\n input: question: What are the room names and ids of all the rooms that cost more than 160 and can accommodate more than two people. serialized_schema:  | inn_1 | rooms : roomid , roomname , beds , bedtype , maxoccupancy , baseprice , decor | reservations : code , room , checkin , checkout , rate , lastname , firstname , adults , kids output: SELECT roomName ,  RoomId FROM Rooms WHERE basePrice  >  160 AND maxOccupancy  >  2;\n Now please use valid SQLite to answer the following questions: What are the makers and models?",
    "Here is an examples including input and output:\n input: question: What is the race class with most number of races. serialized_schema:  | race_track | race : race_id , name , class , date , track_id | track : track_id , name , location , seating , year_opened output: SELECT CLASS FROM race GROUP BY CLASS ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: What are the countries having at least one car maker? List name and id.",
    "Here is an examples including input and output:\n input: question: Show the account id and name with at least 4 transactions. serialized_schema:  | customers_and_invoices | customers : customer_id , customer_first_name , customer_middle_initial , customer_last_name , gender , email_address , login_name , login_password , phone_number , town_city , state_county_province , country | orders : order_id , customer_id , date_order_placed , order_details | invoices : invoice_number , order_id , invoice_date | accounts : account_id , customer_id , date_account_opened , account_name , other_account_details | product_categories : production_type_code , product_type_description , vat_rating | products : product_id , parent_product_id , production_type_code , unit_price , product_name , product_color , product_size | financial_transactions : transaction_id , account_id , invoice_number , transaction_type , transaction_date , transaction_amount , transaction_comment , other_transaction_details | order_items : order_item_id , order_id , product_id , product_quantity , other_order_item_details | invoice_line_items : order_item_id , invoice_number , product_id , product_title , product_quantity , product_price , derived_product_cost , derived_vat_payable , derived_total_cost output: SELECT T1.account_id ,  T2.account_name FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id  =  T2.account_id GROUP BY T1.account_id HAVING count(*)  >=  4\n Now please use valid SQLite to answer the following questions: What are the names and ids of all countries with at least one car maker?",
    "Here is an examples including input and output:\n input: question: Find the brand and name for each camera lens, and sort in descending order of maximum aperture. serialized_schema:  | mountain_photos | mountain : id , name , height , prominence , range , country | camera_lens : id , brand , name , focal_length_mm , max_aperture | photos : id , camera_lens_id , mountain_id , color , name output: SELECT brand ,  name FROM camera_lens ORDER BY max_aperture DESC\n Now please use valid SQLite to answer the following questions: What is the number of the cars with horsepower more than 150?",
    "Here is an examples including input and output:\n input: question: What is the date of birth for the staff member named Janessa Sawayn? serialized_schema:  | driving_school | addresses : address_id , line_1_number_building , city , zip_postcode , state_province_county , country | staff : staff_id , staff_address_id , nickname , first_name , middle_name , last_name , date_of_birth , date_joined_staff , date_left_staff | vehicles : vehicle_id , vehicle_details | customers : customer_id , customer_address_id , customer_status_code , date_became_customer , date_of_birth , first_name , last_name , amount_outstanding , email_address , phone_number , cell_mobile_phone_number | customer_payments : customer_id , datetime_payment , payment_method_code , amount_payment | lessons : lesson_id , customer_id , lesson_status_code , staff_id , vehicle_id , lesson_date , lesson_time , price output: SELECT date_of_birth FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";\n Now please use valid SQLite to answer the following questions: What is the number of cars with a horsepower greater than 150?",
    "Here is an examples including input and output:\n input: question: Who is the advisor of student with ID 1004? serialized_schema:  | allergy_1 | allergy_type : allergy , allergytype | has_allergy : stuid , allergy | student : stuid , lname , fname , age , sex , major , advisor , city_code output: SELECT Advisor FROM Student WHERE StuID  =  1004\n Now please use valid SQLite to answer the following questions: What is the average weight of cars each year?",
    "Here is an examples including input and output:\n input: question: Find the name of amenities Smith Hall dorm have. serialized_schema:  | dorm_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | dorm : dormid , dorm_name , student_capacity , gender | dorm_amenity : amenid , amenity_name | has_amenity : dormid , amenid | lives_in : stuid , dormid , room_number output: SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T1.dorm_name  =  'Smith Hall'\n Now please use valid SQLite to answer the following questions: What is the average weight and year for each year?",
    "Here is an examples including input and output:\n input: question: What are the first names and last names of all the guests? serialized_schema:  | apartment_rentals | apartment_buildings : building_id , building_short_name , building_full_name , building_description , building_address , building_manager , building_phone | apartments : apt_id , building_id , apt_type_code , apt_number , bathroom_count , bedroom_count , room_count | apartment_facilities : apt_id , facility_code | guests : guest_id , gender_code , guest_first_name , guest_last_name , date_of_birth | apartment_bookings : apt_booking_id , apt_id , guest_id , booking_status_code , booking_start_date , booking_end_date | view_unit_status : apt_id , apt_booking_id , status_date , available_yn output: SELECT guest_first_name ,  guest_last_name FROM Guests\n Now please use valid SQLite to answer the following questions: Which countries in europe have at least 3 car manufacturers?",
    "Here is an examples including input and output:\n input: question: Show all card type codes. serialized_schema:  | customers_card_transactions | accounts : account_id , customer_id , account_name , other_account_details | customers : customer_id , customer_first_name , customer_last_name , customer_address , customer_phone , customer_email , other_customer_details | customers_cards : card_id , customer_id , card_type_code , card_number , date_valid_from , date_valid_to , other_card_details | financial_transactions : transaction_id , previous_transaction_id , account_id , card_id , transaction_type , transaction_date , transaction_amount , transaction_comment , other_transaction_details output: SELECT DISTINCT card_type_code FROM Customers_Cards\n Now please use valid SQLite to answer the following questions: What are the names of all European countries with at least 3 manufacturers?",
    "Here is an examples including input and output:\n input: question: List member names and their party names. serialized_schema:  | party_people | region : region_id , region_name , date , label , format , catalogue | party : party_id , minister , took_office , left_office , region_id , party_name | member : member_id , member_name , party_id , in_office | party_events : event_id , event_name , party_id , member_in_charge_id output: SELECT T1.member_name ,  T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id\n Now please use valid SQLite to answer the following questions: What is the maximum horsepower and the make of the car models with 3 cylinders?",
    "Here is an examples including input and output:\n input: question: What are the names of the directors who made exactly one movie? serialized_schema:  | movie_1 | movie : mid , title , year , director | reviewer : rid , name | rating : rid , mid , stars , ratingdate output: SELECT director FROM Movie GROUP BY director HAVING count(*)  =  1\n Now please use valid SQLite to answer the following questions: What is the largest amount of horsepower for the models with 3 cylinders and what make is it?",
    "Here is an examples including input and output:\n input: question: Return all the information for all employees without any department number. serialized_schema:  | hr_1 | regions : region_id , region_name | countries : country_id , country_name , region_id | departments : department_id , department_name , manager_id , location_id | jobs : job_id , job_title , min_salary , max_salary | employees : employee_id , first_name , last_name , email , phone_number , hire_date , job_id , salary , commission_pct , manager_id , department_id | job_history : employee_id , start_date , end_date , job_id , department_id | locations : location_id , street_address , postal_code , city , state_province , country_id output: SELECT * FROM employees WHERE department_id  =  \"null\"\n Now please use valid SQLite to answer the following questions: Which model saves the most gasoline? That is to say, have the maximum miles per gallon.",
    "Here is an examples including input and output:\n input: question: What are the top 3 artists with the largest number of songs in the language Bangla? serialized_schema:  | music_1 | genre : g_name , rating , most_popular_in | artist : artist_name , country , gender , preferred_genre | files : f_id , artist_name , file_size , duration , formats | song : song_name , artist_name , country , f_id , genre_is , rating , languages , releasedate , resolution output: SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"bangla\" GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3\n Now please use valid SQLite to answer the following questions: What is the car model with the highest mpg ?",
    "Here is an examples including input and output:\n input: question: What are the names and revenues of the companies with the highest revenues in each headquarter city? serialized_schema:  | manufactory_1 | manufacturers : code , name , headquarter , founder , revenue | products : code , name , price , manufacturer output: SELECT name ,  max(revenue) ,  Headquarter FROM manufacturers GROUP BY Headquarter\n Now please use valid SQLite to answer the following questions: What is the average horsepower of the cars before 1980?",
    "Here is an examples including input and output:\n input: question: List all names of courses with 1 credit? serialized_schema:  | college_3 | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building | department : dno , division , dname , room , building , dphone | member_of : facid , dno , appt_type | course : cid , cname , credits , instructor , days , hours , dno | minor_in : stuid , dno | enrolled_in : stuid , cid , grade | gradeconversion : lettergrade , gradepoint output: SELECT CName FROM COURSE WHERE Credits  =  1\n Now please use valid SQLite to answer the following questions: What is the average horsepower for all cars produced before 1980 ?",
    "Here is an examples including input and output:\n input: question: How many employees have certificate. serialized_schema:  | flight_1 | flight : flno , origin , destination , distance , departure_date , arrival_date , price , aid | aircraft : aid , name , distance | employee : eid , name , salary | certificate : eid , aid output: SELECT count(DISTINCT eid) FROM Certificate\n Now please use valid SQLite to answer the following questions: What is the average edispl of the cars of model volvo?",
    "Here is an examples including input and output:\n input: question: Find the list of documents that are both in the most three popular type and have the most three popular structure. serialized_schema:  | document_management | roles : role_code , role_description | users : user_id , role_code , user_name , user_login , password | document_structures : document_structure_code , parent_document_structure_code , document_structure_description | functional_areas : functional_area_code , parent_functional_area_code , functional_area_description | images : image_id , image_alt_text , image_name , image_url | documents : document_code , document_structure_code , document_type_code , access_count , document_name | document_functional_areas : document_code , functional_area_code | document_sections : section_id , document_code , section_sequence , section_code , section_title | document_sections_images : section_id , image_id output: SELECT document_name FROM documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 3 INTERSECT SELECT document_name FROM documents GROUP BY document_structure_code ORDER BY count(*) DESC LIMIT 3\n Now please use valid SQLite to answer the following questions: What is the average edispl for all volvos?",
    "Here is an examples including input and output:\n input: question: What is the maximum fastest lap speed in race named 'Monaco Grand Prix' in 2008 ? serialized_schema:  | formula_1 | circuits : circuitid , circuitref , name , location , country , lat , lng , alt , url | races : raceid , year , round , circuitid , name , date , time , url | drivers : driverid , driverref , number , code , forename , surname , dob , nationality , url | status : statusid , status | seasons : year , url | constructors : constructorid , constructorref , name , nationality , url | constructorstandings : constructorstandingsid , raceid , constructorid , points , position , positiontext , wins | results : resultid , raceid , driverid , constructorid , number , grid , position , positiontext , positionorder , points , laps , time , milliseconds , fastestlap , rank , fastestlaptime , fastestlapspeed , statusid | driverstandings : driverstandingsid , raceid , driverid , points , position , positiontext , wins | constructorresults : constructorresultsid , raceid , constructorid , points , status | qualifying : qualifyid , raceid , driverid , constructorid , number , position , q1 , q2 , q3 | pitstops : raceid , driverid , stop , lap , time , duration , milliseconds | laptimes : raceid , driverid , lap , position , time , milliseconds output: SELECT max(T2.fastestlapspeed) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year = 2008 AND T1.name = \"Monaco Grand Prix\"\n Now please use valid SQLite to answer the following questions: What is the maximum accelerate for different number of cylinders?",
    "Here is an examples including input and output:\n input: question: Show the crime rate of counties with a city having white percentage more than 90. serialized_schema:  | county_public_safety | county_public_safety : county_id , name , population , police_officers , residents_per_officer , case_burden , crime_rate , police_force , location | city : city_id , county_id , name , white , black , amerindian , asian , multiracial , hispanic output: SELECT T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID WHERE T1.White  >  90\n Now please use valid SQLite to answer the following questions: What is the maximum accelerate for all the different cylinders?",
    "Here is an examples including input and output:\n input: question: What is the average latitude and longitude in San Jose? serialized_schema:  | bike_1 | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code output: SELECT avg(lat) ,  avg(long) FROM station WHERE city  =  \"San Jose\"\n Now please use valid SQLite to answer the following questions: Which model has the most version(make) of cars?",
    "Here is an examples including input and output:\n input: question: List the id, color scheme, and name for all the photos. serialized_schema:  | mountain_photos | mountain : id , name , height , prominence , range , country | camera_lens : id , brand , name , focal_length_mm , max_aperture | photos : id , camera_lens_id , mountain_id , color , name output: SELECT id ,  color ,  name FROM photos\n Now please use valid SQLite to answer the following questions: What model has the most different versions?",
    "Here is an examples including input and output:\n input: question: Which product has the most problems? Give me the number of problems and the product name. serialized_schema:  | tracking_software_problems | problem_category_codes : problem_category_code , problem_category_description | problem_log : problem_log_id , assigned_to_staff_id , problem_id , problem_category_code , problem_status_code , log_entry_date , log_entry_description , log_entry_fix , other_log_details | problem_status_codes : problem_status_code , problem_status_description | product : product_id , product_name , product_details | staff : staff_id , staff_first_name , staff_last_name , other_staff_details | problems : problem_id , product_id , closure_authorised_by_staff_id , reported_by_staff_id , date_problem_reported , date_problem_closed , problem_description , other_problem_details output: SELECT count(*) ,  T1.product_name FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: How many cars have more than 4 cylinders?",
    "Here is an examples including input and output:\n input: question: Return all the apartment numbers sorted by the room count in ascending order. serialized_schema:  | apartment_rentals | apartment_buildings : building_id , building_short_name , building_full_name , building_description , building_address , building_manager , building_phone | apartments : apt_id , building_id , apt_type_code , apt_number , bathroom_count , bedroom_count , room_count | apartment_facilities : apt_id , facility_code | guests : guest_id , gender_code , guest_first_name , guest_last_name , date_of_birth | apartment_bookings : apt_booking_id , apt_id , guest_id , booking_status_code , booking_start_date , booking_end_date | view_unit_status : apt_id , apt_booking_id , status_date , available_yn output: SELECT apt_number FROM Apartments ORDER BY room_count ASC\n Now please use valid SQLite to answer the following questions: What is the number of cars with more than 4 cylinders?",
    "Here is an examples including input and output:\n input: question: Find the title of course that is provided by Statistics but not Psychology departments. serialized_schema:  | college_2 | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id output: SELECT title FROM course WHERE dept_name  =  'Statistics' EXCEPT SELECT title FROM course WHERE dept_name  =  'Psychology'\n Now please use valid SQLite to answer the following questions: how many cars were produced in 1980?",
    "Here is an examples including input and output:\n input: question: List all location codes and location names. serialized_schema:  | cre_Doc_Tracking_DB | ref_document_types : document_type_code , document_type_name , document_type_description | ref_calendar : calendar_date , day_number | ref_locations : location_code , location_name , location_description | roles : role_code , role_name , role_description | all_documents : document_id , date_stored , document_type_code , document_name , document_description , other_details | employees : employee_id , role_code , employee_name , gender_mfu , date_of_birth , other_details | document_locations : document_id , location_code , date_in_location_from , date_in_locaton_to | documents_to_be_destroyed : document_id , destruction_authorised_by_employee_id , destroyed_by_employee_id , planned_destruction_date , actual_destruction_date , other_details output: SELECT location_code ,  location_name FROM Ref_locations\n Now please use valid SQLite to answer the following questions: In 1980, how many cars were made?",
    "Here is an examples including input and output:\n input: question: What are the issue dates of volumes associated with the artist aged 23 or younger? serialized_schema:  | music_4 | artist : artist_id , artist , age , famous_title , famous_release_date | volume : volume_id , volume_issue , issue_date , weeks_on_top , song , artist_id | music_festival : id , music_festival , date_of_ceremony , category , volume , result output: SELECT Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  <=  23\n Now please use valid SQLite to answer the following questions: How many car models were produced by the maker with full name American Motor Company?",
    "Here is an examples including input and output:\n input: question: Show each premise type and the number of premises in that type. serialized_schema:  | customers_campaigns_ecommerce | premises : premise_id , premises_type , premise_details | products : product_id , product_category , product_name | customers : customer_id , payment_method , customer_name , customer_phone , customer_email , customer_address , customer_login , customer_password | mailshot_campaigns : mailshot_id , product_category , mailshot_name , mailshot_start_date , mailshot_end_date | customer_addresses : customer_id , premise_id , date_address_from , address_type_code , date_address_to | customer_orders : order_id , customer_id , order_status_code , shipping_method_code , order_placed_datetime , order_delivered_datetime , order_shipping_charges | mailshot_customers : mailshot_id , customer_id , outcome_code , mailshot_customer_date | order_items : item_id , order_item_status_code , order_id , product_id , item_status_code , item_delivered_datetime , item_order_quantity output: SELECT premises_type ,  count(*) FROM premises GROUP BY premises_type\n Now please use valid SQLite to answer the following questions: What is the number of car models created by the car maker American Motor Company?",
    "Here is an examples including input and output:\n input: question: What is the average account balance of customers with credit score below 50 for the different account types? serialized_schema:  | loan_1 | bank : branch_id , bname , no_of_customers , city , state | customer : cust_id , cust_name , acc_type , acc_bal , no_of_loans , credit_score , branch_id , state | loan : loan_id , loan_type , cust_id , branch_id , amount output: SELECT avg(acc_bal) ,  acc_type FROM customer WHERE credit_score  <  50 GROUP BY acc_type\n Now please use valid SQLite to answer the following questions: Which makers designed more than 3 car models? List full name and the id.",
    "Here is an examples including input and output:\n input: question: display the employee number, name( first name and last name ), and salary for all employees who earn more than the average salary and who work in a department with any employee with a 'J' in their first name. serialized_schema:  | hr_1 | regions : region_id , region_name | countries : country_id , country_name , region_id | departments : department_id , department_name , manager_id , location_id | jobs : job_id , job_title , min_salary , max_salary | employees : employee_id , first_name , last_name , email , phone_number , hire_date , job_id , salary , commission_pct , manager_id , department_id | job_history : employee_id , start_date , end_date , job_id , department_id | locations : location_id , street_address , postal_code , city , state_province , country_id output: SELECT employee_id ,  first_name ,  last_name ,  salary FROM employees WHERE salary  >  ( SELECT AVG (salary) FROM employees ) AND department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%J%')\n Now please use valid SQLite to answer the following questions: What are the names and ids of all makers with more than 3 models?",
    "Here is an examples including input and output:\n input: question: What are the names of the instructors in the Comp. Sci. department who earn more than 80000? serialized_schema:  | college_2 | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id output: SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'  AND salary  >  80000\n Now please use valid SQLite to answer the following questions: Which distinctive models are produced by maker with the full name General Motors or weighing more than 3500?",
    "Here is an examples including input and output:\n input: question: What are the full names and ages for all female students whose sex is F? serialized_schema:  | allergy_1 | allergy_type : allergy , allergytype | has_allergy : stuid , allergy | student : stuid , lname , fname , age , sex , major , advisor , city_code output: SELECT Fname ,  Lname ,  Age FROM Student WHERE Sex  =  'F'\n Now please use valid SQLite to answer the following questions: What are the different models created by either the car maker General Motors or weighed more than 3500?",
    "Here is an examples including input and output:\n input: question: What are the different software platforms for devices, and how many devices have each? serialized_schema:  | device | device : device_id , device , carrier , package_version , applications , software_platform | shop : shop_id , shop_name , location , open_date , open_year | stock : shop_id , device_id , quantity output: SELECT Software_Platform ,  COUNT(*) FROM device GROUP BY Software_Platform\n Now please use valid SQLite to answer the following questions: In which years cars were produced weighing no less than 3000 and no more than 4000 ?",
    "Here is an examples including input and output:\n input: question: What is the total point count of the youngest gymnast? serialized_schema:  | gymnast | gymnast : gymnast_id , floor_exercise_points , pommel_horse_points , rings_points , vault_points , parallel_bars_points , horizontal_bar_points , total_points | people : people_id , name , age , height , hometown output: SELECT T1.Total_Points FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T2.Age ASC LIMIT 1\n Now please use valid SQLite to answer the following questions: What are the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000 ?",
    "Here is an examples including input and output:\n input: question: What is the first name and last name of the customer that has email \"luisg@embraer.com.br\"? serialized_schema:  | chinook_1 | album : albumid , title , artistid | artist : artistid , name | customer : customerid , firstname , lastname , company , address , city , state , country , postalcode , phone , fax , email , supportrepid | employee : employeeid , lastname , firstname , title , reportsto , birthdate , hiredate , address , city , state , country , postalcode , phone , fax , email | genre : genreid , name | invoice : invoiceid , customerid , invoicedate , billingaddress , billingcity , billingstate , billingcountry , billingpostalcode , total | invoiceline : invoicelineid , invoiceid , trackid , unitprice , quantity | mediatype : mediatypeid , name | playlist : playlistid , name | playlisttrack : playlistid , trackid | track : trackid , name , albumid , mediatypeid , genreid , composer , milliseconds , bytes , unitprice output: SELECT FirstName ,  LastName FROM CUSTOMER WHERE Email  =  \"luisg@embraer.com.br\"\n Now please use valid SQLite to answer the following questions: What is the horsepower of the car with the largest accelerate?",
    "Here is an examples including input and output:\n input: question: show the name of all bridges that was designed by american archtect, and sort the result by the bridge feet length. serialized_schema:  | architecture | architect : id , name , nationality , gender | bridge : architect_id , id , name , location , length_meters , length_feet | mill : architect_id , id , location , name , type , built_year , notes output: SELECT t1.name FROM bridge AS t1 JOIN architect AS t2 ON t1.architect_id  =  t2.id WHERE t2.nationality  =  'American' ORDER BY t1.length_feet\n Now please use valid SQLite to answer the following questions: What is the horsepower of the car with the greatest accelerate?",
    "Here is an examples including input and output:\n input: question: What are all locations of train stations? serialized_schema:  | train_station | station : station_id , name , annual_entry_exit , annual_interchanges , total_passengers , location , main_services , number_of_platforms | train : train_id , name , time , service | train_station : train_id , station_id output: SELECT DISTINCT LOCATION FROM station\n Now please use valid SQLite to answer the following questions: For model volvo, how many cylinders does the car with the least accelerate have?",
    "Here is an examples including input and output:\n input: question: What is the name of the shop that has the most different kinds of devices in stock? serialized_schema:  | device | device : device_id , device , carrier , package_version , applications , software_platform | shop : shop_id , shop_name , location , open_date , open_year | stock : shop_id , device_id , quantity output: SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: For a volvo model, how many cylinders does the version with least accelerate have?",
    "Here is an examples including input and output:\n input: question: Return the elimination movies of wrestlers on Team Orton. serialized_schema:  | wrestler | wrestler : wrestler_id , name , reign , days_held , location , event | elimination : elimination_id , wrestler_id , team , eliminated_by , elimination_move , time output: SELECT Elimination_Move FROM Elimination WHERE Team  =  \"Team Orton\"\n Now please use valid SQLite to answer the following questions: How many cars have a larger accelerate than the car with the largest horsepower?",
    "Here is an examples including input and output:\n input: question: Find the first name of students living in city PHL whose age is between 20 and 25. serialized_schema:  | dorm_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | dorm : dormid , dorm_name , student_capacity , gender | dorm_amenity : amenid , amenity_name | has_amenity : dormid , amenid | lives_in : stuid , dormid , room_number output: SELECT fname FROM student WHERE city_code  =  'PHL' AND age BETWEEN 20 AND 25\n Now please use valid SQLite to answer the following questions: What is the number of cars with a greater accelerate than the one with the most horsepower?",
    "Here is an examples including input and output:\n input: question: In what years did a movie receive a 4 or 5 star rating, and list the years from oldest to most recently? serialized_schema:  | movie_1 | movie : mid , title , year , director | reviewer : rid , name | rating : rid , mid , stars , ratingdate output: SELECT DISTINCT YEAR FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID WHERE T2.stars  >=  4 ORDER BY T1.year\n Now please use valid SQLite to answer the following questions: How many countries has more than 2 car makers ?",
    "Here is an examples including input and output:\n input: question: For each distinct test result, find the number of students who got the result. serialized_schema:  | e_learning | course_authors_and_tutors : author_id , author_tutor_atb , login_name , password , personal_name , middle_name , family_name , gender_mf , address_line_1 | students : student_id , date_of_registration , date_of_latest_logon , login_name , password , personal_name , middle_name , family_name | subjects : subject_id , subject_name | courses : course_id , author_id , subject_id , course_name , course_description | student_course_enrolment : registration_id , student_id , course_id , date_of_enrolment , date_of_completion | student_tests_taken : registration_id , date_test_taken , test_result output: SELECT test_result ,  COUNT(*) FROM Student_Tests_Taken GROUP BY test_result ORDER BY COUNT(*) DESC\n Now please use valid SQLite to answer the following questions: What is the number of countries with more than 2 car makers ?",
    "Here is an examples including input and output:\n input: question: Find the names of the courses that have just one student enrollment. serialized_schema:  | e_learning | course_authors_and_tutors : author_id , author_tutor_atb , login_name , password , personal_name , middle_name , family_name , gender_mf , address_line_1 | students : student_id , date_of_registration , date_of_latest_logon , login_name , password , personal_name , middle_name , family_name | subjects : subject_id , subject_name | courses : course_id , author_id , subject_id , course_name , course_description | student_course_enrolment : registration_id , student_id , course_id , date_of_enrolment , date_of_completion | student_tests_taken : registration_id , date_test_taken , test_result output: SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name HAVING COUNT(*)  =  1\n Now please use valid SQLite to answer the following questions: How many cars has over 6 cylinders?",
    "Here is an examples including input and output:\n input: question: Which year had the greatest number of courses? serialized_schema:  | college_2 | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id output: SELECT YEAR FROM SECTION GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: What is the number of carsw ith over 6 cylinders?",
    "Here is an examples including input and output:\n input: question: What are the names of actors who are not 20 years old? serialized_schema:  | musical | musical : musical_id , name , year , award , category , nominee , result | actor : actor_id , name , musical_id , character , duration , age output: SELECT Name FROM actor WHERE Age != 20\n Now please use valid SQLite to answer the following questions: For the cars with 4 cylinders, which model has the largest horsepower?",
    "Here is an examples including input and output:\n input: question: How many types of products have Rodrick Heaney bought in total? serialized_schema:  | customers_and_addresses | addresses : address_id , address_content , city , zip_postcode , state_province_county , country , other_address_details | products : product_id , product_details | customers : customer_id , payment_method , customer_name , date_became_customer , other_customer_details | customer_addresses : customer_id , address_id , date_address_from , address_type , date_address_to | customer_contact_channels : customer_id , channel_code , active_from_date , active_to_date , contact_number | customer_orders : order_id , customer_id , order_status , order_date , order_details | order_items : order_id , product_id , order_quantity output: SELECT count(DISTINCT t3.product_id) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t1.customer_name  =  \"Rodrick Heaney\"\n Now please use valid SQLite to answer the following questions: For all of the 4 cylinder cars, which model has the most horsepower?",
    "Here is an examples including input and output:\n input: question: Find the distinct winery of wines having price between 50 and 100. serialized_schema:  | wine_1 | grapes : id , grape , color | appellations : no , appelation , county , state , area , isava | wine : no , grape , winery , appelation , state , name , year , price , score , cases , drink output: SELECT DISTINCT Winery FROM WINE WHERE Price BETWEEN 50 AND 100\n Now please use valid SQLite to answer the following questions: Among the cars with more than lowest horsepower, which ones do not have more than 3 cylinders? List the car makeid and make name.",
    "Here is an examples including input and output:\n input: question: List the names of studios that have at least two films. serialized_schema:  | film_rank | film : film_id , title , studio , director , gross_in_dollar | market : market_id , country , number_cities | film_market_estimation : estimation_id , low_estimate , high_estimate , film_id , type , market_id , year output: SELECT Studio FROM film GROUP BY Studio HAVING COUNT(*)  >=  2\n Now please use valid SQLite to answer the following questions: Among the cars that do not have the minimum horsepower , what are the make ids and names of all those with less than 4 cylinders ?",
    "Here is an examples including input and output:\n input: question: How many female students (sex is F) whose age is below 25? serialized_schema:  | dorm_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | dorm : dormid , dorm_name , student_capacity , gender | dorm_amenity : amenid , amenity_name | has_amenity : dormid , amenid | lives_in : stuid , dormid , room_number output: SELECT count(*) FROM student WHERE sex  =  'F' AND age  <  25\n Now please use valid SQLite to answer the following questions: What is the maximum miles per gallon of the car with 8 cylinders or produced before 1980 ?",
    "Here is an examples including input and output:\n input: question: How many students are there? serialized_schema:  | allergy_1 | allergy_type : allergy , allergytype | has_allergy : stuid , allergy | student : stuid , lname , fname , age , sex , major , advisor , city_code output: SELECT count(*) FROM Student\n Now please use valid SQLite to answer the following questions: What is the maximum mpg of the cars that had 8 cylinders or that were produced before 1980 ?",
    "Here is an examples including input and output:\n input: question: What are the different card types, and how many cards are there of each? serialized_schema:  | customers_card_transactions | accounts : account_id , customer_id , account_name , other_account_details | customers : customer_id , customer_first_name , customer_last_name , customer_address , customer_phone , customer_email , other_customer_details | customers_cards : card_id , customer_id , card_type_code , card_number , date_valid_from , date_valid_to , other_card_details | financial_transactions : transaction_id , previous_transaction_id , account_id , card_id , transaction_type , transaction_date , transaction_amount , transaction_comment , other_transaction_details output: SELECT card_type_code ,  count(*) FROM Customers_cards GROUP BY card_type_code\n Now please use valid SQLite to answer the following questions: Which models are lighter than 3500 but not built by the 'Ford Motor Company'?",
    "Here is an examples including input and output:\n input: question: How many members are in each party? serialized_schema:  | party_people | region : region_id , region_name , date , label , format , catalogue | party : party_id , minister , took_office , left_office , region_id , party_name | member : member_id , member_name , party_id , in_office | party_events : event_id , event_name , party_id , member_in_charge_id output: SELECT T2.party_name ,  count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id\n Now please use valid SQLite to answer the following questions: What are the different models wthat are lighter than 3500 but were not built by the Ford Motor Company?",
    "Here is an examples including input and output:\n input: question: What are the full names of students minoring in department 140? serialized_schema:  | college_3 | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building | department : dno , division , dname , room , building , dphone | member_of : facid , dno , appt_type | course : cid , cname , credits , instructor , days , hours , dno | minor_in : stuid , dno | enrolled_in : stuid , cid , grade | gradeconversion : lettergrade , gradepoint output: SELECT T2.Fname ,  T2.Lname FROM MINOR_IN AS T1 JOIN STUDENT AS T2 ON T1.StuID  =  T2.StuID WHERE T1.DNO  =  140\n Now please use valid SQLite to answer the following questions: What are the name of the countries where there is not a single car maker?",
    "Here is an examples including input and output:\n input: question: Which city does student Linda Smith live in? serialized_schema:  | restaurant_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | restaurant : resid , resname , address , rating | type_of_restaurant : resid , restypeid | restaurant_type : restypeid , restypename , restypedescription | visits_restaurant : stuid , resid , time , spent output: SELECT city_code FROM Student WHERE Fname = \"Linda\" AND Lname = \"Smith\";\n Now please use valid SQLite to answer the following questions: What are the names of the countries with no car makers?",
    "Here is an examples including input and output:\n input: question: Find the marketing region description of China? serialized_schema:  | cre_Drama_Workshop_Groups | ref_payment_methods : payment_method_code , payment_method_description | ref_service_types : service_type_code , parent_service_type_code , service_type_description | addresses : address_id , line_1 , line_2 , city_town , state_county , other_details | products : product_id , product_name , product_price , product_description , other_product_service_details | marketing_regions : marketing_region_code , marketing_region_name , marketing_region_descriptrion , other_details | clients : client_id , address_id , customer_email_address , customer_name , customer_phone , other_details | drama_workshop_groups : workshop_group_id , address_id , currency_code , marketing_region_code , store_name , store_phone , store_email_address , other_details | performers : performer_id , address_id , customer_name , customer_phone , customer_email_address , other_details | customers : customer_id , address_id , customer_name , customer_phone , customer_email_address , other_details | stores : store_id , address_id , marketing_region_code , store_name , store_phone , store_email_address , other_details | bookings : booking_id , customer_id , workshop_group_id , status_code , store_id , order_date , planned_delivery_date , actual_delivery_date , other_order_details | performers_in_bookings : order_id , performer_id | customer_orders : order_id , customer_id , store_id , order_date , planned_delivery_date , actual_delivery_date , other_order_details | order_items : order_item_id , order_id , product_id , order_quantity , other_item_details | invoices : invoice_id , order_id , payment_method_code , product_id , order_quantity , other_item_details , order_item_id | services : service_id , service_type_code , workshop_group_id , product_description , product_name , product_price , other_product_service_details | bookings_services : order_id , product_id | invoice_items : invoice_item_id , invoice_id , order_id , order_item_id , product_id , order_quantity , other_item_details output: SELECT Marketing_Region_Descriptrion FROM Marketing_Regions WHERE Marketing_Region_Name  =  \"China\"\n Now please use valid SQLite to answer the following questions: Which are the car makers which produce at least 2 models and more than 3 car makers ? List the id and the maker .",
    "Here is an examples including input and output:\n input: question: Whah are the name of each industry and the number of companies in that industry? serialized_schema:  | company_office | buildings : id , name , city , height , stories , status | companies : id , name , headquarters , industry , sales_billion , profits_billion , assets_billion , market_value_billion | office_locations : building_id , company_id , move_in_year output: SELECT Industry ,  COUNT(*) FROM Companies GROUP BY Industry\n Now please use valid SQLite to answer the following questions: What are the ids and makers of all car makers that produce at least 2 models and make more than 3 cars?",
    "Here is an examples including input and output:\n input: question: What country is the artist who made the fewest songs from? serialized_schema:  | music_1 | genre : g_name , rating , most_popular_in | artist : artist_name , country , gender , preferred_genre | files : f_id , artist_name , file_size , duration , formats | song : song_name , artist_name , country , f_id , genre_is , rating , languages , releasedate , resolution output: SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) LIMIT 1\n Now please use valid SQLite to answer the following questions: What are the id and names of the countries which have more than 3 car makers or produce the 'fiat' model?",
    "Here is an examples including input and output:\n input: question: What are the distinct first names for students with a grade point of 3.8 or above in at least one course? serialized_schema:  | college_3 | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building | department : dno , division , dname , room , building , dphone | member_of : facid , dno , appt_type | course : cid , cname , credits , instructor , days , hours , dno | minor_in : stuid , dno | enrolled_in : stuid , cid , grade | gradeconversion : lettergrade , gradepoint output: SELECT DISTINCT T3.Fname FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T2.gradepoint  >=  3.8\n Now please use valid SQLite to answer the following questions: What are the ids and names of all countries that either have more than 3 car makers or produce fiat model ?",
    "Here is an examples including input and output:\n input: question: What are the different location codes for documents? serialized_schema:  | cre_Doc_Tracking_DB | ref_document_types : document_type_code , document_type_name , document_type_description | ref_calendar : calendar_date , day_number | ref_locations : location_code , location_name , location_description | roles : role_code , role_name , role_description | all_documents : document_id , date_stored , document_type_code , document_name , document_description , other_details | employees : employee_id , role_code , employee_name , gender_mfu , date_of_birth , other_details | document_locations : document_id , location_code , date_in_location_from , date_in_locaton_to | documents_to_be_destroyed : document_id , destruction_authorised_by_employee_id , destroyed_by_employee_id , planned_destruction_date , actual_destruction_date , other_details output: SELECT DISTINCT location_code FROM Document_locations\n Now please use valid SQLite to answer the following questions: Which country does Airline \"JetBlue Airways\" belong to?",
    "Here is an examples including input and output:\n input: question: What are the different names for each station that has ever had 7 bikes available? serialized_schema:  | bike_1 | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code output: SELECT DISTINCT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id WHERE T2.bikes_available  =  7\n Now please use valid SQLite to answer the following questions: What country is Jetblue Airways affiliated with?",
    "Here is an examples including input and output:\n input: question: Show id and location of railways that are associated with more than one train. serialized_schema:  | railway | railway : railway_id , railway , builder , built , wheels , location , objectnumber | train : train_id , train_num , name , from , arrival , railway_id | manager : manager_id , name , country , working_year_starts , age , level | railway_manage : railway_id , manager_id , from_year output: SELECT T2.Railway_ID ,  T1.Location FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID GROUP BY T2.Railway_ID HAVING COUNT(*)  >  1\n Now please use valid SQLite to answer the following questions: What is the abbreviation of Airline \"JetBlue Airways\"?",
    "Here is an examples including input and output:\n input: question: What are the average price and score of wines grouped by appelation? serialized_schema:  | wine_1 | grapes : id , grape , color | appellations : no , appelation , county , state , area , isava | wine : no , grape , winery , appelation , state , name , year , price , score , cases , drink output: SELECT avg(Price) ,  avg(Score) ,  Appelation FROM WINE GROUP BY Appelation\n Now please use valid SQLite to answer the following questions: Which abbreviation corresponds to Jetblue Airways?",
    "Here is an examples including input and output:\n input: question: What is the id of the candidate who most recently accessed the course? serialized_schema:  | student_assessment | addresses : address_id , line_1 , line_2 , city , zip_postcode , state_province_county , country | people : person_id , first_name , middle_name , last_name , cell_mobile_number , email_address , login_name , password | students : student_id , student_details | courses : course_id , course_name , course_description , other_details | people_addresses : person_address_id , person_id , address_id , date_from , date_to | student_course_registrations : student_id , course_id , registration_date | student_course_attendance : student_id , course_id , date_of_attendance | candidates : candidate_id , candidate_details | candidate_assessments : candidate_id , qualification , assessment_date , asessment_outcome_code output: SELECT candidate_id FROM candidate_assessments ORDER BY assessment_date DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: List all airline names and their abbreviations in \"USA\".",
    "Here is an examples including input and output:\n input: question: Find the states which do not have any employee in their record. serialized_schema:  | customer_deliveries | products : product_id , product_name , product_price , product_description | addresses : address_id , address_details , city , zip_postcode , state_province_county , country | customers : customer_id , payment_method , customer_name , customer_phone , customer_email , date_became_customer | regular_orders : regular_order_id , distributer_id | regular_order_products : regular_order_id , product_id | actual_orders : actual_order_id , order_status_code , regular_order_id , actual_order_date | actual_order_products : actual_order_id , product_id | customer_addresses : customer_id , address_id , date_from , address_type , date_to | delivery_routes : route_id , route_name , other_route_details | delivery_route_locations : location_code , route_id , location_address_id , location_name | trucks : truck_id , truck_licence_number , truck_details | employees : employee_id , employee_address_id , employee_name , employee_phone | order_deliveries : location_code , actual_order_id , delivery_status_code , driver_employee_id , truck_id , delivery_date output: SELECT state_province_county FROM addresses WHERE address_id NOT IN (SELECT employee_address_id FROM Employees)\n Now please use valid SQLite to answer the following questions: What are the airline names and abbreviations for airlines in the USA?",
    "Here is an examples including input and output:\n input: question: Report the distinct president vote and the vice president vote. serialized_schema:  | voter_2 | student : stuid , lname , fname , age , sex , major , advisor , city_code | voting_record : stuid , registration_date , election_cycle , president_vote , vice_president_vote , secretary_vote , treasurer_vote , class_president_vote , class_senator_vote output: SELECT DISTINCT President_Vote ,  VICE_President_Vote FROM VOTING_RECORD\n Now please use valid SQLite to answer the following questions: List the airport code and name in the city of Anthony.",
    "Here is an examples including input and output:\n input: question: List the company name and rank for all companies in the decreasing order of their sales. serialized_schema:  | gas_company | company : company_id , rank , company , headquarters , main_industry , sales_billion , profits_billion , assets_billion , market_value | gas_station : station_id , open_year , location , manager_name , vice_manager_name , representative_name | station_company : station_id , company_id , rank_of_the_year output: SELECT company ,  rank FROM company ORDER BY Sales_billion DESC\n Now please use valid SQLite to answer the following questions: Give the airport code and airport name corresonding to the city Anthony.",
    "Here is an examples including input and output:\n input: question: When do all the researcher role staff start to work, and when do they stop working? serialized_schema:  | tracking_grants_for_research | document_types : document_type_code , document_description | documents : document_id , document_type_code , grant_id , sent_date , response_received_date , other_details | grants : grant_id , organisation_id , grant_amount , grant_start_date , grant_end_date , other_details | organisation_types : organisation_type , organisation_type_description | organisations : organisation_id , organisation_type , organisation_details | project_outcomes : project_id , outcome_code , outcome_details | project_staff : staff_id , project_id , role_code , date_from , date_to , other_details | projects : project_id , organisation_id , project_details | research_outcomes : outcome_code , outcome_description | research_staff : staff_id , employer_organisation_id , staff_details | staff_roles : role_code , role_description | tasks : task_id , project_id , task_details , eg agree objectives output: SELECT date_from ,  date_to FROM Project_Staff WHERE role_code  =  'researcher'\n Now please use valid SQLite to answer the following questions: How many airlines do we have?",
    "Here is an examples including input and output:\n input: question: What is the oldest log id and its corresponding problem id? serialized_schema:  | tracking_software_problems | problem_category_codes : problem_category_code , problem_category_description | problem_log : problem_log_id , assigned_to_staff_id , problem_id , problem_category_code , problem_status_code , log_entry_date , log_entry_description , log_entry_fix , other_log_details | problem_status_codes : problem_status_code , problem_status_description | product : product_id , product_name , product_details | staff : staff_id , staff_first_name , staff_last_name , other_staff_details | problems : problem_id , product_id , closure_authorised_by_staff_id , reported_by_staff_id , date_problem_reported , date_problem_closed , problem_description , other_problem_details output: SELECT problem_log_id ,  problem_id FROM problem_log ORDER BY log_entry_date LIMIT 1\n Now please use valid SQLite to answer the following questions: What is the total number of airlines?",
    "Here is an examples including input and output:\n input: question: List the name of artworks whose type is not \"Program Talent Show\". serialized_schema:  | entertainment_awards | festival_detail : festival_id , festival_name , chair_name , location , year , num_of_audience | artwork : artwork_id , type , name | nomination : artwork_id , festival_id , result output: SELECT Name FROM artwork WHERE TYPE != \"Program Talent Show\"\n Now please use valid SQLite to answer the following questions: How many airports do we have?",
    "Here is an examples including input and output:\n input: question: Find the total number of hours have done for all students in each department. serialized_schema:  | college_1 | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num output: SELECT sum(stu_hrs) ,  dept_code FROM student GROUP BY dept_code\n Now please use valid SQLite to answer the following questions: Return the number of  airports.",
    "Here is an examples including input and output:\n input: question: Which authors have first name \"Amal\"? List their last names. serialized_schema:  | icfp_1 | inst : instid , name , country | authors : authid , lname , fname | papers : paperid , title | authorship : authid , instid , paperid , authorder output: SELECT lname FROM authors WHERE fname  =  \"Amal\"\n Now please use valid SQLite to answer the following questions: How many flights do we have?",
    "Here is an examples including input and output:\n input: question: What are the dates for the documents with both 'GV' type and 'SF' type expenses? serialized_schema:  | cre_Docs_and_Epenses | ref_document_types : document_type_code , document_type_name , document_type_description | ref_budget_codes : budget_type_code , budget_type_description | projects : project_id , project_details | documents : document_id , document_type_code , project_id , document_date , document_name , document_description , other_details | statements : statement_id , statement_details | documents_with_expenses : document_id , budget_type_code , document_details | accounts : account_id , statement_id , account_details output: SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T2.budget_type_code  =  'GV' INTERSECT SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T2.budget_type_code  =  'SF'\n Now please use valid SQLite to answer the following questions: Return the number of flights.",
    "Here is an examples including input and output:\n input: question: Which country is the airport that has the highest altitude located in? serialized_schema:  | flight_4 | routes : rid , dst_apid , dst_ap , src_apid , src_ap , alid , airline , codeshare | airports : apid , name , city , country , x , y , elevation , iata , icao | airlines : alid , name , iata , icao , callsign , country , active output: SELECT country FROM airports ORDER BY elevation DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: Which airline has abbreviation 'UAL'?",
    "Here is an examples including input and output:\n input: question: Find all the forenames of distinct drivers who won in position 1 as driver standing and had more than 20 points? serialized_schema:  | formula_1 | circuits : circuitid , circuitref , name , location , country , lat , lng , alt , url | races : raceid , year , round , circuitid , name , date , time , url | drivers : driverid , driverref , number , code , forename , surname , dob , nationality , url | status : statusid , status | seasons : year , url | constructors : constructorid , constructorref , name , nationality , url | constructorstandings : constructorstandingsid , raceid , constructorid , points , position , positiontext , wins | results : resultid , raceid , driverid , constructorid , number , grid , position , positiontext , positionorder , points , laps , time , milliseconds , fastestlap , rank , fastestlaptime , fastestlapspeed , statusid | driverstandings : driverstandingsid , raceid , driverid , points , position , positiontext , wins | constructorresults : constructorresultsid , raceid , constructorid , points , status | qualifying : qualifyid , raceid , driverid , constructorid , number , position , q1 , q2 , q3 | pitstops : raceid , driverid , stop , lap , time , duration , milliseconds | laptimes : raceid , driverid , lap , position , time , milliseconds output: SELECT DISTINCT T1.forename FROM drivers AS T1 JOIN driverstandings AS T2 ON T1.driverid = T2.driverid WHERE T2.position = 1 AND T2.wins = 1 AND T2.points > 20\n Now please use valid SQLite to answer the following questions: Give the airline with abbreviation 'UAL'.",
    "Here is an examples including input and output:\n input: question: What are the department names, cities, and state provinces for each department? serialized_schema:  | hr_1 | regions : region_id , region_name | countries : country_id , country_name , region_id | departments : department_id , department_name , manager_id , location_id | jobs : job_id , job_title , min_salary , max_salary | employees : employee_id , first_name , last_name , email , phone_number , hire_date , job_id , salary , commission_pct , manager_id , department_id | job_history : employee_id , start_date , end_date , job_id , department_id | locations : location_id , street_address , postal_code , city , state_province , country_id output: SELECT T1.department_name ,  T2.city ,  T2.state_province FROM departments AS T1 JOIN locations AS T2 ON T2.location_id  =  T1.location_id\n Now please use valid SQLite to answer the following questions: How many airlines are from USA?",
    "Here is an examples including input and output:\n input: question: How many climbers are from each country? serialized_schema:  | climbing | mountain : mountain_id , name , height , prominence , range , country | climber : climber_id , name , country , time , points , mountain_id output: SELECT Country ,  COUNT(*) FROM climber GROUP BY Country\n Now please use valid SQLite to answer the following questions: Return the number of airlines in the USA.",
    "Here is an examples including input and output:\n input: question: What are the names of all wines produced in 2008? serialized_schema:  | wine_1 | grapes : id , grape , color | appellations : no , appelation , county , state , area , isava | wine : no , grape , winery , appelation , state , name , year , price , score , cases , drink output: SELECT Name FROM WINE WHERE YEAR  =  \"2008\"\n Now please use valid SQLite to answer the following questions: Which city and country is the Alton airport at?",
    "Here is an examples including input and output:\n input: question: How many employees do we have? serialized_schema:  | flight_1 | flight : flno , origin , destination , distance , departure_date , arrival_date , price , aid | aircraft : aid , name , distance | employee : eid , name , salary | certificate : eid , aid output: SELECT count(*) FROM Employee\n Now please use valid SQLite to answer the following questions: Give the city and country for the Alton airport.",
    "Here is an examples including input and output:\n input: question: Return the name of the marketing region the store Rob Dinning is located in. serialized_schema:  | cre_Drama_Workshop_Groups | ref_payment_methods : payment_method_code , payment_method_description | ref_service_types : service_type_code , parent_service_type_code , service_type_description | addresses : address_id , line_1 , line_2 , city_town , state_county , other_details | products : product_id , product_name , product_price , product_description , other_product_service_details | marketing_regions : marketing_region_code , marketing_region_name , marketing_region_descriptrion , other_details | clients : client_id , address_id , customer_email_address , customer_name , customer_phone , other_details | drama_workshop_groups : workshop_group_id , address_id , currency_code , marketing_region_code , store_name , store_phone , store_email_address , other_details | performers : performer_id , address_id , customer_name , customer_phone , customer_email_address , other_details | customers : customer_id , address_id , customer_name , customer_phone , customer_email_address , other_details | stores : store_id , address_id , marketing_region_code , store_name , store_phone , store_email_address , other_details | bookings : booking_id , customer_id , workshop_group_id , status_code , store_id , order_date , planned_delivery_date , actual_delivery_date , other_order_details | performers_in_bookings : order_id , performer_id | customer_orders : order_id , customer_id , store_id , order_date , planned_delivery_date , actual_delivery_date , other_order_details | order_items : order_item_id , order_id , product_id , order_quantity , other_item_details | invoices : invoice_id , order_id , payment_method_code , product_id , order_quantity , other_item_details , order_item_id | services : service_id , service_type_code , workshop_group_id , product_description , product_name , product_price , other_product_service_details | bookings_services : order_id , product_id | invoice_items : invoice_item_id , invoice_id , order_id , order_item_id , product_id , order_quantity , other_item_details output: SELECT T1.Marketing_Region_Name FROM Marketing_Regions AS T1 JOIN Stores AS T2 ON T1.Marketing_Region_Code  =  T2.Marketing_Region_Code WHERE T2.Store_Name  =  \"Rob Dinning\"\n Now please use valid SQLite to answer the following questions: What is the airport name for airport 'AKO'?",
    "Here is an examples including input and output:\n input: question: Show the transaction type code that occurs the fewest times. serialized_schema:  | tracking_share_transactions | investors : investor_id , investor_details | lots : lot_id , investor_id , lot_details | ref_transaction_types : transaction_type_code , transaction_type_description | transactions : transaction_id , investor_id , transaction_type_code , date_of_transaction , amount_of_transaction , share_count , other_details | sales : sales_transaction_id , sales_details | purchases : purchase_transaction_id , purchase_details | transactions_lots : transaction_id , lot_id output: SELECT transaction_type_code FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY COUNT(*) ASC LIMIT 1\n Now please use valid SQLite to answer the following questions: Return the name of the airport with code 'AKO'.",
    "Here is an examples including input and output:\n input: question: What are the languages that are used most often in songs? serialized_schema:  | music_1 | genre : g_name , rating , most_popular_in | artist : artist_name , country , gender , preferred_genre | files : f_id , artist_name , file_size , duration , formats | song : song_name , artist_name , country , f_id , genre_is , rating , languages , releasedate , resolution output: SELECT languages FROM song GROUP BY languages ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: What are airport names at City 'Aberdeen'?",
    "Here is an examples including input and output:\n input: question: What are the name and primarily affiliated department name of each physician? serialized_schema:  | hospital_1 | physician : employeeid , name , position , ssn | department : departmentid , name , head | affiliated_with : physician , department , primaryaffiliation | procedures : code , name , cost | trained_in : physician , treatment , certificationdate , certificationexpires | patient : ssn , name , address , phone , insuranceid , pcp | nurse : employeeid , name , position , registered , ssn | appointment : appointmentid , patient , prepnurse , physician , start , end , examinationroom | medication : code , name , brand , description | prescribes : physician , patient , medication , date , appointment , dose | block : blockfloor , blockcode | room : roomnumber , roomtype , blockfloor , blockcode , unavailable | on_call : nurse , blockfloor , blockcode , oncallstart , oncallend | stay : stayid , patient , room , staystart , stayend | undergoes : patient , procedures , stay , dateundergoes , physician , assistingnurse output: SELECT T1.name ,  T3.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T2.PrimaryAffiliation  =  1\n Now please use valid SQLite to answer the following questions: What are the names of airports in Aberdeen?",
    "Here is an examples including input and output:\n input: question: What is the total revenue of companies started by founder? serialized_schema:  | manufactory_1 | manufacturers : code , name , headquarter , founder , revenue | products : code , name , price , manufacturer output: SELECT sum(revenue) ,  founder FROM manufacturers GROUP BY founder\n Now please use valid SQLite to answer the following questions: How many flights depart from 'APG'?",
    "Here is an examples including input and output:\n input: question: What are the titles of all the Aerosmith albums? serialized_schema:  | store_1 | artists : id , name | sqlite_sequence : name , seq | albums : id , title , artist_id | employees : id , last_name , first_name , title , reports_to , birth_date , hire_date , address , city , state , country , postal_code , phone , fax , email | customers : id , first_name , last_name , company , address , city , state , country , postal_code , phone , fax , email , support_rep_id | genres : id , name | invoices : id , customer_id , invoice_date , billing_address , billing_city , billing_state , billing_country , billing_postal_code , total | media_types : id , name | tracks : id , name , album_id , media_type_id , genre_id , composer , milliseconds , bytes , unit_price | invoice_lines : id , invoice_id , track_id , unit_price , quantity | playlists : id , name | playlist_tracks : playlist_id , track_id output: SELECT T1.title FROM albums AS T1 JOIN artists AS T2 ON  T1.artist_id = T2.id WHERE T2.name = \"Aerosmith\";\n Now please use valid SQLite to answer the following questions: Count the number of flights departing from 'APG'.",
    "Here is an examples including input and output:\n input: question: For each zip code, return the average mean temperature of August there. serialized_schema:  | bike_1 | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code output: SELECT zip_code  ,  avg(mean_temperature_f) FROM weather WHERE date LIKE \"8/%\" GROUP BY zip_code\n Now please use valid SQLite to answer the following questions: How many flights have destination ATO?",
    "Here is an examples including input and output:\n input: question: What are the names of all songs in English? serialized_schema:  | music_1 | genre : g_name , rating , most_popular_in | artist : artist_name , country , gender , preferred_genre | files : f_id , artist_name , file_size , duration , formats | song : song_name , artist_name , country , f_id , genre_is , rating , languages , releasedate , resolution output: SELECT song_name FROM song WHERE languages  =  \"english\"\n Now please use valid SQLite to answer the following questions: Count the number of flights into ATO.",
    "Here is an examples including input and output:\n input: question: Show all statement id and the number of accounts for each statement. serialized_schema:  | cre_Docs_and_Epenses | ref_document_types : document_type_code , document_type_name , document_type_description | ref_budget_codes : budget_type_code , budget_type_description | projects : project_id , project_details | documents : document_id , document_type_code , project_id , document_date , document_name , document_description , other_details | statements : statement_id , statement_details | documents_with_expenses : document_id , budget_type_code , document_details | accounts : account_id , statement_id , account_details output: SELECT STATEMENT_ID ,  count(*) FROM Accounts GROUP BY STATEMENT_ID\n Now please use valid SQLite to answer the following questions: How many flights depart from City Aberdeen?",
    "Here is an examples including input and output:\n input: question: What are the case burdens of counties, ordered descending by population? serialized_schema:  | county_public_safety | county_public_safety : county_id , name , population , police_officers , residents_per_officer , case_burden , crime_rate , police_force , location | city : city_id , county_id , name , white , black , amerindian , asian , multiracial , hispanic output: SELECT Case_burden FROM county_public_safety ORDER BY Population DESC\n Now please use valid SQLite to answer the following questions: Return the number of flights departing from Aberdeen.",
    "Here is an examples including input and output:\n input: question: What is the total salary expenses of team Boston Red Stockings in 2010? serialized_schema:  | baseball_1 | all_star : player_id , year , game_num , game_id , team_id , league_id , gp , starting_pos | appearances : year , team_id , league_id , player_id , g_all , gs , g_batting , g_defense , g_p , g_c , g_1b , g_2b , g_3b , g_ss , g_lf , g_cf , g_rf , g_of , g_dh , g_ph , g_pr | manager_award : player_id , award_id , year , league_id , tie , notes | player_award : player_id , award_id , year , league_id , tie , notes | manager_award_vote : award_id , year , league_id , player_id , points_won , points_max , votes_first | player_award_vote : award_id , year , league_id , player_id , points_won , points_max , votes_first | batting : player_id , year , stint , team_id , league_id , g , ab , r , h , double , triple , hr , rbi , sb , cs , bb , so , ibb , hbp , sh , sf , g_idp | batting_postseason : year , round , player_id , team_id , league_id , g , ab , r , h , double , triple , hr , rbi , sb , cs , bb , so , ibb , hbp , sh , sf , g_idp | player_college : player_id , college_id , year | fielding : player_id , year , stint , team_id , league_id , pos , g , gs , inn_outs , po , a , e , dp , pb , wp , sb , cs , zr | fielding_outfield : player_id , year , stint , glf , gcf , grf | fielding_postseason : player_id , year , team_id , league_id , round , pos , g , gs , inn_outs , po , a , e , dp , tp , pb , sb , cs | hall_of_fame : player_id , yearid , votedby , ballots , needed , votes , inducted , category , needed_note | home_game : year , league_id , team_id , park_id , span_first , span_last , games , openings , attendance | manager : player_id , year , team_id , league_id , inseason , g , w , l , rank , plyr_mgr | manager_half : player_id , year , team_id , league_id , inseason , half , g , w , l , rank | player : player_id , birth_year , birth_month , birth_day , birth_country , birth_state , birth_city , death_year , death_month , death_day , death_country , death_state , death_city , name_first , name_last , name_given , weight , height , bats , throws , debut , final_game , retro_id , bbref_id | park : park_id , park_name , park_alias , city , state , country | pitching : player_id , year , stint , team_id , league_id , w , l , g , gs , cg , sho , sv , ipouts , h , er , hr , bb , so , baopp , era , ibb , wp , hbp , bk , bfp , gf , r , sh , sf , g_idp | pitching_postseason : player_id , year , round , team_id , league_id , w , l , g , gs , cg , sho , sv , ipouts , h , er , hr , bb , so , baopp , era , ibb , wp , hbp , bk , bfp , gf , r , sh , sf , g_idp | salary : year , team_id , league_id , player_id , salary | college : college_id , name_full , city , state , country | postseason : year , round , team_id_winner , league_id_winner , team_id_loser , league_id_loser , wins , losses , ties | team : year , league_id , team_id , franchise_id , div_id , rank , g , ghome , w , l , div_win , wc_win , lg_win , ws_win , r , ab , h , double , triple , hr , bb , so , sb , cs , hbp , sf , ra , er , era , cg , sho , sv , ipouts , ha , hra , bba , soa , e , dp , fp , name , park , attendance , bpf , ppf , team_id_br , team_id_lahman45 , team_id_retro | team_franchise : franchise_id , franchise_name , active , na_assoc | team_half : year , league_id , team_id , half , div_id , div_win , rank , g , w , l output: SELECT sum(T1.salary) FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  = 'Boston Red Stockings' AND T1.year  =  2010\n Now please use valid SQLite to answer the following questions: How many flights arriving in Aberdeen city?",
    "Here is an examples including input and output:\n input: question: List the names of buildings that have no company office. serialized_schema:  | company_office | buildings : id , name , city , height , stories , status | companies : id , name , headquarters , industry , sales_billion , profits_billion , assets_billion , market_value_billion | office_locations : building_id , company_id , move_in_year output: SELECT name FROM buildings WHERE id NOT IN (SELECT building_id FROM Office_locations)\n Now please use valid SQLite to answer the following questions: Return the number of flights arriving in Aberdeen.",
    "Here is an examples including input and output:\n input: question: Show different carriers of phones together with the number of phones with each carrier. serialized_schema:  | phone_market | phone : name , phone_id , memory_in_g , carrier , price | market : market_id , district , num_of_employees , num_of_shops , ranking | phone_market : market_id , phone_id , num_of_stock output: SELECT Carrier ,  COUNT(*) FROM phone GROUP BY Carrier\n Now please use valid SQLite to answer the following questions: How many flights depart from City 'Aberdeen' and have destination City 'Ashley'?",
    "Here is an examples including input and output:\n input: question: List the clubs having \"Davis Steven\" as a member. serialized_schema:  | club_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | club : clubid , clubname , clubdesc , clublocation | member_of_club : stuid , clubid , position output: SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  \"Davis\" AND t3.lname  =  \"Steven\"\n Now please use valid SQLite to answer the following questions: How many flights fly from Aberdeen to Ashley?",
    "Here is an examples including input and output:\n input: question: Show the institution type with an institution founded after 1990 and an institution with at least 1000 enrollment. serialized_schema:  | protein_institute | building : building_id , name , street_address , years_as_tallest , height_feet , floors | institution : institution_id , institution , location , founded , type , enrollment , team , primary_conference , building_id | protein : common_name , protein_name , divergence_from_human_lineage , accession_number , sequence_length , sequence_identity_to_human_protein , institution_id output: SELECT TYPE FROM institution WHERE founded  >  1990 AND enrollment  >=  1000\n Now please use valid SQLite to answer the following questions: How many flights does airline 'JetBlue Airways' have?",
    "Here is an examples including input and output:\n input: question: list the local authorities and services provided by all stations. serialized_schema:  | station_weather | train : id , train_number , name , origin , destination , time , interval | station : id , network_name , services , local_authority | route : train_id , station_id | weekly_weather : station_id , day_of_week , high_temperature , low_temperature , precipitation , wind_speed_mph output: SELECT local_authority ,  services FROM station\n Now please use valid SQLite to answer the following questions: Give the number of Jetblue Airways flights.",
    "Here is an examples including input and output:\n input: question: Show the apartment numbers of apartments with unit status availability of both 0 and 1. serialized_schema:  | apartment_rentals | apartment_buildings : building_id , building_short_name , building_full_name , building_description , building_address , building_manager , building_phone | apartments : apt_id , building_id , apt_type_code , apt_number , bathroom_count , bedroom_count , room_count | apartment_facilities : apt_id , facility_code | guests : guest_id , gender_code , guest_first_name , guest_last_name , date_of_birth | apartment_bookings : apt_booking_id , apt_id , guest_id , booking_status_code , booking_start_date , booking_end_date | view_unit_status : apt_id , apt_booking_id , status_date , available_yn output: SELECT T1.apt_number FROM Apartments AS T1 JOIN View_Unit_Status AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.available_yn  =  0 INTERSECT SELECT T1.apt_number FROM Apartments AS T1 JOIN View_Unit_Status AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.available_yn  =  1\n Now please use valid SQLite to answer the following questions: How many 'United Airlines' flights go to Airport 'ASY'?",
    "Here is an examples including input and output:\n input: question: Find the id of the appointment with the most recent start date? serialized_schema:  | hospital_1 | physician : employeeid , name , position , ssn | department : departmentid , name , head | affiliated_with : physician , department , primaryaffiliation | procedures : code , name , cost | trained_in : physician , treatment , certificationdate , certificationexpires | patient : ssn , name , address , phone , insuranceid , pcp | nurse : employeeid , name , position , registered , ssn | appointment : appointmentid , patient , prepnurse , physician , start , end , examinationroom | medication : code , name , brand , description | prescribes : physician , patient , medication , date , appointment , dose | block : blockfloor , blockcode | room : roomnumber , roomtype , blockfloor , blockcode , unavailable | on_call : nurse , blockfloor , blockcode , oncallstart , oncallend | stay : stayid , patient , room , staystart , stayend | undergoes : patient , procedures , stay , dateundergoes , physician , assistingnurse output: SELECT appointmentid FROM appointment ORDER BY START DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: Count the number of United Airlines flights arriving in ASY Airport.",
    "Here is an examples including input and output:\n input: question: Return the most common full name among all actors. serialized_schema:  | sakila_1 | actor : actor_id , first_name , last_name , last_update | address : address_id , address , address2 , district , city_id , postal_code , phone , last_update | category : category_id , name , last_update | city : city_id , city , country_id , last_update | country : country_id , country , last_update | customer : customer_id , store_id , first_name , last_name , email , address_id , active , create_date , last_update | film : film_id , title , description , release_year , language_id , original_language_id , rental_duration , rental_rate , length , replacement_cost , rating , special_features , last_update | film_actor : actor_id , film_id , last_update | film_category : film_id , category_id , last_update | film_text : film_id , title , description | inventory : inventory_id , film_id , store_id , last_update | language : language_id , name , last_update | payment : payment_id , customer_id , staff_id , rental_id , amount , payment_date , last_update | rental : rental_id , rental_date , inventory_id , customer_id , return_date , staff_id , last_update | staff : staff_id , first_name , last_name , address_id , picture , email , store_id , active , username , password , last_update | store : store_id , manager_staff_id , address_id , last_update output: SELECT first_name ,  last_name FROM actor GROUP BY first_name ,  last_name ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: How many 'United Airlines' flights depart from Airport 'AHD'?",
    "Here is an examples including input and output:\n input: question: Return the characters and durations for each actor. serialized_schema:  | musical | musical : musical_id , name , year , award , category , nominee , result | actor : actor_id , name , musical_id , character , duration , age output: SELECT Character ,  Duration FROM actor\n Now please use valid SQLite to answer the following questions: Return the number of United Airlines flights leaving from AHD Airport.",
    "Here is an examples including input and output:\n input: question: Find the names of reviewers who had given higher than 3 star ratings. serialized_schema:  | movie_1 | movie : mid , title , year , director | reviewer : rid , name | rating : rid , mid , stars , ratingdate output: SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T1.stars  >  3\n Now please use valid SQLite to answer the following questions: How many United Airlines flights go to City 'Aberdeen'?",
    "Here is an examples including input and output:\n input: question: Show the official names of the cities that have hosted more than one competition. serialized_schema:  | farm | city : city_id , official_name , status , area_km_2 , population , census_ranking | farm : farm_id , year , total_horses , working_horses , total_cattle , oxen , bulls , cows , pigs , sheep_and_goats | farm_competition : competition_id , year , theme , host_city_id , hosts | competition_record : competition_id , farm_id , rank output: SELECT T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT(*)  >  1\n Now please use valid SQLite to answer the following questions: Count the number of United Airlines flights that arrive in Aberdeen.",
    "Here is an examples including input and output:\n input: question: What are the ids and full names of customers who hold two or more cards? serialized_schema:  | customers_card_transactions | accounts : account_id , customer_id , account_name , other_account_details | customers : customer_id , customer_first_name , customer_last_name , customer_address , customer_phone , customer_email , other_customer_details | customers_cards : card_id , customer_id , card_type_code , card_number , date_valid_from , date_valid_to , other_card_details | financial_transactions : transaction_id , previous_transaction_id , account_id , card_id , transaction_type , transaction_date , transaction_amount , transaction_comment , other_transaction_details output: SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2\n Now please use valid SQLite to answer the following questions: Which city has most number of arriving flights?",
    "Here is an examples including input and output:\n input: question: What is the title of a course that is listed in both the Statistics and Psychology departments? serialized_schema:  | college_2 | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id output: SELECT title FROM course WHERE dept_name  =  'Statistics' INTERSECT SELECT title FROM course WHERE dept_name  =  'Psychology'\n Now please use valid SQLite to answer the following questions: Which city has the most frequent destination airport?",
    "Here is an examples including input and output:\n input: question: What are the maximum and minimum number of silver medals for clubs. serialized_schema:  | sports_competition | club : club_id , name , region , start_year | club_rank : rank , club_id , gold , silver , bronze , total | player : player_id , name , position , club_id , apps , tries , goals , points | competition : competition_id , year , competition_type , country | competition_result : competition_id , club_id_1 , club_id_2 , score output: SELECT max(Silver) ,  min(Silver) FROM club_rank\n Now please use valid SQLite to answer the following questions: Which city has most number of departing flights?",
    "Here is an examples including input and output:\n input: question: What are the titles of all movies that were not reviewed by Chris Jackson? serialized_schema:  | movie_1 | movie : mid , title , year , director | reviewer : rid , name | rating : rid , mid , stars , ratingdate output: SELECT DISTINCT title FROM Movie EXCEPT SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Chris Jackson'\n Now please use valid SQLite to answer the following questions: Which city is the most frequent source airport?",
    "Here is an examples including input and output:\n input: question: What are the first names of all professors who teach more than one class? serialized_schema:  | college_1 | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num output: SELECT T2.emp_fname FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num GROUP BY T1.prof_num HAVING count(*)  >  1\n Now please use valid SQLite to answer the following questions: What is the code of airport that has the highest number of flights?",
    "Here is an examples including input and output:\n input: question: Compute the total amount of payment processed. serialized_schema:  | insurance_policies | customers : customer_id , customer_details | customer_policies : policy_id , customer_id , policy_type_code , start_date , end_date | claims : claim_id , policy_id , date_claim_made , date_claim_settled , amount_claimed , amount_settled | settlements : settlement_id , claim_id , date_claim_made , date_claim_settled , amount_claimed , amount_settled , customer_policy_id | payments : payment_id , settlement_id , payment_method_code , date_payment_made , amount_payment output: SELECT sum(Amount_Payment) FROM Payments\n Now please use valid SQLite to answer the following questions: What is the airport code of the airport with the most flights?",
    "Here is an examples including input and output:\n input: question: How many ships are there? serialized_schema:  | ship_mission | mission : mission_id , ship_id , code , launched_year , location , speed_knots , fate | ship : ship_id , name , type , nationality , tonnage output: SELECT count(*) FROM ship\n Now please use valid SQLite to answer the following questions: What is the code of airport that has fewest number of flights?",
    "Here is an examples including input and output:\n input: question: List all info about all people. serialized_schema:  | candidate_poll | candidate : candidate_id , people_id , poll_source , date , support_rate , consider_rate , oppose_rate , unsure_rate | people : people_id , sex , name , date_of_birth , height , weight output: SELECT * FROM people\n Now please use valid SQLite to answer the following questions: Give the code of the airport with the least flights.",
    "Here is an examples including input and output:\n input: question: Find the name and price of the product that has been ordered the greatest number of times. serialized_schema:  | customer_deliveries | products : product_id , product_name , product_price , product_description | addresses : address_id , address_details , city , zip_postcode , state_province_county , country | customers : customer_id , payment_method , customer_name , customer_phone , customer_email , date_became_customer | regular_orders : regular_order_id , distributer_id | regular_order_products : regular_order_id , product_id | actual_orders : actual_order_id , order_status_code , regular_order_id , actual_order_date | actual_order_products : actual_order_id , product_id | customer_addresses : customer_id , address_id , date_from , address_type , date_to | delivery_routes : route_id , route_name , other_route_details | delivery_route_locations : location_code , route_id , location_address_id , location_name | trucks : truck_id , truck_licence_number , truck_details | employees : employee_id , employee_address_id , employee_name , employee_phone | order_deliveries : location_code , actual_order_id , delivery_status_code , driver_employee_id , truck_id , delivery_date output: SELECT t1.product_name ,   t1.product_price FROM products AS t1 JOIN regular_order_products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t2.product_id ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: Which airline has most number of flights?",
    "Here is an examples including input and output:\n input: question: What are the manager's first name, last name and id who won the most manager award? serialized_schema:  | baseball_1 | all_star : player_id , year , game_num , game_id , team_id , league_id , gp , starting_pos | appearances : year , team_id , league_id , player_id , g_all , gs , g_batting , g_defense , g_p , g_c , g_1b , g_2b , g_3b , g_ss , g_lf , g_cf , g_rf , g_of , g_dh , g_ph , g_pr | manager_award : player_id , award_id , year , league_id , tie , notes | player_award : player_id , award_id , year , league_id , tie , notes | manager_award_vote : award_id , year , league_id , player_id , points_won , points_max , votes_first | player_award_vote : award_id , year , league_id , player_id , points_won , points_max , votes_first | batting : player_id , year , stint , team_id , league_id , g , ab , r , h , double , triple , hr , rbi , sb , cs , bb , so , ibb , hbp , sh , sf , g_idp | batting_postseason : year , round , player_id , team_id , league_id , g , ab , r , h , double , triple , hr , rbi , sb , cs , bb , so , ibb , hbp , sh , sf , g_idp | player_college : player_id , college_id , year | fielding : player_id , year , stint , team_id , league_id , pos , g , gs , inn_outs , po , a , e , dp , pb , wp , sb , cs , zr | fielding_outfield : player_id , year , stint , glf , gcf , grf | fielding_postseason : player_id , year , team_id , league_id , round , pos , g , gs , inn_outs , po , a , e , dp , tp , pb , sb , cs | hall_of_fame : player_id , yearid , votedby , ballots , needed , votes , inducted , category , needed_note | home_game : year , league_id , team_id , park_id , span_first , span_last , games , openings , attendance | manager : player_id , year , team_id , league_id , inseason , g , w , l , rank , plyr_mgr | manager_half : player_id , year , team_id , league_id , inseason , half , g , w , l , rank | player : player_id , birth_year , birth_month , birth_day , birth_country , birth_state , birth_city , death_year , death_month , death_day , death_country , death_state , death_city , name_first , name_last , name_given , weight , height , bats , throws , debut , final_game , retro_id , bbref_id | park : park_id , park_name , park_alias , city , state , country | pitching : player_id , year , stint , team_id , league_id , w , l , g , gs , cg , sho , sv , ipouts , h , er , hr , bb , so , baopp , era , ibb , wp , hbp , bk , bfp , gf , r , sh , sf , g_idp | pitching_postseason : player_id , year , round , team_id , league_id , w , l , g , gs , cg , sho , sv , ipouts , h , er , hr , bb , so , baopp , era , ibb , wp , hbp , bk , bfp , gf , r , sh , sf , g_idp | salary : year , team_id , league_id , player_id , salary | college : college_id , name_full , city , state , country | postseason : year , round , team_id_winner , league_id_winner , team_id_loser , league_id_loser , wins , losses , ties | team : year , league_id , team_id , franchise_id , div_id , rank , g , ghome , w , l , div_win , wc_win , lg_win , ws_win , r , ab , h , double , triple , hr , bb , so , sb , cs , hbp , sf , ra , er , era , cg , sho , sv , ipouts , ha , hra , bba , soa , e , dp , fp , name , park , attendance , bpf , ppf , team_id_br , team_id_lahman45 , team_id_retro | team_franchise : franchise_id , franchise_name , active , na_assoc | team_half : year , league_id , team_id , half , div_id , div_win , rank , g , w , l output: SELECT T1.name_first ,  T1.name_last ,  T2.player_id FROM player AS T1 JOIN manager_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T2.player_id ORDER BY count(*) DESC LIMIT 1;\n Now please use valid SQLite to answer the following questions: What airline serves the most flights?",
    "Here is an examples including input and output:\n input: question: What are the distinct address type codes for all customer addresses? serialized_schema:  | customers_campaigns_ecommerce | premises : premise_id , premises_type , premise_details | products : product_id , product_category , product_name | customers : customer_id , payment_method , customer_name , customer_phone , customer_email , customer_address , customer_login , customer_password | mailshot_campaigns : mailshot_id , product_category , mailshot_name , mailshot_start_date , mailshot_end_date | customer_addresses : customer_id , premise_id , date_address_from , address_type_code , date_address_to | customer_orders : order_id , customer_id , order_status_code , shipping_method_code , order_placed_datetime , order_delivered_datetime , order_shipping_charges | mailshot_customers : mailshot_id , customer_id , outcome_code , mailshot_customer_date | order_items : item_id , order_item_status_code , order_id , product_id , item_status_code , item_delivered_datetime , item_order_quantity output: SELECT DISTINCT address_type_code FROM customer_addresses\n Now please use valid SQLite to answer the following questions: Find the abbreviation and country of the airline that has fewest number of flights?",
    "Here is an examples including input and output:\n input: question: Find the number of trains for each station, as well as the station network name and services. serialized_schema:  | station_weather | train : id , train_number , name , origin , destination , time , interval | station : id , network_name , services , local_authority | route : train_id , station_id | weekly_weather : station_id , day_of_week , high_temperature , low_temperature , precipitation , wind_speed_mph output: SELECT count(*) ,  t1.network_name ,  t1.services FROM station AS t1 JOIN route AS t2 ON t1.id  =  t2.station_id GROUP BY t2.station_id\n Now please use valid SQLite to answer the following questions: What is the abbreviation of the airilne has the fewest flights and what country is it in?",
    "Here is an examples including input and output:\n input: question: List all the policy types used by the customer enrolled in the most policies. serialized_schema:  | insurance_fnol | customers : customer_id , customer_name | services : service_id , service_name | available_policies : policy_id , policy_type_code , customer_phone | customers_policies : customer_id , policy_id , date_opened , date_closed | first_notification_of_loss : fnol_id , customer_id , policy_id , service_id | claims : claim_id , fnol_id , effective_date | settlements : settlement_id , claim_id , effective_date , settlement_amount output: SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id JOIN available_policies AS t3 ON t2.policy_id  =  t3.policy_id WHERE t1.customer_name  =  (SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_name ORDER BY count(*) DESC LIMIT 1)\n Now please use valid SQLite to answer the following questions: What are airlines that have some flight departing from airport 'AHD'?",
    "Here is an examples including input and output:\n input: question: which shop has happy hour most frequently? List its id and number of happy hours. serialized_schema:  | coffee_shop | shop : shop_id , address , num_of_staff , score , open_year | member : member_id , name , membership_card , age , time_of_purchase , level_of_membership , address | happy_hour : hh_id , shop_id , month , num_of_shaff_in_charge | happy_hour_member : hh_id , member_id , total_amount output: SELECT shop_id ,  count(*) FROM happy_hour GROUP BY shop_id ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: Which airlines have a flight with source airport AHD?",
    "Here is an examples including input and output:\n input: question: What are the names of all the clubs starting with the oldest? serialized_schema:  | sports_competition | club : club_id , name , region , start_year | club_rank : rank , club_id , gold , silver , bronze , total | player : player_id , name , position , club_id , apps , tries , goals , points | competition : competition_id , year , competition_type , country | competition_result : competition_id , club_id_1 , club_id_2 , score output: SELECT name FROM club ORDER BY Start_year ASC\n Now please use valid SQLite to answer the following questions: What are airlines that have flights arriving at airport 'AHD'?",
    "Here is an examples including input and output:\n input: question: Give me the dates when the max temperature was higher than 85. serialized_schema:  | bike_1 | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code output: SELECT date FROM weather WHERE max_temperature_f  >  85\n Now please use valid SQLite to answer the following questions: Which airlines have a flight with destination airport AHD?",
    "Here is an examples including input and output:\n input: question: What is the zip code of the customer Carole Bernhard? serialized_schema:  | driving_school | addresses : address_id , line_1_number_building , city , zip_postcode , state_province_county , country | staff : staff_id , staff_address_id , nickname , first_name , middle_name , last_name , date_of_birth , date_joined_staff , date_left_staff | vehicles : vehicle_id , vehicle_details | customers : customer_id , customer_address_id , customer_status_code , date_became_customer , date_of_birth , first_name , last_name , amount_outstanding , email_address , phone_number , cell_mobile_phone_number | customer_payments : customer_id , datetime_payment , payment_method_code , amount_payment | lessons : lesson_id , customer_id , lesson_status_code , staff_id , vehicle_id , lesson_date , lesson_time , price output: SELECT T2.zip_postcode FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name = \"Carole\" AND T1.last_name = \"Bernhard\"\n Now please use valid SQLite to answer the following questions: Find all airlines that have flights from both airports 'APG' and 'CVO'.",
    "Here is an examples including input and output:\n input: question: What is the first name, GPA, and phone number of the students with the top 5 GPAs? serialized_schema:  | college_1 | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num output: SELECT stu_gpa ,  stu_phone ,  stu_fname FROM student ORDER BY stu_gpa DESC LIMIT 5\n Now please use valid SQLite to answer the following questions: Which airlines have departing flights from both APG and CVO airports?",
    "Here is an examples including input and output:\n input: question: Find the names of customers who ordered both products Latte and Americano. serialized_schema:  | customers_and_addresses | addresses : address_id , address_content , city , zip_postcode , state_province_county , country , other_address_details | products : product_id , product_details | customers : customer_id , payment_method , customer_name , date_became_customer , other_customer_details | customer_addresses : customer_id , address_id , date_address_from , address_type , date_address_to | customer_contact_channels : customer_id , channel_code , active_from_date , active_to_date , contact_number | customer_orders : order_id , customer_id , order_status , order_date , order_details | order_items : order_id , product_id , order_quantity output: SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Latte' INTERSECT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Americano'\n Now please use valid SQLite to answer the following questions: Find all airlines that have flights from airport 'CVO' but not from 'APG'.",
    "Here is an examples including input and output:\n input: question: What are the ids and names of department stores with both marketing and managing departments? serialized_schema:  | department_store | addresses : address_id , address_details | staff : staff_id , staff_gender , staff_name | suppliers : supplier_id , supplier_name , supplier_phone | department_store_chain : dept_store_chain_id , dept_store_chain_name | customers : customer_id , payment_method_code , customer_code , customer_name , customer_address , customer_phone , customer_email | products : product_id , product_type_code , product_name , product_price | supplier_addresses : supplier_id , address_id , date_from , date_to | customer_addresses : customer_id , address_id , date_from , date_to | customer_orders : order_id , customer_id , order_status_code , order_date | department_stores : dept_store_id , dept_store_chain_id , store_name , store_address , store_phone , store_email | departments : department_id , dept_store_id , department_name | order_items : order_item_id , order_id , product_id | product_suppliers : product_id , supplier_id , date_supplied_from , date_supplied_to , total_amount_purchased , total_value_purchased | staff_department_assignments : staff_id , department_id , date_assigned_from , job_title_code , date_assigned_to output: SELECT T2.dept_store_id ,  T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  \"marketing\" INTERSECT SELECT T2.dept_store_id ,  T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  \"managing\"\n Now please use valid SQLite to answer the following questions: Which airlines have departures from CVO but not from APG airports?",
    "Here is an examples including input and output:\n input: question: Who are the ministers and what parties do they belong to, listed descending by the times they took office? serialized_schema:  | party_people | region : region_id , region_name , date , label , format , catalogue | party : party_id , minister , took_office , left_office , region_id , party_name | member : member_id , member_name , party_id , in_office | party_events : event_id , event_name , party_id , member_in_charge_id output: SELECT minister ,  party_name FROM party ORDER BY took_office DESC\n Now please use valid SQLite to answer the following questions: Find all airlines that have at least 10 flights.",
    "Here is an examples including input and output:\n input: question: What is the average age of female (sex is F) students? serialized_schema:  | voter_2 | student : stuid , lname , fname , age , sex , major , advisor , city_code | voting_record : stuid , registration_date , election_cycle , president_vote , vice_president_vote , secretary_vote , treasurer_vote , class_president_vote , class_senator_vote output: SELECT avg(Age) FROM STUDENT WHERE Sex  =  \"F\"\n Now please use valid SQLite to answer the following questions: Which airlines have at least 10 flights?",
    "Here is an examples including input and output:\n input: question: Show the denomination of the school that has the most players. serialized_schema:  | school_player | school : school_id , school , location , enrollment , founded , denomination , boys_or_girls , day_or_boarding , year_entered_competition , school_colors | school_details : school_id , nickname , colors , league , class , division | school_performance : school_id , school_year , class_a , class_aa | player : player_id , player , team , age , position , school_id output: SELECT T2.Denomination FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID GROUP BY T1.School_ID ORDER BY COUNT(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: Find all airlines that have fewer than 200 flights.",
    "Here is an examples including input and output:\n input: question: Find the number of teachers who teach the student called MADLOCK RAY. serialized_schema:  | student_1 | list : lastname , firstname , grade , classroom | teachers : lastname , firstname , classroom output: SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"MADLOCK\" AND T1.lastname  =  \"RAY\"\n Now please use valid SQLite to answer the following questions: Which airlines have less than 200 flights?",
    "Here is an examples including input and output:\n input: question: What is the average base price of different bed type? List bed type and average base price. serialized_schema:  | inn_1 | rooms : roomid , roomname , beds , bedtype , maxoccupancy , baseprice , decor | reservations : code , room , checkin , checkout , rate , lastname , firstname , adults , kids output: SELECT bedType ,  avg(basePrice) FROM Rooms GROUP BY bedType;\n Now please use valid SQLite to answer the following questions: What are flight numbers of Airline \"United Airlines\"?",
    "Here is an examples including input and output:\n input: question: Show the outcome code of mailshots along with the number of mailshots in each outcome code. serialized_schema:  | customers_campaigns_ecommerce | premises : premise_id , premises_type , premise_details | products : product_id , product_category , product_name | customers : customer_id , payment_method , customer_name , customer_phone , customer_email , customer_address , customer_login , customer_password | mailshot_campaigns : mailshot_id , product_category , mailshot_name , mailshot_start_date , mailshot_end_date | customer_addresses : customer_id , premise_id , date_address_from , address_type_code , date_address_to | customer_orders : order_id , customer_id , order_status_code , shipping_method_code , order_placed_datetime , order_delivered_datetime , order_shipping_charges | mailshot_customers : mailshot_id , customer_id , outcome_code , mailshot_customer_date | order_items : item_id , order_item_status_code , order_id , product_id , item_status_code , item_delivered_datetime , item_order_quantity output: SELECT outcome_code ,  count(*) FROM mailshot_customers GROUP BY outcome_code\n Now please use valid SQLite to answer the following questions: Which flight numbers correspond to United Airlines flights?",
    "Here is an examples including input and output:\n input: question: Which enzyme names have the substring \"ALA\"? serialized_schema:  | medicine_enzyme_interaction | medicine : id , name , trade_name , fda_approved | enzyme : id , name , location , product , chromosome , omim , porphyria | medicine_enzyme_interaction : enzyme_id , medicine_id , interaction_type output: SELECT name FROM enzyme WHERE name LIKE \"%ALA%\"\n Now please use valid SQLite to answer the following questions: What are flight numbers of flights departing from Airport \"APG\"?",
    "Here is an examples including input and output:\n input: question: Find the average and minimum price of the rooms in different decor. serialized_schema:  | inn_1 | rooms : roomid , roomname , beds , bedtype , maxoccupancy , baseprice , decor | reservations : code , room , checkin , checkout , rate , lastname , firstname , adults , kids output: SELECT decor , avg(basePrice) ,  min(basePrice) FROM Rooms GROUP BY decor;\n Now please use valid SQLite to answer the following questions: Give the flight numbers of flights leaving from APG.",
    "Here is an examples including input and output:\n input: question: What are the names and account balances for customers who have taken a total amount of more than 5000 in loans? serialized_schema:  | loan_1 | bank : branch_id , bname , no_of_customers , city , state | customer : cust_id , cust_name , acc_type , acc_bal , no_of_loans , credit_score , branch_id , state | loan : loan_id , loan_type , cust_id , branch_id , amount output: SELECT T1.cust_name ,  T1.acc_type FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name HAVING sum(T2.amount)  >  5000\n Now please use valid SQLite to answer the following questions: What are flight numbers of flights arriving at Airport \"APG\"?",
    "Here is an examples including input and output:\n input: question: What are the names of the aircraft that the least people are certified to fly? serialized_schema:  | flight_1 | flight : flno , origin , destination , distance , departure_date , arrival_date , price , aid | aircraft : aid , name , distance | employee : eid , name , salary | certificate : eid , aid output: SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid GROUP BY T1.aid ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: Give the flight numbers of flights landing at APG.",
    "Here is an examples including input and output:\n input: question: display all the information for all employees who have the letters D or S in their first name and also arrange the result in descending order by salary. serialized_schema:  | hr_1 | regions : region_id , region_name | countries : country_id , country_name , region_id | departments : department_id , department_name , manager_id , location_id | jobs : job_id , job_title , min_salary , max_salary | employees : employee_id , first_name , last_name , email , phone_number , hire_date , job_id , salary , commission_pct , manager_id , department_id | job_history : employee_id , start_date , end_date , job_id , department_id | locations : location_id , street_address , postal_code , city , state_province , country_id output: SELECT * FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY salary DESC\n Now please use valid SQLite to answer the following questions: What are flight numbers of flights departing from City \"Aberdeen \"?",
    "Here is an examples including input and output:\n input: question: What are the ids of the students who are not involved in any activity serialized_schema:  | activity_1 | activity : actid , activity_name | participates_in : stuid , actid | faculty_participates_in : facid , actid | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building output: SELECT StuID FROM Student EXCEPT SELECT StuID FROM Participates_in\n Now please use valid SQLite to answer the following questions: Give the flight numbers of flights leaving from Aberdeen.",
    "Here is an examples including input and output:\n input: question: What is the average number of employees of the departments whose rank is between 10 and 15? serialized_schema:  | department_management | department : department_id , name , creation , ranking , budget_in_billions , num_employees | head : head_id , name , born_state , age | management : department_id , head_id , temporary_acting output: SELECT avg(num_employees) FROM department WHERE ranking BETWEEN 10 AND 15\n Now please use valid SQLite to answer the following questions: What are flight numbers of flights arriving at City \"Aberdeen\"?",
    "Here is an examples including input and output:\n input: question: Return the minimum, average and maximum distances traveled across all aircrafts. serialized_schema:  | flight_1 | flight : flno , origin , destination , distance , departure_date , arrival_date , price , aid | aircraft : aid , name , distance | employee : eid , name , salary | certificate : eid , aid output: SELECT min(distance) ,  avg(distance) ,  max(distance) FROM Aircraft\n Now please use valid SQLite to answer the following questions: Give the flight numbers of flights arriving in Aberdeen.",
    "Here is an examples including input and output:\n input: question: Find the last name of the author with first name \"Amal\". serialized_schema:  | icfp_1 | inst : instid , name , country | authors : authid , lname , fname | papers : paperid , title | authorship : authid , instid , paperid , authorder output: SELECT lname FROM authors WHERE fname  =  \"Amal\"\n Now please use valid SQLite to answer the following questions: Find the number of flights landing in the city of Aberdeen or Abilene.",
    "Here is an examples including input and output:\n input: question: List the titles of books that are not published. serialized_schema:  | book_2 | publication : publication_id , book_id , publisher , publication_date , price | book : book_id , title , issues , writer output: SELECT Title FROM book WHERE Book_ID NOT IN (SELECT Book_ID FROM publication)\n Now please use valid SQLite to answer the following questions: How many flights land in Aberdeen or Abilene?",
    "Here is an examples including input and output:\n input: question: What are the names and hours spent practicing of every student who received a yes at tryouts? serialized_schema:  | soccer_2 | college : cname , state , enr | player : pid , pname , ycard , hs | tryout : pid , cname , ppos , decision output: SELECT T1.pName ,  T1.HS FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'\n Now please use valid SQLite to answer the following questions: Find the name of airports which do not have any flight in and out.",
    "Here is an examples including input and output:\n input: question: Find the total number of employees. serialized_schema:  | college_1 | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num output: SELECT count(*) FROM employee\n Now please use valid SQLite to answer the following questions: Which airports do not have departing or arriving flights?",
    "Here is an examples including input and output:\n input: question: Which author has written the most papers? Find his or her last name. serialized_schema:  | icfp_1 | inst : instid , name , country | authors : authid , lname , fname | papers : paperid , title | authorship : authid , instid , paperid , authorder output: SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.fname ,  t1.lname ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: How many employees are there?",
    "Here is an examples including input and output:\n input: question: How many addresses have zip code 197? serialized_schema:  | behavior_monitoring | ref_address_types : address_type_code , address_type_description | ref_detention_type : detention_type_code , detention_type_description | ref_incident_type : incident_type_code , incident_type_description | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | students : student_id , address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , date_first_rental , date_left_university , other_student_details | teachers : teacher_id , address_id , first_name , middle_name , last_name , gender , cell_mobile_number , email_address , other_details | assessment_notes : notes_id , student_id , teacher_id , date_of_notes , text_of_notes , other_details | behavior_incident : incident_id , incident_type_code , student_id , date_incident_start , date_incident_end , incident_summary , recommendations , other_details | detention : detention_id , detention_type_code , teacher_id , datetime_detention_start , datetime_detention_end , detention_summary , other_details | student_addresses : student_id , address_id , date_address_from , date_address_to , monthly_rental , other_details | students_in_detention : student_id , detention_id , incident_id output: SELECT count(*) FROM ADDRESSES WHERE zip_postcode  =  \"197\"\n Now please use valid SQLite to answer the following questions: Count the number of employees",
    "Here is an examples including input and output:\n input: question: What campuses are located in the county of Los Angeles? serialized_schema:  | csu_1 | campuses : id , campus , location , county , year | csu_fees : campus , year , campusfee | degrees : year , campus , degrees | discipline_enrollments : campus , discipline , year , undergraduate , graduate | enrollments : campus , year , totalenrollment_ay , fte_ay | faculty : campus , year , faculty output: SELECT campus FROM campuses WHERE county  =  \"Los Angeles\"\n Now please use valid SQLite to answer the following questions: Sort employee names by their age in ascending order.",
    "Here is an examples including input and output:\n input: question: What are the dates in which the mean sea level pressure was between 30.3 and 31? serialized_schema:  | bike_1 | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code output: SELECT date FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31\n Now please use valid SQLite to answer the following questions: List the names of employees and sort in ascending order of age.",
    "Here is an examples including input and output:\n input: question: find the name of driver who is driving the school bus with the longest working history. serialized_schema:  | school_bus | driver : driver_id , name , party , home_city , age | school : school_id , grade , school , location , type | school_bus : school_id , driver_id , years_working , if_full_time output: SELECT t1.name FROM driver AS t1 JOIN school_bus AS t2 ON t1.driver_id  =  t2.driver_id ORDER BY years_working DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: What is the number of employees from each city?",
    "Here is an examples including input and output:\n input: question: What are the gender and occupation of players? serialized_schema:  | riding_club | player : player_id , sponsor_name , player_name , gender , residence , occupation , votes , rank | club : club_id , club_name , region , start_year | coach : coach_id , coach_name , gender , club_id , rank | player_coach : player_id , coach_id , starting_year | match_result : rank , club_id , gold , big_silver , small_silver , bronze , points output: SELECT Gender ,  Occupation FROM player\n Now please use valid SQLite to answer the following questions: Count the number of employees for each city.",
    "Here is an examples including input and output:\n input: question: What is the name of the stadium which held the most events? serialized_schema:  | swimming | swimmer : id , name , nationality , meter_100 , meter_200 , meter_300 , meter_400 , meter_500 , meter_600 , meter_700 , time | stadium : id , name , capacity , city , country , opening_year | event : id , name , stadium_id , year | record : id , result , swimmer_id , event_id output: SELECT t1.name FROM stadium AS t1 JOIN event AS t2 ON t1.id  =  t2.stadium_id GROUP BY t2.stadium_id ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: Which cities do more than one employee under age 30 come from?",
    "Here is an examples including input and output:\n input: question: Find the first name and last name of the instructor of course that has course name serialized_schema:  | college_3 | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building | department : dno , division , dname , room , building , dphone | member_of : facid , dno , appt_type | course : cid , cname , credits , instructor , days , hours , dno | minor_in : stuid , dno | enrolled_in : stuid , cid , grade | gradeconversion : lettergrade , gradepoint output: SELECT T2.Fname ,  T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID WHERE T1.CName  =  \"COMPUTER LITERACY\"\n Now please use valid SQLite to answer the following questions: Find the cities that have more than one employee under age 30.",
    "Here is an examples including input and output:\n input: question: What are the names of races that were held after 2017 and the circuits were in the country of Spain? serialized_schema:  | formula_1 | circuits : circuitid , circuitref , name , location , country , lat , lng , alt , url | races : raceid , year , round , circuitid , name , date , time , url | drivers : driverid , driverref , number , code , forename , surname , dob , nationality , url | status : statusid , status | seasons : year , url | constructors : constructorid , constructorref , name , nationality , url | constructorstandings : constructorstandingsid , raceid , constructorid , points , position , positiontext , wins | results : resultid , raceid , driverid , constructorid , number , grid , position , positiontext , positionorder , points , laps , time , milliseconds , fastestlap , rank , fastestlaptime , fastestlapspeed , statusid | driverstandings : driverstandingsid , raceid , driverid , points , position , positiontext , wins | constructorresults : constructorresultsid , raceid , constructorid , points , status | qualifying : qualifyid , raceid , driverid , constructorid , number , position , q1 , q2 , q3 | pitstops : raceid , driverid , stop , lap , time , duration , milliseconds | laptimes : raceid , driverid , lap , position , time , milliseconds output: SELECT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = \"Spain\" AND T1.year > 2017\n Now please use valid SQLite to answer the following questions: Find the number of shops in each location.",
    "Here is an examples including input and output:\n input: question: Find the ids of the departments where any manager is managing 4 or more employees. serialized_schema:  | hr_1 | regions : region_id , region_name | countries : country_id , country_name , region_id | departments : department_id , department_name , manager_id , location_id | jobs : job_id , job_title , min_salary , max_salary | employees : employee_id , first_name , last_name , email , phone_number , hire_date , job_id , salary , commission_pct , manager_id , department_id | job_history : employee_id , start_date , end_date , job_id , department_id | locations : location_id , street_address , postal_code , city , state_province , country_id output: SELECT DISTINCT department_id FROM employees GROUP BY department_id ,  manager_id HAVING COUNT(employee_id)  >= 4\n Now please use valid SQLite to answer the following questions: How many shops are there in each location?",
    "Here is an examples including input and output:\n input: question: What are the ids of the problems reported after the date of any problems reported by Rylan Homenick? serialized_schema:  | tracking_software_problems | problem_category_codes : problem_category_code , problem_category_description | problem_log : problem_log_id , assigned_to_staff_id , problem_id , problem_category_code , problem_status_code , log_entry_date , log_entry_description , log_entry_fix , other_log_details | problem_status_codes : problem_status_code , problem_status_description | product : product_id , product_name , product_details | staff : staff_id , staff_first_name , staff_last_name , other_staff_details | problems : problem_id , product_id , closure_authorised_by_staff_id , reported_by_staff_id , date_problem_reported , date_problem_closed , problem_description , other_problem_details output: SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE date_problem_reported  >  ( SELECT max(date_problem_reported) FROM problems AS T3 JOIN staff AS T4 ON T3.reported_by_staff_id = T4.staff_id WHERE T4.staff_first_name = \"Rylan\" AND T4.staff_last_name = \"Homenick\" )\n Now please use valid SQLite to answer the following questions: Find the manager name and district of the shop whose number of products is the largest.",
    "Here is an examples including input and output:\n input: question: How films are produced by each studio? serialized_schema:  | film_rank | film : film_id , title , studio , director , gross_in_dollar | market : market_id , country , number_cities | film_market_estimation : estimation_id , low_estimate , high_estimate , film_id , type , market_id , year output: SELECT Studio ,  COUNT(*) FROM film GROUP BY Studio\n Now please use valid SQLite to answer the following questions: What are the manager name and district of the shop that sells the largest number of products?",
    "Here is an examples including input and output:\n input: question: Show all customer ids and the number of accounts for each customer. serialized_schema:  | customers_card_transactions | accounts : account_id , customer_id , account_name , other_account_details | customers : customer_id , customer_first_name , customer_last_name , customer_address , customer_phone , customer_email , other_customer_details | customers_cards : card_id , customer_id , card_type_code , card_number , date_valid_from , date_valid_to , other_card_details | financial_transactions : transaction_id , previous_transaction_id , account_id , card_id , transaction_type , transaction_date , transaction_amount , transaction_comment , other_transaction_details output: SELECT customer_id ,  count(*) FROM Accounts GROUP BY customer_id\n Now please use valid SQLite to answer the following questions: find the minimum and maximum number of products of all stores.",
    "Here is an examples including input and output:\n input: question: What are the average height and weight across males (sex is M)? serialized_schema:  | candidate_poll | candidate : candidate_id , people_id , poll_source , date , support_rate , consider_rate , oppose_rate , unsure_rate | people : people_id , sex , name , date_of_birth , height , weight output: SELECT avg(height) ,  avg(weight) FROM people WHERE sex  =  'M'\n Now please use valid SQLite to answer the following questions: What are the minimum and maximum number of products across all the shops?",
    "Here is an examples including input and output:\n input: question: List the publication dates of publications with 3 lowest prices. serialized_schema:  | book_2 | publication : publication_id , book_id , publisher , publication_date , price | book : book_id , title , issues , writer output: SELECT Publication_Date FROM publication ORDER BY Price ASC LIMIT 3\n Now please use valid SQLite to answer the following questions: Return the name, location and district of all shops in descending order of number of products.",
    "Here is an examples including input and output:\n input: question: Find the name and id of accounts whose checking balance is below the maximum checking balance. serialized_schema:  | small_bank_1 | accounts : custid , name | savings : custid , balance | checking : custid , balance output: SELECT T1.custid ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT max(balance) FROM checking)\n Now please use valid SQLite to answer the following questions: Sort all the shops by number products in descending order, and return the name, location and district of each shop.",
    "Here is an examples including input and output:\n input: question: What are the total points for all gymnasts, ordered by total points descending? serialized_schema:  | gymnast | gymnast : gymnast_id , floor_exercise_points , pommel_horse_points , rings_points , vault_points , parallel_bars_points , horizontal_bar_points , total_points | people : people_id , name , age , height , hometown output: SELECT Total_Points FROM gymnast ORDER BY Total_Points DESC\n Now please use valid SQLite to answer the following questions: Find the names of stores whose number products is more than the average number of products.",
    "Here is an examples including input and output:\n input: question: Show the country where people older than 30 and younger than 25 are from. serialized_schema:  | wedding | people : people_id , name , country , is_male , age | church : church_id , name , organized_by , open_date , continuation_of | wedding : church_id , male_id , female_id , year output: SELECT country FROM people WHERE age  <  25 INTERSECT SELECT country FROM people WHERE age  >  30\n Now please use valid SQLite to answer the following questions: Which shops' number products is above the average? Give me the shop names.",
    "Here is an examples including input and output:\n input: question: How many characteristics are there? serialized_schema:  | products_gen_characteristics | ref_characteristic_types : characteristic_type_code , characteristic_type_description | ref_colors : color_code , color_description | ref_product_categories : product_category_code , product_category_description , unit_of_measure | characteristics : characteristic_id , characteristic_type_code , characteristic_data_type , characteristic_name , other_characteristic_details | products : product_id , color_code , product_category_code , product_name , typical_buying_price , typical_selling_price , product_description , other_product_details | product_characteristics : product_id , characteristic_id , product_characteristic_value output: SELECT count(*) FROM CHARACTERISTICS\n Now please use valid SQLite to answer the following questions: find the name of employee who was awarded the most times in the evaluation.",
    "Here is an examples including input and output:\n input: question: What are the attribute data types with more than 3 attribute definitions? serialized_schema:  | product_catalog | attribute_definitions : attribute_id , attribute_name , attribute_data_type | catalogs : catalog_id , catalog_name , catalog_publisher , date_of_publication , date_of_latest_revision | catalog_structure : catalog_level_number , catalog_id , catalog_level_name | catalog_contents : catalog_entry_id , catalog_level_number , parent_entry_id , previous_entry_id , next_entry_id , catalog_entry_name , product_stock_number , price_in_dollars , price_in_euros , price_in_pounds , capacity , length , height , width | catalog_contents_additional_attributes : catalog_entry_id , catalog_level_number , attribute_id , attribute_value output: SELECT attribute_data_type FROM Attribute_Definitions GROUP BY attribute_data_type HAVING count(*)  >  3\n Now please use valid SQLite to answer the following questions: Which employee received the most awards in evaluations? Give me the employee name.",
    "Here is an examples including input and output:\n input: question: Which clubs are located at \"AKW\"? Return the club names. serialized_schema:  | club_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | club : clubid , clubname , clubdesc , clublocation | member_of_club : stuid , clubid , position output: SELECT clubname FROM club WHERE clublocation  =  \"AKW\"\n Now please use valid SQLite to answer the following questions: Find the name of the employee who got the highest one time bonus.",
    "Here is an examples including input and output:\n input: question: display the employee name ( first name and last name ) and hire date for all employees in the same department as Clara. serialized_schema:  | hr_1 | regions : region_id , region_name | countries : country_id , country_name , region_id | departments : department_id , department_name , manager_id , location_id | jobs : job_id , job_title , min_salary , max_salary | employees : employee_id , first_name , last_name , email , phone_number , hire_date , job_id , salary , commission_pct , manager_id , department_id | job_history : employee_id , start_date , end_date , job_id , department_id | locations : location_id , street_address , postal_code , city , state_province , country_id output: SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  =  (SELECT department_id FROM employees WHERE first_name  =  \"Clara\")\n Now please use valid SQLite to answer the following questions: Which employee received the biggest bonus? Give me the employee name.",
    "Here is an examples including input and output:\n input: question: What are all the phone numbers? serialized_schema:  | insurance_fnol | customers : customer_id , customer_name | services : service_id , service_name | available_policies : policy_id , policy_type_code , customer_phone | customers_policies : customer_id , policy_id , date_opened , date_closed | first_notification_of_loss : fnol_id , customer_id , policy_id , service_id | claims : claim_id , fnol_id , effective_date | settlements : settlement_id , claim_id , effective_date , settlement_amount output: SELECT customer_phone FROM available_policies\n Now please use valid SQLite to answer the following questions: Find the names of employees who never won any award in the evaluation.",
    "Here is an examples including input and output:\n input: question: What instruments does the the song \"Le Pop\" use? serialized_schema:  | music_2 | songs : songid , title | albums : aid , title , year , label , type | band : id , firstname , lastname | instruments : songid , bandmateid , instrument | performance : songid , bandmate , stageposition | tracklists : albumid , position , songid | vocals : songid , bandmate , type output: SELECT instrument FROM instruments AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Le Pop\"\n Now please use valid SQLite to answer the following questions: What are the names of the employees who never received any evaluation?",
    "Here is an examples including input and output:\n input: question: How many clubs are located at \"HHH\"? serialized_schema:  | club_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | club : clubid , clubname , clubdesc , clublocation | member_of_club : stuid , clubid , position output: SELECT count(*) FROM club WHERE clublocation  =  \"HHH\"\n Now please use valid SQLite to answer the following questions: What is the name of the shop that is hiring the largest number of employees?",
    "Here is an examples including input and output:\n input: question: Find Alice's friends of friends. serialized_schema:  | network_2 | person : name , age , city , gender , job | personfriend : name , friend , year output: SELECT DISTINCT T4.name FROM PersonFriend AS T1 JOIN Person AS T2 ON T1.name  =  T2.name JOIN PersonFriend AS T3 ON T1.friend  =  T3.name JOIN PersonFriend AS T4 ON T3.friend  =  T4.name WHERE T2.name  =  'Alice' AND T4.name != 'Alice'\n Now please use valid SQLite to answer the following questions: Which shop has the most employees? Give me the shop name.",
    "Here is an examples including input and output:\n input: question: What are the names and average prices of products for manufacturers whose products cost on average 150 or more? serialized_schema:  | manufactory_1 | manufacturers : code , name , headquarter , founder , revenue | products : code , name , price , manufacturer output: SELECT avg(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name HAVING avg(T1.price) >= 150\n Now please use valid SQLite to answer the following questions: Find the name of the shops that do not hire any employee.",
    "Here is an examples including input and output:\n input: question: Sort all captain names by their ages from old to young. serialized_schema:  | ship_1 | captain : captain_id , name , ship_id , age , class , rank | ship : ship_id , name , type , built_year , class , flag output: SELECT name FROM captain ORDER BY age DESC\n Now please use valid SQLite to answer the following questions: Which shops run with no employees? Find the shop names",
    "Here is an examples including input and output:\n input: question: What is the total number of products that are in orders with status \"Cancelled\"? serialized_schema:  | customers_and_addresses | addresses : address_id , address_content , city , zip_postcode , state_province_county , country , other_address_details | products : product_id , product_details | customers : customer_id , payment_method , customer_name , date_became_customer , other_customer_details | customer_addresses : customer_id , address_id , date_address_from , address_type , date_address_to | customer_contact_channels : customer_id , channel_code , active_from_date , active_to_date , contact_number | customer_orders : order_id , customer_id , order_status , order_date , order_details | order_items : order_id , product_id , order_quantity output: SELECT sum(t2.order_quantity) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id  =  t2.order_id WHERE t1.order_status  =  \"Cancelled\"\n Now please use valid SQLite to answer the following questions: Find the number of employees hired in each shop; show the shop name as well.",
    "Here is an examples including input and output:\n input: question: Find all the stores in the district with the most population. serialized_schema:  | store_product | product : product_id , product , dimensions , dpi , pages_per_minute_color , max_page_size , interface | store : store_id , store_name , type , area_size , number_of_product_category , ranking | district : district_id , district_name , headquartered_city , city_population , city_area | store_product : store_id , product_id | store_district : store_id , district_id output: SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id WHERE district_id  =  (SELECT district_id FROM district ORDER BY city_population DESC LIMIT 1)\n Now please use valid SQLite to answer the following questions: For each shop, return the number of employees working there and the name of the shop.",
    "Here is an examples including input and output:\n input: question: Show the names of customers who have both an order in completed status and an order in part status. serialized_schema:  | customers_and_products_contacts | addresses : address_id , line_1_number_building , city , zip_postcode , state_province_county , country | products : product_id , product_type_code , product_name , product_price | customers : customer_id , payment_method_code , customer_number , customer_name , customer_address , customer_phone , customer_email | contacts : contact_id , customer_id , gender , first_name , last_name , contact_phone | customer_address_history : customer_id , address_id , date_from , date_to | customer_orders : order_id , customer_id , order_date , order_status_code | order_items : order_item_id , order_id , product_id , order_quantity output: SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  'Completed' INTERSECT SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  'Part'\n Now please use valid SQLite to answer the following questions: What is total bonus given in all evaluations?",
    "Here is an examples including input and output:\n input: question: Find the name of instructors who are advisors of the students from the Math department, and sort the results by students' total credit. serialized_schema:  | college_2 | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id output: SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math' ORDER BY T3.tot_cred\n Now please use valid SQLite to answer the following questions: Find the total amount of bonus given in all the evaluations.",
    "Here is an examples including input and output:\n input: question: Find the address of all customers that live in Germany and have invoice. serialized_schema:  | chinook_1 | album : albumid , title , artistid | artist : artistid , name | customer : customerid , firstname , lastname , company , address , city , state , country , postalcode , phone , fax , email , supportrepid | employee : employeeid , lastname , firstname , title , reportsto , birthdate , hiredate , address , city , state , country , postalcode , phone , fax , email | genre : genreid , name | invoice : invoiceid , customerid , invoicedate , billingaddress , billingcity , billingstate , billingcountry , billingpostalcode , total | invoiceline : invoicelineid , invoiceid , trackid , unitprice , quantity | mediatype : mediatypeid , name | playlist : playlistid , name | playlisttrack : playlistid , trackid | track : trackid , name , albumid , mediatypeid , genreid , composer , milliseconds , bytes , unitprice output: SELECT DISTINCT T1.Address FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.country  =  \"Germany\"\n Now please use valid SQLite to answer the following questions: Give me all the information about hiring.",
    "Here is an examples including input and output:\n input: question: Find the full names of faculties who are members of department with department number 520. serialized_schema:  | college_3 | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building | department : dno , division , dname , room , building , dphone | member_of : facid , dno , appt_type | course : cid , cname , credits , instructor , days , hours , dno | minor_in : stuid , dno | enrolled_in : stuid , cid , grade | gradeconversion : lettergrade , gradepoint output: SELECT T1.Fname ,  T1.Lname FROM FACULTY AS T1 JOIN MEMBER_OF AS T2 ON T1.FacID  =  T2.FacID WHERE T2.DNO  =  520\n Now please use valid SQLite to answer the following questions: What is all the information about hiring?",
    "Here is an examples including input and output:\n input: question: Find the distinct last names of all the students who have president votes and whose advisor is not 2192. serialized_schema:  | voter_2 | student : stuid , lname , fname , age , sex , major , advisor , city_code | voting_record : stuid , registration_date , election_cycle , president_vote , vice_president_vote , secretary_vote , treasurer_vote , class_president_vote , class_senator_vote output: SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  PRESIDENT_Vote EXCEPT SELECT DISTINCT LName FROM STUDENT WHERE Advisor  =  \"2192\"\n Now please use valid SQLite to answer the following questions: Which district has both stores with less than 3000 products and stores with more than 10000 products?",
    "Here is an examples including input and output:\n input: question: What is the total quantity of products purchased by \"Rodrick Heaney\"? serialized_schema:  | customers_and_addresses | addresses : address_id , address_content , city , zip_postcode , state_province_county , country , other_address_details | products : product_id , product_details | customers : customer_id , payment_method , customer_name , date_became_customer , other_customer_details | customer_addresses : customer_id , address_id , date_address_from , address_type , date_address_to | customer_contact_channels : customer_id , channel_code , active_from_date , active_to_date , contact_number | customer_orders : order_id , customer_id , order_status , order_date , order_details | order_items : order_id , product_id , order_quantity output: SELECT sum(t3.order_quantity) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t1.customer_name  =  \"Rodrick Heaney\"\n Now please use valid SQLite to answer the following questions: Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products.",
    "Here is an examples including input and output:\n input: question: What are the total account balances for each customer from Utah or Texas? serialized_schema:  | loan_1 | bank : branch_id , bname , no_of_customers , city , state | customer : cust_id , cust_name , acc_type , acc_bal , no_of_loans , credit_score , branch_id , state | loan : loan_id , loan_type , cust_id , branch_id , amount output: SELECT sum(acc_bal) FROM customer WHERE state  =  'Utah' OR state  =  'Texas'\n Now please use valid SQLite to answer the following questions: How many different store locations are there?",
    "Here is an examples including input and output:\n input: question: display those departments where more than ten employees work who got a commission percentage. serialized_schema:  | hr_1 | regions : region_id , region_name | countries : country_id , country_name , region_id | departments : department_id , department_name , manager_id , location_id | jobs : job_id , job_title , min_salary , max_salary | employees : employee_id , first_name , last_name , email , phone_number , hire_date , job_id , salary , commission_pct , manager_id , department_id | job_history : employee_id , start_date , end_date , job_id , department_id | locations : location_id , street_address , postal_code , city , state_province , country_id output: SELECT department_id FROM employees GROUP BY department_id HAVING COUNT(commission_pct) > 10\n Now please use valid SQLite to answer the following questions: Count the number of distinct store locations.",
    "Here is an examples including input and output:\n input: question: Show order ids and the number of products in each order. serialized_schema:  | customers_and_invoices | customers : customer_id , customer_first_name , customer_middle_initial , customer_last_name , gender , email_address , login_name , login_password , phone_number , town_city , state_county_province , country | orders : order_id , customer_id , date_order_placed , order_details | invoices : invoice_number , order_id , invoice_date | accounts : account_id , customer_id , date_account_opened , account_name , other_account_details | product_categories : production_type_code , product_type_description , vat_rating | products : product_id , parent_product_id , production_type_code , unit_price , product_name , product_color , product_size | financial_transactions : transaction_id , account_id , invoice_number , transaction_type , transaction_date , transaction_amount , transaction_comment , other_transaction_details | order_items : order_item_id , order_id , product_id , product_quantity , other_order_item_details | invoice_line_items : order_item_id , invoice_number , product_id , product_title , product_quantity , product_price , derived_product_cost , derived_vat_payable , derived_total_cost output: SELECT order_id ,  count(DISTINCT product_id) FROM Order_items GROUP BY order_id\n Now please use valid SQLite to answer the following questions: How many documents do we have?",
    "Here is an examples including input and output:\n input: question: List all club names in descending alphabetical order. serialized_schema:  | sports_competition | club : club_id , name , region , start_year | club_rank : rank , club_id , gold , silver , bronze , total | player : player_id , name , position , club_id , apps , tries , goals , points | competition : competition_id , year , competition_type , country | competition_result : competition_id , club_id_1 , club_id_2 , score output: SELECT name FROM club ORDER BY name DESC\n Now please use valid SQLite to answer the following questions: Count the number of documents.",
    "Here is an examples including input and output:\n input: question: Find the student ID and middle name for all the students with at most two enrollments. serialized_schema:  | e_learning | course_authors_and_tutors : author_id , author_tutor_atb , login_name , password , personal_name , middle_name , family_name , gender_mf , address_line_1 | students : student_id , date_of_registration , date_of_latest_logon , login_name , password , personal_name , middle_name , family_name | subjects : subject_id , subject_name | courses : course_id , author_id , subject_id , course_name , course_description | student_course_enrolment : registration_id , student_id , course_id , date_of_enrolment , date_of_completion | student_tests_taken : registration_id , date_test_taken , test_result output: SELECT T1.student_id ,  T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  <=  2\n Now please use valid SQLite to answer the following questions: List document IDs, document names, and document descriptions for all documents.",
    "Here is an examples including input and output:\n input: question: List all students' first names and last names who majored in 600. serialized_schema:  | restaurant_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | restaurant : resid , resname , address , rating | type_of_restaurant : resid , restypeid | restaurant_type : restypeid , restypename , restypedescription | visits_restaurant : stuid , resid , time , spent output: SELECT Fname , Lname FROM Student WHERE Major  =  600;\n Now please use valid SQLite to answer the following questions: What are the ids, names, and descriptions for all documents?",
    "Here is an examples including input and output:\n input: question: Show the account id and the number of transactions for each account serialized_schema:  | customers_card_transactions | accounts : account_id , customer_id , account_name , other_account_details | customers : customer_id , customer_first_name , customer_last_name , customer_address , customer_phone , customer_email , other_customer_details | customers_cards : card_id , customer_id , card_type_code , card_number , date_valid_from , date_valid_to , other_card_details | financial_transactions : transaction_id , previous_transaction_id , account_id , card_id , transaction_type , transaction_date , transaction_amount , transaction_comment , other_transaction_details output: SELECT account_id ,  count(*) FROM Financial_transactions GROUP BY account_id\n Now please use valid SQLite to answer the following questions: What is the document name and template id for document with description with the letter 'w' in it?",
    "Here is an examples including input and output:\n input: question: What are the name and phone of the customer with the most ordered product quantity? serialized_schema:  | customers_and_products_contacts | addresses : address_id , line_1_number_building , city , zip_postcode , state_province_county , country | products : product_id , product_type_code , product_name , product_price | customers : customer_id , payment_method_code , customer_number , customer_name , customer_address , customer_phone , customer_email | contacts : contact_id , customer_id , gender , first_name , last_name , contact_phone | customer_address_history : customer_id , address_id , date_from , date_to | customer_orders : order_id , customer_id , order_date , order_status_code | order_items : order_item_id , order_id , product_id , order_quantity output: SELECT  T1.customer_name ,  T1.customer_phone FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T3.order_id  =  T2.order_id GROUP BY T1.customer_id ORDER BY sum(T3.order_quantity) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: Return the names and template ids for documents that contain the letter w in their description.",
    "Here is an examples including input and output:\n input: question: What are the names and headquarters of all companies ordered by descending market value? serialized_schema:  | gas_company | company : company_id , rank , company , headquarters , main_industry , sales_billion , profits_billion , assets_billion , market_value | gas_station : station_id , open_year , location , manager_name , vice_manager_name , representative_name | station_company : station_id , company_id , rank_of_the_year output: SELECT company ,  headquarters FROM company ORDER BY market_value DESC\n Now please use valid SQLite to answer the following questions: What is the document id, template id and description for document named \"Robbin CV\"?",
    "Here is an examples including input and output:\n input: question: Show all movie titles, years, and directors, ordered by budget. serialized_schema:  | culture_company | book_club : book_club_id , year , author_or_editor , book_title , publisher , category , result | movie : movie_id , title , year , director , budget_million , gross_worldwide | culture_company : company_name , type , incorporated_in , group_equity_shareholding , book_club_id , movie_id output: SELECT title ,  YEAR ,  director FROM movie ORDER BY budget_million\n Now please use valid SQLite to answer the following questions: Return the document id, template id, and description for the document with the name Robbin CV.",
    "Here is an examples including input and output:\n input: question: What is the duration of the oldest actor? serialized_schema:  | musical | musical : musical_id , name , year , award , category , nominee , result | actor : actor_id , name , musical_id , character , duration , age output: SELECT Duration FROM actor ORDER BY Age DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: How many different templates do all document use?",
    "Here is an examples including input and output:\n input: question: Show the movie titles and book titles for all companies in China. serialized_schema:  | culture_company | book_club : book_club_id , year , author_or_editor , book_title , publisher , category , result | movie : movie_id , title , year , director , budget_million , gross_worldwide | culture_company : company_name , type , incorporated_in , group_equity_shareholding , book_club_id , movie_id output: SELECT T1.title ,  T3.book_title FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id  =  T2.movie_id JOIN book_club AS T3 ON T3.book_club_id  =  T2.book_club_id WHERE T2.incorporated_in  =  'China'\n Now please use valid SQLite to answer the following questions: Count the number of different templates used for documents.",
    "Here is an examples including input and output:\n input: question: Which customer's name contains \"Alex\"? Find the full name. serialized_schema:  | customers_and_addresses | addresses : address_id , address_content , city , zip_postcode , state_province_county , country , other_address_details | products : product_id , product_details | customers : customer_id , payment_method , customer_name , date_became_customer , other_customer_details | customer_addresses : customer_id , address_id , date_address_from , address_type , date_address_to | customer_contact_channels : customer_id , channel_code , active_from_date , active_to_date , contact_number | customer_orders : order_id , customer_id , order_status , order_date , order_details | order_items : order_id , product_id , order_quantity output: SELECT customer_name FROM customers WHERE customer_name LIKE \"%Alex%\"\n Now please use valid SQLite to answer the following questions: How many documents are using the template with type code 'PPT'?",
    "Here is an examples including input and output:\n input: question: Count the number of actors. serialized_schema:  | musical | musical : musical_id , name , year , award , category , nominee , result | actor : actor_id , name , musical_id , character , duration , age output: SELECT count(*) FROM actor\n Now please use valid SQLite to answer the following questions: Count the number of documents that use the PPT template type.",
    "Here is an examples including input and output:\n input: question: What are the names of shops in ascending order of open year? serialized_schema:  | device | device : device_id , device , carrier , package_version , applications , software_platform | shop : shop_id , shop_name , location , open_date , open_year | stock : shop_id , device_id , quantity output: SELECT Shop_Name FROM shop ORDER BY Open_Year ASC\n Now please use valid SQLite to answer the following questions: Show all template ids and number of documents using each template.",
    "Here is an examples including input and output:\n input: question: What are the ids of courses offered in Fall of 2009 but not in Spring of 2010? serialized_schema:  | college_2 | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id output: SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 EXCEPT SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010\n Now please use valid SQLite to answer the following questions: What are all different template ids used for documents, and how many times were each of them used?",
    "Here is an examples including input and output:\n input: question: List the name and number of followers for each user, and sort the results by the number of followers in descending order. serialized_schema:  | twitter_1 | follows : f1 , f2 | tweets : id , uid , text , createdate | user_profiles : uid , name , email , partitionid , followers output: SELECT name ,  followers FROM user_profiles ORDER BY followers DESC\n Now please use valid SQLite to answer the following questions: What is the id and type code for the template used by the most documents?",
    "Here is an examples including input and output:\n input: question: What is the payment method that were used the least often? serialized_schema:  | insurance_policies | customers : customer_id , customer_details | customer_policies : policy_id , customer_id , policy_type_code , start_date , end_date | claims : claim_id , policy_id , date_claim_made , date_claim_settled , amount_claimed , amount_settled | settlements : settlement_id , claim_id , date_claim_made , date_claim_settled , amount_claimed , amount_settled , customer_policy_id | payments : payment_id , settlement_id , payment_method_code , date_payment_made , amount_payment output: SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count(*) ASC LIMIT 1\n Now please use valid SQLite to answer the following questions: Return the id and type code of the template that is used for the greatest number of documents.",
    "Here is an examples including input and output:\n input: question: What is all the information about courses, ordered by credits ascending? serialized_schema:  | college_3 | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building | department : dno , division , dname , room , building , dphone | member_of : facid , dno , appt_type | course : cid , cname , credits , instructor , days , hours , dno | minor_in : stuid , dno | enrolled_in : stuid , cid , grade | gradeconversion : lettergrade , gradepoint output: SELECT * FROM COURSE ORDER BY Credits\n Now please use valid SQLite to answer the following questions: Show ids for all templates that are used by more than one document.",
    "Here is an examples including input and output:\n input: question: Find the country of all appelations who have at most three wines. serialized_schema:  | wine_1 | grapes : id , grape , color | appellations : no , appelation , county , state , area , isava | wine : no , grape , winery , appelation , state , name , year , price , score , cases , drink output: SELECT T1.County FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation GROUP BY T2.Appelation HAVING count(*)  <=  3\n Now please use valid SQLite to answer the following questions: What are the template ids of any templates used in more than a single document?",
    "Here is an examples including input and output:\n input: question: Which channels are broadcast in the morning? Give me the channel names. serialized_schema:  | program_share | program : program_id , name , origin , launch , owner | channel : channel_id , name , owner , share_in_percent , rating_in_percent | broadcast : channel_id , program_id , time_of_day | broadcast_share : channel_id , program_id , date , share_in_percent output: SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  'Morning'\n Now please use valid SQLite to answer the following questions: Show ids for all templates not used by any document.",
    "Here is an examples including input and output:\n input: question: Which players are from Indonesia? serialized_schema:  | match_season | country : country_id , country_name , capital , official_native_language | team : team_id , name | match_season : season , player , position , country , team , draft_pick_number , draft_class , college | player : player_id , player , years_played , total_wl , singles_wl , doubles_wl , team output: SELECT T2.Player FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T1.Country_name  =  \"Indonesia\"\n Now please use valid SQLite to answer the following questions: What are the ids for templates that are not used in any documents?",
    "Here is an examples including input and output:\n input: question: List each birth place along with the number of people from there. serialized_schema:  | body_builder | body_builder : body_builder_id , people_id , snatch , clean_jerk , total | people : people_id , name , height , weight , birth_date , birth_place output: SELECT Birth_Place ,  COUNT(*) FROM people GROUP BY Birth_Place\n Now please use valid SQLite to answer the following questions: How many templates do we have?",
    "Here is an examples including input and output:\n input: question: What are the names of gymnasts whose hometown is not \"Santo Domingo\"? serialized_schema:  | gymnast | gymnast : gymnast_id , floor_exercise_points , pommel_horse_points , rings_points , vault_points , parallel_bars_points , horizontal_bar_points , total_points | people : people_id , name , age , height , hometown output: SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID WHERE T2.Hometown != \"Santo Domingo\"\n Now please use valid SQLite to answer the following questions: Count the number of templates.",
    "Here is an examples including input and output:\n input: question: What is the address of the location \"UK Gallery\"? serialized_schema:  | cre_Theme_park | ref_hotel_star_ratings : star_rating_code , star_rating_description | locations : location_id , location_name , address , other_details | ref_attraction_types : attraction_type_code , attraction_type_description | visitors : tourist_id , tourist_details | features : feature_id , feature_details | hotels : hotel_id , star_rating_code , pets_allowed_yn , price_range , other_hotel_details | tourist_attractions : tourist_attraction_id , attraction_type_code , location_id , how_to_get_there , name , description , opening_hours , other_details | street_markets : market_id , market_details | shops : shop_id , shop_details | museums : museum_id , museum_details | royal_family : royal_family_id , royal_family_details | theme_parks : theme_park_id , theme_park_details | visits : visit_id , tourist_attraction_id , tourist_id , visit_date , visit_details | photos : photo_id , tourist_attraction_id , name , description , filename , other_details | staff : staff_id , tourist_attraction_id , name , other_details | tourist_attraction_features : tourist_attraction_id , feature_id output: SELECT Address FROM LOCATIONS WHERE Location_Name  =  \"UK Gallery\"\n Now please use valid SQLite to answer the following questions: Show template ids, version numbers, and template type codes for all templates.",
    "Here is an examples including input and output:\n input: question: Who are the friends of Alice that are doctors? serialized_schema:  | network_2 | person : name , age , city , gender , job | personfriend : name , friend , year output: SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name  =  'Alice' AND T1.gender  =  'male' AND T1.job  =  'doctor'\n Now please use valid SQLite to answer the following questions: What are the ids, version numbers, and type codes for each template?",
    "Here is an examples including input and output:\n input: question: What are the country names, area and population which has both roller coasters with speed higher serialized_schema:  | roller_coaster | roller_coaster : roller_coaster_id , name , park , country_id , length , height , speed , opened , status | country : country_id , name , population , area , languages output: SELECT T1.name ,  T1.area ,  T1.population FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID WHERE T2.speed  >  60 INTERSECT SELECT T1.name ,  T1.area ,  T1.population FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID WHERE T2.speed  <  55\n Now please use valid SQLite to answer the following questions: Show all distinct template type codes for all templates.",
    "Here is an examples including input and output:\n input: question: List the names of technicians in ascending order of age. serialized_schema:  | machine_repair | repair : repair_id , name , launch_date , notes | machine : machine_id , making_year , class , team , machine_series , value_points , quality_rank | technician : technician_id , name , team , starting_year , age | repair_assignment : technician_id , repair_id , machine_id output: SELECT Name FROM technician ORDER BY Age ASC\n Now please use valid SQLite to answer the following questions: What are the different template type codes?",
    "Here is an examples including input and output:\n input: question: How many films have the word 'Dummy' in their titles? serialized_schema:  | cinema | film : film_id , rank_in_series , number_in_season , title , directed_by , original_air_date , production_code | cinema : cinema_id , name , openning_year , capacity , location | schedule : cinema_id , film_id , date , show_times_per_day , price output: SELECT count(*) FROM film WHERE title LIKE \"%Dummy%\"\n Now please use valid SQLite to answer the following questions: What are the ids of templates with template type code PP or PPT?",
    "Here is an examples including input and output:\n input: question: How many departments are in the division AS? serialized_schema:  | college_3 | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building | department : dno , division , dname , room , building , dphone | member_of : facid , dno , appt_type | course : cid , cname , credits , instructor , days , hours , dno | minor_in : stuid , dno | enrolled_in : stuid , cid , grade | gradeconversion : lettergrade , gradepoint output: SELECT count(*) FROM DEPARTMENT WHERE Division  =  \"AS\"\n Now please use valid SQLite to answer the following questions: Return the ids of templates that have the code PP or PPT.",
    "Here is an examples including input and output:\n input: question: How many distinct characteristic names does the product \"cumin\" have? serialized_schema:  | products_gen_characteristics | ref_characteristic_types : characteristic_type_code , characteristic_type_description | ref_colors : color_code , color_description | ref_product_categories : product_category_code , product_category_description , unit_of_measure | characteristics : characteristic_id , characteristic_type_code , characteristic_data_type , characteristic_name , other_characteristic_details | products : product_id , color_code , product_category_code , product_name , typical_buying_price , typical_selling_price , product_description , other_product_details | product_characteristics : product_id , characteristic_id , product_characteristic_value output: SELECT count(DISTINCT t3.characteristic_name) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"sesame\"\n Now please use valid SQLite to answer the following questions: How many templates have template type code CV?",
    "Here is an examples including input and output:\n input: question: What is the full name of the staff member who has rented a film to a customer with the first name April and the last name Burns? serialized_schema:  | sakila_1 | actor : actor_id , first_name , last_name , last_update | address : address_id , address , address2 , district , city_id , postal_code , phone , last_update | category : category_id , name , last_update | city : city_id , city , country_id , last_update | country : country_id , country , last_update | customer : customer_id , store_id , first_name , last_name , email , address_id , active , create_date , last_update | film : film_id , title , description , release_year , language_id , original_language_id , rental_duration , rental_rate , length , replacement_cost , rating , special_features , last_update | film_actor : actor_id , film_id , last_update | film_category : film_id , category_id , last_update | film_text : film_id , title , description | inventory : inventory_id , film_id , store_id , last_update | language : language_id , name , last_update | payment : payment_id , customer_id , staff_id , rental_id , amount , payment_date , last_update | rental : rental_id , rental_date , inventory_id , customer_id , return_date , staff_id , last_update | staff : staff_id , first_name , last_name , address_id , picture , email , store_id , active , username , password , last_update | store : store_id , manager_staff_id , address_id , last_update output: SELECT DISTINCT T1.first_name ,  T1.last_name FROM staff AS T1 JOIN rental AS T2 ON T1.staff_id  =  T2.staff_id JOIN customer AS T3 ON T2.customer_id  =  T3.customer_id WHERE T3.first_name  =  'APRIL' AND T3.last_name  =  'BURNS'\n Now please use valid SQLite to answer the following questions: Count the number of templates of the type CV.",
    "Here is an examples including input and output:\n input: question: What is the name of the dorm with both a TV Lounge and Study Room listed as amenities? serialized_schema:  | dorm_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | dorm : dormid , dorm_name , student_capacity , gender | dorm_amenity : amenid , amenity_name | has_amenity : dormid , amenid | lives_in : stuid , dormid , room_number output: SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'TV Lounge' INTERSECT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'Study Room'\n Now please use valid SQLite to answer the following questions: What is the version number and template type code for the template with version number later than 5?",
    "Here is an examples including input and output:\n input: question: Find the first name of students who is older than 20. serialized_schema:  | dorm_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | dorm : dormid , dorm_name , student_capacity , gender | dorm_amenity : amenid , amenity_name | has_amenity : dormid , amenid | lives_in : stuid , dormid , room_number output: SELECT fname FROM student WHERE age  >  20\n Now please use valid SQLite to answer the following questions: Return the version numbers and template type codes of templates with a version number greater than 5.",
    "Here is an examples including input and output:\n input: question: What is the name of the 3 employees who get paid the least? serialized_schema:  | flight_1 | flight : flno , origin , destination , distance , departure_date , arrival_date , price , aid | aircraft : aid , name , distance | employee : eid , name , salary | certificate : eid , aid output: SELECT name FROM Employee ORDER BY salary ASC LIMIT 3\n Now please use valid SQLite to answer the following questions: Show all template type codes and number of templates for each.",
    "Here is an examples including input and output:\n input: question: Find the average elevation of all airports for each country. serialized_schema:  | flight_4 | routes : rid , dst_apid , dst_ap , src_apid , src_ap , alid , airline , codeshare | airports : apid , name , city , country , x , y , elevation , iata , icao | airlines : alid , name , iata , icao , callsign , country , active output: SELECT avg(elevation) ,  country FROM airports GROUP BY country\n Now please use valid SQLite to answer the following questions: What are the different template type codes, and how many templates correspond to each?",
    "Here is an examples including input and output:\n input: question: How many persons are not body builders? serialized_schema:  | body_builder | body_builder : body_builder_id , people_id , snatch , clean_jerk , total | people : people_id , name , height , weight , birth_date , birth_place output: SELECT count(*) FROM people WHERE people_id NOT IN (SELECT People_ID FROM body_builder)\n Now please use valid SQLite to answer the following questions: Which template type code has most number of templates?",
    "Here is an examples including input and output:\n input: question: Return the countries of the mountains that have a height larger than 5000. serialized_schema:  | climbing | mountain : mountain_id , name , height , prominence , range , country | climber : climber_id , name , country , time , points , mountain_id output: SELECT Country FROM mountain WHERE Height  >  5000\n Now please use valid SQLite to answer the following questions: Return the type code of the template type that the most templates belong to.",
    "Here is an examples including input and output:\n input: question: What are the cities that have a branch that opened in 2001 and a branch with more than 100 members? serialized_schema:  | shop_membership | member : member_id , card_number , name , hometown , level | branch : branch_id , name , open_year , address_road , city , membership_amount | membership_register_branch : member_id , branch_id , register_year | purchase : member_id , branch_id , year , total_pounds output: SELECT city FROM branch WHERE open_year  =  2001 AND membership_amount  >  100\n Now please use valid SQLite to answer the following questions: Show all template type codes with less than three templates.",
    "Here is an examples including input and output:\n input: question: What is the name and city of the airport that the most routes end at? serialized_schema:  | flight_4 | routes : rid , dst_apid , dst_ap , src_apid , src_ap , alid , airline , codeshare | airports : apid , name , city , country , x , y , elevation , iata , icao | airlines : alid , name , iata , icao , callsign , country , active output: SELECT T1.name ,  T1.city ,  T2.dst_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid GROUP BY T2.dst_apid ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: What are the codes of template types that have fewer than 3 templates?",
    "Here is an examples including input and output:\n input: question: What are the last names and ages of the students who are allergic to milk and cat? serialized_schema:  | allergy_1 | allergy_type : allergy , allergytype | has_allergy : stuid , allergy | student : stuid , lname , fname , age , sex , major , advisor , city_code output: SELECT lname ,  age FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Milk\" INTERSECT SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Cat\")\n Now please use valid SQLite to answer the following questions: What the smallest version number and its template type code?",
    "Here is an examples including input and output:\n input: question: Give me the product type, name and price for all the products supplied by supplier id 3. serialized_schema:  | department_store | addresses : address_id , address_details | staff : staff_id , staff_gender , staff_name | suppliers : supplier_id , supplier_name , supplier_phone | department_store_chain : dept_store_chain_id , dept_store_chain_name | customers : customer_id , payment_method_code , customer_code , customer_name , customer_address , customer_phone , customer_email | products : product_id , product_type_code , product_name , product_price | supplier_addresses : supplier_id , address_id , date_from , date_to | customer_addresses : customer_id , address_id , date_from , date_to | customer_orders : order_id , customer_id , order_status_code , order_date | department_stores : dept_store_id , dept_store_chain_id , store_name , store_address , store_phone , store_email | departments : department_id , dept_store_id , department_name | order_items : order_item_id , order_id , product_id | product_suppliers : product_id , supplier_id , date_supplied_from , date_supplied_to , total_amount_purchased , total_value_purchased | staff_department_assignments : staff_id , department_id , date_assigned_from , job_title_code , date_assigned_to output: SELECT T2.product_type_code ,  T2.product_name ,  T2.product_price FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  3\n Now please use valid SQLite to answer the following questions: Return the lowest version number, along with its corresponding template type code.",
    "Here is an examples including input and output:\n input: question: Give the name of the highest paid instructor. serialized_schema:  | college_2 | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id output: SELECT name FROM instructor ORDER BY salary DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: What is the template type code of the template used by document with the name \"Data base\"?",
    "Here is an examples including input and output:\n input: question: What are the ids of all moviest hat have not been reviewed by Britanny Harris? serialized_schema:  | movie_1 | movie : mid , title , year , director | reviewer : rid , name | rating : rid , mid , stars , ratingdate output: SELECT mID FROM Rating EXCEPT SELECT T1.mID FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T2.name  =  \"Brittany Harris\"\n Now please use valid SQLite to answer the following questions: Return the template type code of the template that is used by a document named Data base.",
    "Here is an examples including input and output:\n input: question: What are the names of all songs that are approximately 4 minutes long or are in English? serialized_schema:  | music_1 | genre : g_name , rating , most_popular_in | artist : artist_name , country , gender , preferred_genre | files : f_id , artist_name , file_size , duration , formats | song : song_name , artist_name , country , f_id , genre_is , rating , languages , releasedate , resolution output: SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.duration LIKE \"4:%\" UNION SELECT song_name FROM song WHERE languages  =  \"english\"\n Now please use valid SQLite to answer the following questions: Show all document names using templates with template type code BK.",
    "Here is an examples including input and output:\n input: question: Find the full name of the customer with the email \"luisg@embraer.com.br\". serialized_schema:  | chinook_1 | album : albumid , title , artistid | artist : artistid , name | customer : customerid , firstname , lastname , company , address , city , state , country , postalcode , phone , fax , email , supportrepid | employee : employeeid , lastname , firstname , title , reportsto , birthdate , hiredate , address , city , state , country , postalcode , phone , fax , email | genre : genreid , name | invoice : invoiceid , customerid , invoicedate , billingaddress , billingcity , billingstate , billingcountry , billingpostalcode , total | invoiceline : invoicelineid , invoiceid , trackid , unitprice , quantity | mediatype : mediatypeid , name | playlist : playlistid , name | playlisttrack : playlistid , trackid | track : trackid , name , albumid , mediatypeid , genreid , composer , milliseconds , bytes , unitprice output: SELECT FirstName ,  LastName FROM CUSTOMER WHERE Email  =  \"luisg@embraer.com.br\"\n Now please use valid SQLite to answer the following questions: What are the names of documents that use templates with the code BK?",
    "Here is an examples including input and output:\n input: question: Count the number of all the calendar items. serialized_schema:  | cre_Doc_Tracking_DB | ref_document_types : document_type_code , document_type_name , document_type_description | ref_calendar : calendar_date , day_number | ref_locations : location_code , location_name , location_description | roles : role_code , role_name , role_description | all_documents : document_id , date_stored , document_type_code , document_name , document_description , other_details | employees : employee_id , role_code , employee_name , gender_mfu , date_of_birth , other_details | document_locations : document_id , location_code , date_in_location_from , date_in_locaton_to | documents_to_be_destroyed : document_id , destruction_authorised_by_employee_id , destroyed_by_employee_id , planned_destruction_date , actual_destruction_date , other_details output: SELECT count(*) FROM Ref_calendar\n Now please use valid SQLite to answer the following questions: Show all template type codes and the number of documents using each type.",
    "Here is an examples including input and output:\n input: question: Which institution has the most papers? Find the name of the institution. serialized_schema:  | icfp_1 | inst : instid , name , country | authors : authid , lname , fname | papers : paperid , title | authorship : authid , instid , paperid , authorder output: SELECT t1.name FROM inst AS t1 JOIN authorship AS t2 ON t1.instid  =  t2.instid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.name ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: What are the different template type codes, and how many documents use each type?",
    "Here is an examples including input and output:\n input: question: Who are Bob's friends? serialized_schema:  | network_2 | person : name , age , city , gender , job | personfriend : name , friend , year output: SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T1.name  =  'Bob'\n Now please use valid SQLite to answer the following questions: Which template type code is used by most number of documents?",
    "Here is an examples including input and output:\n input: question: Show the ids of all the faculty members who participate in an activity and advise a student. serialized_schema:  | activity_1 | activity : actid , activity_name | participates_in : stuid , actid | faculty_participates_in : facid , actid | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building output: SELECT FacID FROM Faculty_participates_in INTERSECT SELECT advisor FROM Student\n Now please use valid SQLite to answer the following questions: Return the code of the template type that is most commonly used in documents.",
    "Here is an examples including input and output:\n input: question: Show the average, minimum, and maximum age for different majors. serialized_schema:  | game_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | video_games : gameid , gname , gtype | plays_games : stuid , gameid , hours_played | sportsinfo : stuid , sportname , hoursperweek , gamesplayed , onscholarship output: SELECT major ,  avg(age) ,  min(age) ,  max(age) FROM Student GROUP BY major\n Now please use valid SQLite to answer the following questions: Show all template type codes that are not used by any document.",
    "Here is an examples including input and output:\n input: question: Give me the start station and end station for the trips with the three oldest id. serialized_schema:  | bike_1 | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code output: SELECT start_station_name ,  end_station_name FROM trip ORDER BY id LIMIT 3\n Now please use valid SQLite to answer the following questions: What are the codes of template types that are not used for any document?",
    "Here is an examples including input and output:\n input: question: What are the full names of customers who do not have any accounts? serialized_schema:  | customers_card_transactions | accounts : account_id , customer_id , account_name , other_account_details | customers : customer_id , customer_first_name , customer_last_name , customer_address , customer_phone , customer_email , other_customer_details | customers_cards : card_id , customer_id , card_type_code , card_number , date_valid_from , date_valid_to , other_card_details | financial_transactions : transaction_id , previous_transaction_id , account_id , card_id , transaction_type , transaction_date , transaction_amount , transaction_comment , other_transaction_details output: SELECT customer_first_name ,  customer_last_name FROM Customers EXCEPT SELECT T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id\n Now please use valid SQLite to answer the following questions: Show all template type codes and descriptions.",
    "Here is an examples including input and output:\n input: question: Show names for all employees with salary more than the average. serialized_schema:  | flight_1 | flight : flno , origin , destination , distance , departure_date , arrival_date , price , aid | aircraft : aid , name , distance | employee : eid , name , salary | certificate : eid , aid output: SELECT name FROM Employee WHERE salary  >  (SELECT avg(salary) FROM Employee)\n Now please use valid SQLite to answer the following questions: What are the type codes and descriptions for all template types?",
    "Here is an examples including input and output:\n input: question: What are the names and ids of stations that had more than 14 bikes available on average or were installed in December? serialized_schema:  | bike_1 | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code output: SELECT T1.name ,  T1.id FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id GROUP BY T2.station_id HAVING avg(T2.bikes_available)  >  14 UNION SELECT name ,  id FROM station WHERE installation_date LIKE \"12/%\"\n Now please use valid SQLite to answer the following questions: What is the template type descriptions for template type code \"AD\".",
    "Here is an examples including input and output:\n input: question: What are the task details, task id and project id for the projects which are detailed as 'omnis' or  have more than 2 outcomes? serialized_schema:  | tracking_grants_for_research | document_types : document_type_code , document_description | documents : document_id , document_type_code , grant_id , sent_date , response_received_date , other_details | grants : grant_id , organisation_id , grant_amount , grant_start_date , grant_end_date , other_details | organisation_types : organisation_type , organisation_type_description | organisations : organisation_id , organisation_type , organisation_details | project_outcomes : project_id , outcome_code , outcome_details | project_staff : staff_id , project_id , role_code , date_from , date_to , other_details | projects : project_id , organisation_id , project_details | research_outcomes : outcome_code , outcome_description | research_staff : staff_id , employer_organisation_id , staff_details | staff_roles : role_code , role_description | tasks : task_id , project_id , task_details , eg agree objectives output: SELECT T1.task_details ,  T1.task_id ,  T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  'omnis' UNION SELECT T1.task_details ,  T1.task_id ,  T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.project_id HAVING count(*)  >  2\n Now please use valid SQLite to answer the following questions: Return the template type description of the template type with the code AD.",
    "Here is an examples including input and output:\n input: question: How many phones belongs to each accreditation type? serialized_schema:  | phone_1 | chip_model : model_name , launch_year , ram_mib , rom_mib , slots , wifi , bluetooth | screen_mode : graphics_mode , char_cells , pixels , hardware_colours , used_kb , map , type | phone : company_name , hardware_model_name , accreditation_type , accreditation_level , date , chip_model , screen_mode output: SELECT Accreditation_type ,  count(*) FROM phone GROUP BY Accreditation_type\n Now please use valid SQLite to answer the following questions: What is the template type code for template type description \"Book\".",
    "Here is an examples including input and output:\n input: question: How many courses do the student whose id is 171 attend? serialized_schema:  | student_assessment | addresses : address_id , line_1 , line_2 , city , zip_postcode , state_province_county , country | people : person_id , first_name , middle_name , last_name , cell_mobile_number , email_address , login_name , password | students : student_id , student_details | courses : course_id , course_name , course_description , other_details | people_addresses : person_address_id , person_id , address_id , date_from , date_to | student_course_registrations : student_id , course_id , registration_date | student_course_attendance : student_id , course_id , date_of_attendance | candidates : candidate_id , candidate_details | candidate_assessments : candidate_id , qualification , assessment_date , asessment_outcome_code output: SELECT count(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T2.student_id = 171\n Now please use valid SQLite to answer the following questions: Return the type code of the template type with the description \"Book\".",
    "Here is an examples including input and output:\n input: question: Show the names and total passengers for all train stations not in London. serialized_schema:  | train_station | station : station_id , name , annual_entry_exit , annual_interchanges , total_passengers , location , main_services , number_of_platforms | train : train_id , name , time , service | train_station : train_id , station_id output: SELECT name ,  total_passengers FROM station WHERE LOCATION != 'London'\n Now please use valid SQLite to answer the following questions: What are the distinct template type descriptions for the templates ever used by any document?",
    "Here is an examples including input and output:\n input: question: Find the name of the product that has the smallest capacity. serialized_schema:  | product_catalog | attribute_definitions : attribute_id , attribute_name , attribute_data_type | catalogs : catalog_id , catalog_name , catalog_publisher , date_of_publication , date_of_latest_revision | catalog_structure : catalog_level_number , catalog_id , catalog_level_name | catalog_contents : catalog_entry_id , catalog_level_number , parent_entry_id , previous_entry_id , next_entry_id , catalog_entry_name , product_stock_number , price_in_dollars , price_in_euros , price_in_pounds , capacity , length , height , width | catalog_contents_additional_attributes : catalog_entry_id , catalog_level_number , attribute_id , attribute_value output: SELECT catalog_entry_name FROM catalog_contents ORDER BY capacity ASC LIMIT 1\n Now please use valid SQLite to answer the following questions: Return the different descriptions for templates that have been used in a document.",
    "Here is an examples including input and output:\n input: question: How many distinct types of accounts are there? serialized_schema:  | loan_1 | bank : branch_id , bname , no_of_customers , city , state | customer : cust_id , cust_name , acc_type , acc_bal , no_of_loans , credit_score , branch_id , state | loan : loan_id , loan_type , cust_id , branch_id , amount output: SELECT count(DISTINCT acc_type) FROM customer\n Now please use valid SQLite to answer the following questions: What are the template ids with template type description \"Presentation\".",
    "Here is an examples including input and output:\n input: question: List all the log ids and their descriptions from the problem logs. serialized_schema:  | tracking_software_problems | problem_category_codes : problem_category_code , problem_category_description | problem_log : problem_log_id , assigned_to_staff_id , problem_id , problem_category_code , problem_status_code , log_entry_date , log_entry_description , log_entry_fix , other_log_details | problem_status_codes : problem_status_code , problem_status_description | product : product_id , product_name , product_details | staff : staff_id , staff_first_name , staff_last_name , other_staff_details | problems : problem_id , product_id , closure_authorised_by_staff_id , reported_by_staff_id , date_problem_reported , date_problem_closed , problem_description , other_problem_details output: SELECT problem_log_id ,  log_entry_description FROM problem_log\n Now please use valid SQLite to answer the following questions: Return the ids corresponding to templates with the description 'Presentation'.",
    "Here is an examples including input and output:\n input: question: What are the draft pick numbers and draft classes for players who play the Defender position? serialized_schema:  | match_season | country : country_id , country_name , capital , official_native_language | team : team_id , name | match_season : season , player , position , country , team , draft_pick_number , draft_class , college | player : player_id , player , years_played , total_wl , singles_wl , doubles_wl , team output: SELECT Draft_Pick_Number ,  Draft_Class FROM match_season WHERE POSITION  =  \"Defender\"\n Now please use valid SQLite to answer the following questions: How many paragraphs in total?",
    "Here is an examples including input and output:\n input: question: What are the names of customers who never made an order. serialized_schema:  | customers_and_addresses | addresses : address_id , address_content , city , zip_postcode , state_province_county , country , other_address_details | products : product_id , product_details | customers : customer_id , payment_method , customer_name , date_became_customer , other_customer_details | customer_addresses : customer_id , address_id , date_address_from , address_type , date_address_to | customer_contact_channels : customer_id , channel_code , active_from_date , active_to_date , contact_number | customer_orders : order_id , customer_id , order_status , order_date , order_details | order_items : order_id , product_id , order_quantity output: SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id\n Now please use valid SQLite to answer the following questions: Count the number of paragraphs.",
    "Here is an examples including input and output:\n input: question: How many trips stated from  a station in Mountain View and ended at one in Palo Alto? serialized_schema:  | bike_1 | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code output: SELECT count(*) FROM station AS T1 JOIN trip AS T2 JOIN station AS T3 JOIN trip AS T4 ON T1.id  =  T2.start_station_id AND T2.id  =  T4.id AND T3.id  =  T4.end_station_id WHERE T1.city  =  \"Mountain View\" AND T3.city  =  \"Palo Alto\"\n Now please use valid SQLite to answer the following questions: How many paragraphs for the document with name 'Summer Show'?",
    "Here is an examples including input and output:\n input: question: Return the maximum and minimum population among all counties. serialized_schema:  | election | county : county_id , county_name , population , zip_code | party : party_id , year , party , governor , lieutenant_governor , comptroller , attorney_general , us_senate | election : election_id , counties_represented , district , delegate , party , first_elected , committee output: SELECT max(Population) ,  min(Population) FROM county\n Now please use valid SQLite to answer the following questions: Count the number of paragraphs in the document named 'Summer Show'.",
    "Here is an examples including input and output:\n input: question: What are the numbers of all flights that can cover a distance of more than 2000? serialized_schema:  | flight_1 | flight : flno , origin , destination , distance , departure_date , arrival_date , price , aid | aircraft : aid , name , distance | employee : eid , name , salary | certificate : eid , aid output: SELECT flno FROM Flight WHERE distance  >  2000\n Now please use valid SQLite to answer the following questions: Show paragraph details for paragraph with text 'Korea ' .",
    "Here is an examples including input and output:\n input: question: What is the title, phone and hire date of Nancy Edwards? serialized_schema:  | store_1 | artists : id , name | sqlite_sequence : name , seq | albums : id , title , artist_id | employees : id , last_name , first_name , title , reports_to , birth_date , hire_date , address , city , state , country , postal_code , phone , fax , email | customers : id , first_name , last_name , company , address , city , state , country , postal_code , phone , fax , email , support_rep_id | genres : id , name | invoices : id , customer_id , invoice_date , billing_address , billing_city , billing_state , billing_country , billing_postal_code , total | media_types : id , name | tracks : id , name , album_id , media_type_id , genre_id , composer , milliseconds , bytes , unit_price | invoice_lines : id , invoice_id , track_id , unit_price , quantity | playlists : id , name | playlist_tracks : playlist_id , track_id output: SELECT title ,  phone ,  hire_date FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";\n Now please use valid SQLite to answer the following questions: What are the details for the paragraph that includes the text 'Korea ' ?",
    "Here is an examples including input and output:\n input: question: Show the names of customers who have the most mailshots. serialized_schema:  | customers_campaigns_ecommerce | premises : premise_id , premises_type , premise_details | products : product_id , product_category , product_name | customers : customer_id , payment_method , customer_name , customer_phone , customer_email , customer_address , customer_login , customer_password | mailshot_campaigns : mailshot_id , product_category , mailshot_name , mailshot_start_date , mailshot_end_date | customer_addresses : customer_id , premise_id , date_address_from , address_type_code , date_address_to | customer_orders : order_id , customer_id , order_status_code , shipping_method_code , order_placed_datetime , order_delivered_datetime , order_shipping_charges | mailshot_customers : mailshot_id , customer_id , outcome_code , mailshot_customer_date | order_items : item_id , order_item_status_code , order_id , product_id , item_status_code , item_delivered_datetime , item_order_quantity output: SELECT T2.customer_name FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: Show all paragraph ids and texts for the document with name 'Welcome to NY'.",
    "Here is an examples including input and output:\n input: question: What are the codes of types of documents of which there are for or more? serialized_schema:  | document_management | roles : role_code , role_description | users : user_id , role_code , user_name , user_login , password | document_structures : document_structure_code , parent_document_structure_code , document_structure_description | functional_areas : functional_area_code , parent_functional_area_code , functional_area_description | images : image_id , image_alt_text , image_name , image_url | documents : document_code , document_structure_code , document_type_code , access_count , document_name | document_functional_areas : document_code , functional_area_code | document_sections : section_id , document_code , section_sequence , section_code , section_title | document_sections_images : section_id , image_id output: SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*)  >  4\n Now please use valid SQLite to answer the following questions: What are the ids and texts of paragraphs in the document titled 'Welcome to NY'?",
    "Here is an examples including input and output:\n input: question: For each product, return its id and the number of times it was ordered. serialized_schema:  | tracking_orders | customers : customer_id , customer_name , customer_details | invoices : invoice_number , invoice_date , invoice_details | orders : order_id , customer_id , order_status , date_order_placed , order_details | products : product_id , product_name , product_details | order_items : order_item_id , product_id , order_id , order_item_status , order_item_details | shipments : shipment_id , order_id , invoice_number , shipment_tracking_number , shipment_date , other_shipment_details | shipment_items : shipment_id , order_item_id output: SELECT count(*) ,  T3.product_id FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id\n Now please use valid SQLite to answer the following questions: Show all paragraph texts for the document \"Customer reviews\".",
    "Here is an examples including input and output:\n input: question: Find the names of schools that have more than one donator with donation amount above 8.5. serialized_schema:  | school_finance | school : school_id , school_name , location , mascot , enrollment , ihsaa_class , ihsaa_football_class , county | budget : school_id , year , budgeted , total_budget_percent_budgeted , invested , total_budget_percent_invested , budget_invested_percent | endowment : endowment_id , school_id , donator_name , amount output: SELECT T2.School_name FROM endowment AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T1.amount  >  8.5 GROUP BY T1.school_id HAVING count(*)  >  1\n Now please use valid SQLite to answer the following questions: What are the paragraph texts for the document with the name 'Customer reviews'?",
    "Here is an examples including input and output:\n input: question: What are the names of countries that have both players with position forward and players with position defender? serialized_schema:  | match_season | country : country_id , country_name , capital , official_native_language | team : team_id , name | match_season : season , player , position , country , team , draft_pick_number , draft_class , college | player : player_id , player , years_played , total_wl , singles_wl , doubles_wl , team output: SELECT T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.Position  =  \"Forward\" INTERSECT SELECT T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.Position  =  \"Defender\"\n Now please use valid SQLite to answer the following questions: Show all document ids and the number of paragraphs in each document. Order by document id.",
    "Here is an examples including input and output:\n input: question: How many institutions are there? serialized_schema:  | icfp_1 | inst : instid , name , country | authors : authid , lname , fname | papers : paperid , title | authorship : authid , instid , paperid , authorder output: SELECT count(*) FROM inst\n Now please use valid SQLite to answer the following questions: Return the different document ids along with the number of paragraphs corresponding to each, ordered by id.",
    "Here is an examples including input and output:\n input: question: Return the first names of customers who did not rented a film after the date '2005-08-23 02:06:01'. serialized_schema:  | sakila_1 | actor : actor_id , first_name , last_name , last_update | address : address_id , address , address2 , district , city_id , postal_code , phone , last_update | category : category_id , name , last_update | city : city_id , city , country_id , last_update | country : country_id , country , last_update | customer : customer_id , store_id , first_name , last_name , email , address_id , active , create_date , last_update | film : film_id , title , description , release_year , language_id , original_language_id , rental_duration , rental_rate , length , replacement_cost , rating , special_features , last_update | film_actor : actor_id , film_id , last_update | film_category : film_id , category_id , last_update | film_text : film_id , title , description | inventory : inventory_id , film_id , store_id , last_update | language : language_id , name , last_update | payment : payment_id , customer_id , staff_id , rental_id , amount , payment_date , last_update | rental : rental_id , rental_date , inventory_id , customer_id , return_date , staff_id , last_update | staff : staff_id , first_name , last_name , address_id , picture , email , store_id , active , username , password , last_update | store : store_id , manager_staff_id , address_id , last_update output: SELECT first_name FROM customer WHERE customer_id NOT IN( SELECT customer_id FROM rental WHERE rental_date  >  '2005-08-23 02:06:01' )\n Now please use valid SQLite to answer the following questions: Show all document ids, names and the number of paragraphs in each document.",
    "Here is an examples including input and output:\n input: question: Find the id of the candidate who got the lowest oppose rate. serialized_schema:  | candidate_poll | candidate : candidate_id , people_id , poll_source , date , support_rate , consider_rate , oppose_rate , unsure_rate | people : people_id , sex , name , date_of_birth , height , weight output: SELECT Candidate_ID FROM candidate ORDER BY oppose_rate LIMIT 1\n Now please use valid SQLite to answer the following questions: What are the ids and names of each document, as well as the number of paragraphs in each?",
    "Here is an examples including input and output:\n input: question: What is the highest elevation of an airport in the country of Iceland? serialized_schema:  | flight_4 | routes : rid , dst_apid , dst_ap , src_apid , src_ap , alid , airline , codeshare | airports : apid , name , city , country , x , y , elevation , iata , icao | airlines : alid , name , iata , icao , callsign , country , active output: SELECT max(elevation) FROM airports WHERE country  =  'Iceland'\n Now please use valid SQLite to answer the following questions: List all document ids with at least two paragraphs.",
    "Here is an examples including input and output:\n input: question: What is the average weight of all players? serialized_schema:  | soccer_1 | player_attributes : id , player_fifa_api_id , player_api_id , date , overall_rating , potential , preferred_foot , attacking_work_rate , defensive_work_rate , crossing , finishing , heading_accuracy , short_passing , volleys , dribbling , curve , free_kick_accuracy , long_passing , ball_control , acceleration , sprint_speed , agility , reactions , balance , shot_power , jumping , stamina , strength , long_shots , aggression , interceptions , positioning , vision , penalties , marking , standing_tackle , sliding_tackle , gk_diving , gk_handling , gk_kicking , gk_positioning , gk_reflexes | sqlite_sequence : name , seq | player : id , player_api_id , player_name , player_fifa_api_id , birthday , height , weight | league : id , country_id , name | country : id , name | team : id , team_api_id , team_fifa_api_id , team_long_name , team_short_name | team_attributes : id , team_fifa_api_id , team_api_id , date , buildupplayspeed , buildupplayspeedclass , buildupplaydribbling , buildupplaydribblingclass , buildupplaypassing , buildupplaypassingclass , buildupplaypositioningclass , chancecreationpassing , chancecreationpassingclass , chancecreationcrossing , chancecreationcrossingclass , chancecreationshooting , chancecreationshootingclass , chancecreationpositioningclass , defencepressure , defencepressureclass , defenceaggression , defenceaggressionclass , defenceteamwidth , defenceteamwidthclass , defencedefenderlineclass output: SELECT avg(weight) FROM Player\n Now please use valid SQLite to answer the following questions: What are the ids of documents that have 2 or more paragraphs?",
    "Here is an examples including input and output:\n input: question: Find the name of the project for which a scientist whose name contains ‘Smith’ is assigned to. serialized_schema:  | scientist_1 | scientists : ssn , name | projects : code , name , hours | assignedto : scientist , project output: SELECT T2.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T3.name LIKE '%Smith%'\n Now please use valid SQLite to answer the following questions: What is the document id and name with greatest number of paragraphs?",
    "Here is an examples including input and output:\n input: question: Which papers' first author is affiliated with an institution in the country \"Japan\" and has last name \"Ohori\"? Give me the titles of the papers. serialized_schema:  | icfp_1 | inst : instid , name , country | authors : authid , lname , fname | papers : paperid , title | authorship : authid , instid , paperid , authorder output: SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid JOIN inst AS t4 ON t2.instid  =  t4.instid WHERE t4.country  =  \"Japan\" AND t2.authorder  =  1 AND t1.lname  =  \"Ohori\"\n Now please use valid SQLite to answer the following questions: Return the id and name of the document with the most paragraphs.",
    "Here is an examples including input and output:\n input: question: What are the different names and countries of origins for all artists whose song ratings are above 9? serialized_schema:  | music_1 | genre : g_name , rating , most_popular_in | artist : artist_name , country , gender , preferred_genre | files : f_id , artist_name , file_size , duration , formats | song : song_name , artist_name , country , f_id , genre_is , rating , languages , releasedate , resolution output: SELECT DISTINCT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.rating  >  9\n Now please use valid SQLite to answer the following questions: What is the document id with least number of paragraphs?",
    "Here is an examples including input and output:\n input: question: In which country does Roberto Almeida? serialized_schema:  | store_1 | artists : id , name | sqlite_sequence : name , seq | albums : id , title , artist_id | employees : id , last_name , first_name , title , reports_to , birth_date , hire_date , address , city , state , country , postal_code , phone , fax , email | customers : id , first_name , last_name , company , address , city , state , country , postal_code , phone , fax , email , support_rep_id | genres : id , name | invoices : id , customer_id , invoice_date , billing_address , billing_city , billing_state , billing_country , billing_postal_code , total | media_types : id , name | tracks : id , name , album_id , media_type_id , genre_id , composer , milliseconds , bytes , unit_price | invoice_lines : id , invoice_id , track_id , unit_price , quantity | playlists : id , name | playlist_tracks : playlist_id , track_id output: SELECT country FROM customers WHERE first_name = \"Roberto\" AND last_name = \"Almeida\";\n Now please use valid SQLite to answer the following questions: Return the id of the document with the fewest paragraphs.",
    "Here is an examples including input and output:\n input: question: Show the names of journalists and the number of events they reported. serialized_schema:  | news_report | event : event_id , date , venue , name , event_attendance | journalist : journalist_id , name , nationality , age , years_working | news_report : journalist_id , event_id , work_type output: SELECT T3.Name ,  COUNT(*) FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID GROUP BY T3.Name\n Now please use valid SQLite to answer the following questions: What is the document id with 1 to 2 paragraphs?",
    "Here is an examples including input and output:\n input: question: What is the average age for each gender? serialized_schema:  | network_2 | person : name , age , city , gender , job | personfriend : name , friend , year output: SELECT avg(age) ,  gender FROM Person GROUP BY gender\n Now please use valid SQLite to answer the following questions: Give the ids of documents that have between one and two paragraphs.",
    "Here is an examples including input and output:\n input: question: Find the name of the department that has the fewest members. serialized_schema:  | college_3 | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building | department : dno , division , dname , room , building , dphone | member_of : facid , dno , appt_type | course : cid , cname , credits , instructor , days , hours , dno | minor_in : stuid , dno | enrolled_in : stuid , cid , grade | gradeconversion : lettergrade , gradepoint output: SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MEMBER_OF AS T2 ON T1.DNO  =  T2.DNO GROUP BY T2.DNO ORDER BY count(*) ASC LIMIT 1\n Now please use valid SQLite to answer the following questions: Show the document id with paragraph text 'Brazil' and 'Ireland'.",
    "Here is an examples including input and output:\n input: question: List the hosts of performances in ascending order of attendance. serialized_schema:  | performance_attendance | member : member_id , name , nationality , role | performance : performance_id , date , host , location , attendance | member_attendance : member_id , performance_id , num_of_pieces output: SELECT HOST FROM performance ORDER BY Attendance ASC\n Now please use valid SQLite to answer the following questions: What are the ids of documents that contain the paragraph text 'Brazil' and 'Ireland'?",
    "Here is an examples including input and output:\n input: question: How many Professors are in building NEB? serialized_schema:  | activity_1 | activity : actid , activity_name | participates_in : stuid , actid | faculty_participates_in : facid , actid | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building output: SELECT count(*) FROM Faculty WHERE Rank  =  \"Professor\" AND building  =  \"NEB\"\n Now please use valid SQLite to answer the following questions: How many teachers are there?",
    "Here is an examples including input and output:\n input: question: Find the number of checking accounts for each account name. serialized_schema:  | small_bank_1 | accounts : custid , name | savings : custid , balance | checking : custid , balance output: SELECT count(*) ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid GROUP BY T1.name\n Now please use valid SQLite to answer the following questions: What is the total count of teachers?",
    "Here is an examples including input and output:\n input: question: List the name and the number of stations for all the cities that have at least 15 stations. serialized_schema:  | bike_1 | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code output: SELECT city ,  COUNT(*) FROM station GROUP BY city HAVING COUNT(*)  >=  15\n Now please use valid SQLite to answer the following questions: List the names of teachers in ascending order of age.",
    "Here is an examples including input and output:\n input: question: How many members of club \"Bootup Baltimore\" are younger than 18? serialized_schema:  | club_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | club : clubid , clubname , clubdesc , clublocation | member_of_club : stuid , clubid , position output: SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t3.age  <  18\n Now please use valid SQLite to answer the following questions: What are the names of the teachers ordered by ascending age?",
    "Here is an examples including input and output:\n input: question: For each bed type, find the average room price. serialized_schema:  | inn_1 | rooms : roomid , roomname , beds , bedtype , maxoccupancy , baseprice , decor | reservations : code , room , checkin , checkout , rate , lastname , firstname , adults , kids output: SELECT bedType ,  avg(basePrice) FROM Rooms GROUP BY bedType;\n Now please use valid SQLite to answer the following questions: What are the age and hometown of teachers?",
    "Here is an examples including input and output:\n input: question: Find the name of the dorm with the largest capacity. serialized_schema:  | dorm_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | dorm : dormid , dorm_name , student_capacity , gender | dorm_amenity : amenid , amenity_name | has_amenity : dormid , amenid | lives_in : stuid , dormid , room_number output: SELECT dorm_name FROM dorm ORDER BY student_capacity DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: What is the age and hometown of every teacher?",
    "Here is an examples including input and output:\n input: question: What are the names of all the media types? serialized_schema:  | store_1 | artists : id , name | sqlite_sequence : name , seq | albums : id , title , artist_id | employees : id , last_name , first_name , title , reports_to , birth_date , hire_date , address , city , state , country , postal_code , phone , fax , email | customers : id , first_name , last_name , company , address , city , state , country , postal_code , phone , fax , email , support_rep_id | genres : id , name | invoices : id , customer_id , invoice_date , billing_address , billing_city , billing_state , billing_country , billing_postal_code , total | media_types : id , name | tracks : id , name , album_id , media_type_id , genre_id , composer , milliseconds , bytes , unit_price | invoice_lines : id , invoice_id , track_id , unit_price , quantity | playlists : id , name | playlist_tracks : playlist_id , track_id output: SELECT name FROM media_types;\n Now please use valid SQLite to answer the following questions: List the name of teachers whose hometown is not `` Little Lever Urban District '' .",
    "Here is an examples including input and output:\n input: question: Which tourist attraction is associated with the photo \"game1\"? Return its name. serialized_schema:  | cre_Theme_park | ref_hotel_star_ratings : star_rating_code , star_rating_description | locations : location_id , location_name , address , other_details | ref_attraction_types : attraction_type_code , attraction_type_description | visitors : tourist_id , tourist_details | features : feature_id , feature_details | hotels : hotel_id , star_rating_code , pets_allowed_yn , price_range , other_hotel_details | tourist_attractions : tourist_attraction_id , attraction_type_code , location_id , how_to_get_there , name , description , opening_hours , other_details | street_markets : market_id , market_details | shops : shop_id , shop_details | museums : museum_id , museum_details | royal_family : royal_family_id , royal_family_details | theme_parks : theme_park_id , theme_park_details | visits : visit_id , tourist_attraction_id , tourist_id , visit_date , visit_details | photos : photo_id , tourist_attraction_id , name , description , filename , other_details | staff : staff_id , tourist_attraction_id , name , other_details | tourist_attraction_features : tourist_attraction_id , feature_id output: SELECT T2.Name FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T1.Name  =  \"game1\"\n Now please use valid SQLite to answer the following questions: What are the names of the teachers whose hometown is not `` Little Lever Urban District '' ?",
    "Here is an examples including input and output:\n input: question: What are the personal names used both by some course authors and some students? serialized_schema:  | e_learning | course_authors_and_tutors : author_id , author_tutor_atb , login_name , password , personal_name , middle_name , family_name , gender_mf , address_line_1 | students : student_id , date_of_registration , date_of_latest_logon , login_name , password , personal_name , middle_name , family_name | subjects : subject_id , subject_name | courses : course_id , author_id , subject_id , course_name , course_description | student_course_enrolment : registration_id , student_id , course_id , date_of_enrolment , date_of_completion | student_tests_taken : registration_id , date_test_taken , test_result output: SELECT personal_name FROM Course_Authors_and_Tutors INTERSECT SELECT personal_name FROM Students\n Now please use valid SQLite to answer the following questions: Show the name of teachers aged either 32 or 33?",
    "Here is an examples including input and output:\n input: question: What are the invoice numbers created before 1989-09-03 or after 2007-12-25? serialized_schema:  | tracking_orders | customers : customer_id , customer_name , customer_details | invoices : invoice_number , invoice_date , invoice_details | orders : order_id , customer_id , order_status , date_order_placed , order_details | products : product_id , product_name , product_details | order_items : order_item_id , product_id , order_id , order_item_status , order_item_details | shipments : shipment_id , order_id , invoice_number , shipment_tracking_number , shipment_date , other_shipment_details | shipment_items : shipment_id , order_item_id output: SELECT invoice_number FROM invoices WHERE invoice_date < \"1989-09-03\" OR invoice_date > \"2007-12-25\"\n Now please use valid SQLite to answer the following questions: What are the names of the teachers who are aged either 32 or 33?",
    "Here is an examples including input and output:\n input: question: What are the usernames and passwords of users that have the most common role? serialized_schema:  | document_management | roles : role_code , role_description | users : user_id , role_code , user_name , user_login , password | document_structures : document_structure_code , parent_document_structure_code , document_structure_description | functional_areas : functional_area_code , parent_functional_area_code , functional_area_description | images : image_id , image_alt_text , image_name , image_url | documents : document_code , document_structure_code , document_type_code , access_count , document_name | document_functional_areas : document_code , functional_area_code | document_sections : section_id , document_code , section_sequence , section_code , section_title | document_sections_images : section_id , image_id output: SELECT user_name ,  password FROM users GROUP BY role_code ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: What is the hometown of the youngest teacher?",
    "Here is an examples including input and output:\n input: question: Select the name and price of the cheapest product. serialized_schema:  | manufactory_1 | manufacturers : code , name , headquarter , founder , revenue | products : code , name , price , manufacturer output: SELECT name ,  price FROM Products ORDER BY price ASC LIMIT 1\n Now please use valid SQLite to answer the following questions: Where is the youngest teacher from?",
    "Here is an examples including input and output:\n input: question: Show the names of trains and locations of railways they are in. serialized_schema:  | railway | railway : railway_id , railway , builder , built , wheels , location , objectnumber | train : train_id , train_num , name , from , arrival , railway_id | manager : manager_id , name , country , working_year_starts , age , level | railway_manage : railway_id , manager_id , from_year output: SELECT T2.Name ,  T1.Location FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID\n Now please use valid SQLite to answer the following questions: Show different hometown of teachers and the number of teachers from each hometown.",
    "Here is an examples including input and output:\n input: question: report the total number of degrees granted between 1998 and 2002. serialized_schema:  | csu_1 | campuses : id , campus , location , county , year | csu_fees : campus , year , campusfee | degrees : year , campus , degrees | discipline_enrollments : campus , discipline , year , undergraduate , graduate | enrollments : campus , year , totalenrollment_ay , fte_ay | faculty : campus , year , faculty output: SELECT T1.campus ,  sum(T2.degrees) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id  =  T2.campus WHERE T2.year  >=  1998 AND T2.year  <=  2002 GROUP BY T1.campus\n Now please use valid SQLite to answer the following questions: For each hometown, how many teachers are there?",
    "Here is an examples including input and output:\n input: question: What are department ids for departments with managers managing more than 3 employees? serialized_schema:  | hr_1 | regions : region_id , region_name | countries : country_id , country_name , region_id | departments : department_id , department_name , manager_id , location_id | jobs : job_id , job_title , min_salary , max_salary | employees : employee_id , first_name , last_name , email , phone_number , hire_date , job_id , salary , commission_pct , manager_id , department_id | job_history : employee_id , start_date , end_date , job_id , department_id | locations : location_id , street_address , postal_code , city , state_province , country_id output: SELECT DISTINCT department_id FROM employees GROUP BY department_id ,  manager_id HAVING COUNT(employee_id)  >= 4\n Now please use valid SQLite to answer the following questions: List the most common hometown of teachers.",
    "Here is an examples including input and output:\n input: question: How much in total does customer with first name as Carole and last name as Bernhard paid? serialized_schema:  | driving_school | addresses : address_id , line_1_number_building , city , zip_postcode , state_province_county , country | staff : staff_id , staff_address_id , nickname , first_name , middle_name , last_name , date_of_birth , date_joined_staff , date_left_staff | vehicles : vehicle_id , vehicle_details | customers : customer_id , customer_address_id , customer_status_code , date_became_customer , date_of_birth , first_name , last_name , amount_outstanding , email_address , phone_number , cell_mobile_phone_number | customer_payments : customer_id , datetime_payment , payment_method_code , amount_payment | lessons : lesson_id , customer_id , lesson_status_code , staff_id , vehicle_id , lesson_date , lesson_time , price output: SELECT sum(T1.amount_payment) FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = \"Carole\" AND T2.last_name = \"Bernhard\"\n Now please use valid SQLite to answer the following questions: What is the most commmon hometowns for teachers?",
    "Here is an examples including input and output:\n input: question: Return the total revenue of companies with headquarters in Tokyo or Taiwan. serialized_schema:  | manufactory_1 | manufacturers : code , name , headquarter , founder , revenue | products : code , name , price , manufacturer output: SELECT sum(revenue) FROM manufacturers WHERE Headquarter  =  'Tokyo' OR Headquarter  =  'Taiwan'\n Now please use valid SQLite to answer the following questions: Show the hometowns shared by at least two teachers.",
    "Here is an examples including input and output:\n input: question: How many girl students who are younger than 25? serialized_schema:  | dorm_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | dorm : dormid , dorm_name , student_capacity , gender | dorm_amenity : amenid , amenity_name | has_amenity : dormid , amenid | lives_in : stuid , dormid , room_number output: SELECT count(*) FROM student WHERE sex  =  'F' AND age  <  25\n Now please use valid SQLite to answer the following questions: What are the towns from which at least two teachers come from?",
    "Here is an examples including input and output:\n input: question: What are the distinct cross reference source system codes which are related to the master customer details 'Gottlieb, Becker and Wyman'? serialized_schema:  | local_govt_mdm | customer_master_index : master_customer_id , cmi_details | cmi_cross_references : cmi_cross_ref_id , master_customer_id , source_system_code | council_tax : council_tax_id , cmi_cross_ref_id | business_rates : business_rates_id , cmi_cross_ref_id | benefits_overpayments : council_tax_id , cmi_cross_ref_id | parking_fines : council_tax_id , cmi_cross_ref_id | rent_arrears : council_tax_id , cmi_cross_ref_id | electoral_register : electoral_register_id , cmi_cross_ref_id output: SELECT DISTINCT T2.source_system_code FROM customer_master_index AS T1 JOIN cmi_cross_references AS T2 ON T1.master_customer_id  =  T2.master_customer_id WHERE T1.cmi_details  =  'Gottlieb ,  Becker and Wyman'\n Now please use valid SQLite to answer the following questions: Show names of teachers and the courses they are arranged to teach.",
    "Here is an examples including input and output:\n input: question: What is the most common type of ships? serialized_schema:  | ship_mission | mission : mission_id , ship_id , code , launched_year , location , speed_knots , fate | ship : ship_id , name , type , nationality , tonnage output: SELECT TYPE FROM ship GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: What is the name of each teacher and what course they teach?",
    "Here is an examples including input and output:\n input: question: How many customers do not have an account? serialized_schema:  | customers_card_transactions | accounts : account_id , customer_id , account_name , other_account_details | customers : customer_id , customer_first_name , customer_last_name , customer_address , customer_phone , customer_email , other_customer_details | customers_cards : card_id , customer_id , card_type_code , card_number , date_valid_from , date_valid_to , other_card_details | financial_transactions : transaction_id , previous_transaction_id , account_id , card_id , transaction_type , transaction_date , transaction_amount , transaction_comment , other_transaction_details output: SELECT count(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Accounts)\n Now please use valid SQLite to answer the following questions: Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name.",
    "Here is an examples including input and output:\n input: question: What is the id of the appointment that started most recently? serialized_schema:  | hospital_1 | physician : employeeid , name , position , ssn | department : departmentid , name , head | affiliated_with : physician , department , primaryaffiliation | procedures : code , name , cost | trained_in : physician , treatment , certificationdate , certificationexpires | patient : ssn , name , address , phone , insuranceid , pcp | nurse : employeeid , name , position , registered , ssn | appointment : appointmentid , patient , prepnurse , physician , start , end , examinationroom | medication : code , name , brand , description | prescribes : physician , patient , medication , date , appointment , dose | block : blockfloor , blockcode | room : roomnumber , roomtype , blockfloor , blockcode , unavailable | on_call : nurse , blockfloor , blockcode , oncallstart , oncallend | stay : stayid , patient , room , staystart , stayend | undergoes : patient , procedures , stay , dateundergoes , physician , assistingnurse output: SELECT appointmentid FROM appointment ORDER BY START DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: What are the names of the teachers and the courses they teach in ascending alphabetical order by the name of the teacher?",
    "Here is an examples including input and output:\n input: question: Find the last name of female (sex is F) students in the descending order of age. serialized_schema:  | college_3 | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building | department : dno , division , dname , room , building , dphone | member_of : facid , dno , appt_type | course : cid , cname , credits , instructor , days , hours , dno | minor_in : stuid , dno | enrolled_in : stuid , cid , grade | gradeconversion : lettergrade , gradepoint output: SELECT LName FROM STUDENT WHERE Sex  =  \"F\" ORDER BY Age DESC\n Now please use valid SQLite to answer the following questions: Show the name of the teacher for the math course.",
    "Here is an examples including input and output:\n input: question: How many vocal types are used in the song \"Le Pop\"? serialized_schema:  | music_2 | songs : songid , title | albums : aid , title , year , label , type | band : id , firstname , lastname | instruments : songid , bandmateid , instrument | performance : songid , bandmate , stageposition | tracklists : albumid , position , songid | vocals : songid , bandmate , type output: SELECT count(*) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Le Pop\"\n Now please use valid SQLite to answer the following questions: What are the names of the people who teach math courses?",
    "Here is an examples including input and output:\n input: question: How many teachers does the student named MADLOCK RAY have? serialized_schema:  | student_1 | list : lastname , firstname , grade , classroom | teachers : lastname , firstname , classroom output: SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"MADLOCK\" AND T1.lastname  =  \"RAY\"\n Now please use valid SQLite to answer the following questions: Show names of teachers and the number of courses they teach.",
    "Here is an examples including input and output:\n input: question: What are the staff ids and genders of all staffs whose job title is Department Manager? serialized_schema:  | department_store | addresses : address_id , address_details | staff : staff_id , staff_gender , staff_name | suppliers : supplier_id , supplier_name , supplier_phone | department_store_chain : dept_store_chain_id , dept_store_chain_name | customers : customer_id , payment_method_code , customer_code , customer_name , customer_address , customer_phone , customer_email | products : product_id , product_type_code , product_name , product_price | supplier_addresses : supplier_id , address_id , date_from , date_to | customer_addresses : customer_id , address_id , date_from , date_to | customer_orders : order_id , customer_id , order_status_code , order_date | department_stores : dept_store_id , dept_store_chain_id , store_name , store_address , store_phone , store_email | departments : department_id , dept_store_id , department_name | order_items : order_item_id , order_id , product_id | product_suppliers : product_id , supplier_id , date_supplied_from , date_supplied_to , total_amount_purchased , total_value_purchased | staff_department_assignments : staff_id , department_id , date_assigned_from , job_title_code , date_assigned_to output: SELECT T1.staff_id ,  T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Department Manager\"\n Now please use valid SQLite to answer the following questions: What are the names of the teachers and how many courses do they teach?",
    "Here is an examples including input and output:\n input: question: Which students in third grade are not taught by teacher COVIN JEROME? Give me the last names of the students. serialized_schema:  | student_1 | list : lastname , firstname , grade , classroom | teachers : lastname , firstname , classroom output: SELECT DISTINCT T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.grade  =  3 AND T2.firstname != \"COVIN\" AND T2.lastname != \"JEROME\"\n Now please use valid SQLite to answer the following questions: Show names of teachers that teach at least two courses.",
    "Here is an examples including input and output:\n input: question: List the name of tracks belongs to genre Rock or media type is MPEG audio file. serialized_schema:  | store_1 | artists : id , name | sqlite_sequence : name , seq | albums : id , title , artist_id | employees : id , last_name , first_name , title , reports_to , birth_date , hire_date , address , city , state , country , postal_code , phone , fax , email | customers : id , first_name , last_name , company , address , city , state , country , postal_code , phone , fax , email , support_rep_id | genres : id , name | invoices : id , customer_id , invoice_date , billing_address , billing_city , billing_state , billing_country , billing_postal_code , total | media_types : id , name | tracks : id , name , album_id , media_type_id , genre_id , composer , milliseconds , bytes , unit_price | invoice_lines : id , invoice_id , track_id , unit_price , quantity | playlists : id , name | playlist_tracks : playlist_id , track_id output: SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = \"Rock\" OR T3.name = \"MPEG audio file\";\n Now please use valid SQLite to answer the following questions: What are the names of the teachers who teach at least two courses?",
    "Here is an examples including input and output:\n input: question: List the enrollment for each school that does not have \"Catholic\" as denomination. serialized_schema:  | school_player | school : school_id , school , location , enrollment , founded , denomination , boys_or_girls , day_or_boarding , year_entered_competition , school_colors | school_details : school_id , nickname , colors , league , class , division | school_performance : school_id , school_year , class_a , class_aa | player : player_id , player , team , age , position , school_id output: SELECT Enrollment FROM school WHERE Denomination != \"Catholic\"\n Now please use valid SQLite to answer the following questions: List the names of teachers who have not been arranged to teach courses.",
    "Here is an examples including input and output:\n input: question: Give the names of people who did not participate in the candidate election. serialized_schema:  | candidate_poll | candidate : candidate_id , people_id , poll_source , date , support_rate , consider_rate , oppose_rate , unsure_rate | people : people_id , sex , name , date_of_birth , height , weight output: SELECT name FROM people WHERE people_id NOT IN (SELECT people_id FROM candidate)\n Now please use valid SQLite to answer the following questions: What are the names of the teachers whose courses have not been arranged?",
    "Here is an examples including input and output:\n input: question: Show the names of roller coasters and names of country they are in. serialized_schema:  | roller_coaster | roller_coaster : roller_coaster_id , name , park , country_id , length , height , speed , opened , status | country : country_id , name , population , area , languages output: SELECT T2.Name ,  T1.Name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID\n Now please use valid SQLite to answer the following questions: How many visitors below age 30 are there?",
    "Here is an examples including input and output:\n input: question: Who are the lieutenant governor and comptroller from the democratic party? serialized_schema:  | election | county : county_id , county_name , population , zip_code | party : party_id , year , party , governor , lieutenant_governor , comptroller , attorney_general , us_senate | election : election_id , counties_represented , district , delegate , party , first_elected , committee output: SELECT Lieutenant_Governor ,  Comptroller FROM party WHERE Party  =  \"Democratic\"\n Now please use valid SQLite to answer the following questions: Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low.",
    "Here is an examples including input and output:\n input: question: How much salary did the top 3 well-paid players get in 2001? serialized_schema:  | baseball_1 | all_star : player_id , year , game_num , game_id , team_id , league_id , gp , starting_pos | appearances : year , team_id , league_id , player_id , g_all , gs , g_batting , g_defense , g_p , g_c , g_1b , g_2b , g_3b , g_ss , g_lf , g_cf , g_rf , g_of , g_dh , g_ph , g_pr | manager_award : player_id , award_id , year , league_id , tie , notes | player_award : player_id , award_id , year , league_id , tie , notes | manager_award_vote : award_id , year , league_id , player_id , points_won , points_max , votes_first | player_award_vote : award_id , year , league_id , player_id , points_won , points_max , votes_first | batting : player_id , year , stint , team_id , league_id , g , ab , r , h , double , triple , hr , rbi , sb , cs , bb , so , ibb , hbp , sh , sf , g_idp | batting_postseason : year , round , player_id , team_id , league_id , g , ab , r , h , double , triple , hr , rbi , sb , cs , bb , so , ibb , hbp , sh , sf , g_idp | player_college : player_id , college_id , year | fielding : player_id , year , stint , team_id , league_id , pos , g , gs , inn_outs , po , a , e , dp , pb , wp , sb , cs , zr | fielding_outfield : player_id , year , stint , glf , gcf , grf | fielding_postseason : player_id , year , team_id , league_id , round , pos , g , gs , inn_outs , po , a , e , dp , tp , pb , sb , cs | hall_of_fame : player_id , yearid , votedby , ballots , needed , votes , inducted , category , needed_note | home_game : year , league_id , team_id , park_id , span_first , span_last , games , openings , attendance | manager : player_id , year , team_id , league_id , inseason , g , w , l , rank , plyr_mgr | manager_half : player_id , year , team_id , league_id , inseason , half , g , w , l , rank | player : player_id , birth_year , birth_month , birth_day , birth_country , birth_state , birth_city , death_year , death_month , death_day , death_country , death_state , death_city , name_first , name_last , name_given , weight , height , bats , throws , debut , final_game , retro_id , bbref_id | park : park_id , park_name , park_alias , city , state , country | pitching : player_id , year , stint , team_id , league_id , w , l , g , gs , cg , sho , sv , ipouts , h , er , hr , bb , so , baopp , era , ibb , wp , hbp , bk , bfp , gf , r , sh , sf , g_idp | pitching_postseason : player_id , year , round , team_id , league_id , w , l , g , gs , cg , sho , sv , ipouts , h , er , hr , bb , so , baopp , era , ibb , wp , hbp , bk , bfp , gf , r , sh , sf , g_idp | salary : year , team_id , league_id , player_id , salary | college : college_id , name_full , city , state , country | postseason : year , round , team_id_winner , league_id_winner , team_id_loser , league_id_loser , wins , losses , ties | team : year , league_id , team_id , franchise_id , div_id , rank , g , ghome , w , l , div_win , wc_win , lg_win , ws_win , r , ab , h , double , triple , hr , bb , so , sb , cs , hbp , sf , ra , er , era , cg , sho , sv , ipouts , ha , hra , bba , soa , e , dp , fp , name , park , attendance , bpf , ppf , team_id_br , team_id_lahman45 , team_id_retro | team_franchise : franchise_id , franchise_name , active , na_assoc | team_half : year , league_id , team_id , half , div_id , div_win , rank , g , w , l output: SELECT salary FROM salary WHERE YEAR  =  2001 ORDER BY salary DESC LIMIT 3;\n Now please use valid SQLite to answer the following questions: What is the average age of the visitors whose membership level is not higher than 4?",
    "Here is an examples including input and output:\n input: question: What are the distinct publishers of publications with price higher than 5000000? serialized_schema:  | book_2 | publication : publication_id , book_id , publisher , publication_date , price | book : book_id , title , issues , writer output: SELECT DISTINCT Publisher FROM publication WHERE Price  >  5000000\n Now please use valid SQLite to answer the following questions: Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young.",
    "Here is an examples including input and output:\n input: question: What is the average rating for right-footed players and left-footed players? serialized_schema:  | soccer_1 | player_attributes : id , player_fifa_api_id , player_api_id , date , overall_rating , potential , preferred_foot , attacking_work_rate , defensive_work_rate , crossing , finishing , heading_accuracy , short_passing , volleys , dribbling , curve , free_kick_accuracy , long_passing , ball_control , acceleration , sprint_speed , agility , reactions , balance , shot_power , jumping , stamina , strength , long_shots , aggression , interceptions , positioning , vision , penalties , marking , standing_tackle , sliding_tackle , gk_diving , gk_handling , gk_kicking , gk_positioning , gk_reflexes | sqlite_sequence : name , seq | player : id , player_api_id , player_name , player_fifa_api_id , birthday , height , weight | league : id , country_id , name | country : id , name | team : id , team_api_id , team_fifa_api_id , team_long_name , team_short_name | team_attributes : id , team_fifa_api_id , team_api_id , date , buildupplayspeed , buildupplayspeedclass , buildupplaydribbling , buildupplaydribblingclass , buildupplaypassing , buildupplaypassingclass , buildupplaypositioningclass , chancecreationpassing , chancecreationpassingclass , chancecreationcrossing , chancecreationcrossingclass , chancecreationshooting , chancecreationshootingclass , chancecreationpositioningclass , defencepressure , defencepressureclass , defenceaggression , defenceaggressionclass , defenceteamwidth , defenceteamwidthclass , defencedefenderlineclass output: SELECT preferred_foot ,  avg(overall_rating) FROM Player_Attributes GROUP BY preferred_foot\n Now please use valid SQLite to answer the following questions: Find the id and name of the museum that has the most staff members?",
    "Here is an examples including input and output:\n input: question: What is the average minimum and price of the rooms for each different decor. serialized_schema:  | inn_1 | rooms : roomid , roomname , beds , bedtype , maxoccupancy , baseprice , decor | reservations : code , room , checkin , checkout , rate , lastname , firstname , adults , kids output: SELECT decor , avg(basePrice) ,  min(basePrice) FROM Rooms GROUP BY decor;\n Now please use valid SQLite to answer the following questions: Find the average number of staff working for the museums that were open before 2009.",
    "Here is an examples including input and output:\n input: question: Retrieve all the first and last names of authors in the alphabetical order of last names. serialized_schema:  | icfp_1 | inst : instid , name , country | authors : authid , lname , fname | papers : paperid , title | authorship : authid , instid , paperid , authorder output: SELECT fname ,  lname FROM authors ORDER BY lname\n Now please use valid SQLite to answer the following questions: What are the opening year and staff number of the museum named Plaza Museum?",
    "Here is an examples including input and output:\n input: question: What are the ids of all vehicles? serialized_schema:  | driving_school | addresses : address_id , line_1_number_building , city , zip_postcode , state_province_county , country | staff : staff_id , staff_address_id , nickname , first_name , middle_name , last_name , date_of_birth , date_joined_staff , date_left_staff | vehicles : vehicle_id , vehicle_details | customers : customer_id , customer_address_id , customer_status_code , date_became_customer , date_of_birth , first_name , last_name , amount_outstanding , email_address , phone_number , cell_mobile_phone_number | customer_payments : customer_id , datetime_payment , payment_method_code , amount_payment | lessons : lesson_id , customer_id , lesson_status_code , staff_id , vehicle_id , lesson_date , lesson_time , price output: SELECT vehicle_id FROM Vehicles;\n Now please use valid SQLite to answer the following questions: find the names of museums which have more staff than the minimum staff number of all museums opened after 2010.",
    "Here is an examples including input and output:\n input: question: What destination has the fewest number of flights? serialized_schema:  | flight_1 | flight : flno , origin , destination , distance , departure_date , arrival_date , price , aid | aircraft : aid , name , distance | employee : eid , name , salary | certificate : eid , aid output: SELECT destination FROM Flight GROUP BY destination ORDER BY count(*) LIMIT 1\n Now please use valid SQLite to answer the following questions: find the id, name and age for visitors who visited some museums more than once.",
    "Here is an examples including input and output:\n input: question: How many faculty members did the university that conferred the most degrees in 2002 have? serialized_schema:  | csu_1 | campuses : id , campus , location , county , year | csu_fees : campus , year , campusfee | degrees : year , campus , degrees | discipline_enrollments : campus , discipline , year , undergraduate , graduate | enrollments : campus , year , totalenrollment_ay , fte_ay | faculty : campus , year , faculty output: SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  t2.campus JOIN degrees AS T3 ON T1.id  =  t3.campus AND t2.year  =  t3.year WHERE t2.year  =  2002 ORDER BY t3.degrees DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets?",
    "Here is an examples including input and output:\n input: question: Which department has the highest average student GPA, and what is the average gpa? serialized_schema:  | college_1 | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num output: SELECT T2.dept_name ,  avg(T1.stu_gpa) FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY avg(T1.stu_gpa) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: What are the id and name of the museum visited most times?",
    "Here is an examples including input and output:\n input: question: Return the account details with the greatest value, as well as those that include the character 5. serialized_schema:  | cre_Docs_and_Epenses | ref_document_types : document_type_code , document_type_name , document_type_description | ref_budget_codes : budget_type_code , budget_type_description | projects : project_id , project_details | documents : document_id , document_type_code , project_id , document_date , document_name , document_description , other_details | statements : statement_id , statement_details | documents_with_expenses : document_id , budget_type_code , document_details | accounts : account_id , statement_id , account_details output: SELECT max(Account_details) FROM Accounts UNION SELECT Account_details FROM Accounts WHERE Account_details LIKE \"%5%\"\n Now please use valid SQLite to answer the following questions: What is the name of the museum that had no visitor yet?",
    "Here is an examples including input and output:\n input: question: Count the number of male students who had class senator votes in the fall election cycle. serialized_schema:  | voter_2 | student : stuid , lname , fname , age , sex , major , advisor , city_code | voting_record : stuid , registration_date , election_cycle , president_vote , vice_president_vote , secretary_vote , treasurer_vote , class_president_vote , class_senator_vote output: SELECT count(*) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  Class_Senator_Vote WHERE T1.Sex  =  \"M\" AND T2.Election_Cycle  =  \"Fall\"\n Now please use valid SQLite to answer the following questions: Find the name and age of the visitor who bought the most tickets at once.",
    "Here is an examples including input and output:\n input: question: Find the total revenue created by the companies whose headquarter is located at Austin. serialized_schema:  | manufactory_1 | manufacturers : code , name , headquarter , founder , revenue | products : code , name , price , manufacturer output: SELECT sum(revenue) FROM manufacturers WHERE headquarter  =  'Austin'\n Now please use valid SQLite to answer the following questions: What are the average and maximum number of tickets bought in all visits?",
    "Here is an examples including input and output:\n input: question: what is the full name and id of the college with the largest number of baseball players? serialized_schema:  | baseball_1 | all_star : player_id , year , game_num , game_id , team_id , league_id , gp , starting_pos | appearances : year , team_id , league_id , player_id , g_all , gs , g_batting , g_defense , g_p , g_c , g_1b , g_2b , g_3b , g_ss , g_lf , g_cf , g_rf , g_of , g_dh , g_ph , g_pr | manager_award : player_id , award_id , year , league_id , tie , notes | player_award : player_id , award_id , year , league_id , tie , notes | manager_award_vote : award_id , year , league_id , player_id , points_won , points_max , votes_first | player_award_vote : award_id , year , league_id , player_id , points_won , points_max , votes_first | batting : player_id , year , stint , team_id , league_id , g , ab , r , h , double , triple , hr , rbi , sb , cs , bb , so , ibb , hbp , sh , sf , g_idp | batting_postseason : year , round , player_id , team_id , league_id , g , ab , r , h , double , triple , hr , rbi , sb , cs , bb , so , ibb , hbp , sh , sf , g_idp | player_college : player_id , college_id , year | fielding : player_id , year , stint , team_id , league_id , pos , g , gs , inn_outs , po , a , e , dp , pb , wp , sb , cs , zr | fielding_outfield : player_id , year , stint , glf , gcf , grf | fielding_postseason : player_id , year , team_id , league_id , round , pos , g , gs , inn_outs , po , a , e , dp , tp , pb , sb , cs | hall_of_fame : player_id , yearid , votedby , ballots , needed , votes , inducted , category , needed_note | home_game : year , league_id , team_id , park_id , span_first , span_last , games , openings , attendance | manager : player_id , year , team_id , league_id , inseason , g , w , l , rank , plyr_mgr | manager_half : player_id , year , team_id , league_id , inseason , half , g , w , l , rank | player : player_id , birth_year , birth_month , birth_day , birth_country , birth_state , birth_city , death_year , death_month , death_day , death_country , death_state , death_city , name_first , name_last , name_given , weight , height , bats , throws , debut , final_game , retro_id , bbref_id | park : park_id , park_name , park_alias , city , state , country | pitching : player_id , year , stint , team_id , league_id , w , l , g , gs , cg , sho , sv , ipouts , h , er , hr , bb , so , baopp , era , ibb , wp , hbp , bk , bfp , gf , r , sh , sf , g_idp | pitching_postseason : player_id , year , round , team_id , league_id , w , l , g , gs , cg , sho , sv , ipouts , h , er , hr , bb , so , baopp , era , ibb , wp , hbp , bk , bfp , gf , r , sh , sf , g_idp | salary : year , team_id , league_id , player_id , salary | college : college_id , name_full , city , state , country | postseason : year , round , team_id_winner , league_id_winner , team_id_loser , league_id_loser , wins , losses , ties | team : year , league_id , team_id , franchise_id , div_id , rank , g , ghome , w , l , div_win , wc_win , lg_win , ws_win , r , ab , h , double , triple , hr , bb , so , sb , cs , hbp , sf , ra , er , era , cg , sho , sv , ipouts , ha , hra , bba , soa , e , dp , fp , name , park , attendance , bpf , ppf , team_id_br , team_id_lahman45 , team_id_retro | team_franchise : franchise_id , franchise_name , active , na_assoc | team_half : year , league_id , team_id , half , div_id , div_win , rank , g , w , l output: SELECT T1.name_full ,  T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id  =  T2.college_id GROUP BY T1.college_id ORDER BY count(*) DESC LIMIT 1;\n Now please use valid SQLite to answer the following questions: What is the total ticket expense of the visitors whose membership level is 1?",
    "Here is an examples including input and output:\n input: question: What is the day Number and date of all the documents? serialized_schema:  | cre_Doc_Tracking_DB | ref_document_types : document_type_code , document_type_name , document_type_description | ref_calendar : calendar_date , day_number | ref_locations : location_code , location_name , location_description | roles : role_code , role_name , role_description | all_documents : document_id , date_stored , document_type_code , document_name , document_description , other_details | employees : employee_id , role_code , employee_name , gender_mfu , date_of_birth , other_details | document_locations : document_id , location_code , date_in_location_from , date_in_locaton_to | documents_to_be_destroyed : document_id , destruction_authorised_by_employee_id , destroyed_by_employee_id , planned_destruction_date , actual_destruction_date , other_details output: SELECT T2.day_Number ,  T1.Date_Stored FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored  =  T2.calendar_date\n Now please use valid SQLite to answer the following questions: What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011?",
    "Here is an examples including input and output:\n input: question: List the types of competition that have at most five competitions of that type. serialized_schema:  | sports_competition | club : club_id , name , region , start_year | club_rank : rank , club_id , gold , silver , bronze , total | player : player_id , name , position , club_id , apps , tries , goals , points | competition : competition_id , year , competition_type , country | competition_result : competition_id , club_id_1 , club_id_2 , score output: SELECT Competition_type FROM competition GROUP BY Competition_type HAVING COUNT(*)  <=  5\n Now please use valid SQLite to answer the following questions: Find the number of visitors who did not visit any museum opened after 2010.",
    "Here is an examples including input and output:\n input: question: Which job titles correspond to jobs with salaries over 9000? serialized_schema:  | hr_1 | regions : region_id , region_name | countries : country_id , country_name , region_id | departments : department_id , department_name , manager_id , location_id | jobs : job_id , job_title , min_salary , max_salary | employees : employee_id , first_name , last_name , email , phone_number , hire_date , job_id , salary , commission_pct , manager_id , department_id | job_history : employee_id , start_date , end_date , job_id , department_id | locations : location_id , street_address , postal_code , city , state_province , country_id output: SELECT job_title FROM jobs WHERE min_salary  >  9000\n Now please use valid SQLite to answer the following questions: How many museums were opened after 2013 or before 2008?",
    "Here is an examples including input and output:\n input: question: What are the distinct hometowns of gymnasts with total points more than 57.5? serialized_schema:  | gymnast | gymnast : gymnast_id , floor_exercise_points , pommel_horse_points , rings_points , vault_points , parallel_bars_points , horizontal_bar_points , total_points | people : people_id , name , age , height , hometown output: SELECT DISTINCT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID WHERE T1.Total_Points  >  57.5\n Now please use valid SQLite to answer the following questions: Find the total number of players.",
    "Here is an examples including input and output:\n input: question: display those employees who contain a letter z to their first name and also display their last name, city. serialized_schema:  | hr_1 | regions : region_id , region_name | countries : country_id , country_name , region_id | departments : department_id , department_name , manager_id , location_id | jobs : job_id , job_title , min_salary , max_salary | employees : employee_id , first_name , last_name , email , phone_number , hire_date , job_id , salary , commission_pct , manager_id , department_id | job_history : employee_id , start_date , end_date , job_id , department_id | locations : location_id , street_address , postal_code , city , state_province , country_id output: SELECT T1.first_name ,  T1.last_name ,  T3.city FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id WHERE T1.first_name LIKE '%z%'\n Now please use valid SQLite to answer the following questions: How many players are there?",
    "Here is an examples including input and output:\n input: question: Show times of elimination of wrestlers with days held more than 50. serialized_schema:  | wrestler | wrestler : wrestler_id , name , reign , days_held , location , event | elimination : elimination_id , wrestler_id , team , eliminated_by , elimination_move , time output: SELECT T1.Time FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID WHERE T2.Days_held  >  50\n Now please use valid SQLite to answer the following questions: Find the total number of matches.",
    "Here is an examples including input and output:\n input: question: How much amount in total were claimed in the most recently created document? serialized_schema:  | insurance_and_eClaims | customers : customer_id , customer_details | staff : staff_id , staff_details | policies : policy_id , customer_id , policy_type_code , start_date , end_date | claim_headers : claim_header_id , claim_status_code , claim_type_code , policy_id , date_of_claim , date_of_settlement , amount_claimed , amount_piad | claims_documents : claim_id , document_type_code , created_by_staff_id , created_date | claims_processing_stages : claim_stage_id , next_claim_stage_id , claim_status_name , claim_status_description | claims_processing : claim_processing_id , claim_id , claim_outcome_code , claim_stage_id , staff_id output: SELECT sum(t1.amount_claimed) FROM claim_headers AS t1 JOIN claims_documents AS t2 ON t1.claim_header_id  =  t2.claim_id WHERE t2.created_date  =  (SELECT created_date FROM claims_documents ORDER BY created_date LIMIT 1)\n Now please use valid SQLite to answer the following questions: Count the number of matches.",
    "Here is an examples including input and output:\n input: question: What is the name of the party form that is most common? serialized_schema:  | e_government | addresses : address_id , line_1_number_building , town_city , zip_postcode , state_province_county , country | services : service_id , service_type_code , service_name , service_descriptio | forms : form_id , form_type_code , service_id , form_number , form_name , form_description | individuals : individual_id , individual_first_name , individual_middle_name , inidividual_phone , individual_email , individual_address , individual_last_name | organizations : organization_id , date_formed , organization_name , uk_vat_number | parties : party_id , payment_method_code , party_phone , party_email | organization_contact_individuals : individual_id , organization_id , date_contact_from , date_contact_to | party_addresses : party_id , address_id , date_address_from , address_type_code , date_address_to | party_forms : party_id , form_id , date_completion_started , form_status_code , date_fully_completed | party_services : booking_id , customer_id , service_id , service_datetime , booking_made_date output: SELECT t1.form_name FROM forms AS t1 JOIN party_forms AS t2 ON t1.form_id  =  t2.form_id GROUP BY t2.form_id ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: List the first name and birth date of all players from the country with code USA.",
    "Here is an examples including input and output:\n input: question: Return the different statuses of cities, ascending by frequency. serialized_schema:  | farm | city : city_id , official_name , status , area_km_2 , population , census_ranking | farm : farm_id , year , total_horses , working_horses , total_cattle , oxen , bulls , cows , pigs , sheep_and_goats | farm_competition : competition_id , year , theme , host_city_id , hosts | competition_record : competition_id , farm_id , rank output: SELECT Status FROM city GROUP BY Status ORDER BY COUNT(*) ASC\n Now please use valid SQLite to answer the following questions: What are the first names and birth dates of players from the USA?",
    "Here is an examples including input and output:\n input: question: Show the name and phone for customers with a mailshot with outcome code 'No Response'. serialized_schema:  | customers_campaigns_ecommerce | premises : premise_id , premises_type , premise_details | products : product_id , product_category , product_name | customers : customer_id , payment_method , customer_name , customer_phone , customer_email , customer_address , customer_login , customer_password | mailshot_campaigns : mailshot_id , product_category , mailshot_name , mailshot_start_date , mailshot_end_date | customer_addresses : customer_id , premise_id , date_address_from , address_type_code , date_address_to | customer_orders : order_id , customer_id , order_status_code , shipping_method_code , order_placed_datetime , order_delivered_datetime , order_shipping_charges | mailshot_customers : mailshot_id , customer_id , outcome_code , mailshot_customer_date | order_items : item_id , order_item_status_code , order_id , product_id , item_status_code , item_delivered_datetime , item_order_quantity output: SELECT T1.customer_name ,  T1.customer_phone FROM customers AS T1 JOIN mailshot_customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.outcome_code  =  'No Response'\n Now please use valid SQLite to answer the following questions: Find the average age of losers and winners of all matches.",
    "Here is an examples including input and output:\n input: question: Show the country name and capital of all countries. serialized_schema:  | match_season | country : country_id , country_name , capital , official_native_language | team : team_id , name | match_season : season , player , position , country , team , draft_pick_number , draft_class , college | player : player_id , player , years_played , total_wl , singles_wl , doubles_wl , team output: SELECT Country_name ,  Capital FROM country\n Now please use valid SQLite to answer the following questions: What are the average ages of losers and winners across matches?",
    "Here is an examples including input and output:\n input: question: How many faculty members does each building have? List the result with the name of the building. serialized_schema:  | activity_1 | activity : actid , activity_name | participates_in : stuid , actid | faculty_participates_in : facid , actid | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building output: SELECT building ,  count(*) FROM Faculty GROUP BY building\n Now please use valid SQLite to answer the following questions: Find the average rank of winners in all matches.",
    "Here is an examples including input and output:\n input: question: What are the names of all stations that have more than 10 bikes available and are not located in San Jose? serialized_schema:  | bike_1 | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code output: SELECT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id GROUP BY T2.station_id HAVING avg(bikes_available)  >  10 EXCEPT SELECT name FROM station WHERE city  =  \"San Jose\"\n Now please use valid SQLite to answer the following questions: What is the average rank for winners in all matches?",
    "Here is an examples including input and output:\n input: question: What are the minimum and maximum crime rate of counties? serialized_schema:  | county_public_safety | county_public_safety : county_id , name , population , police_officers , residents_per_officer , case_burden , crime_rate , police_force , location | city : city_id , county_id , name , white , black , amerindian , asian , multiracial , hispanic output: SELECT min(Crime_rate) ,  max(Crime_rate) FROM county_public_safety\n Now please use valid SQLite to answer the following questions: Find the highest rank of losers in all matches.",
    "Here is an examples including input and output:\n input: question: What is the minimum, maximum, and average market value for every company? serialized_schema:  | gas_company | company : company_id , rank , company , headquarters , main_industry , sales_billion , profits_billion , assets_billion , market_value | gas_station : station_id , open_year , location , manager_name , vice_manager_name , representative_name | station_company : station_id , company_id , rank_of_the_year output: SELECT min(market_value) ,  max(market_value) ,  avg(market_value) FROM company\n Now please use valid SQLite to answer the following questions: What is the best rank of losers across all matches?",
    "Here is an examples including input and output:\n input: question: What are the full names and salaries for any employees earning less than 6000? serialized_schema:  | hr_1 | regions : region_id , region_name | countries : country_id , country_name , region_id | departments : department_id , department_name , manager_id , location_id | jobs : job_id , job_title , min_salary , max_salary | employees : employee_id , first_name , last_name , email , phone_number , hire_date , job_id , salary , commission_pct , manager_id , department_id | job_history : employee_id , start_date , end_date , job_id , department_id | locations : location_id , street_address , postal_code , city , state_province , country_id output: SELECT first_name ,  last_name ,  salary FROM employees WHERE salary  <  6000\n Now please use valid SQLite to answer the following questions: find the number of distinct country codes of all players.",
    "Here is an examples including input and output:\n input: question: Show the names of people who have been on the negative side of debates at least twice. serialized_schema:  | debate | people : people_id , district , name , party , age | debate : debate_id , date , venue , num_of_audience | debate_people : debate_id , affirmative , negative , if_affirmative_win output: SELECT T2.Name FROM debate_people AS T1 JOIN people AS T2 ON T1.Negative  =  T2.People_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2\n Now please use valid SQLite to answer the following questions: How many distinct countries do players come from?",
    "Here is an examples including input and output:\n input: question: Return the names and typical buying and selling prices for products that have 'yellow' as their color description. serialized_schema:  | products_gen_characteristics | ref_characteristic_types : characteristic_type_code , characteristic_type_description | ref_colors : color_code , color_description | ref_product_categories : product_category_code , product_category_description , unit_of_measure | characteristics : characteristic_id , characteristic_type_code , characteristic_data_type , characteristic_name , other_characteristic_details | products : product_id , color_code , product_category_code , product_name , typical_buying_price , typical_selling_price , product_description , other_product_details | product_characteristics : product_id , characteristic_id , product_characteristic_value output: SELECT t1.product_name ,  t1.typical_buying_price ,  t1.typical_selling_price FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  \"yellow\"\n Now please use valid SQLite to answer the following questions: Find the number of distinct name of losers.",
    "Here is an examples including input and output:\n input: question: For each city, what is the highest latitude for its stations? serialized_schema:  | bike_1 | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code output: SELECT city ,  max(lat) FROM station GROUP BY city\n Now please use valid SQLite to answer the following questions: How many different loser names are there?",
    "Here is an examples including input and output:\n input: question: Return the founder of Sony. serialized_schema:  | manufactory_1 | manufacturers : code , name , headquarter , founder , revenue | products : code , name , price , manufacturer output: SELECT founder FROM manufacturers WHERE name  =  'Sony'\n Now please use valid SQLite to answer the following questions: Find the name of tourney that has more than 10 matches.",
    "Here is an examples including input and output:\n input: question: What are the open and close dates of all the policies used by the customer who have \"Diana\" in part of their names? serialized_schema:  | insurance_fnol | customers : customer_id , customer_name | services : service_id , service_name | available_policies : policy_id , policy_type_code , customer_phone | customers_policies : customer_id , policy_id , date_opened , date_closed | first_notification_of_loss : fnol_id , customer_id , policy_id , service_id | claims : claim_id , fnol_id , effective_date | settlements : settlement_id , claim_id , effective_date , settlement_amount output: SELECT t2.date_opened ,  t2.date_closed FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name LIKE \"%Diana%\"\n Now please use valid SQLite to answer the following questions: What are the names of tournaments that have more than 10 matches?",
    "Here is an examples including input and output:\n input: question: Find the average age of students living in each dorm and the name of dorm. serialized_schema:  | dorm_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | dorm : dormid , dorm_name , student_capacity , gender | dorm_amenity : amenid , amenity_name | has_amenity : dormid , amenid | lives_in : stuid , dormid , room_number output: SELECT avg(T1.age) ,  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid GROUP BY T3.dorm_name\n Now please use valid SQLite to answer the following questions: List the names of all winners who played in both 2013 and 2016.",
    "Here is an examples including input and output:\n input: question: Give the names of the courses with at least five enrollments. serialized_schema:  | college_3 | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building | department : dno , division , dname , room , building , dphone | member_of : facid , dno , appt_type | course : cid , cname , credits , instructor , days , hours , dno | minor_in : stuid , dno | enrolled_in : stuid , cid , grade | gradeconversion : lettergrade , gradepoint output: SELECT T1.CName FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID  =  T2.CID GROUP BY T2.CID HAVING COUNT(*)  >=  5\n Now please use valid SQLite to answer the following questions: What are the names of players who won in both 2013 and 2016?",
    "Here is an examples including input and output:\n input: question: What were all the salary values of players in 2010 and 2001? serialized_schema:  | baseball_1 | all_star : player_id , year , game_num , game_id , team_id , league_id , gp , starting_pos | appearances : year , team_id , league_id , player_id , g_all , gs , g_batting , g_defense , g_p , g_c , g_1b , g_2b , g_3b , g_ss , g_lf , g_cf , g_rf , g_of , g_dh , g_ph , g_pr | manager_award : player_id , award_id , year , league_id , tie , notes | player_award : player_id , award_id , year , league_id , tie , notes | manager_award_vote : award_id , year , league_id , player_id , points_won , points_max , votes_first | player_award_vote : award_id , year , league_id , player_id , points_won , points_max , votes_first | batting : player_id , year , stint , team_id , league_id , g , ab , r , h , double , triple , hr , rbi , sb , cs , bb , so , ibb , hbp , sh , sf , g_idp | batting_postseason : year , round , player_id , team_id , league_id , g , ab , r , h , double , triple , hr , rbi , sb , cs , bb , so , ibb , hbp , sh , sf , g_idp | player_college : player_id , college_id , year | fielding : player_id , year , stint , team_id , league_id , pos , g , gs , inn_outs , po , a , e , dp , pb , wp , sb , cs , zr | fielding_outfield : player_id , year , stint , glf , gcf , grf | fielding_postseason : player_id , year , team_id , league_id , round , pos , g , gs , inn_outs , po , a , e , dp , tp , pb , sb , cs | hall_of_fame : player_id , yearid , votedby , ballots , needed , votes , inducted , category , needed_note | home_game : year , league_id , team_id , park_id , span_first , span_last , games , openings , attendance | manager : player_id , year , team_id , league_id , inseason , g , w , l , rank , plyr_mgr | manager_half : player_id , year , team_id , league_id , inseason , half , g , w , l , rank | player : player_id , birth_year , birth_month , birth_day , birth_country , birth_state , birth_city , death_year , death_month , death_day , death_country , death_state , death_city , name_first , name_last , name_given , weight , height , bats , throws , debut , final_game , retro_id , bbref_id | park : park_id , park_name , park_alias , city , state , country | pitching : player_id , year , stint , team_id , league_id , w , l , g , gs , cg , sho , sv , ipouts , h , er , hr , bb , so , baopp , era , ibb , wp , hbp , bk , bfp , gf , r , sh , sf , g_idp | pitching_postseason : player_id , year , round , team_id , league_id , w , l , g , gs , cg , sho , sv , ipouts , h , er , hr , bb , so , baopp , era , ibb , wp , hbp , bk , bfp , gf , r , sh , sf , g_idp | salary : year , team_id , league_id , player_id , salary | college : college_id , name_full , city , state , country | postseason : year , round , team_id_winner , league_id_winner , team_id_loser , league_id_loser , wins , losses , ties | team : year , league_id , team_id , franchise_id , div_id , rank , g , ghome , w , l , div_win , wc_win , lg_win , ws_win , r , ab , h , double , triple , hr , bb , so , sb , cs , hbp , sf , ra , er , era , cg , sho , sv , ipouts , ha , hra , bba , soa , e , dp , fp , name , park , attendance , bpf , ppf , team_id_br , team_id_lahman45 , team_id_retro | team_franchise : franchise_id , franchise_name , active , na_assoc | team_half : year , league_id , team_id , half , div_id , div_win , rank , g , w , l output: SELECT salary FROM salary WHERE YEAR  =  2010 UNION SELECT salary FROM salary WHERE YEAR  =  2001\n Now please use valid SQLite to answer the following questions: List the number of all matches who played in years of 2013 or 2016.",
    "Here is an examples including input and output:\n input: question: What are the different police forces of counties that are not located in the East? serialized_schema:  | county_public_safety | county_public_safety : county_id , name , population , police_officers , residents_per_officer , case_burden , crime_rate , police_force , location | city : city_id , county_id , name , white , black , amerindian , asian , multiracial , hispanic output: SELECT DISTINCT Police_force FROM county_public_safety WHERE LOCATION != \"East\"\n Now please use valid SQLite to answer the following questions: How many matches were played in 2013 or 2016?",
    "Here is an examples including input and output:\n input: question: Count the number of distinct delegates who are from counties with population above 50000. serialized_schema:  | election | county : county_id , county_name , population , zip_code | party : party_id , year , party , governor , lieutenant_governor , comptroller , attorney_general , us_senate | election : election_id , counties_represented , district , delegate , party , first_elected , committee output: SELECT count(DISTINCT T2.Delegate) FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  >  50000\n Now please use valid SQLite to answer the following questions: What are the country code and first name of the players who won in both tourney WTA Championships and Australian Open?",
    "Here is an examples including input and output:\n input: question: What is all the information about all people? serialized_schema:  | candidate_poll | candidate : candidate_id , people_id , poll_source , date , support_rate , consider_rate , oppose_rate , unsure_rate | people : people_id , sex , name , date_of_birth , height , weight output: SELECT * FROM people\n Now please use valid SQLite to answer the following questions: What are the first names and country codes for players who won both the WTA Championships and the Australian Open?",
    "Here is an examples including input and output:\n input: question: How many students and instructors are in each department? serialized_schema:  | college_2 | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id output: SELECT count(DISTINCT T2.id) ,  count(DISTINCT T3.id) ,  T3.dept_name FROM department AS T1 JOIN student AS T2 ON T1.dept_name  =  T2.dept_name JOIN instructor AS T3 ON T1.dept_name  =  T3.dept_name GROUP BY T3.dept_name\n Now please use valid SQLite to answer the following questions: Find the first name and country code of the oldest player.",
    "Here is an examples including input and output:\n input: question: How many video game types exist? serialized_schema:  | game_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | video_games : gameid , gname , gtype | plays_games : stuid , gameid , hours_played | sportsinfo : stuid , sportname , hoursperweek , gamesplayed , onscholarship output: SELECT count(DISTINCT gtype) FROM Video_games\n Now please use valid SQLite to answer the following questions: What is the first name and country code of the oldest player?",
    "Here is an examples including input and output:\n input: question: Which physicians have never taken any appointment? Find their names. serialized_schema:  | hospital_1 | physician : employeeid , name , position , ssn | department : departmentid , name , head | affiliated_with : physician , department , primaryaffiliation | procedures : code , name , cost | trained_in : physician , treatment , certificationdate , certificationexpires | patient : ssn , name , address , phone , insuranceid , pcp | nurse : employeeid , name , position , registered , ssn | appointment : appointmentid , patient , prepnurse , physician , start , end , examinationroom | medication : code , name , brand , description | prescribes : physician , patient , medication , date , appointment , dose | block : blockfloor , blockcode | room : roomnumber , roomtype , blockfloor , blockcode , unavailable | on_call : nurse , blockfloor , blockcode , oncallstart , oncallend | stay : stayid , patient , room , staystart , stayend | undergoes : patient , procedures , stay , dateundergoes , physician , assistingnurse output: SELECT name FROM physician EXCEPT SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID\n Now please use valid SQLite to answer the following questions: List the first and last name of all players in the order of birth date.",
    "Here is an examples including input and output:\n input: question: Please show the names of the buildings whose status is \"on-hold\", in ascending order of stories. serialized_schema:  | company_office | buildings : id , name , city , height , stories , status | companies : id , name , headquarters , industry , sales_billion , profits_billion , assets_billion , market_value_billion | office_locations : building_id , company_id , move_in_year output: SELECT name FROM buildings WHERE Status  =  \"on-hold\" ORDER BY Stories ASC\n Now please use valid SQLite to answer the following questions: What are the full names of all players, sorted by birth date?",
    "Here is an examples including input and output:\n input: question: Show the total number of rooms of all apartments with facility code \"Gym\". serialized_schema:  | apartment_rentals | apartment_buildings : building_id , building_short_name , building_full_name , building_description , building_address , building_manager , building_phone | apartments : apt_id , building_id , apt_type_code , apt_number , bathroom_count , bedroom_count , room_count | apartment_facilities : apt_id , facility_code | guests : guest_id , gender_code , guest_first_name , guest_last_name , date_of_birth | apartment_bookings : apt_booking_id , apt_id , guest_id , booking_status_code , booking_start_date , booking_end_date | view_unit_status : apt_id , apt_booking_id , status_date , available_yn output: SELECT sum(T2.room_count) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.facility_code  =  \"Gym\"\n Now please use valid SQLite to answer the following questions: List the first and last name of all players who are left / L hand in the order of birth date.",
    "Here is an examples including input and output:\n input: question: What are the names of instructors who didn't teach courses in the Spring? serialized_schema:  | college_2 | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id output: SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches WHERE semester  =  'Spring')\n Now please use valid SQLite to answer the following questions: What are the full names of all left handed players, in order of birth date?",
    "Here is an examples including input and output:\n input: question: List the document ids of documents with the status done and type Paper, which not shipped by the shipping agent named USPS. serialized_schema:  | cre_Doc_Control_Systems | ref_document_types : document_type_code , document_type_description | roles : role_code , role_description | addresses : address_id , address_details | ref_document_status : document_status_code , document_status_description | ref_shipping_agents : shipping_agent_code , shipping_agent_name , shipping_agent_description | documents : document_id , document_status_code , document_type_code , shipping_agent_code , receipt_date , receipt_number , other_details | employees : employee_id , role_code , employee_name , other_details | document_drafts : document_id , draft_number , draft_details | draft_copies : document_id , draft_number , copy_number | circulation_history : document_id , draft_number , copy_number , employee_id | documents_mailed : document_id , mailed_to_address_id , mailing_date output: SELECT document_id FROM Documents WHERE document_status_code  =  \"done\" AND document_type_code = \"Paper\" EXCEPT SELECT document_id FROM Documents JOIN Ref_Shipping_Agents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Ref_Shipping_Agents.shipping_agent_name = \"USPS\";\n Now please use valid SQLite to answer the following questions: Find the first name and country code of the player who did the most number of tours.",
    "Here is an examples including input and output:\n input: question: For each start station id, what is its name, longitude and average duration of trips started there? serialized_schema:  | bike_1 | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code output: SELECT T1.name ,  T1.long ,  avg(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id GROUP BY T2.start_station_id\n Now please use valid SQLite to answer the following questions: What is the first name and country code of the player with the most tours?",
    "Here is an examples including input and output:\n input: question: Show the ids for all the students who participate in an activity and are under 20. serialized_schema:  | activity_1 | activity : actid , activity_name | participates_in : stuid , actid | faculty_participates_in : facid , actid | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building output: SELECT StuID FROM Participates_in INTERSECT SELECT StuID FROM Student WHERE age  <  20\n Now please use valid SQLite to answer the following questions: Find the year that has the most number of matches.",
    "Here is an examples including input and output:\n input: question: How many kinds of roles are there for the staff? serialized_schema:  | tracking_grants_for_research | document_types : document_type_code , document_description | documents : document_id , document_type_code , grant_id , sent_date , response_received_date , other_details | grants : grant_id , organisation_id , grant_amount , grant_start_date , grant_end_date , other_details | organisation_types : organisation_type , organisation_type_description | organisations : organisation_id , organisation_type , organisation_details | project_outcomes : project_id , outcome_code , outcome_details | project_staff : staff_id , project_id , role_code , date_from , date_to , other_details | projects : project_id , organisation_id , project_details | research_outcomes : outcome_code , outcome_description | research_staff : staff_id , employer_organisation_id , staff_details | staff_roles : role_code , role_description | tasks : task_id , project_id , task_details , eg agree objectives output: SELECT count(DISTINCT role_code) FROM Project_Staff\n Now please use valid SQLite to answer the following questions: Which year had the most matches?",
    "Here is an examples including input and output:\n input: question: How many distinct FDA approval statuses are there for the medicines? serialized_schema:  | medicine_enzyme_interaction | medicine : id , name , trade_name , fda_approved | enzyme : id , name , location , product , chromosome , omim , porphyria | medicine_enzyme_interaction : enzyme_id , medicine_id , interaction_type output: SELECT count(DISTINCT FDA_approved) FROM medicine\n Now please use valid SQLite to answer the following questions: Find the name and rank points of the winner who won the most times.",
    "Here is an examples including input and output:\n input: question: Return the apartment numbers of the apartments with type code \"Flat\". serialized_schema:  | apartment_rentals | apartment_buildings : building_id , building_short_name , building_full_name , building_description , building_address , building_manager , building_phone | apartments : apt_id , building_id , apt_type_code , apt_number , bathroom_count , bedroom_count , room_count | apartment_facilities : apt_id , facility_code | guests : guest_id , gender_code , guest_first_name , guest_last_name , date_of_birth | apartment_bookings : apt_booking_id , apt_id , guest_id , booking_status_code , booking_start_date , booking_end_date | view_unit_status : apt_id , apt_booking_id , status_date , available_yn output: SELECT apt_number FROM Apartments WHERE apt_type_code  =  \"Flat\"\n Now please use valid SQLite to answer the following questions: What is the name of the winner who has won the most matches, and how many rank points does this player have?",
    "Here is an examples including input and output:\n input: question: Return the name of the document that has the most sections. serialized_schema:  | document_management | roles : role_code , role_description | users : user_id , role_code , user_name , user_login , password | document_structures : document_structure_code , parent_document_structure_code , document_structure_description | functional_areas : functional_area_code , parent_functional_area_code , functional_area_description | images : image_id , image_alt_text , image_name , image_url | documents : document_code , document_structure_code , document_type_code , access_count , document_name | document_functional_areas : document_code , functional_area_code | document_sections : section_id , document_code , section_sequence , section_code , section_title | document_sections_images : section_id , image_id output: SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code GROUP BY t1.document_code ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: Find the name of the winner who has the highest rank points and participated in the Australian Open tourney.",
    "Here is an examples including input and output:\n input: question: What are the code and description of the most frequent behavior incident type? serialized_schema:  | behavior_monitoring | ref_address_types : address_type_code , address_type_description | ref_detention_type : detention_type_code , detention_type_description | ref_incident_type : incident_type_code , incident_type_description | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | students : student_id , address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , date_first_rental , date_left_university , other_student_details | teachers : teacher_id , address_id , first_name , middle_name , last_name , gender , cell_mobile_number , email_address , other_details | assessment_notes : notes_id , student_id , teacher_id , date_of_notes , text_of_notes , other_details | behavior_incident : incident_id , incident_type_code , student_id , date_incident_start , date_incident_end , incident_summary , recommendations , other_details | detention : detention_id , detention_type_code , teacher_id , datetime_detention_start , datetime_detention_end , detention_summary , other_details | student_addresses : student_id , address_id , date_address_from , date_address_to , monthly_rental , other_details | students_in_detention : student_id , detention_id , incident_id output: SELECT T1.incident_type_code ,  T2.incident_type_description FROM Behavior_Incident AS T1 JOIN Ref_Incident_Type AS T2 ON T1.incident_type_code  =  T2.incident_type_code GROUP BY T1.incident_type_code ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: What is the name of the winner with the most rank points who participated in the Australian Open tournament?",
    "Here is an examples including input and output:\n input: question: Return the duration of the actor with the greatest age. serialized_schema:  | musical | musical : musical_id , name , year , award , category , nominee , result | actor : actor_id , name , musical_id , character , duration , age output: SELECT Duration FROM actor ORDER BY Age DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: find the names of loser and winner who played in the match with greatest number of minutes.",
    "Here is an examples including input and output:\n input: question: Find all the instruments ever used by the musician with last name \"Heilo\"? serialized_schema:  | music_2 | songs : songid , title | albums : aid , title , year , label , type | band : id , firstname , lastname | instruments : songid , bandmateid , instrument | performance : songid , bandmate , stageposition | tracklists : albumid , position , songid | vocals : songid , bandmate , type output: SELECT instrument FROM instruments AS T1 JOIN Band AS T2 ON T1.bandmateid  =  T2.id WHERE T2.lastname  =  \"Heilo\"\n Now please use valid SQLite to answer the following questions: What are the names of the winner and loser who played in the longest match?",
    "Here is an examples including input and output:\n input: question: List the names of all genres in alphabetical oder, together with its ratings. serialized_schema:  | music_1 | genre : g_name , rating , most_popular_in | artist : artist_name , country , gender , preferred_genre | files : f_id , artist_name , file_size , duration , formats | song : song_name , artist_name , country , f_id , genre_is , rating , languages , releasedate , resolution output: SELECT g_name ,  rating FROM genre ORDER BY g_name\n Now please use valid SQLite to answer the following questions: Find the average ranking for each player and their first name.",
    "Here is an examples including input and output:\n input: question: What is the id and first name of all the drivers who participated in the Australian Grand Prix and the Chinese Grand Prix? serialized_schema:  | formula_1 | circuits : circuitid , circuitref , name , location , country , lat , lng , alt , url | races : raceid , year , round , circuitid , name , date , time , url | drivers : driverid , driverref , number , code , forename , surname , dob , nationality , url | status : statusid , status | seasons : year , url | constructors : constructorid , constructorref , name , nationality , url | constructorstandings : constructorstandingsid , raceid , constructorid , points , position , positiontext , wins | results : resultid , raceid , driverid , constructorid , number , grid , position , positiontext , positionorder , points , laps , time , milliseconds , fastestlap , rank , fastestlaptime , fastestlapspeed , statusid | driverstandings : driverstandingsid , raceid , driverid , points , position , positiontext , wins | constructorresults : constructorresultsid , raceid , constructorid , points , status | qualifying : qualifyid , raceid , driverid , constructorid , number , position , q1 , q2 , q3 | pitstops : raceid , driverid , stop , lap , time , duration , milliseconds | laptimes : raceid , driverid , lap , position , time , milliseconds output: SELECT T2.driverid ,  T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid  =  T3.driverid WHERE T1.name = \"Australian Grand Prix\" INTERSECT SELECT T2.driverid ,  T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid  =  T3.driverid WHERE T1.name = \"Chinese Grand Prix\"\n Now please use valid SQLite to answer the following questions: What are the first names of all players, and their average rankings?",
    "Here is an examples including input and output:\n input: question: What is the vocal type of the band mate whose first name is \"Marianne\" played the most? serialized_schema:  | music_2 | songs : songid , title | albums : aid , title , year , label , type | band : id , firstname , lastname | instruments : songid , bandmateid , instrument | performance : songid , bandmate , stageposition | tracklists : albumid , position , songid | vocals : songid , bandmate , type output: SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE firstname  =  \"Marianne\" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: Find the total ranking points for each player and their first name.",
    "Here is an examples including input and output:\n input: question: What is the name of the district with the most residents? serialized_schema:  | store_product | product : product_id , product , dimensions , dpi , pages_per_minute_color , max_page_size , interface | store : store_id , store_name , type , area_size , number_of_product_category , ranking | district : district_id , district_name , headquartered_city , city_population , city_area | store_product : store_id , product_id | store_district : store_id , district_id output: SELECT district_name FROM district ORDER BY city_population DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: What are the first names of all players, and their total ranking points?",
    "Here is an examples including input and output:\n input: question: Show all artist name, age, and country ordered by the yeared they joined. serialized_schema:  | theme_gallery | artist : artist_id , name , country , year_join , age | exhibition : exhibition_id , year , theme , artist_id , ticket_price | exhibition_record : exhibition_id , date , attendance output: SELECT name ,  age ,  country FROM artist ORDER BY Year_Join\n Now please use valid SQLite to answer the following questions: find the number of players for each country.",
    "Here is an examples including input and output:\n input: question: Find the average fee on a CSU campus in 1996 serialized_schema:  | csu_1 | campuses : id , campus , location , county , year | csu_fees : campus , year , campusfee | degrees : year , campus , degrees | discipline_enrollments : campus , discipline , year , undergraduate , graduate | enrollments : campus , year , totalenrollment_ay , fte_ay | faculty : campus , year , faculty output: SELECT avg(campusfee) FROM csu_fees WHERE YEAR  =  1996\n Now please use valid SQLite to answer the following questions: How many players are from each country?",
    "Here is an examples including input and output:\n input: question: List the names of representatives that have not participated in elections listed here. serialized_schema:  | election_representative | election : election_id , representative_id , date , votes , vote_percent , seats , place | representative : representative_id , name , state , party , lifespan output: SELECT Name FROM representative WHERE Representative_ID NOT IN (SELECT Representative_ID FROM election)\n Now please use valid SQLite to answer the following questions: find the code of the country where has the greatest number of players.",
    "Here is an examples including input and output:\n input: question: Show all student IDs with more than total 10 hours per week on all sports played. serialized_schema:  | game_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | video_games : gameid , gname , gtype | plays_games : stuid , gameid , hours_played | sportsinfo : stuid , sportname , hoursperweek , gamesplayed , onscholarship output: SELECT StuID FROM Sportsinfo GROUP BY StuID HAVING sum(hoursperweek)  >  10\n Now please use valid SQLite to answer the following questions: What is the code of the country with the most players?",
    "Here is an examples including input and output:\n input: question: List all public schools and their locations. serialized_schema:  | university_basketball | basketball_match : team_id , school_id , team_name , acc_regular_season , acc_percent , acc_home , acc_road , all_games , all_games_percent , all_home , all_road , all_neutral | university : school_id , school , location , founded , affiliation , enrollment , nickname , primary_conference output: SELECT school ,  LOCATION FROM university WHERE affiliation  =  'Public'\n Now please use valid SQLite to answer the following questions: Find the codes of countries that have more than 50 players.",
    "Here is an examples including input and output:\n input: question: Find the first names of faculties of rank Professor in alphabetic order. serialized_schema:  | college_3 | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building | department : dno , division , dname , room , building , dphone | member_of : facid , dno , appt_type | course : cid , cname , credits , instructor , days , hours , dno | minor_in : stuid , dno | enrolled_in : stuid , cid , grade | gradeconversion : lettergrade , gradepoint output: SELECT Fname FROM FACULTY WHERE Rank  =  \"Professor\" ORDER BY Fname\n Now please use valid SQLite to answer the following questions: What are the codes of countries with more than 50 players?",
    "Here is an examples including input and output:\n input: question: Show the employee ids for all employees with role name \"Human Resource\" or \"Manager\". serialized_schema:  | cre_Doc_Tracking_DB | ref_document_types : document_type_code , document_type_name , document_type_description | ref_calendar : calendar_date , day_number | ref_locations : location_code , location_name , location_description | roles : role_code , role_name , role_description | all_documents : document_id , date_stored , document_type_code , document_name , document_description , other_details | employees : employee_id , role_code , employee_name , gender_mfu , date_of_birth , other_details | document_locations : document_id , location_code , date_in_location_from , date_in_locaton_to | documents_to_be_destroyed : document_id , destruction_authorised_by_employee_id , destroyed_by_employee_id , planned_destruction_date , actual_destruction_date , other_details output: SELECT T1.employee_id FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T2.role_name  =  \"Human Resource\" OR T2.role_name  =  \"Manager\"\n Now please use valid SQLite to answer the following questions: Find the total number of tours for each ranking date.",
    "Here is an examples including input and output:\n input: question: What are the full name, hire data, salary and department id for employees without the letter M in their first name, ordered by ascending department id? serialized_schema:  | hr_1 | regions : region_id , region_name | countries : country_id , country_name , region_id | departments : department_id , department_name , manager_id , location_id | jobs : job_id , job_title , min_salary , max_salary | employees : employee_id , first_name , last_name , email , phone_number , hire_date , job_id , salary , commission_pct , manager_id , department_id | job_history : employee_id , start_date , end_date , job_id , department_id | locations : location_id , street_address , postal_code , city , state_province , country_id output: SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY department_id\n Now please use valid SQLite to answer the following questions: How many total tours were there for each ranking date?",
    "Here is an examples including input and output:\n input: question: Find the ids of orders whose status is 'Success'. serialized_schema:  | customer_deliveries | products : product_id , product_name , product_price , product_description | addresses : address_id , address_details , city , zip_postcode , state_province_county , country | customers : customer_id , payment_method , customer_name , customer_phone , customer_email , date_became_customer | regular_orders : regular_order_id , distributer_id | regular_order_products : regular_order_id , product_id | actual_orders : actual_order_id , order_status_code , regular_order_id , actual_order_date | actual_order_products : actual_order_id , product_id | customer_addresses : customer_id , address_id , date_from , address_type , date_to | delivery_routes : route_id , route_name , other_route_details | delivery_route_locations : location_code , route_id , location_address_id , location_name | trucks : truck_id , truck_licence_number , truck_details | employees : employee_id , employee_address_id , employee_name , employee_phone | order_deliveries : location_code , actual_order_id , delivery_status_code , driver_employee_id , truck_id , delivery_date output: SELECT actual_order_id FROM actual_orders WHERE order_status_code  =  'Success'\n Now please use valid SQLite to answer the following questions: Find the number of matches happened in each year.",
    "Here is an examples including input and output:\n input: question: Show all storm names affecting region \"Denmark\". serialized_schema:  | storm_record | storm : storm_id , name , dates_active , max_speed , damage_millions_usd , number_deaths | region : region_id , region_code , region_name | affected_region : region_id , storm_id , number_city_affected output: SELECT T3.name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.region_name  =  'Denmark'\n Now please use valid SQLite to answer the following questions: How many matches were played in each year?",
    "Here is an examples including input and output:\n input: question: Show the name, role code, and date of birth for the employee with name 'Armani'. serialized_schema:  | cre_Doc_Tracking_DB | ref_document_types : document_type_code , document_type_name , document_type_description | ref_calendar : calendar_date , day_number | ref_locations : location_code , location_name , location_description | roles : role_code , role_name , role_description | all_documents : document_id , date_stored , document_type_code , document_name , document_description , other_details | employees : employee_id , role_code , employee_name , gender_mfu , date_of_birth , other_details | document_locations : document_id , location_code , date_in_location_from , date_in_locaton_to | documents_to_be_destroyed : document_id , destruction_authorised_by_employee_id , destroyed_by_employee_id , planned_destruction_date , actual_destruction_date , other_details output: SELECT employee_name ,  role_code ,  date_of_birth FROM Employees WHERE employee_Name  =  'Armani'\n Now please use valid SQLite to answer the following questions: Find the name and rank of the 3 youngest winners across all matches.",
    "Here is an examples including input and output:\n input: question: List the name of ships in ascending order of tonnage. serialized_schema:  | ship_mission | mission : mission_id , ship_id , code , launched_year , location , speed_knots , fate | ship : ship_id , name , type , nationality , tonnage output: SELECT Name FROM ship ORDER BY Tonnage ASC\n Now please use valid SQLite to answer the following questions: What are the names and ranks of the three youngest winners across all matches?",
    "Here is an examples including input and output:\n input: question: What are the last names of faculty who are part of the computer science department? serialized_schema:  | college_3 | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building | department : dno , division , dname , room , building , dphone | member_of : facid , dno , appt_type | course : cid , cname , credits , instructor , days , hours , dno | minor_in : stuid , dno | enrolled_in : stuid , cid , grade | gradeconversion : lettergrade , gradepoint output: SELECT T2.Lname FROM DEPARTMENT AS T1 JOIN FACULTY AS T2 ON T1.DNO  =  T3.DNO JOIN MEMBER_OF AS T3 ON T2.FacID  =  T3.FacID WHERE T1.DName  =  \"Computer Science\"\n Now please use valid SQLite to answer the following questions: How many different winners both participated in the WTA Championships and were left handed?",
    "Here is an examples including input and output:\n input: question: Find the ids of the problems that are reported by the staff whose last name is Bosco. serialized_schema:  | tracking_software_problems | problem_category_codes : problem_category_code , problem_category_description | problem_log : problem_log_id , assigned_to_staff_id , problem_id , problem_category_code , problem_status_code , log_entry_date , log_entry_description , log_entry_fix , other_log_details | problem_status_codes : problem_status_code , problem_status_description | product : product_id , product_name , product_details | staff : staff_id , staff_first_name , staff_last_name , other_staff_details | problems : problem_id , product_id , closure_authorised_by_staff_id , reported_by_staff_id , date_problem_reported , date_problem_closed , problem_description , other_problem_details output: SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_last_name = \"Bosco\"\n Now please use valid SQLite to answer the following questions: Find the number of left handed winners who participated in the WTA Championships.",
    "Here is an examples including input and output:\n input: question: What are the ids of the problems which are reported after 1978-06-26? serialized_schema:  | tracking_software_problems | problem_category_codes : problem_category_code , problem_category_description | problem_log : problem_log_id , assigned_to_staff_id , problem_id , problem_category_code , problem_status_code , log_entry_date , log_entry_description , log_entry_fix , other_log_details | problem_status_codes : problem_status_code , problem_status_description | product : product_id , product_name , product_details | staff : staff_id , staff_first_name , staff_last_name , other_staff_details | problems : problem_id , product_id , closure_authorised_by_staff_id , reported_by_staff_id , date_problem_reported , date_problem_closed , problem_description , other_problem_details output: SELECT problem_id FROM problems WHERE date_problem_reported > \"1978-06-26\"\n Now please use valid SQLite to answer the following questions: Find the first name, country code and birth date of the winner who has the highest rank points in all matches.",
    "Here is an examples including input and output:\n input: question: Please show the police forces and the number of counties with each police force. serialized_schema:  | county_public_safety | county_public_safety : county_id , name , population , police_officers , residents_per_officer , case_burden , crime_rate , police_force , location | city : city_id , county_id , name , white , black , amerindian , asian , multiracial , hispanic output: SELECT Police_force ,  COUNT(*) FROM county_public_safety GROUP BY Police_force\n Now please use valid SQLite to answer the following questions: What is the first name, country code, and birth date of the player with the most winner rank points across all matches?",
    "Here is an examples including input and output:\n input: question: Give the color description for the product 'catnip'. serialized_schema:  | products_gen_characteristics | ref_characteristic_types : characteristic_type_code , characteristic_type_description | ref_colors : color_code , color_description | ref_product_categories : product_category_code , product_category_description , unit_of_measure | characteristics : characteristic_id , characteristic_type_code , characteristic_data_type , characteristic_name , other_characteristic_details | products : product_id , color_code , product_category_code , product_name , typical_buying_price , typical_selling_price , product_description , other_product_details | product_characteristics : product_id , characteristic_id , product_characteristic_value output: SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  \"catnip\"\n Now please use valid SQLite to answer the following questions: Find the number of players for each hand type.",
    "Here is an examples including input and output:\n input: question: Which service id and type has the least number of participants? serialized_schema:  | local_govt_in_alabama | services : service_id , service_type_code | participants : participant_id , participant_type_code , participant_details | events : event_id , service_id , event_details | participants_in_events : event_id , participant_id output: SELECT T3.service_id ,  T4.Service_Type_Code FROM participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID  =  T2.Participant_ID JOIN EVENTS AS T3 ON T2.Event_ID   =  T3.Event_ID JOIN services AS T4 ON T3.service_id  =  T4.service_id GROUP BY T3.service_id ORDER BY count(*) ASC LIMIT 1\n Now please use valid SQLite to answer the following questions: How many players are there for each hand type?",
    "Here is an examples including input and output:\n input: question: Which states have more than 2 parks? serialized_schema:  | baseball_1 | all_star : player_id , year , game_num , game_id , team_id , league_id , gp , starting_pos | appearances : year , team_id , league_id , player_id , g_all , gs , g_batting , g_defense , g_p , g_c , g_1b , g_2b , g_3b , g_ss , g_lf , g_cf , g_rf , g_of , g_dh , g_ph , g_pr | manager_award : player_id , award_id , year , league_id , tie , notes | player_award : player_id , award_id , year , league_id , tie , notes | manager_award_vote : award_id , year , league_id , player_id , points_won , points_max , votes_first | player_award_vote : award_id , year , league_id , player_id , points_won , points_max , votes_first | batting : player_id , year , stint , team_id , league_id , g , ab , r , h , double , triple , hr , rbi , sb , cs , bb , so , ibb , hbp , sh , sf , g_idp | batting_postseason : year , round , player_id , team_id , league_id , g , ab , r , h , double , triple , hr , rbi , sb , cs , bb , so , ibb , hbp , sh , sf , g_idp | player_college : player_id , college_id , year | fielding : player_id , year , stint , team_id , league_id , pos , g , gs , inn_outs , po , a , e , dp , pb , wp , sb , cs , zr | fielding_outfield : player_id , year , stint , glf , gcf , grf | fielding_postseason : player_id , year , team_id , league_id , round , pos , g , gs , inn_outs , po , a , e , dp , tp , pb , sb , cs | hall_of_fame : player_id , yearid , votedby , ballots , needed , votes , inducted , category , needed_note | home_game : year , league_id , team_id , park_id , span_first , span_last , games , openings , attendance | manager : player_id , year , team_id , league_id , inseason , g , w , l , rank , plyr_mgr | manager_half : player_id , year , team_id , league_id , inseason , half , g , w , l , rank | player : player_id , birth_year , birth_month , birth_day , birth_country , birth_state , birth_city , death_year , death_month , death_day , death_country , death_state , death_city , name_first , name_last , name_given , weight , height , bats , throws , debut , final_game , retro_id , bbref_id | park : park_id , park_name , park_alias , city , state , country | pitching : player_id , year , stint , team_id , league_id , w , l , g , gs , cg , sho , sv , ipouts , h , er , hr , bb , so , baopp , era , ibb , wp , hbp , bk , bfp , gf , r , sh , sf , g_idp | pitching_postseason : player_id , year , round , team_id , league_id , w , l , g , gs , cg , sho , sv , ipouts , h , er , hr , bb , so , baopp , era , ibb , wp , hbp , bk , bfp , gf , r , sh , sf , g_idp | salary : year , team_id , league_id , player_id , salary | college : college_id , name_full , city , state , country | postseason : year , round , team_id_winner , league_id_winner , team_id_loser , league_id_loser , wins , losses , ties | team : year , league_id , team_id , franchise_id , div_id , rank , g , ghome , w , l , div_win , wc_win , lg_win , ws_win , r , ab , h , double , triple , hr , bb , so , sb , cs , hbp , sf , ra , er , era , cg , sho , sv , ipouts , ha , hra , bba , soa , e , dp , fp , name , park , attendance , bpf , ppf , team_id_br , team_id_lahman45 , team_id_retro | team_franchise : franchise_id , franchise_name , active , na_assoc | team_half : year , league_id , team_id , half , div_id , div_win , rank , g , w , l output: SELECT state FROM park GROUP BY state HAVING count(*)  >  2;\n Now please use valid SQLite to answer the following questions: How many ships ended up being 'Captured'?",
    "Here is an examples including input and output:\n input: question: How many reviewers listed? serialized_schema:  | movie_1 | movie : mid , title , year , director | reviewer : rid , name | rating : rid , mid , stars , ratingdate output: SELECT count(*) FROM Reviewer\n Now please use valid SQLite to answer the following questions: List the name and tonnage ordered by in descending alphaetical order for the names.",
    "Here is an examples including input and output:\n input: question: What are the subject ID, subject name, and the number of available courses for each subject? serialized_schema:  | e_learning | course_authors_and_tutors : author_id , author_tutor_atb , login_name , password , personal_name , middle_name , family_name , gender_mf , address_line_1 | students : student_id , date_of_registration , date_of_latest_logon , login_name , password , personal_name , middle_name , family_name | subjects : subject_id , subject_name | courses : course_id , author_id , subject_id , course_name , course_description | student_course_enrolment : registration_id , student_id , course_id , date_of_enrolment , date_of_completion | student_tests_taken : registration_id , date_test_taken , test_result output: SELECT T1.subject_id ,  T2.subject_name ,  COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id GROUP BY T1.subject_id\n Now please use valid SQLite to answer the following questions: List the name, date and result of each battle.",
    "Here is an examples including input and output:\n input: question: Show the flight number of flights with three lowest distances. serialized_schema:  | flight_1 | flight : flno , origin , destination , distance , departure_date , arrival_date , price , aid | aircraft : aid , name , distance | employee : eid , name , salary | certificate : eid , aid output: SELECT flno FROM Flight ORDER BY distance ASC LIMIT 3\n Now please use valid SQLite to answer the following questions: What is maximum and minimum death toll caused each time?",
    "Here is an examples including input and output:\n input: question: Show different locations of railways along with the corresponding number of railways at each location. serialized_schema:  | railway | railway : railway_id , railway , builder , built , wheels , location , objectnumber | train : train_id , train_num , name , from , arrival , railway_id | manager : manager_id , name , country , working_year_starts , age , level | railway_manage : railway_id , manager_id , from_year output: SELECT LOCATION ,  COUNT(*) FROM railway GROUP BY LOCATION\n Now please use valid SQLite to answer the following questions: What is the average number of injuries caused each time?",
    "Here is an examples including input and output:\n input: question: Which event names were used more than twice for party events? serialized_schema:  | party_people | region : region_id , region_name , date , label , format , catalogue | party : party_id , minister , took_office , left_office , region_id , party_name | member : member_id , member_name , party_id , in_office | party_events : event_id , event_name , party_id , member_in_charge_id output: SELECT event_name FROM party_events GROUP BY event_name HAVING count(*)  >  2\n Now please use valid SQLite to answer the following questions: What are the death and injury situations caused by the ship with tonnage 't'?",
    "Here is an examples including input and output:\n input: question: How many departments does the college has? serialized_schema:  | college_1 | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num output: SELECT count(DISTINCT dept_name) FROM department\n Now please use valid SQLite to answer the following questions: What are the name and results of the battles when the bulgarian commander is not 'Boril'",
    "Here is an examples including input and output:\n input: question: How many sections does each course has? serialized_schema:  | college_1 | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num output: SELECT count(*) ,  crs_code FROM CLASS GROUP BY crs_code\n Now please use valid SQLite to answer the following questions: What are the different ids and names of the battles that lost any 'Brig' type shipes?",
    "Here is an examples including input and output:\n input: question: What are the first name and last name of each male member in club \"Hopkins Student Enterprises\"? serialized_schema:  | club_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | club : clubid , clubname , clubdesc , clublocation | member_of_club : stuid , clubid , position output: SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\" AND t3.sex  =  \"M\"\n Now please use valid SQLite to answer the following questions: What are the ids and names of the battles that led to more than 10 people killed in total.",
    "Here is an examples including input and output:\n input: question: What is the total number of enrollment of schools that do not have any goalie player? serialized_schema:  | soccer_2 | college : cname , state , enr | player : pid , pname , ycard , hs | tryout : pid , cname , ppos , decision output: SELECT sum(enr) FROM college WHERE cName NOT IN (SELECT cName FROM tryout WHERE pPos  =  \"goalie\")\n Now please use valid SQLite to answer the following questions: What is the ship id and name that caused most total injuries?",
    "Here is an examples including input and output:\n input: question: How many Patent outcomes are generated from all the projects? serialized_schema:  | tracking_grants_for_research | document_types : document_type_code , document_description | documents : document_id , document_type_code , grant_id , sent_date , response_received_date , other_details | grants : grant_id , organisation_id , grant_amount , grant_start_date , grant_end_date , other_details | organisation_types : organisation_type , organisation_type_description | organisations : organisation_id , organisation_type , organisation_details | project_outcomes : project_id , outcome_code , outcome_details | project_staff : staff_id , project_id , role_code , date_from , date_to , other_details | projects : project_id , organisation_id , project_details | research_outcomes : outcome_code , outcome_description | research_staff : staff_id , employer_organisation_id , staff_details | staff_roles : role_code , role_description | tasks : task_id , project_id , task_details , eg agree objectives output: SELECT count(*) FROM Project_outcomes WHERE outcome_code  =  'Patent'\n Now please use valid SQLite to answer the following questions: What are the distinct battle names which are between bulgarian commander 'Kaloyan' and latin commander 'Baldwin I'?",
    "Here is an examples including input and output:\n input: question: What are the student ids for all male students? serialized_schema:  | allergy_1 | allergy_type : allergy , allergytype | has_allergy : stuid , allergy | student : stuid , lname , fname , age , sex , major , advisor , city_code output: SELECT StuID FROM Student WHERE Sex  =  'M'\n Now please use valid SQLite to answer the following questions: How many different results are there for the battles?",
    "Here is an examples including input and output:\n input: question: What are the low and high estimates of film markets? serialized_schema:  | film_rank | film : film_id , title , studio , director , gross_in_dollar | market : market_id , country , number_cities | film_market_estimation : estimation_id , low_estimate , high_estimate , film_id , type , market_id , year output: SELECT Low_Estimate ,  High_Estimate FROM film_market_estimation\n Now please use valid SQLite to answer the following questions: How many battles did not lose any ship with tonnage '225'?",
    "Here is an examples including input and output:\n input: question: What are the first name, last name, and gender of all the good customers? Order by their last name. serialized_schema:  | products_for_hire | discount_coupons : coupon_id , date_issued , coupon_amount | customers : customer_id , coupon_id , good_or_bad_customer , first_name , last_name , gender_mf , date_became_customer , date_last_hire | bookings : booking_id , customer_id , booking_status_code , returned_damaged_yn , booking_start_date , booking_end_date , count_hired , amount_payable , amount_of_discount , amount_outstanding , amount_of_refund | products_for_hire : product_id , product_type_code , daily_hire_cost , product_name , product_description | payments : payment_id , booking_id , customer_id , payment_type_code , amount_paid_in_full_yn , payment_date , amount_due , amount_paid | products_booked : booking_id , product_id , returned_yn , returned_late_yn , booked_count , booked_amount | view_product_availability : product_id , booking_id , status_date , available_yn output: SELECT first_name ,  last_name ,  gender_mf FROM customers WHERE good_or_bad_customer  =  'good' ORDER BY last_name\n Now please use valid SQLite to answer the following questions: List the name and date the battle that has lost the ship named 'Lettice' and the ship named 'HMS Atalanta'",
    "Here is an examples including input and output:\n input: question: How many assets can each parts be used in? List the part name and the number. serialized_schema:  | assets_maintenance | third_party_companies : company_id , company_type , company_name , company_address , other_company_details | maintenance_contracts : maintenance_contract_id , maintenance_contract_company_id , contract_start_date , contract_end_date , other_contract_details | parts : part_id , part_name , chargeable_yn , chargeable_amount , other_part_details | skills : skill_id , skill_code , skill_description | staff : staff_id , staff_name , gender , other_staff_details | assets : asset_id , maintenance_contract_id , supplier_company_id , asset_details , asset_make , asset_model , asset_acquired_date , asset_disposed_date , other_asset_details | asset_parts : asset_id , part_id | maintenance_engineers : engineer_id , company_id , first_name , last_name , other_details | engineer_skills : engineer_id , skill_id | fault_log : fault_log_entry_id , asset_id , recorded_by_staff_id , fault_log_entry_datetime , fault_description , other_fault_details | engineer_visits : engineer_visit_id , contact_staff_id , engineer_id , fault_log_entry_id , fault_status , visit_start_datetime , visit_end_datetime , other_visit_details | part_faults : part_fault_id , part_id , fault_short_name , fault_description , other_fault_details | fault_log_parts : fault_log_entry_id , part_fault_id , fault_status | skills_required_to_fix : part_fault_id , skill_id output: SELECT T1.part_name ,  count(*) FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name\n Now please use valid SQLite to answer the following questions: Show names, results and bulgarian commanders of the battles with no ships lost in the 'English Channel'.",
    "Here is an examples including input and output:\n input: question: Find the name of amenity that is most common in all dorms. serialized_schema:  | dorm_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | dorm : dormid , dorm_name , student_capacity , gender | dorm_amenity : amenid , amenity_name | has_amenity : dormid , amenid | lives_in : stuid , dormid , room_number output: SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T1.amenid  =  T2.amenid GROUP BY T2.amenid ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: What are the notes of the death events which has substring 'East'?",
    "Here is an examples including input and output:\n input: question: What is the maximum and mininum number of transit passengers for all airports? serialized_schema:  | aircraft | pilot : pilot_id , name , age | aircraft : aircraft_id , aircraft , description , max_gross_weight , total_disk_area , max_disk_loading | match : round , location , country , date , fastest_qualifying , winning_pilot , winning_aircraft | airport : airport_id , airport_name , total_passengers , %_change_2007 , international_passengers , domestic_passengers , transit_passengers , aircraft_movements , freight_metric_tonnes | airport_aircraft : id , airport_id , aircraft_id output: SELECT max(Transit_Passengers) ,  min(Transit_Passengers) FROM airport\n Now please use valid SQLite to answer the following questions: what are all the addresses including line 1 and line 2?",
    "Here is an examples including input and output:\n input: question: Count the number of universities that do not participate in the baketball match. serialized_schema:  | university_basketball | basketball_match : team_id , school_id , team_name , acc_regular_season , acc_percent , acc_home , acc_road , all_games , all_games_percent , all_home , all_road , all_neutral | university : school_id , school , location , founded , affiliation , enrollment , nickname , primary_conference output: SELECT count(*) FROM university WHERE school_id NOT IN (SELECT school_id FROM basketball_match)\n Now please use valid SQLite to answer the following questions: What is the first and second line for all addresses?",
    "Here is an examples including input and output:\n input: question: What are the names for tracks without a race in class 'GT'. serialized_schema:  | race_track | race : race_id , name , class , date , track_id | track : track_id , name , location , seating , year_opened output: SELECT name FROM track EXCEPT SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id WHERE T1.class  =  'GT'\n Now please use valid SQLite to answer the following questions: How many courses in total are listed?",
    "Here is an examples including input and output:\n input: question: Which person whose friends have the oldest average age? serialized_schema:  | network_2 | person : name , age , city , gender , job | personfriend : name , friend , year output: SELECT T2.name ,  avg(T1.age) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend GROUP BY T2.name ORDER BY avg(T1.age) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: How many courses are there?",
    "Here is an examples including input and output:\n input: question: What are the distinct first names of the students who have class president votes? serialized_schema:  | voter_2 | student : stuid , lname , fname , age , sex , major , advisor , city_code | voting_record : stuid , registration_date , election_cycle , president_vote , vice_president_vote , secretary_vote , treasurer_vote , class_president_vote , class_senator_vote output: SELECT DISTINCT T1.Fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.CLASS_Senator_VOTE\n Now please use valid SQLite to answer the following questions: How is the math course described?",
    "Here is an examples including input and output:\n input: question: What are all company names that have a corresponding movie directed in the year 1999? serialized_schema:  | culture_company | book_club : book_club_id , year , author_or_editor , book_title , publisher , category , result | movie : movie_id , title , year , director , budget_million , gross_worldwide | culture_company : company_name , type , incorporated_in , group_equity_shareholding , book_club_id , movie_id output: SELECT T2.company_name FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id  =  T2.movie_id WHERE T1.year  =  1999\n Now please use valid SQLite to answer the following questions: What are the descriptions for all the math courses?",
    "Here is an examples including input and output:\n input: question: Who performed the song named \"Le Pop\"? serialized_schema:  | music_2 | songs : songid , title | albums : aid , title , year , label , type | band : id , firstname , lastname | instruments : songid , bandmateid , instrument | performance : songid , bandmate , stageposition | tracklists : albumid , position , songid | vocals : songid , bandmate , type output: SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Le Pop\"\n Now please use valid SQLite to answer the following questions: What is the zip code of the address in the city Port Chelsea?",
    "Here is an examples including input and output:\n input: question: How many students are enrolled in some classes that are taught by an accounting professor? serialized_schema:  | college_1 | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num output: SELECT count(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN department AS T4 ON T3.dept_code  =  T4.dept_code WHERE T4.dept_name  =  'Accounting'\n Now please use valid SQLite to answer the following questions: What is the zip code for Port Chelsea?",
    "Here is an examples including input and output:\n input: question: What are the names of the regions in alphabetical order? serialized_schema:  | storm_record | storm : storm_id , name , dates_active , max_speed , damage_millions_usd , number_deaths | region : region_id , region_code , region_name | affected_region : region_id , storm_id , number_city_affected output: SELECT region_name FROM region ORDER BY region_name\n Now please use valid SQLite to answer the following questions: Which department offers the most number of degrees? List department name and id.",
    "Here is an examples including input and output:\n input: question: What are the names and sum of checking and savings balances for accounts with savings balances higher than the average savings balance? serialized_schema:  | small_bank_1 | accounts : custid , name | savings : custid , balance | checking : custid , balance output: SELECT T1.name ,  T2.balance + T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  >  (SELECT avg(balance) FROM savings)\n Now please use valid SQLite to answer the following questions: What is the name and id of the department with the most number of degrees ?",
    "Here is an examples including input and output:\n input: question: Find all the papers published by the institution \"Google\". serialized_schema:  | icfp_1 | inst : instid , name , country | authors : authid , lname , fname | papers : paperid , title | authorship : authid , instid , paperid , authorder output: SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Google\"\n Now please use valid SQLite to answer the following questions: How many departments offer any degree?",
    "Here is an examples including input and output:\n input: question: Which policy type appears most frequently in the available policies? serialized_schema:  | insurance_fnol | customers : customer_id , customer_name | services : service_id , service_name | available_policies : policy_id , policy_type_code , customer_phone | customers_policies : customer_id , policy_id , date_opened , date_closed | first_notification_of_loss : fnol_id , customer_id , policy_id , service_id | claims : claim_id , fnol_id , effective_date | settlements : settlement_id , claim_id , effective_date , settlement_amount output: SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: How many different departments offer degrees?",
    "Here is an examples including input and output:\n input: question: How many roles are there? serialized_schema:  | cre_Doc_Tracking_DB | ref_document_types : document_type_code , document_type_name , document_type_description | ref_calendar : calendar_date , day_number | ref_locations : location_code , location_name , location_description | roles : role_code , role_name , role_description | all_documents : document_id , date_stored , document_type_code , document_name , document_description , other_details | employees : employee_id , role_code , employee_name , gender_mfu , date_of_birth , other_details | document_locations : document_id , location_code , date_in_location_from , date_in_locaton_to | documents_to_be_destroyed : document_id , destruction_authorised_by_employee_id , destroyed_by_employee_id , planned_destruction_date , actual_destruction_date , other_details output: SELECT count(*) FROM ROLES\n Now please use valid SQLite to answer the following questions: How many different degree names are offered?",
    "Here is an examples including input and output:\n input: question: List the name, nationality and id of all male architects ordered by their names lexicographically. serialized_schema:  | architecture | architect : id , name , nationality , gender | bridge : architect_id , id , name , location , length_meters , length_feet | mill : architect_id , id , location , name , type , built_year , notes output: SELECT name ,  nationality ,  id FROM architect WHERE gender  =  'male' ORDER BY name\n Now please use valid SQLite to answer the following questions: How many different degrees are offered?",
    "Here is an examples including input and output:\n input: question: What are the names of the customers who bought product \"food\" at least once? serialized_schema:  | tracking_orders | customers : customer_id , customer_name , customer_details | invoices : invoice_number , invoice_date , invoice_details | orders : order_id , customer_id , order_status , date_order_placed , order_details | products : product_id , product_name , product_details | order_items : order_item_id , product_id , order_id , order_item_status , order_item_details | shipments : shipment_id , order_id , invoice_number , shipment_tracking_number , shipment_date , other_shipment_details | shipment_items : shipment_id , order_item_id output: SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id WHERE T4.product_name = \"food\" GROUP BY T1.customer_id HAVING count(*)  >=  1\n Now please use valid SQLite to answer the following questions: How many degrees does the engineering department offer?",
    "Here is an examples including input and output:\n input: question: Show the name and service for all trains in order by time. serialized_schema:  | train_station | station : station_id , name , annual_entry_exit , annual_interchanges , total_passengers , location , main_services , number_of_platforms | train : train_id , name , time , service | train_station : train_id , station_id output: SELECT name ,  service FROM train ORDER BY TIME\n Now please use valid SQLite to answer the following questions: How many degrees does the engineering department have?",
    "Here is an examples including input and output:\n input: question: What are the titles of all albums that start with A in alphabetical order? serialized_schema:  | store_1 | artists : id , name | sqlite_sequence : name , seq | albums : id , title , artist_id | employees : id , last_name , first_name , title , reports_to , birth_date , hire_date , address , city , state , country , postal_code , phone , fax , email | customers : id , first_name , last_name , company , address , city , state , country , postal_code , phone , fax , email , support_rep_id | genres : id , name | invoices : id , customer_id , invoice_date , billing_address , billing_city , billing_state , billing_country , billing_postal_code , total | media_types : id , name | tracks : id , name , album_id , media_type_id , genre_id , composer , milliseconds , bytes , unit_price | invoice_lines : id , invoice_id , track_id , unit_price , quantity | playlists : id , name | playlist_tracks : playlist_id , track_id output: SELECT title FROM albums WHERE title LIKE 'A%' ORDER BY title;\n Now please use valid SQLite to answer the following questions: What are the names and descriptions of all the sections?",
    "Here is an examples including input and output:\n input: question: Count the number of artists who are older than 46 and joined after 1990. serialized_schema:  | theme_gallery | artist : artist_id , name , country , year_join , age | exhibition : exhibition_id , year , theme , artist_id , ticket_price | exhibition_record : exhibition_id , date , attendance output: SELECT count(*) FROM artist WHERE age  >  46 AND year_join  >  1990\n Now please use valid SQLite to answer the following questions: What are the names and descriptions for all the sections?",
    "Here is an examples including input and output:\n input: question: For each zip code, find the ids of all trips that have a higher average mean temperature above 60? serialized_schema:  | bike_1 | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code output: SELECT T1.id FROM trip AS T1 JOIN weather AS T2 ON T1.zip_code  =  T2.zip_code GROUP BY T2.zip_code HAVING avg(T2.mean_temperature_f)  >  60\n Now please use valid SQLite to answer the following questions: What are the names and id of courses having at most 2 sections?",
    "Here is an examples including input and output:\n input: question: What is average age for different job title? serialized_schema:  | network_2 | person : name , age , city , gender , job | personfriend : name , friend , year output: SELECT avg(age) ,  job FROM Person GROUP BY job\n Now please use valid SQLite to answer the following questions: What are the names and ids of every course with less than 2 sections?",
    "Here is an examples including input and output:\n input: question: Find the names and descriptions of courses that belong to the subject named \"Computer Science\". serialized_schema:  | e_learning | course_authors_and_tutors : author_id , author_tutor_atb , login_name , password , personal_name , middle_name , family_name , gender_mf , address_line_1 | students : student_id , date_of_registration , date_of_latest_logon , login_name , password , personal_name , middle_name , family_name | subjects : subject_id , subject_name | courses : course_id , author_id , subject_id , course_name , course_description | student_course_enrolment : registration_id , student_id , course_id , date_of_enrolment , date_of_completion | student_tests_taken : registration_id , date_test_taken , test_result output: SELECT T1.course_name ,  T1.course_description FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id WHERE T2.subject_name  =  \"Computer Science\"\n Now please use valid SQLite to answer the following questions: List the section_name in reversed lexicographical order.",
    "Here is an examples including input and output:\n input: question: Find the name of the first 5 customers. serialized_schema:  | customer_deliveries | products : product_id , product_name , product_price , product_description | addresses : address_id , address_details , city , zip_postcode , state_province_county , country | customers : customer_id , payment_method , customer_name , customer_phone , customer_email , date_became_customer | regular_orders : regular_order_id , distributer_id | regular_order_products : regular_order_id , product_id | actual_orders : actual_order_id , order_status_code , regular_order_id , actual_order_date | actual_order_products : actual_order_id , product_id | customer_addresses : customer_id , address_id , date_from , address_type , date_to | delivery_routes : route_id , route_name , other_route_details | delivery_route_locations : location_code , route_id , location_address_id , location_name | trucks : truck_id , truck_licence_number , truck_details | employees : employee_id , employee_address_id , employee_name , employee_phone | order_deliveries : location_code , actual_order_id , delivery_status_code , driver_employee_id , truck_id , delivery_date output: SELECT customer_name FROM Customers ORDER BY date_became_customer LIMIT 5\n Now please use valid SQLite to answer the following questions: What are the names of the sections in reverse alphabetical order?",
    "Here is an examples including input and output:\n input: question: What are the average prices and cases of wines produced in the year of 2009 and made of Zinfandel grape? serialized_schema:  | wine_1 | grapes : id , grape , color | appellations : no , appelation , county , state , area , isava | wine : no , grape , winery , appelation , state , name , year , price , score , cases , drink output: SELECT AVG(Price) ,  AVG(Cases) FROM WINE WHERE YEAR  =  2009 AND Grape  =  \"Zinfandel\"\n Now please use valid SQLite to answer the following questions: What is the semester which most student registered in? Show both the name and the id.",
    "Here is an examples including input and output:\n input: question: How many different cities are they from? serialized_schema:  | network_2 | person : name , age , city , gender , job | personfriend : name , friend , year output: SELECT count(DISTINCT city) FROM Person\n Now please use valid SQLite to answer the following questions: For each semester, what is the name and id of the one with the most students registered?",
    "Here is an examples including input and output:\n input: question: Report the distinct advisors who have more than 2 students. serialized_schema:  | voter_2 | student : stuid , lname , fname , age , sex , major , advisor , city_code | voting_record : stuid , registration_date , election_cycle , president_vote , vice_president_vote , secretary_vote , treasurer_vote , class_president_vote , class_senator_vote output: SELECT Advisor FROM STUDENT GROUP BY Advisor HAVING count(*)  >  2\n Now please use valid SQLite to answer the following questions: What is the description of the department whose name has the substring the computer?",
    "Here is an examples including input and output:\n input: question: What is the average age for all people in the table? serialized_schema:  | network_2 | person : name , age , city , gender , job | personfriend : name , friend , year output: SELECT avg(age) FROM Person\n Now please use valid SQLite to answer the following questions: What is the department description for the one whose name has the word computer?",
    "Here is an examples including input and output:\n input: question: Find the balance of the checking account belonging to an owner whose name contains 'ee'. serialized_schema:  | small_bank_1 | accounts : custid , name | savings : custid , balance | checking : custid , balance output: SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T1.name LIKE '%ee%'\n Now please use valid SQLite to answer the following questions: Who are enrolled in 2 degree programs in one semester? List the first name, middle name and last name and the id.",
    "Here is an examples including input and output:\n input: question: How many fault status codes are recorded in the fault log parts table? serialized_schema:  | assets_maintenance | third_party_companies : company_id , company_type , company_name , company_address , other_company_details | maintenance_contracts : maintenance_contract_id , maintenance_contract_company_id , contract_start_date , contract_end_date , other_contract_details | parts : part_id , part_name , chargeable_yn , chargeable_amount , other_part_details | skills : skill_id , skill_code , skill_description | staff : staff_id , staff_name , gender , other_staff_details | assets : asset_id , maintenance_contract_id , supplier_company_id , asset_details , asset_make , asset_model , asset_acquired_date , asset_disposed_date , other_asset_details | asset_parts : asset_id , part_id | maintenance_engineers : engineer_id , company_id , first_name , last_name , other_details | engineer_skills : engineer_id , skill_id | fault_log : fault_log_entry_id , asset_id , recorded_by_staff_id , fault_log_entry_datetime , fault_description , other_fault_details | engineer_visits : engineer_visit_id , contact_staff_id , engineer_id , fault_log_entry_id , fault_status , visit_start_datetime , visit_end_datetime , other_visit_details | part_faults : part_fault_id , part_id , fault_short_name , fault_description , other_fault_details | fault_log_parts : fault_log_entry_id , part_fault_id , fault_status | skills_required_to_fix : part_fault_id , skill_id output: SELECT DISTINCT fault_status FROM Fault_Log_Parts\n Now please use valid SQLite to answer the following questions: What are the first, middle, and last names, along with the ids, of all students who enrolled in 2 degree programs in one semester?",
    "Here is an examples including input and output:\n input: question: Find the document type name of the document named \"How to read a book\". serialized_schema:  | cre_Doc_Tracking_DB | ref_document_types : document_type_code , document_type_name , document_type_description | ref_calendar : calendar_date , day_number | ref_locations : location_code , location_name , location_description | roles : role_code , role_name , role_description | all_documents : document_id , date_stored , document_type_code , document_name , document_description , other_details | employees : employee_id , role_code , employee_name , gender_mfu , date_of_birth , other_details | document_locations : document_id , location_code , date_in_location_from , date_in_locaton_to | documents_to_be_destroyed : document_id , destruction_authorised_by_employee_id , destroyed_by_employee_id , planned_destruction_date , actual_destruction_date , other_details output: SELECT T2.document_type_name FROM All_documents AS T1 JOIN Ref_document_types AS T2 ON T1.document_type_code  =  T2.document_type_code WHERE T1.document_name  =  \"How to read a book\"\n Now please use valid SQLite to answer the following questions: Who is enrolled in a Bachelor degree program? List the first name, middle name, last name.",
    "Here is an examples including input and output:\n input: question: Find the names of nurses who are on call. serialized_schema:  | hospital_1 | physician : employeeid , name , position , ssn | department : departmentid , name , head | affiliated_with : physician , department , primaryaffiliation | procedures : code , name , cost | trained_in : physician , treatment , certificationdate , certificationexpires | patient : ssn , name , address , phone , insuranceid , pcp | nurse : employeeid , name , position , registered , ssn | appointment : appointmentid , patient , prepnurse , physician , start , end , examinationroom | medication : code , name , brand , description | prescribes : physician , patient , medication , date , appointment , dose | block : blockfloor , blockcode | room : roomnumber , roomtype , blockfloor , blockcode , unavailable | on_call : nurse , blockfloor , blockcode , oncallstart , oncallend | stay : stayid , patient , room , staystart , stayend | undergoes : patient , procedures , stay , dateundergoes , physician , assistingnurse output: SELECT DISTINCT T1.name FROM nurse AS T1 JOIN on_call AS T2 ON T1.EmployeeID  =  T2.nurse\n Now please use valid SQLite to answer the following questions: What are the first, middle, and last names for everybody enrolled in a Bachelors program?",
    "Here is an examples including input and output:\n input: question: Show the names of companies and the number of employees they have serialized_schema:  | company_employee | people : people_id , age , name , nationality , graduation_college | company : company_id , name , headquarters , industry , sales_in_billion , profits_in_billion , assets_in_billion , market_value_in_billion | employment : company_id , people_id , year_working output: SELECT T3.Name ,  COUNT(*) FROM employment AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID JOIN company AS T3 ON T1.Company_ID  =  T3.Company_ID GROUP BY T3.Name\n Now please use valid SQLite to answer the following questions: Find the kind of program which most number of students are enrolled in?",
    "Here is an examples including input and output:\n input: question: What are the average score and average staff number of all shops? serialized_schema:  | coffee_shop | shop : shop_id , address , num_of_staff , score , open_year | member : member_id , name , membership_card , age , time_of_purchase , level_of_membership , address | happy_hour : hh_id , shop_id , month , num_of_shaff_in_charge | happy_hour_member : hh_id , member_id , total_amount output: SELECT avg(num_of_staff) ,  avg(score) FROM shop\n Now please use valid SQLite to answer the following questions: What is the degree summary name that has the most number of students enrolled?",
    "Here is an examples including input and output:\n input: question: Which catalog content has the highest height? Give me the catalog entry name. serialized_schema:  | product_catalog | attribute_definitions : attribute_id , attribute_name , attribute_data_type | catalogs : catalog_id , catalog_name , catalog_publisher , date_of_publication , date_of_latest_revision | catalog_structure : catalog_level_number , catalog_id , catalog_level_name | catalog_contents : catalog_entry_id , catalog_level_number , parent_entry_id , previous_entry_id , next_entry_id , catalog_entry_name , product_stock_number , price_in_dollars , price_in_euros , price_in_pounds , capacity , length , height , width | catalog_contents_additional_attributes : catalog_entry_id , catalog_level_number , attribute_id , attribute_value output: SELECT catalog_entry_name FROM catalog_contents ORDER BY height DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: Find the program which most number of students are enrolled in. List both the id and the summary.",
    "Here is an examples including input and output:\n input: question: Count the number of customers. serialized_schema:  | customer_complaints | staff : staff_id , gender , first_name , last_name , email_address , phone_number | customers : customer_id , customer_type_code , address_line_1 , address_line_2 , town_city , state , email_address , phone_number | products : product_id , parent_product_id , product_category_code , date_product_first_available , date_product_discontinued , product_name , product_description , product_price | complaints : complaint_id , product_id , customer_id , complaint_outcome_code , complaint_status_code , complaint_type_code , date_complaint_raised , date_complaint_closed , staff_id output: SELECT count(*) FROM customers\n Now please use valid SQLite to answer the following questions: What is the program id and the summary of the degree that has the most students enrolled?",
    "Here is an examples including input and output:\n input: question: What is the party of the representative that has the smallest number of votes. serialized_schema:  | election_representative | election : election_id , representative_id , date , votes , vote_percent , seats , place | representative : representative_id , name , state , party , lifespan output: SELECT T2.Party FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID ORDER BY votes ASC LIMIT 1\n Now please use valid SQLite to answer the following questions: Which student has enrolled for the most times in any program? List the id, first name, middle name, last name, the number of enrollments and student id.",
    "Here is an examples including input and output:\n input: question: What are the names of enzymes in descending order? serialized_schema:  | medicine_enzyme_interaction | medicine : id , name , trade_name , fda_approved | enzyme : id , name , location , product , chromosome , omim , porphyria | medicine_enzyme_interaction : enzyme_id , medicine_id , interaction_type output: SELECT name FROM enzyme ORDER BY name DESC\n Now please use valid SQLite to answer the following questions: What is the first, middle, and last name, along with the id and number of enrollments, for the student who enrolled the most in any program?",
    "Here is an examples including input and output:\n input: question: What are the ids, date opened, name, and other details for all accounts? serialized_schema:  | customers_and_invoices | customers : customer_id , customer_first_name , customer_middle_initial , customer_last_name , gender , email_address , login_name , login_password , phone_number , town_city , state_county_province , country | orders : order_id , customer_id , date_order_placed , order_details | invoices : invoice_number , order_id , invoice_date | accounts : account_id , customer_id , date_account_opened , account_name , other_account_details | product_categories : production_type_code , product_type_description , vat_rating | products : product_id , parent_product_id , production_type_code , unit_price , product_name , product_color , product_size | financial_transactions : transaction_id , account_id , invoice_number , transaction_type , transaction_date , transaction_amount , transaction_comment , other_transaction_details | order_items : order_item_id , order_id , product_id , product_quantity , other_order_item_details | invoice_line_items : order_item_id , invoice_number , product_id , product_title , product_quantity , product_price , derived_product_cost , derived_vat_payable , derived_total_cost output: SELECT account_id ,  date_account_opened ,  account_name ,  other_account_details FROM Accounts\n Now please use valid SQLite to answer the following questions: Which semesters do not have any student enrolled? List the semester name.",
    "Here is an examples including input and output:\n input: question: Count the number of courses with more than 2 credits. serialized_schema:  | college_3 | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building | department : dno , division , dname , room , building , dphone | member_of : facid , dno , appt_type | course : cid , cname , credits , instructor , days , hours , dno | minor_in : stuid , dno | enrolled_in : stuid , cid , grade | gradeconversion : lettergrade , gradepoint output: SELECT count(*) FROM COURSE WHERE Credits  >  2\n Now please use valid SQLite to answer the following questions: What is the name of the semester with no students enrolled?",
    "Here is an examples including input and output:\n input: question: What are the names of the chairs of festivals, sorted in ascending order of the year held? serialized_schema:  | entertainment_awards | festival_detail : festival_id , festival_name , chair_name , location , year , num_of_audience | artwork : artwork_id , type , name | nomination : artwork_id , festival_id , result output: SELECT Chair_Name FROM festival_detail ORDER BY YEAR ASC\n Now please use valid SQLite to answer the following questions: What are all the course names of the courses which ever have students enrolled in?",
    "Here is an examples including input and output:\n input: question: How many rooms have a king bed? serialized_schema:  | inn_1 | rooms : roomid , roomname , beds , bedtype , maxoccupancy , baseprice , decor | reservations : code , room , checkin , checkout , rate , lastname , firstname , adults , kids output: SELECT count(*) FROM Rooms WHERE bedType  =  \"King\";\n Now please use valid SQLite to answer the following questions: What are the names of all courses that have some students enrolled?",
    "Here is an examples including input and output:\n input: question: How many movie reviews does each director get? serialized_schema:  | movie_1 | movie : mid , title , year , director | reviewer : rid , name | rating : rid , mid , stars , ratingdate output: SELECT count(*) ,  T1.director FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID GROUP BY T1.director\n Now please use valid SQLite to answer the following questions: What's the name of the course with most number of enrollments?",
    "Here is an examples including input and output:\n input: question: Show the party with drivers from Hartford and drivers older than 40. serialized_schema:  | school_bus | driver : driver_id , name , party , home_city , age | school : school_id , grade , school , location , type | school_bus : school_id , driver_id , years_working , if_full_time output: SELECT party FROM driver WHERE home_city  =  'Hartford' AND age  >  40\n Now please use valid SQLite to answer the following questions: What is the name of the course with the most students enrolled?",
    "Here is an examples including input and output:\n input: question: Show the location code of the country \"Canada\". serialized_schema:  | cre_Doc_Tracking_DB | ref_document_types : document_type_code , document_type_name , document_type_description | ref_calendar : calendar_date , day_number | ref_locations : location_code , location_name , location_description | roles : role_code , role_name , role_description | all_documents : document_id , date_stored , document_type_code , document_name , document_description , other_details | employees : employee_id , role_code , employee_name , gender_mfu , date_of_birth , other_details | document_locations : document_id , location_code , date_in_location_from , date_in_locaton_to | documents_to_be_destroyed : document_id , destruction_authorised_by_employee_id , destroyed_by_employee_id , planned_destruction_date , actual_destruction_date , other_details output: SELECT location_code FROM Ref_locations WHERE location_name  =  \"Canada\"\n Now please use valid SQLite to answer the following questions: Find the last name of the students who currently live in the state of North Carolina but have not registered in any degree program.",
    "Here is an examples including input and output:\n input: question: Which guests have apartment bookings with status code \"Confirmed\"? Return their first names and last names. serialized_schema:  | apartment_rentals | apartment_buildings : building_id , building_short_name , building_full_name , building_description , building_address , building_manager , building_phone | apartments : apt_id , building_id , apt_type_code , apt_number , bathroom_count , bedroom_count , room_count | apartment_facilities : apt_id , facility_code | guests : guest_id , gender_code , guest_first_name , guest_last_name , date_of_birth | apartment_bookings : apt_booking_id , apt_id , guest_id , booking_status_code , booking_start_date , booking_end_date | view_unit_status : apt_id , apt_booking_id , status_date , available_yn output: SELECT T2.guest_first_name ,  T2.guest_last_name FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id WHERE T1.booking_status_code  =  \"Confirmed\"\n Now please use valid SQLite to answer the following questions: What are the last name of the students who live in North Carolina but have not registered in any degree programs?",
    "Here is an examples including input and output:\n input: question: How many papers are written by authors from the institution \"University of Pennsylvania\"? serialized_schema:  | icfp_1 | inst : instid , name , country | authors : authid , lname , fname | papers : paperid , title | authorship : authid , instid , paperid , authorder output: SELECT count(DISTINCT t1.title) FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"University of Pennsylvania\"\n Now please use valid SQLite to answer the following questions: Show the date and id of the transcript with at least 2 course results.",
    "Here is an examples including input and output:\n input: question: Which tourist attractions are visited at least twice? Give me their names and ids. serialized_schema:  | cre_Theme_park | ref_hotel_star_ratings : star_rating_code , star_rating_description | locations : location_id , location_name , address , other_details | ref_attraction_types : attraction_type_code , attraction_type_description | visitors : tourist_id , tourist_details | features : feature_id , feature_details | hotels : hotel_id , star_rating_code , pets_allowed_yn , price_range , other_hotel_details | tourist_attractions : tourist_attraction_id , attraction_type_code , location_id , how_to_get_there , name , description , opening_hours , other_details | street_markets : market_id , market_details | shops : shop_id , shop_details | museums : museum_id , museum_details | royal_family : royal_family_id , royal_family_details | theme_parks : theme_park_id , theme_park_details | visits : visit_id , tourist_attraction_id , tourist_id , visit_date , visit_details | photos : photo_id , tourist_attraction_id , name , description , filename , other_details | staff : staff_id , tourist_attraction_id , name , other_details | tourist_attraction_features : tourist_attraction_id , feature_id output: SELECT T1.Name ,  T2.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*)  >=  2\n Now please use valid SQLite to answer the following questions: What is the date and id of the transcript with at least 2 courses listed?",
    "Here is an examples including input and output:\n input: question: Please show the industries of companies in descending order of the number of companies. serialized_schema:  | company_office | buildings : id , name , city , height , stories , status | companies : id , name , headquarters , industry , sales_billion , profits_billion , assets_billion , market_value_billion | office_locations : building_id , company_id , move_in_year output: SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT(*) DESC\n Now please use valid SQLite to answer the following questions: What is the phone number of the man with the first name Timmothy and the last name Ward?",
    "Here is an examples including input and output:\n input: question: What are the name of the players who received a card in descending order of the hours of training? serialized_schema:  | soccer_2 | college : cname , state , enr | player : pid , pname , ycard , hs | tryout : pid , cname , ppos , decision output: SELECT pName FROM Player WHERE yCard  =  'yes' ORDER BY HS DESC\n Now please use valid SQLite to answer the following questions: What is the mobile phone number of the student named Timmothy Ward ?",
    "Here is an examples including input and output:\n input: question: Give me ids for all the trip that took place in a zip code area with average mean temperature above 60. serialized_schema:  | bike_1 | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code output: SELECT T1.id FROM trip AS T1 JOIN weather AS T2 ON T1.zip_code  =  T2.zip_code GROUP BY T2.zip_code HAVING avg(T2.mean_temperature_f)  >  60\n Now please use valid SQLite to answer the following questions: Who is the first student to register? List the first name, middle name and last name.",
    "Here is an examples including input and output:\n input: question: Find the first names of the teachers that teach first grade. serialized_schema:  | student_1 | list : lastname , firstname , grade , classroom | teachers : lastname , firstname , classroom output: SELECT DISTINCT T2.firstname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE grade  =  1\n Now please use valid SQLite to answer the following questions: What is the first, middle, and last name of the first student to register?",
    "Here is an examples including input and output:\n input: question: How many employees have salary between 100000 and 200000? serialized_schema:  | flight_1 | flight : flno , origin , destination , distance , departure_date , arrival_date , price , aid | aircraft : aid , name , distance | employee : eid , name , salary | certificate : eid , aid output: SELECT count(*) FROM Employee WHERE salary BETWEEN 100000 AND 200000\n Now please use valid SQLite to answer the following questions: Who is the earliest graduate of the school? List the first name, middle name and last name.",
    "Here is an examples including input and output:\n input: question: How many times does ROY SWEAZY has reserved a room. serialized_schema:  | inn_1 | rooms : roomid , roomname , beds , bedtype , maxoccupancy , baseprice , decor | reservations : code , room , checkin , checkout , rate , lastname , firstname , adults , kids output: SELECT count(*) FROM Reservations WHERE FirstName = \"ROY\" AND LastName  =  \"SWEAZY\";\n Now please use valid SQLite to answer the following questions: What is the first, middle, and last name of the earliest school graduate?",
    "Here is an examples including input and output:\n input: question: Show the most common location of performances. serialized_schema:  | performance_attendance | member : member_id , name , nationality , role | performance : performance_id , date , host , location , attendance | member_attendance : member_id , performance_id , num_of_pieces output: SELECT LOCATION FROM performance GROUP BY LOCATION ORDER BY COUNT(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: Whose permanent address is different from his or her current address? List his or her first name.",
    "Here is an examples including input and output:\n input: question: What is the incident type description for the incident type with code \"VIOLENCE\"? serialized_schema:  | behavior_monitoring | ref_address_types : address_type_code , address_type_description | ref_detention_type : detention_type_code , detention_type_description | ref_incident_type : incident_type_code , incident_type_description | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | students : student_id , address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , date_first_rental , date_left_university , other_student_details | teachers : teacher_id , address_id , first_name , middle_name , last_name , gender , cell_mobile_number , email_address , other_details | assessment_notes : notes_id , student_id , teacher_id , date_of_notes , text_of_notes , other_details | behavior_incident : incident_id , incident_type_code , student_id , date_incident_start , date_incident_end , incident_summary , recommendations , other_details | detention : detention_id , detention_type_code , teacher_id , datetime_detention_start , datetime_detention_end , detention_summary , other_details | student_addresses : student_id , address_id , date_address_from , date_address_to , monthly_rental , other_details | students_in_detention : student_id , detention_id , incident_id output: SELECT incident_type_description FROM Ref_Incident_Type WHERE incident_type_code  =  \"VIOLENCE\"\n Now please use valid SQLite to answer the following questions: What is the first name of the student whose permanent address is different from his or her current one?",
    "Here is an examples including input and output:\n input: question: Which tourist attractions can we get to by bus? Tell me the names of the attractions. serialized_schema:  | cre_Theme_park | ref_hotel_star_ratings : star_rating_code , star_rating_description | locations : location_id , location_name , address , other_details | ref_attraction_types : attraction_type_code , attraction_type_description | visitors : tourist_id , tourist_details | features : feature_id , feature_details | hotels : hotel_id , star_rating_code , pets_allowed_yn , price_range , other_hotel_details | tourist_attractions : tourist_attraction_id , attraction_type_code , location_id , how_to_get_there , name , description , opening_hours , other_details | street_markets : market_id , market_details | shops : shop_id , shop_details | museums : museum_id , museum_details | royal_family : royal_family_id , royal_family_details | theme_parks : theme_park_id , theme_park_details | visits : visit_id , tourist_attraction_id , tourist_id , visit_date , visit_details | photos : photo_id , tourist_attraction_id , name , description , filename , other_details | staff : staff_id , tourist_attraction_id , name , other_details | tourist_attraction_features : tourist_attraction_id , feature_id output: SELECT Name FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  \"bus\"\n Now please use valid SQLite to answer the following questions: Which address holds the most number of students currently? List the address id and all lines.",
    "Here is an examples including input and output:\n input: question: What are the names of the cameras that have taken picture of the most mountains? serialized_schema:  | mountain_photos | mountain : id , name , height , prominence , range , country | camera_lens : id , brand , name , focal_length_mm , max_aperture | photos : id , camera_lens_id , mountain_id , color , name output: SELECT T2.name FROM photos AS T1 JOIN camera_lens AS T2 ON T1.camera_lens_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: What is the id, line 1, and line 2 of the address with the most students?",
    "Here is an examples including input and output:\n input: question: Show ids for all aircrafts with more than 1000 distance. serialized_schema:  | flight_1 | flight : flno , origin , destination , distance , departure_date , arrival_date , price , aid | aircraft : aid , name , distance | employee : eid , name , salary | certificate : eid , aid output: SELECT aid FROM Aircraft WHERE distance  >  1000\n Now please use valid SQLite to answer the following questions: On average, when were the transcripts printed?",
    "Here is an examples including input and output:\n input: question: What are the first names, office locations of all lecturers who have taught some course? serialized_schema:  | college_1 | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num output: SELECT T2.emp_fname ,  T4.prof_office ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN professor AS T4 ON T2.emp_num  =  T4.emp_num\n Now please use valid SQLite to answer the following questions: What is the average transcript date?",
    "Here is an examples including input and output:\n input: question: How many staff in total? serialized_schema:  | driving_school | addresses : address_id , line_1_number_building , city , zip_postcode , state_province_county , country | staff : staff_id , staff_address_id , nickname , first_name , middle_name , last_name , date_of_birth , date_joined_staff , date_left_staff | vehicles : vehicle_id , vehicle_details | customers : customer_id , customer_address_id , customer_status_code , date_became_customer , date_of_birth , first_name , last_name , amount_outstanding , email_address , phone_number , cell_mobile_phone_number | customer_payments : customer_id , datetime_payment , payment_method_code , amount_payment | lessons : lesson_id , customer_id , lesson_status_code , staff_id , vehicle_id , lesson_date , lesson_time , price output: SELECT count(*) FROM Staff;\n Now please use valid SQLite to answer the following questions: When is the first transcript released? List the date and details.",
    "Here is an examples including input and output:\n input: question: List document type codes and the number of documents in each code. serialized_schema:  | cre_Docs_and_Epenses | ref_document_types : document_type_code , document_type_name , document_type_description | ref_budget_codes : budget_type_code , budget_type_description | projects : project_id , project_details | documents : document_id , document_type_code , project_id , document_date , document_name , document_description , other_details | statements : statement_id , statement_details | documents_with_expenses : document_id , budget_type_code , document_details | accounts : account_id , statement_id , account_details output: SELECT document_type_code ,  count(*) FROM Documents GROUP BY document_type_code\n Now please use valid SQLite to answer the following questions: What is the earliest date of a transcript release, and what details can you tell me?",
    "Here is an examples including input and output:\n input: question: How many engineers did each staff contact? List both the contact staff name and number of engineers contacted. serialized_schema:  | assets_maintenance | third_party_companies : company_id , company_type , company_name , company_address , other_company_details | maintenance_contracts : maintenance_contract_id , maintenance_contract_company_id , contract_start_date , contract_end_date , other_contract_details | parts : part_id , part_name , chargeable_yn , chargeable_amount , other_part_details | skills : skill_id , skill_code , skill_description | staff : staff_id , staff_name , gender , other_staff_details | assets : asset_id , maintenance_contract_id , supplier_company_id , asset_details , asset_make , asset_model , asset_acquired_date , asset_disposed_date , other_asset_details | asset_parts : asset_id , part_id | maintenance_engineers : engineer_id , company_id , first_name , last_name , other_details | engineer_skills : engineer_id , skill_id | fault_log : fault_log_entry_id , asset_id , recorded_by_staff_id , fault_log_entry_datetime , fault_description , other_fault_details | engineer_visits : engineer_visit_id , contact_staff_id , engineer_id , fault_log_entry_id , fault_status , visit_start_datetime , visit_end_datetime , other_visit_details | part_faults : part_fault_id , part_id , fault_short_name , fault_description , other_fault_details | fault_log_parts : fault_log_entry_id , part_fault_id , fault_status | skills_required_to_fix : part_fault_id , skill_id output: SELECT T1.staff_name ,  count(*) FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id  =  T2.contact_staff_id GROUP BY T1.staff_name\n Now please use valid SQLite to answer the following questions: How many transcripts are released?",
    "Here is an examples including input and output:\n input: question: What are the maximum and minimum number of cities in all markets. serialized_schema:  | film_rank | film : film_id , title , studio , director , gross_in_dollar | market : market_id , country , number_cities | film_market_estimation : estimation_id , low_estimate , high_estimate , film_id , type , market_id , year output: SELECT max(Number_cities) ,  min(Number_cities) FROM market\n Now please use valid SQLite to answer the following questions: How many transcripts are listed?",
    "Here is an examples including input and output:\n input: question: Find the list of page size which have more than 3 product listed serialized_schema:  | store_product | product : product_id , product , dimensions , dpi , pages_per_minute_color , max_page_size , interface | store : store_id , store_name , type , area_size , number_of_product_category , ranking | district : district_id , district_name , headquartered_city , city_population , city_area | store_product : store_id , product_id | store_district : store_id , district_id output: SELECT max_page_size FROM product GROUP BY max_page_size HAVING count(*)  >  3\n Now please use valid SQLite to answer the following questions: What is the last transcript release date?",
    "Here is an examples including input and output:\n input: question: What are the first names and office locations for all professors sorted alphabetically by first name? serialized_schema:  | college_1 | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num output: SELECT T2.emp_fname ,  T1.prof_office FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num  =  T2.emp_num ORDER BY T2.emp_fname\n Now please use valid SQLite to answer the following questions: When was the last transcript released?",
    "Here is an examples including input and output:\n input: question: What is the minimum, average, and maximum distance of all aircrafts. serialized_schema:  | flight_1 | flight : flno , origin , destination , distance , departure_date , arrival_date , price , aid | aircraft : aid , name , distance | employee : eid , name , salary | certificate : eid , aid output: SELECT min(distance) ,  avg(distance) ,  max(distance) FROM Aircraft\n Now please use valid SQLite to answer the following questions: How many times at most can a course enrollment result show in different transcripts? Also show the course enrollment id.",
    "Here is an examples including input and output:\n input: question: How many journalists are there? serialized_schema:  | news_report | event : event_id , date , venue , name , event_attendance | journalist : journalist_id , name , nationality , age , years_working | news_report : journalist_id , event_id , work_type output: SELECT count(*) FROM journalist\n Now please use valid SQLite to answer the following questions: What is the maximum number of times that a course shows up in different transcripts and what is that course's enrollment id?",
    "Here is an examples including input and output:\n input: question: What is the description of the role named \"Proof Reader\"? serialized_schema:  | cre_Doc_Tracking_DB | ref_document_types : document_type_code , document_type_name , document_type_description | ref_calendar : calendar_date , day_number | ref_locations : location_code , location_name , location_description | roles : role_code , role_name , role_description | all_documents : document_id , date_stored , document_type_code , document_name , document_description , other_details | employees : employee_id , role_code , employee_name , gender_mfu , date_of_birth , other_details | document_locations : document_id , location_code , date_in_location_from , date_in_locaton_to | documents_to_be_destroyed : document_id , destruction_authorised_by_employee_id , destroyed_by_employee_id , planned_destruction_date , actual_destruction_date , other_details output: SELECT role_description FROM ROLES WHERE role_name  =  \"Proof Reader\"\n Now please use valid SQLite to answer the following questions: Show the date of the transcript which shows the least number of results, also list the id.",
    "Here is an examples including input and output:\n input: question: How many followers does each user have? serialized_schema:  | twitter_1 | follows : f1 , f2 | tweets : id , uid , text , createdate | user_profiles : uid , name , email , partitionid , followers output: SELECT count(*) FROM follows\n Now please use valid SQLite to answer the following questions: What is the date and id of the transcript with the least number of results?",
    "Here is an examples including input and output:\n input: question: What are the first and last names of the first-grade students who are NOT taught by teacher OTHA MOYER? serialized_schema:  | student_1 | list : lastname , firstname , grade , classroom | teachers : lastname , firstname , classroom output: SELECT DISTINCT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.grade  =  1 EXCEPT SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"OTHA\" AND T2.lastname  =  \"MOYER\"\n Now please use valid SQLite to answer the following questions: Find the semester when both Master students and Bachelor students got enrolled in.",
    "Here is an examples including input and output:\n input: question: Which authors have last name \"Ueno\"? List their first names. serialized_schema:  | icfp_1 | inst : instid , name , country | authors : authid , lname , fname | papers : paperid , title | authorship : authid , instid , paperid , authorder output: SELECT fname FROM authors WHERE lname  =  \"Ueno\"\n Now please use valid SQLite to answer the following questions: What is the id of the semester that had both Masters and Bachelors students enrolled?",
    "Here is an examples including input and output:\n input: question: What is the name of the country with the most number of home airlines? serialized_schema:  | flight_4 | routes : rid , dst_apid , dst_ap , src_apid , src_ap , alid , airline , codeshare | airports : apid , name , city , country , x , y , elevation , iata , icao | airlines : alid , name , iata , icao , callsign , country , active output: SELECT country FROM airlines GROUP BY country ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: How many different addresses do the students currently live?",
    "Here is an examples including input and output:\n input: question: Find the phone numbers of customers using the most common policy type among the available policies. serialized_schema:  | insurance_fnol | customers : customer_id , customer_name | services : service_id , service_name | available_policies : policy_id , policy_type_code , customer_phone | customers_policies : customer_id , policy_id , date_opened , date_closed | first_notification_of_loss : fnol_id , customer_id , policy_id , service_id | claims : claim_id , fnol_id , effective_date | settlements : settlement_id , claim_id , effective_date , settlement_amount output: SELECT customer_phone FROM available_policies WHERE policy_type_code  =  (SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1)\n Now please use valid SQLite to answer the following questions: What are the different addresses that have students living there?",
    "Here is an examples including input and output:\n input: question: How many customers are living in city \"Lake Geovannyton\"? serialized_schema:  | customers_and_addresses | addresses : address_id , address_content , city , zip_postcode , state_province_county , country , other_address_details | products : product_id , product_details | customers : customer_id , payment_method , customer_name , date_became_customer , other_customer_details | customer_addresses : customer_id , address_id , date_address_from , address_type , date_address_to | customer_contact_channels : customer_id , channel_code , active_from_date , active_to_date , contact_number | customer_orders : order_id , customer_id , order_status , order_date , order_details | order_items : order_id , product_id , order_quantity output: SELECT count(*) FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.city  =  \"Lake Geovannyton\"\n Now please use valid SQLite to answer the following questions: List all the student details in reversed lexicographical order.",
    "Here is an examples including input and output:\n input: question: What are the last names of faculty in building Barton, sorted by last name? serialized_schema:  | college_3 | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building | department : dno , division , dname , room , building , dphone | member_of : facid , dno , appt_type | course : cid , cname , credits , instructor , days , hours , dno | minor_in : stuid , dno | enrolled_in : stuid , cid , grade | gradeconversion : lettergrade , gradepoint output: SELECT Lname FROM FACULTY WHERE Building  =  \"Barton\" ORDER BY Lname\n Now please use valid SQLite to answer the following questions: What other details can you tell me about students in reverse alphabetical order?",
    "Here is an examples including input and output:\n input: question: What are the descriptions and names of the courses that have student enrollment bigger than 2? serialized_schema:  | e_learning | course_authors_and_tutors : author_id , author_tutor_atb , login_name , password , personal_name , middle_name , family_name , gender_mf , address_line_1 | students : student_id , date_of_registration , date_of_latest_logon , login_name , password , personal_name , middle_name , family_name | subjects : subject_id , subject_name | courses : course_id , author_id , subject_id , course_name , course_description | student_course_enrolment : registration_id , student_id , course_id , date_of_enrolment , date_of_completion | student_tests_taken : registration_id , date_test_taken , test_result output: SELECT T1.course_description ,  T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name HAVING COUNT(*)  >  2\n Now please use valid SQLite to answer the following questions: Describe the section h.",
    "Here is an examples including input and output:\n input: question: What are the maximum, minimum and average home games each stadium held? serialized_schema:  | game_injury | stadium : id , name , home_games , average_attendance , total_attendance , capacity_percentage | game : stadium_id , id , season , date , home_team , away_team , score , competition | injury_accident : game_id , id , player , injury , number_of_matches , source output: SELECT max(home_games) ,  min(home_games) ,  avg(home_games) FROM stadium\n Now please use valid SQLite to answer the following questions: What is the description for the section named h?",
    "Here is an examples including input and output:\n input: question: Show the countries that have mountains with height more than 5600 stories and mountains with height less than 5200. serialized_schema:  | climbing | mountain : mountain_id , name , height , prominence , range , country | climber : climber_id , name , country , time , points , mountain_id output: SELECT Country FROM mountain WHERE Height  >  5600 INTERSECT SELECT Country FROM mountain WHERE Height  <  5200\n Now please use valid SQLite to answer the following questions: Find the first name of the students who permanently live in the country Haiti or have the cell phone number 09700166582 .",
    "Here is an examples including input and output:\n input: question: Which country has at most 3 stadiums listed? serialized_schema:  | swimming | swimmer : id , name , nationality , meter_100 , meter_200 , meter_300 , meter_400 , meter_500 , meter_600 , meter_700 , time | stadium : id , name , capacity , city , country , opening_year | event : id , name , stadium_id , year | record : id , result , swimmer_id , event_id output: SELECT country FROM stadium GROUP BY country HAVING count(*)  <=  3\n Now please use valid SQLite to answer the following questions: What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582 ?",
    "Here is an examples including input and output:\n input: question: What is the average distance and average price for flights from Los Angeles. serialized_schema:  | flight_1 | flight : flno , origin , destination , distance , departure_date , arrival_date , price , aid | aircraft : aid , name , distance | employee : eid , name , salary | certificate : eid , aid output: SELECT avg(distance) ,  avg(price) FROM Flight WHERE origin  =  \"Los Angeles\"\n Now please use valid SQLite to answer the following questions: List the title of all cartoons in alphabetical order.",
    "Here is an examples including input and output:\n input: question: Which delegates are from counties with population smaller than 100000? serialized_schema:  | election | county : county_id , county_name , population , zip_code | party : party_id , year , party , governor , lieutenant_governor , comptroller , attorney_general , us_senate | election : election_id , counties_represented , district , delegate , party , first_elected , committee output: SELECT T2.Delegate FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  <  100000\n Now please use valid SQLite to answer the following questions: What are the titles of the cartoons sorted alphabetically?",
    "Here is an examples including input and output:\n input: question: What are the dates of the orders made by the customer named \"Jeramie\"? serialized_schema:  | tracking_orders | customers : customer_id , customer_name , customer_details | invoices : invoice_number , invoice_date , invoice_details | orders : order_id , customer_id , order_status , date_order_placed , order_details | products : product_id , product_name , product_details | order_items : order_item_id , product_id , order_id , order_item_status , order_item_details | shipments : shipment_id , order_id , invoice_number , shipment_tracking_number , shipment_date , other_shipment_details | shipment_items : shipment_id , order_item_id output: SELECT T2.date_order_placed FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\"\n Now please use valid SQLite to answer the following questions: List all cartoon directed by \"Ben Jones\".",
    "Here is an examples including input and output:\n input: question: How many female students live in Smith Hall? serialized_schema:  | dorm_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | dorm : dormid , dorm_name , student_capacity , gender | dorm_amenity : amenid , amenity_name | has_amenity : dormid , amenid | lives_in : stuid , dormid , room_number output: SELECT count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.dorm_name  =  'Smith Hall' AND T1.sex  =  'F'\n Now please use valid SQLite to answer the following questions: What are the names of all cartoons directed by Ben Jones?",
    "Here is an examples including input and output:\n input: question: For each team, return the team name, id and the maximum salary among the team. serialized_schema:  | baseball_1 | all_star : player_id , year , game_num , game_id , team_id , league_id , gp , starting_pos | appearances : year , team_id , league_id , player_id , g_all , gs , g_batting , g_defense , g_p , g_c , g_1b , g_2b , g_3b , g_ss , g_lf , g_cf , g_rf , g_of , g_dh , g_ph , g_pr | manager_award : player_id , award_id , year , league_id , tie , notes | player_award : player_id , award_id , year , league_id , tie , notes | manager_award_vote : award_id , year , league_id , player_id , points_won , points_max , votes_first | player_award_vote : award_id , year , league_id , player_id , points_won , points_max , votes_first | batting : player_id , year , stint , team_id , league_id , g , ab , r , h , double , triple , hr , rbi , sb , cs , bb , so , ibb , hbp , sh , sf , g_idp | batting_postseason : year , round , player_id , team_id , league_id , g , ab , r , h , double , triple , hr , rbi , sb , cs , bb , so , ibb , hbp , sh , sf , g_idp | player_college : player_id , college_id , year | fielding : player_id , year , stint , team_id , league_id , pos , g , gs , inn_outs , po , a , e , dp , pb , wp , sb , cs , zr | fielding_outfield : player_id , year , stint , glf , gcf , grf | fielding_postseason : player_id , year , team_id , league_id , round , pos , g , gs , inn_outs , po , a , e , dp , tp , pb , sb , cs | hall_of_fame : player_id , yearid , votedby , ballots , needed , votes , inducted , category , needed_note | home_game : year , league_id , team_id , park_id , span_first , span_last , games , openings , attendance | manager : player_id , year , team_id , league_id , inseason , g , w , l , rank , plyr_mgr | manager_half : player_id , year , team_id , league_id , inseason , half , g , w , l , rank | player : player_id , birth_year , birth_month , birth_day , birth_country , birth_state , birth_city , death_year , death_month , death_day , death_country , death_state , death_city , name_first , name_last , name_given , weight , height , bats , throws , debut , final_game , retro_id , bbref_id | park : park_id , park_name , park_alias , city , state , country | pitching : player_id , year , stint , team_id , league_id , w , l , g , gs , cg , sho , sv , ipouts , h , er , hr , bb , so , baopp , era , ibb , wp , hbp , bk , bfp , gf , r , sh , sf , g_idp | pitching_postseason : player_id , year , round , team_id , league_id , w , l , g , gs , cg , sho , sv , ipouts , h , er , hr , bb , so , baopp , era , ibb , wp , hbp , bk , bfp , gf , r , sh , sf , g_idp | salary : year , team_id , league_id , player_id , salary | college : college_id , name_full , city , state , country | postseason : year , round , team_id_winner , league_id_winner , team_id_loser , league_id_loser , wins , losses , ties | team : year , league_id , team_id , franchise_id , div_id , rank , g , ghome , w , l , div_win , wc_win , lg_win , ws_win , r , ab , h , double , triple , hr , bb , so , sb , cs , hbp , sf , ra , er , era , cg , sho , sv , ipouts , ha , hra , bba , soa , e , dp , fp , name , park , attendance , bpf , ppf , team_id_br , team_id_lahman45 , team_id_retro | team_franchise : franchise_id , franchise_name , active , na_assoc | team_half : year , league_id , team_id , half , div_id , div_win , rank , g , w , l output: SELECT T1.name ,  T1.team_id ,  max(T2.salary) FROM team AS T1 JOIN salary AS T2 ON T1.team_id  =  T2.team_id GROUP BY T1.team_id;\n Now please use valid SQLite to answer the following questions: How many cartoons were written by \"Joseph Kuhr\"?",
    "Here is an examples including input and output:\n input: question: How many different bike ids are there? serialized_schema:  | bike_1 | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code output: SELECT count(DISTINCT bike_id) FROM trip\n Now please use valid SQLite to answer the following questions: What is the number of cartoones written by Joseph Kuhr?",
    "Here is an examples including input and output:\n input: question: Count the total number of settlements made. serialized_schema:  | insurance_policies | customers : customer_id , customer_details | customer_policies : policy_id , customer_id , policy_type_code , start_date , end_date | claims : claim_id , policy_id , date_claim_made , date_claim_settled , amount_claimed , amount_settled | settlements : settlement_id , claim_id , date_claim_made , date_claim_settled , amount_claimed , amount_settled , customer_policy_id | payments : payment_id , settlement_id , payment_method_code , date_payment_made , amount_payment output: SELECT count(*) FROM Settlements\n Now please use valid SQLite to answer the following questions: list all cartoon titles and their directors ordered by their air date",
    "Here is an examples including input and output:\n input: question: What are the total number of credits offered by each department? serialized_schema:  | college_1 | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num output: SELECT sum(T1.crs_credit) ,  T1.dept_code FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code  =  T2.crs_code GROUP BY T1.dept_code\n Now please use valid SQLite to answer the following questions: What is the name and directors of all the cartoons that are ordered by air date?",
    "Here is an examples including input and output:\n input: question: Find the number of classes in each school. serialized_schema:  | college_1 | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num output: SELECT count(*) ,  T3.school_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code  =  T2.crs_code JOIN department AS T3 ON T2.dept_code  =  T3.dept_code GROUP BY T3.school_code\n Now please use valid SQLite to answer the following questions: List the title of all cartoon directed by \"Ben Jones\" or \"Brandon Vietti\".",
    "Here is an examples including input and output:\n input: question: Which attraction type does the most tourist attractions belong to? Tell me its  attraction type description and code. serialized_schema:  | cre_Theme_park | ref_hotel_star_ratings : star_rating_code , star_rating_description | locations : location_id , location_name , address , other_details | ref_attraction_types : attraction_type_code , attraction_type_description | visitors : tourist_id , tourist_details | features : feature_id , feature_details | hotels : hotel_id , star_rating_code , pets_allowed_yn , price_range , other_hotel_details | tourist_attractions : tourist_attraction_id , attraction_type_code , location_id , how_to_get_there , name , description , opening_hours , other_details | street_markets : market_id , market_details | shops : shop_id , shop_details | museums : museum_id , museum_details | royal_family : royal_family_id , royal_family_details | theme_parks : theme_park_id , theme_park_details | visits : visit_id , tourist_attraction_id , tourist_id , visit_date , visit_details | photos : photo_id , tourist_attraction_id , name , description , filename , other_details | staff : staff_id , tourist_attraction_id , name , other_details | tourist_attraction_features : tourist_attraction_id , feature_id output: SELECT T1.Attraction_Type_Description ,  T2.Attraction_Type_Code FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code  =  T2.Attraction_Type_Code GROUP BY T2.Attraction_Type_Code ORDER BY COUNT(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: What are the titles of all cartoons directed by Ben Jones or Brandon Vietti?",
    "Here is an examples including input and output:\n input: question: What is the description of the club named \"Tennis Club\"? serialized_schema:  | club_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | club : clubid , clubname , clubdesc , clublocation | member_of_club : stuid , clubid , position output: SELECT clubdesc FROM club WHERE clubname  =  \"Tennis Club\"\n Now please use valid SQLite to answer the following questions: Which country has the most of TV Channels? List the country and number of TV Channels it has.",
    "Here is an examples including input and output:\n input: question: List the names of people that have not been on the affirmative side of debates. serialized_schema:  | debate | people : people_id , district , name , party , age | debate : debate_id , date , venue , num_of_audience | debate_people : debate_id , affirmative , negative , if_affirmative_win output: SELECT Name FROM people WHERE People_id NOT IN (SELECT Affirmative FROM debate_people)\n Now please use valid SQLite to answer the following questions: What is the country with the most number of TV Channels and how many does it have?",
    "Here is an examples including input and output:\n input: question: Show the most common college of authors of submissions. serialized_schema:  | workshop_paper | workshop : workshop_id , date , venue , name | submission : submission_id , scores , author , college | acceptance : submission_id , workshop_id , result output: SELECT College FROM submission GROUP BY College ORDER BY COUNT(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: List the number of different series names and contents in the TV Channel table.",
    "Here is an examples including input and output:\n input: question: Find the maximum and total number of followers of all users. serialized_schema:  | twitter_1 | follows : f1 , f2 | tweets : id , uid , text , createdate | user_profiles : uid , name , email , partitionid , followers output: SELECT max(followers) ,  sum(followers) FROM user_profiles\n Now please use valid SQLite to answer the following questions: How many different series and contents are listed in the TV Channel table?",
    "Here is an examples including input and output:\n input: question: What are the names of all cities with more than one airport and how many airports do they have? serialized_schema:  | flight_4 | routes : rid , dst_apid , dst_ap , src_apid , src_ap , alid , airline , codeshare | airports : apid , name , city , country , x , y , elevation , iata , icao | airlines : alid , name , iata , icao , callsign , country , active output: SELECT city ,  count(*) FROM airports GROUP BY city HAVING count(*)  >  1\n Now please use valid SQLite to answer the following questions: What is the content of TV Channel with serial name \"Sky Radio\"?",
    "Here is an examples including input and output:\n input: question: What are all the distinct participant ids who attended any events? serialized_schema:  | local_govt_in_alabama | services : service_id , service_type_code | participants : participant_id , participant_type_code , participant_details | events : event_id , service_id , event_details | participants_in_events : event_id , participant_id output: SELECT count(DISTINCT participant_id) FROM participants_in_Events\n Now please use valid SQLite to answer the following questions: What is the content of the series Sky Radio?",
    "Here is an examples including input and output:\n input: question: Show the names and details of all the staff members. serialized_schema:  | cre_Theme_park | ref_hotel_star_ratings : star_rating_code , star_rating_description | locations : location_id , location_name , address , other_details | ref_attraction_types : attraction_type_code , attraction_type_description | visitors : tourist_id , tourist_details | features : feature_id , feature_details | hotels : hotel_id , star_rating_code , pets_allowed_yn , price_range , other_hotel_details | tourist_attractions : tourist_attraction_id , attraction_type_code , location_id , how_to_get_there , name , description , opening_hours , other_details | street_markets : market_id , market_details | shops : shop_id , shop_details | museums : museum_id , museum_details | royal_family : royal_family_id , royal_family_details | theme_parks : theme_park_id , theme_park_details | visits : visit_id , tourist_attraction_id , tourist_id , visit_date , visit_details | photos : photo_id , tourist_attraction_id , name , description , filename , other_details | staff : staff_id , tourist_attraction_id , name , other_details | tourist_attraction_features : tourist_attraction_id , feature_id output: SELECT Name ,  Other_Details FROM Staff\n Now please use valid SQLite to answer the following questions: What is the Package Option of TV Channel with serial name \"Sky Radio\"?",
    "Here is an examples including input and output:\n input: question: What are the names and budgets of departments with budgets greater than the average? serialized_schema:  | college_2 | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id output: SELECT dept_name ,  budget FROM department WHERE budget  >  (SELECT avg(budget) FROM department)\n Now please use valid SQLite to answer the following questions: What are the Package Options of the TV Channels whose series names are Sky Radio?",
    "Here is an examples including input and output:\n input: question: How many students did not have any course enrollment? serialized_schema:  | e_learning | course_authors_and_tutors : author_id , author_tutor_atb , login_name , password , personal_name , middle_name , family_name , gender_mf , address_line_1 | students : student_id , date_of_registration , date_of_latest_logon , login_name , password , personal_name , middle_name , family_name | subjects : subject_id , subject_name | courses : course_id , author_id , subject_id , course_name , course_description | student_course_enrolment : registration_id , student_id , course_id , date_of_enrolment , date_of_completion | student_tests_taken : registration_id , date_test_taken , test_result output: SELECT count(*) FROM Students WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment)\n Now please use valid SQLite to answer the following questions: How many TV Channel using language English?",
    "Here is an examples including input and output:\n input: question: How many airlines does Russia has? serialized_schema:  | flight_4 | routes : rid , dst_apid , dst_ap , src_apid , src_ap , alid , airline , codeshare | airports : apid , name , city , country , x , y , elevation , iata , icao | airlines : alid , name , iata , icao , callsign , country , active output: SELECT count(*) FROM airlines WHERE country  =  'Russia'\n Now please use valid SQLite to answer the following questions: How many TV Channels use the English language?",
    "Here is an examples including input and output:\n input: question: What are the details and opening hours of the museums? serialized_schema:  | cre_Theme_park | ref_hotel_star_ratings : star_rating_code , star_rating_description | locations : location_id , location_name , address , other_details | ref_attraction_types : attraction_type_code , attraction_type_description | visitors : tourist_id , tourist_details | features : feature_id , feature_details | hotels : hotel_id , star_rating_code , pets_allowed_yn , price_range , other_hotel_details | tourist_attractions : tourist_attraction_id , attraction_type_code , location_id , how_to_get_there , name , description , opening_hours , other_details | street_markets : market_id , market_details | shops : shop_id , shop_details | museums : museum_id , museum_details | royal_family : royal_family_id , royal_family_details | theme_parks : theme_park_id , theme_park_details | visits : visit_id , tourist_attraction_id , tourist_id , visit_date , visit_details | photos : photo_id , tourist_attraction_id , name , description , filename , other_details | staff : staff_id , tourist_attraction_id , name , other_details | tourist_attraction_features : tourist_attraction_id , feature_id output: SELECT T1.Museum_Details ,  T2.Opening_Hours FROM MUSEUMS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Museum_ID  =  T2.Tourist_Attraction_ID\n Now please use valid SQLite to answer the following questions: List the language used least number of TV Channel. List language and number of TV Channel.",
    "Here is an examples including input and output:\n input: question: List all the names of schools with an endowment amount smaller than or equal to 10. serialized_schema:  | school_finance | school : school_id , school_name , location , mascot , enrollment , ihsaa_class , ihsaa_football_class , county | budget : school_id , year , budgeted , total_budget_percent_budgeted , invested , total_budget_percent_invested , budget_invested_percent | endowment : endowment_id , school_id , donator_name , amount output: SELECT T2.school_name FROM endowment AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id GROUP BY T1.school_id HAVING sum(T1.amount)  <=  10\n Now please use valid SQLite to answer the following questions: What are the languages used by the least number of TV Channels and how many channels use it?",
    "Here is an examples including input and output:\n input: question: What is the least popular kind of decor? serialized_schema:  | inn_1 | rooms : roomid , roomname , beds , bedtype , maxoccupancy , baseprice , decor | reservations : code , room , checkin , checkout , rate , lastname , firstname , adults , kids output: SELECT T2.decor FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T2.decor ORDER BY count(T2.decor) ASC LIMIT 1;\n Now please use valid SQLite to answer the following questions: List each language and the number of TV Channels using it.",
    "Here is an examples including input and output:\n input: question: List the codes of all courses that take place in room KLR209. serialized_schema:  | college_1 | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num output: SELECT class_code FROM CLASS WHERE class_room  =  'KLR209'\n Now please use valid SQLite to answer the following questions: For each language, list the number of TV Channels that use it.",
    "Here is an examples including input and output:\n input: question: Count the number of colors. serialized_schema:  | products_gen_characteristics | ref_characteristic_types : characteristic_type_code , characteristic_type_description | ref_colors : color_code , color_description | ref_product_categories : product_category_code , product_category_description , unit_of_measure | characteristics : characteristic_id , characteristic_type_code , characteristic_data_type , characteristic_name , other_characteristic_details | products : product_id , color_code , product_category_code , product_name , typical_buying_price , typical_selling_price , product_description , other_product_details | product_characteristics : product_id , characteristic_id , product_characteristic_value output: SELECT count(*) FROM ref_colors\n Now please use valid SQLite to answer the following questions: What is the TV Channel that shows the cartoon \"The Rise of the Blue Beetle!\"? List the TV Channel's series name.",
    "Here is an examples including input and output:\n input: question: What are the names of all directors who have made one movie except for the director named NULL? serialized_schema:  | movie_1 | movie : mid , title , year , director | reviewer : rid , name | rating : rid , mid , stars , ratingdate output: SELECT director FROM Movie WHERE director != \"null\" GROUP BY director HAVING count(*)  =  1\n Now please use valid SQLite to answer the following questions: What is the series name of the TV Channel that shows the cartoon \"The Rise of the Blue Beetle\"?",
    "Here is an examples including input and output:\n input: question: What are the names of all pilots 30 years old or young in descending alphabetical order? serialized_schema:  | aircraft | pilot : pilot_id , name , age | aircraft : aircraft_id , aircraft , description , max_gross_weight , total_disk_area , max_disk_loading | match : round , location , country , date , fastest_qualifying , winning_pilot , winning_aircraft | airport : airport_id , airport_name , total_passengers , %_change_2007 , international_passengers , domestic_passengers , transit_passengers , aircraft_movements , freight_metric_tonnes | airport_aircraft : id , airport_id , aircraft_id output: SELECT Name FROM pilot WHERE Age  <=  30 ORDER BY Name DESC\n Now please use valid SQLite to answer the following questions: List the title of all  Cartoons showed on TV Channel with series name \"Sky Radio\".",
    "Here is an examples including input and output:\n input: question: find all dependent names who have a spouse relation with some employee. serialized_schema:  | company_1 | works_on : essn , pno , hours | employee : fname , minit , lname , ssn , bdate , address , sex , salary , super_ssn , dno | department : dname , dnumber , mgr_ssn , mgr_start_date | project : pname , pnumber , plocation , dnum | dependent : essn , dependent_name , sex , bdate , relationship | dept_locations : dnumber , dlocation output: SELECT Dependent_name FROM dependent WHERE relationship  =  'Spouse'\n Now please use valid SQLite to answer the following questions: What is the title of all the cartools that are on the TV Channel with the series name \"Sky Radio\"?",
    "Here is an examples including input and output:\n input: question: List the phone hardware model and company name for the phones whose screen usage in kb is between 10 and 15. serialized_schema:  | phone_1 | chip_model : model_name , launch_year , ram_mib , rom_mib , slots , wifi , bluetooth | screen_mode : graphics_mode , char_cells , pixels , hardware_colours , used_kb , map , type | phone : company_name , hardware_model_name , accreditation_type , accreditation_level , date , chip_model , screen_mode output: SELECT DISTINCT T2.Hardware_Model_name , T2.Company_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.used_kb BETWEEN 10 AND 15;\n Now please use valid SQLite to answer the following questions: List the Episode of all TV series sorted by rating.",
    "Here is an examples including input and output:\n input: question: Show the names of schools with a total budget amount greater than 100 or a total endowment greater than 10. serialized_schema:  | school_finance | school : school_id , school_name , location , mascot , enrollment , ihsaa_class , ihsaa_football_class , county | budget : school_id , year , budgeted , total_budget_percent_budgeted , invested , total_budget_percent_invested , budget_invested_percent | endowment : endowment_id , school_id , donator_name , amount output: SELECT T2.school_name FROM budget AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id JOIN endowment AS T3 ON T2.school_id  =  T3.school_id GROUP BY T2.school_name HAVING sum(T1.budgeted)  >  100 OR sum(T3.amount)  >  10\n Now please use valid SQLite to answer the following questions: What are all of the episodes ordered by ratings?",
    "Here is an examples including input and output:\n input: question: Find the salaries of all distinct instructors that are less than the largest salary. serialized_schema:  | college_2 | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id output: SELECT DISTINCT salary FROM instructor WHERE salary  <  (SELECT max(salary) FROM instructor)\n Now please use valid SQLite to answer the following questions: List top 3 highest Rating  TV series. List the TV series's Episode and Rating.",
    "Here is an examples including input and output:\n input: question: Which room has the highest rate? List the room's full name, rate, check in and check out date. serialized_schema:  | inn_1 | rooms : roomid , roomname , beds , bedtype , maxoccupancy , baseprice , decor | reservations : code , room , checkin , checkout , rate , lastname , firstname , adults , kids output: SELECT T2.roomName ,  T1.Rate ,  T1.CheckIn ,  T1.CheckOut FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room ORDER BY T1.Rate DESC LIMIT 1;\n Now please use valid SQLite to answer the following questions: What are 3 most highly rated episodes in the TV series table and what were those ratings?",
    "Here is an examples including input and output:\n input: question: Find the physicians who are trained in a procedure that costs more than 5000. serialized_schema:  | hospital_1 | physician : employeeid , name , position , ssn | department : departmentid , name , head | affiliated_with : physician , department , primaryaffiliation | procedures : code , name , cost | trained_in : physician , treatment , certificationdate , certificationexpires | patient : ssn , name , address , phone , insuranceid , pcp | nurse : employeeid , name , position , registered , ssn | appointment : appointmentid , patient , prepnurse , physician , start , end , examinationroom | medication : code , name , brand , description | prescribes : physician , patient , medication , date , appointment , dose | block : blockfloor , blockcode | room : roomnumber , roomtype , blockfloor , blockcode , unavailable | on_call : nurse , blockfloor , blockcode , oncallstart , oncallend | stay : stayid , patient , room , staystart , stayend | undergoes : patient , procedures , stay , dateundergoes , physician , assistingnurse output: SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T3.cost  >  5000\n Now please use valid SQLite to answer the following questions: What is minimum and maximum share of TV series?",
    "Here is an examples including input and output:\n input: question: Show the average room count of the apartments that have booking status code \"Provisional\". serialized_schema:  | apartment_rentals | apartment_buildings : building_id , building_short_name , building_full_name , building_description , building_address , building_manager , building_phone | apartments : apt_id , building_id , apt_type_code , apt_number , bathroom_count , bedroom_count , room_count | apartment_facilities : apt_id , facility_code | guests : guest_id , gender_code , guest_first_name , guest_last_name , date_of_birth | apartment_bookings : apt_booking_id , apt_id , guest_id , booking_status_code , booking_start_date , booking_end_date | view_unit_status : apt_id , apt_booking_id , status_date , available_yn output: SELECT avg(room_count) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Provisional\"\n Now please use valid SQLite to answer the following questions: What is the maximum and minimum share for the TV series?",
    "Here is an examples including input and output:\n input: question: Which types of policy are chosen by more than 2 customers? Give me the policy type codes. serialized_schema:  | insurance_and_eClaims | customers : customer_id , customer_details | staff : staff_id , staff_details | policies : policy_id , customer_id , policy_type_code , start_date , end_date | claim_headers : claim_header_id , claim_status_code , claim_type_code , policy_id , date_of_claim , date_of_settlement , amount_claimed , amount_piad | claims_documents : claim_id , document_type_code , created_by_staff_id , created_date | claims_processing_stages : claim_stage_id , next_claim_stage_id , claim_status_name , claim_status_description | claims_processing : claim_processing_id , claim_id , claim_outcome_code , claim_stage_id , staff_id output: SELECT policy_type_code FROM policies GROUP BY policy_type_code HAVING count(*)  >  2\n Now please use valid SQLite to answer the following questions: What is the air date of TV series with Episode \"A Love of a Lifetime\"?",
    "Here is an examples including input and output:\n input: question: How many elections are there? serialized_schema:  | election_representative | election : election_id , representative_id , date , votes , vote_percent , seats , place | representative : representative_id , name , state , party , lifespan output: SELECT count(*) FROM election\n Now please use valid SQLite to answer the following questions: When did the episode \"A Love of a Lifetime\" air?",
    "Here is an examples including input and output:\n input: question: Return the channel code and contact number of the customer contact channel whose active duration was the longest. serialized_schema:  | customers_and_addresses | addresses : address_id , address_content , city , zip_postcode , state_province_county , country , other_address_details | products : product_id , product_details | customers : customer_id , payment_method , customer_name , date_became_customer , other_customer_details | customer_addresses : customer_id , address_id , date_address_from , address_type , date_address_to | customer_contact_channels : customer_id , channel_code , active_from_date , active_to_date , contact_number | customer_orders : order_id , customer_id , order_status , order_date , order_details | order_items : order_id , product_id , order_quantity output: SELECT channel_code ,  contact_number FROM customer_contact_channels WHERE active_to_date - active_from_date  =  (SELECT active_to_date - active_from_date FROM customer_contact_channels ORDER BY (active_to_date - active_from_date) DESC LIMIT 1)\n Now please use valid SQLite to answer the following questions: What is Weekly Rank of TV series with Episode \"A Love of a Lifetime\"?",
    "Here is an examples including input and output:\n input: question: What is the most used instrument? serialized_schema:  | music_2 | songs : songid , title | albums : aid , title , year , label , type | band : id , firstname , lastname | instruments : songid , bandmateid , instrument | performance : songid , bandmate , stageposition | tracklists : albumid , position , songid | vocals : songid , bandmate , type output: SELECT instrument FROM instruments GROUP BY instrument ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: What is the weekly rank for the episode \"A Love of a Lifetime\"?",
    "Here is an examples including input and output:\n input: question: Sort the names of all counties in descending alphabetical order. serialized_schema:  | election | county : county_id , county_name , population , zip_code | party : party_id , year , party , governor , lieutenant_governor , comptroller , attorney_general , us_senate | election : election_id , counties_represented , district , delegate , party , first_elected , committee output: SELECT County_name FROM county ORDER BY County_name DESC\n Now please use valid SQLite to answer the following questions: What is the TV Channel of TV series with Episode \"A Love of a Lifetime\"? List the TV Channel's series name.",
    "Here is an examples including input and output:\n input: question: What is the average sales of the journals that have an editor whose work type is 'Photo'? serialized_schema:  | journal_committee | journal : journal_id , date , theme , sales | editor : editor_id , name , age | journal_committee : editor_id , journal_id , work_type output: SELECT avg(T1.sales) FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID  =  T2.journal_ID WHERE T2.work_type  =  'Photo'\n Now please use valid SQLite to answer the following questions: What is the name of the series that has the episode \"A Love of a Lifetime\"?",
    "Here is an examples including input and output:\n input: question: What is the description of document type 'Paper'? serialized_schema:  | cre_Doc_Control_Systems | ref_document_types : document_type_code , document_type_description | roles : role_code , role_description | addresses : address_id , address_details | ref_document_status : document_status_code , document_status_description | ref_shipping_agents : shipping_agent_code , shipping_agent_name , shipping_agent_description | documents : document_id , document_status_code , document_type_code , shipping_agent_code , receipt_date , receipt_number , other_details | employees : employee_id , role_code , employee_name , other_details | document_drafts : document_id , draft_number , draft_details | draft_copies : document_id , draft_number , copy_number | circulation_history : document_id , draft_number , copy_number , employee_id | documents_mailed : document_id , mailed_to_address_id , mailing_date output: SELECT document_type_description FROM Ref_Document_Types WHERE document_type_code = \"Paper\";\n Now please use valid SQLite to answer the following questions: List the Episode of all  TV series showed on TV Channel with series name \"Sky Radio\".",
    "Here is an examples including input and output:\n input: question: List all statement ids and statement details. serialized_schema:  | cre_Docs_and_Epenses | ref_document_types : document_type_code , document_type_name , document_type_description | ref_budget_codes : budget_type_code , budget_type_description | projects : project_id , project_details | documents : document_id , document_type_code , project_id , document_date , document_name , document_description , other_details | statements : statement_id , statement_details | documents_with_expenses : document_id , budget_type_code , document_details | accounts : account_id , statement_id , account_details output: SELECT STATEMENT_ID ,  statement_details FROM Statements\n Now please use valid SQLite to answer the following questions: What is the episode for the TV series named \"Sky Radio\"?",
    "Here is an examples including input and output:\n input: question: Find the names of all reviewers who have ratings with a NULL value for the date. serialized_schema:  | movie_1 | movie : mid , title , year , director | reviewer : rid , name | rating : rid , mid , stars , ratingdate output: SELECT DISTINCT name FROM Reviewer AS T1 JOIN Rating AS T2 ON T1.rID  =  T2.rID WHERE ratingDate  =  \"null\"\n Now please use valid SQLite to answer the following questions: Find the number of cartoons directed by each of the listed directors.",
    "Here is an examples including input and output:\n input: question: Find the product category description of the product category with code \"Spices\". serialized_schema:  | products_gen_characteristics | ref_characteristic_types : characteristic_type_code , characteristic_type_description | ref_colors : color_code , color_description | ref_product_categories : product_category_code , product_category_description , unit_of_measure | characteristics : characteristic_id , characteristic_type_code , characteristic_data_type , characteristic_name , other_characteristic_details | products : product_id , color_code , product_category_code , product_name , typical_buying_price , typical_selling_price , product_description , other_product_details | product_characteristics : product_id , characteristic_id , product_characteristic_value output: SELECT product_category_description FROM ref_product_categories WHERE product_category_code  =  \"Spices\"\n Now please use valid SQLite to answer the following questions: How many cartoons did each director create?",
    "Here is an examples including input and output:\n input: question: Show the nations that have both hosts older than 45 and hosts younger than 35. serialized_schema:  | party_host | party : party_id , party_theme , location , first_year , last_year , number_of_hosts | host : host_id , name , nationality , age | party_host : party_id , host_id , is_main_in_charge output: SELECT Nationality FROM HOST WHERE Age  >  45 INTERSECT SELECT Nationality FROM HOST WHERE Age  <  35\n Now please use valid SQLite to answer the following questions: Find the production code and channel of the most recently aired cartoon .",
    "Here is an examples including input and output:\n input: question: Find the name of the target user with the lowest trust score. serialized_schema:  | epinions_1 | item : i_id , title | review : a_id , u_id , i_id , rating , rank | useracct : u_id , name | trust : source_u_id , target_u_id , trust output: SELECT T1.name FROM useracct AS T1 JOIN trust AS T2 ON T1.u_id  =  T2.target_u_id ORDER BY trust LIMIT 1\n Now please use valid SQLite to answer the following questions: What is the produdction code and channel of the most recent cartoon ?",
    "Here is an examples including input and output:\n input: question: Find the id and city of the student address with the highest average monthly rental. serialized_schema:  | behavior_monitoring | ref_address_types : address_type_code , address_type_description | ref_detention_type : detention_type_code , detention_type_description | ref_incident_type : incident_type_code , incident_type_description | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | students : student_id , address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , date_first_rental , date_left_university , other_student_details | teachers : teacher_id , address_id , first_name , middle_name , last_name , gender , cell_mobile_number , email_address , other_details | assessment_notes : notes_id , student_id , teacher_id , date_of_notes , text_of_notes , other_details | behavior_incident : incident_id , incident_type_code , student_id , date_incident_start , date_incident_end , incident_summary , recommendations , other_details | detention : detention_id , detention_type_code , teacher_id , datetime_detention_start , datetime_detention_end , detention_summary , other_details | student_addresses : student_id , address_id , date_address_from , date_address_to , monthly_rental , other_details | students_in_detention : student_id , detention_id , incident_id output: SELECT T2.address_id ,  T1.city FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id  =  T2.address_id GROUP BY T2.address_id ORDER BY AVG(monthly_rental) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: Find the package choice and series name of the TV channel that has high definition TV.",
    "Here is an examples including input and output:\n input: question: What are the names of the tourist attractions that can be accessed by bus? serialized_schema:  | cre_Theme_park | ref_hotel_star_ratings : star_rating_code , star_rating_description | locations : location_id , location_name , address , other_details | ref_attraction_types : attraction_type_code , attraction_type_description | visitors : tourist_id , tourist_details | features : feature_id , feature_details | hotels : hotel_id , star_rating_code , pets_allowed_yn , price_range , other_hotel_details | tourist_attractions : tourist_attraction_id , attraction_type_code , location_id , how_to_get_there , name , description , opening_hours , other_details | street_markets : market_id , market_details | shops : shop_id , shop_details | museums : museum_id , museum_details | royal_family : royal_family_id , royal_family_details | theme_parks : theme_park_id , theme_park_details | visits : visit_id , tourist_attraction_id , tourist_id , visit_date , visit_details | photos : photo_id , tourist_attraction_id , name , description , filename , other_details | staff : staff_id , tourist_attraction_id , name , other_details | tourist_attraction_features : tourist_attraction_id , feature_id output: SELECT Name FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  \"bus\"\n Now please use valid SQLite to answer the following questions: What are the package options and the name of the series for the TV Channel that supports high definition TV?",
    "Here is an examples including input and output:\n input: question: List the name of albums that are released by aritist whose name has 'Led' serialized_schema:  | store_1 | artists : id , name | sqlite_sequence : name , seq | albums : id , title , artist_id | employees : id , last_name , first_name , title , reports_to , birth_date , hire_date , address , city , state , country , postal_code , phone , fax , email | customers : id , first_name , last_name , company , address , city , state , country , postal_code , phone , fax , email , support_rep_id | genres : id , name | invoices : id , customer_id , invoice_date , billing_address , billing_city , billing_state , billing_country , billing_postal_code , total | media_types : id , name | tracks : id , name , album_id , media_type_id , genre_id , composer , milliseconds , bytes , unit_price | invoice_lines : id , invoice_id , track_id , unit_price , quantity | playlists : id , name | playlist_tracks : playlist_id , track_id output: SELECT T2.title FROM artists AS T1 JOIN albums AS T2 ON T1.id  =  T2.artist_id WHERE T1.name LIKE '%Led%'\n Now please use valid SQLite to answer the following questions: which countries' tv channels are playing some cartoon written by Todd Casey?",
    "Here is an examples including input and output:\n input: question: Which employee has showed up in most circulation history documents. List the employee's name and the number of drafts and copies. serialized_schema:  | cre_Doc_Control_Systems | ref_document_types : document_type_code , document_type_description | roles : role_code , role_description | addresses : address_id , address_details | ref_document_status : document_status_code , document_status_description | ref_shipping_agents : shipping_agent_code , shipping_agent_name , shipping_agent_description | documents : document_id , document_status_code , document_type_code , shipping_agent_code , receipt_date , receipt_number , other_details | employees : employee_id , role_code , employee_name , other_details | document_drafts : document_id , draft_number , draft_details | draft_copies : document_id , draft_number , copy_number | circulation_history : document_id , draft_number , copy_number , employee_id | documents_mailed : document_id , mailed_to_address_id , mailing_date output: SELECT Employees.employee_name , count(*) FROM Employees JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id GROUP BY Circulation_History.document_id , Circulation_History.draft_number , Circulation_History.copy_number ORDER BY count(*) DESC LIMIT 1;\n Now please use valid SQLite to answer the following questions: What are the countries that have cartoons on TV that were written by Todd Casey?",
    "Here is an examples including input and output:\n input: question: Show the maximum share count of transactions where the amount is smaller than 10000 serialized_schema:  | tracking_share_transactions | investors : investor_id , investor_details | lots : lot_id , investor_id , lot_details | ref_transaction_types : transaction_type_code , transaction_type_description | transactions : transaction_id , investor_id , transaction_type_code , date_of_transaction , amount_of_transaction , share_count , other_details | sales : sales_transaction_id , sales_details | purchases : purchase_transaction_id , purchase_details | transactions_lots : transaction_id , lot_id output: SELECT max(share_count) FROM TRANSACTIONS WHERE amount_of_transaction  <  10000\n Now please use valid SQLite to answer the following questions: which countries' tv channels are not playing any cartoon written by Todd Casey?",
    "Here is an examples including input and output:\n input: question: List the method, date and amount of all the payments, in ascending order of date. serialized_schema:  | insurance_policies | customers : customer_id , customer_details | customer_policies : policy_id , customer_id , policy_type_code , start_date , end_date | claims : claim_id , policy_id , date_claim_made , date_claim_settled , amount_claimed , amount_settled | settlements : settlement_id , claim_id , date_claim_made , date_claim_settled , amount_claimed , amount_settled , customer_policy_id | payments : payment_id , settlement_id , payment_method_code , date_payment_made , amount_payment output: SELECT Payment_Method_Code ,  Date_Payment_Made ,  Amount_Payment FROM Payments ORDER BY Date_Payment_Made ASC\n Now please use valid SQLite to answer the following questions: What are the countries that are not playing cartoons written by Todd Casey?",
    "Here is an examples including input and output:\n input: question: Which rank has the smallest number of faculty members? serialized_schema:  | activity_1 | activity : actid , activity_name | participates_in : stuid , actid | faculty_participates_in : facid , actid | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building output: SELECT rank FROM Faculty GROUP BY rank ORDER BY count(*) ASC LIMIT 1\n Now please use valid SQLite to answer the following questions: Find the series name and country of the tv channel that is playing some cartoons directed by Ben Jones and Michael Chang?",
    "Here is an examples including input and output:\n input: question: What is the total account balance for customers with a credit score of above 100 for the different states? serialized_schema:  | loan_1 | bank : branch_id , bname , no_of_customers , city , state | customer : cust_id , cust_name , acc_type , acc_bal , no_of_loans , credit_score , branch_id , state | loan : loan_id , loan_type , cust_id , branch_id , amount output: SELECT sum(acc_bal) ,  state FROM customer WHERE credit_score  >  100 GROUP BY state\n Now please use valid SQLite to answer the following questions: What is the series name and country of all TV channels that are playing cartoons directed by Ben Jones and cartoons directed by Michael Chang?",
    "Here is an examples including input and output:\n input: question: How old is each student and how many students are each age? serialized_schema:  | allergy_1 | allergy_type : allergy , allergytype | has_allergy : stuid , allergy | student : stuid , lname , fname , age , sex , major , advisor , city_code output: SELECT age ,  count(*) FROM Student GROUP BY age\n Now please use valid SQLite to answer the following questions: find the pixel aspect ratio and nation of the tv channels that do not use English.",
    "Here is an examples including input and output:\n input: question: Return the average, maximum, and minimum budgets in millions for movies made before the year 2000. serialized_schema:  | culture_company | book_club : book_club_id , year , author_or_editor , book_title , publisher , category , result | movie : movie_id , title , year , director , budget_million , gross_worldwide | culture_company : company_name , type , incorporated_in , group_equity_shareholding , book_club_id , movie_id output: SELECT avg(budget_million) ,  max(budget_million) ,  min(budget_million) FROM movie WHERE YEAR  <  2000\n Now please use valid SQLite to answer the following questions: What is the pixel aspect ratio and country of origin for all TV channels that do not use English?",
    "Here is an examples including input and output:\n input: question: List the ids, names and market shares of all browsers. serialized_schema:  | browser_web | web_client_accelerator : id , name , operating_system , client , connection | browser : id , name , market_share | accelerator_compatible_browser : accelerator_id , browser_id , compatible_since_year output: SELECT id ,  name ,  market_share FROM browser\n Now please use valid SQLite to answer the following questions: find id of the tv channels that from the countries where have more than two tv channels.",
    "Here is an examples including input and output:\n input: question: How many members are not living in Hartford? serialized_schema:  | coffee_shop | shop : shop_id , address , num_of_staff , score , open_year | member : member_id , name , membership_card , age , time_of_purchase , level_of_membership , address | happy_hour : hh_id , shop_id , month , num_of_shaff_in_charge | happy_hour_member : hh_id , member_id , total_amount output: SELECT count(*) FROM member WHERE address != 'Hartford'\n Now please use valid SQLite to answer the following questions: What are the ids of all tv channels that have more than 2 TV channels?",
    "Here is an examples including input and output:\n input: question: Which payment method is used by most customers? serialized_schema:  | customers_and_addresses | addresses : address_id , address_content , city , zip_postcode , state_province_county , country , other_address_details | products : product_id , product_details | customers : customer_id , payment_method , customer_name , date_became_customer , other_customer_details | customer_addresses : customer_id , address_id , date_address_from , address_type , date_address_to | customer_contact_channels : customer_id , channel_code , active_from_date , active_to_date , contact_number | customer_orders : order_id , customer_id , order_status , order_date , order_details | order_items : order_id , product_id , order_quantity output: SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: find the id of tv channels that do not play any cartoon directed by Ben Jones.",
    "Here is an examples including input and output:\n input: question: Return the investor who have invested in the greatest number of entrepreneurs. serialized_schema:  | entrepreneur | entrepreneur : entrepreneur_id , people_id , company , money_requested , investor | people : people_id , name , height , weight , date_of_birth output: SELECT Investor FROM entrepreneur GROUP BY Investor ORDER BY COUNT(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: What are the ids of the TV channels that do not have any cartoons directed by Ben Jones?",
    "Here is an examples including input and output:\n input: question: Find the names of all instructors in Comp. Sci. department with salary > 80000. serialized_schema:  | college_2 | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id output: SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'  AND salary  >  80000\n Now please use valid SQLite to answer the following questions: find the package option of the tv channel that do not have any cartoon directed by Ben Jones.",
    "Here is an examples including input and output:\n input: question: Show all the distinct product names with price higher than the average. serialized_schema:  | cre_Drama_Workshop_Groups | ref_payment_methods : payment_method_code , payment_method_description | ref_service_types : service_type_code , parent_service_type_code , service_type_description | addresses : address_id , line_1 , line_2 , city_town , state_county , other_details | products : product_id , product_name , product_price , product_description , other_product_service_details | marketing_regions : marketing_region_code , marketing_region_name , marketing_region_descriptrion , other_details | clients : client_id , address_id , customer_email_address , customer_name , customer_phone , other_details | drama_workshop_groups : workshop_group_id , address_id , currency_code , marketing_region_code , store_name , store_phone , store_email_address , other_details | performers : performer_id , address_id , customer_name , customer_phone , customer_email_address , other_details | customers : customer_id , address_id , customer_name , customer_phone , customer_email_address , other_details | stores : store_id , address_id , marketing_region_code , store_name , store_phone , store_email_address , other_details | bookings : booking_id , customer_id , workshop_group_id , status_code , store_id , order_date , planned_delivery_date , actual_delivery_date , other_order_details | performers_in_bookings : order_id , performer_id | customer_orders : order_id , customer_id , store_id , order_date , planned_delivery_date , actual_delivery_date , other_order_details | order_items : order_item_id , order_id , product_id , order_quantity , other_item_details | invoices : invoice_id , order_id , payment_method_code , product_id , order_quantity , other_item_details , order_item_id | services : service_id , service_type_code , workshop_group_id , product_description , product_name , product_price , other_product_service_details | bookings_services : order_id , product_id | invoice_items : invoice_item_id , invoice_id , order_id , order_item_id , product_id , order_quantity , other_item_details output: SELECT DISTINCT Product_Name FROM PRODUCTS WHERE Product_Price  >  (SELECT avg(Product_Price) FROM PRODUCTS)\n Now please use valid SQLite to answer the following questions: What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones?",
    "Here is an examples including input and output:\n input: question: Give the names of tracks that do not have a race in the class 'GT'. serialized_schema:  | race_track | race : race_id , name , class , date , track_id | track : track_id , name , location , seating , year_opened output: SELECT name FROM track EXCEPT SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id WHERE T1.class  =  'GT'\n Now please use valid SQLite to answer the following questions: How many poker players are there?",
    "Here is an examples including input and output:\n input: question: For each station, find its latitude and the minimum duration of trips that ended at the station. serialized_schema:  | bike_1 | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code output: SELECT T1.name ,  T1.lat ,  min(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.end_station_id GROUP BY T2.end_station_id\n Now please use valid SQLite to answer the following questions: Count the number of poker players.",
    "Here is an examples including input and output:\n input: question: Check the invoices record and compute the average quantities ordered with the payment method \"MasterCard\". serialized_schema:  | cre_Drama_Workshop_Groups | ref_payment_methods : payment_method_code , payment_method_description | ref_service_types : service_type_code , parent_service_type_code , service_type_description | addresses : address_id , line_1 , line_2 , city_town , state_county , other_details | products : product_id , product_name , product_price , product_description , other_product_service_details | marketing_regions : marketing_region_code , marketing_region_name , marketing_region_descriptrion , other_details | clients : client_id , address_id , customer_email_address , customer_name , customer_phone , other_details | drama_workshop_groups : workshop_group_id , address_id , currency_code , marketing_region_code , store_name , store_phone , store_email_address , other_details | performers : performer_id , address_id , customer_name , customer_phone , customer_email_address , other_details | customers : customer_id , address_id , customer_name , customer_phone , customer_email_address , other_details | stores : store_id , address_id , marketing_region_code , store_name , store_phone , store_email_address , other_details | bookings : booking_id , customer_id , workshop_group_id , status_code , store_id , order_date , planned_delivery_date , actual_delivery_date , other_order_details | performers_in_bookings : order_id , performer_id | customer_orders : order_id , customer_id , store_id , order_date , planned_delivery_date , actual_delivery_date , other_order_details | order_items : order_item_id , order_id , product_id , order_quantity , other_item_details | invoices : invoice_id , order_id , payment_method_code , product_id , order_quantity , other_item_details , order_item_id | services : service_id , service_type_code , workshop_group_id , product_description , product_name , product_price , other_product_service_details | bookings_services : order_id , product_id | invoice_items : invoice_item_id , invoice_id , order_id , order_item_id , product_id , order_quantity , other_item_details output: SELECT avg(Order_Quantity) FROM Invoices WHERE payment_method_code  =  \"MasterCard\"\n Now please use valid SQLite to answer the following questions: List the earnings of poker players in descending order.",
    "Here is an examples including input and output:\n input: question: Show the average amount of transactions with type code \"SALE\". serialized_schema:  | tracking_share_transactions | investors : investor_id , investor_details | lots : lot_id , investor_id , lot_details | ref_transaction_types : transaction_type_code , transaction_type_description | transactions : transaction_id , investor_id , transaction_type_code , date_of_transaction , amount_of_transaction , share_count , other_details | sales : sales_transaction_id , sales_details | purchases : purchase_transaction_id , purchase_details | transactions_lots : transaction_id , lot_id output: SELECT avg(amount_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code  =  \"SALE\"\n Now please use valid SQLite to answer the following questions: What are the earnings of poker players, ordered descending by value?",
    "Here is an examples including input and output:\n input: question: Show the names of the drivers without a school bus. serialized_schema:  | school_bus | driver : driver_id , name , party , home_city , age | school : school_id , grade , school , location , type | school_bus : school_id , driver_id , years_working , if_full_time output: SELECT name FROM driver WHERE driver_id NOT IN (SELECT driver_id FROM school_bus)\n Now please use valid SQLite to answer the following questions: List the final tables made and the best finishes of poker players.",
    "Here is an examples including input and output:\n input: question: What is the id, genre, and name of the artist for every English song ordered by ascending rating? serialized_schema:  | music_1 | genre : g_name , rating , most_popular_in | artist : artist_name , country , gender , preferred_genre | files : f_id , artist_name , file_size , duration , formats | song : song_name , artist_name , country , f_id , genre_is , rating , languages , releasedate , resolution output: SELECT f_id ,  genre_is ,  artist_name FROM song WHERE languages  =   \"english\" ORDER BY rating\n Now please use valid SQLite to answer the following questions: What are the final tables made and best finishes for all poker players?",
    "Here is an examples including input and output:\n input: question: What are the first and last names of all customers who lived in Lockmanfurt? serialized_schema:  | driving_school | addresses : address_id , line_1_number_building , city , zip_postcode , state_province_county , country | staff : staff_id , staff_address_id , nickname , first_name , middle_name , last_name , date_of_birth , date_joined_staff , date_left_staff | vehicles : vehicle_id , vehicle_details | customers : customer_id , customer_address_id , customer_status_code , date_became_customer , date_of_birth , first_name , last_name , amount_outstanding , email_address , phone_number , cell_mobile_phone_number | customer_payments : customer_id , datetime_payment , payment_method_code , amount_payment | lessons : lesson_id , customer_id , lesson_status_code , staff_id , vehicle_id , lesson_date , lesson_time , price output: SELECT T1.first_name ,  T1.last_name FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T2.city = \"Lockmanfurt\";\n Now please use valid SQLite to answer the following questions: What is the average earnings of poker players?",
    "Here is an examples including input and output:\n input: question: Which policy type has the most records in the database? serialized_schema:  | insurance_fnol | customers : customer_id , customer_name | services : service_id , service_name | available_policies : policy_id , policy_type_code , customer_phone | customers_policies : customer_id , policy_id , date_opened , date_closed | first_notification_of_loss : fnol_id , customer_id , policy_id , service_id | claims : claim_id , fnol_id , effective_date | settlements : settlement_id , claim_id , effective_date , settlement_amount output: SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: Return the average earnings across all poker players.",
    "Here is an examples including input and output:\n input: question: How many employees do we have? serialized_schema:  | cre_Doc_Tracking_DB | ref_document_types : document_type_code , document_type_name , document_type_description | ref_calendar : calendar_date , day_number | ref_locations : location_code , location_name , location_description | roles : role_code , role_name , role_description | all_documents : document_id , date_stored , document_type_code , document_name , document_description , other_details | employees : employee_id , role_code , employee_name , gender_mfu , date_of_birth , other_details | document_locations : document_id , location_code , date_in_location_from , date_in_locaton_to | documents_to_be_destroyed : document_id , destruction_authorised_by_employee_id , destroyed_by_employee_id , planned_destruction_date , actual_destruction_date , other_details output: SELECT count(*) FROM Employees\n Now please use valid SQLite to answer the following questions: What is the money rank of the poker player with the highest earnings?",
    "Here is an examples including input and output:\n input: question: How many students live in HKG or CHI? serialized_schema:  | allergy_1 | allergy_type : allergy , allergytype | has_allergy : stuid , allergy | student : stuid , lname , fname , age , sex , major , advisor , city_code output: SELECT count(*) FROM Student WHERE city_code  =  \"HKG\" OR city_code  =  \"CHI\"\n Now please use valid SQLite to answer the following questions: Return the money rank of the player with the greatest earnings.",
    "Here is an examples including input and output:\n input: question: What are the first names of all Accounting professors who teach and what are the classrooms of the courses they teach? serialized_schema:  | college_1 | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num output: SELECT T2.emp_fname ,  T1.class_room FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN professor AS T3 ON T2.emp_num  =  T3.emp_num JOIN department AS T4 ON T4.dept_code  =  T3.dept_code WHERE T4.dept_name  =  'Accounting'\n Now please use valid SQLite to answer the following questions: What is the maximum number of final tables made among poker players with earnings less than 200000?",
    "Here is an examples including input and output:\n input: question: Find all the campuses opened in 1958. serialized_schema:  | csu_1 | campuses : id , campus , location , county , year | csu_fees : campus , year , campusfee | degrees : year , campus , degrees | discipline_enrollments : campus , discipline , year , undergraduate , graduate | enrollments : campus , year , totalenrollment_ay , fte_ay | faculty : campus , year , faculty output: SELECT campus FROM campuses WHERE YEAR  =  1958\n Now please use valid SQLite to answer the following questions: Return the maximum final tables made across all poker players who have earnings below 200000.",
    "Here is an examples including input and output:\n input: question: Find the id of the song that lasts the longest. serialized_schema:  | music_1 | genre : g_name , rating , most_popular_in | artist : artist_name , country , gender , preferred_genre | files : f_id , artist_name , file_size , duration , formats | song : song_name , artist_name , country , f_id , genre_is , rating , languages , releasedate , resolution output: SELECT f_id FROM files ORDER BY duration DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: What are the names of poker players?",
    "Here is an examples including input and output:\n input: question: Give the state that has the most customers. serialized_schema:  | customer_complaints | staff : staff_id , gender , first_name , last_name , email_address , phone_number | customers : customer_id , customer_type_code , address_line_1 , address_line_2 , town_city , state , email_address , phone_number | products : product_id , parent_product_id , product_category_code , date_product_first_available , date_product_discontinued , product_name , product_description , product_price | complaints : complaint_id , product_id , customer_id , complaint_outcome_code , complaint_status_code , complaint_type_code , date_complaint_raised , date_complaint_closed , staff_id output: SELECT state FROM customers GROUP BY state ORDER BY count(*) LIMIT 1\n Now please use valid SQLite to answer the following questions: Return the names of all the poker players.",
    "Here is an examples including input and output:\n input: question: What are the names of the customers and staff members? serialized_schema:  | insurance_and_eClaims | customers : customer_id , customer_details | staff : staff_id , staff_details | policies : policy_id , customer_id , policy_type_code , start_date , end_date | claim_headers : claim_header_id , claim_status_code , claim_type_code , policy_id , date_of_claim , date_of_settlement , amount_claimed , amount_piad | claims_documents : claim_id , document_type_code , created_by_staff_id , created_date | claims_processing_stages : claim_stage_id , next_claim_stage_id , claim_status_name , claim_status_description | claims_processing : claim_processing_id , claim_id , claim_outcome_code , claim_stage_id , staff_id output: SELECT customer_details FROM customers UNION SELECT staff_details FROM staff\n Now please use valid SQLite to answer the following questions: What are the names of poker players whose earnings is higher than 300000?",
    "Here is an examples including input and output:\n input: question: Show the guest first names, start dates, and end dates of all the apartment bookings. serialized_schema:  | apartment_rentals | apartment_buildings : building_id , building_short_name , building_full_name , building_description , building_address , building_manager , building_phone | apartments : apt_id , building_id , apt_type_code , apt_number , bathroom_count , bedroom_count , room_count | apartment_facilities : apt_id , facility_code | guests : guest_id , gender_code , guest_first_name , guest_last_name , date_of_birth | apartment_bookings : apt_booking_id , apt_id , guest_id , booking_status_code , booking_start_date , booking_end_date | view_unit_status : apt_id , apt_booking_id , status_date , available_yn output: SELECT T2.guest_first_name ,  T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id\n Now please use valid SQLite to answer the following questions: Give the names of poker players who have earnings above 300000.",
    "Here is an examples including input and output:\n input: question: Count the number of candidates. serialized_schema:  | candidate_poll | candidate : candidate_id , people_id , poll_source , date , support_rate , consider_rate , oppose_rate , unsure_rate | people : people_id , sex , name , date_of_birth , height , weight output: SELECT count(*) FROM candidate\n Now please use valid SQLite to answer the following questions: List the names of poker players ordered by the final tables made in ascending order.",
    "Here is an examples including input and output:\n input: question: What are the codes of card types that have 5 or more cards? serialized_schema:  | customers_card_transactions | accounts : account_id , customer_id , account_name , other_account_details | customers : customer_id , customer_first_name , customer_last_name , customer_address , customer_phone , customer_email , other_customer_details | customers_cards : card_id , customer_id , card_type_code , card_number , date_valid_from , date_valid_to , other_card_details | financial_transactions : transaction_id , previous_transaction_id , account_id , card_id , transaction_type , transaction_date , transaction_amount , transaction_comment , other_transaction_details output: SELECT card_type_code FROM Customers_cards GROUP BY card_type_code HAVING count(*)  >=  5\n Now please use valid SQLite to answer the following questions: What are the names of poker players, ordered ascending by the number of final tables they have made?",
    "Here is an examples including input and output:\n input: question: How many professors who are from either Accounting or Biology department? serialized_schema:  | college_1 | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num output: SELECT count(*) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T2.dept_name  =  'Accounting' OR T2.dept_name  =  'Biology'\n Now please use valid SQLite to answer the following questions: What is the birth date of the poker player with the lowest earnings?",
    "Here is an examples including input and output:\n input: question: What are the three countries that the least players are from? serialized_schema:  | baseball_1 | all_star : player_id , year , game_num , game_id , team_id , league_id , gp , starting_pos | appearances : year , team_id , league_id , player_id , g_all , gs , g_batting , g_defense , g_p , g_c , g_1b , g_2b , g_3b , g_ss , g_lf , g_cf , g_rf , g_of , g_dh , g_ph , g_pr | manager_award : player_id , award_id , year , league_id , tie , notes | player_award : player_id , award_id , year , league_id , tie , notes | manager_award_vote : award_id , year , league_id , player_id , points_won , points_max , votes_first | player_award_vote : award_id , year , league_id , player_id , points_won , points_max , votes_first | batting : player_id , year , stint , team_id , league_id , g , ab , r , h , double , triple , hr , rbi , sb , cs , bb , so , ibb , hbp , sh , sf , g_idp | batting_postseason : year , round , player_id , team_id , league_id , g , ab , r , h , double , triple , hr , rbi , sb , cs , bb , so , ibb , hbp , sh , sf , g_idp | player_college : player_id , college_id , year | fielding : player_id , year , stint , team_id , league_id , pos , g , gs , inn_outs , po , a , e , dp , pb , wp , sb , cs , zr | fielding_outfield : player_id , year , stint , glf , gcf , grf | fielding_postseason : player_id , year , team_id , league_id , round , pos , g , gs , inn_outs , po , a , e , dp , tp , pb , sb , cs | hall_of_fame : player_id , yearid , votedby , ballots , needed , votes , inducted , category , needed_note | home_game : year , league_id , team_id , park_id , span_first , span_last , games , openings , attendance | manager : player_id , year , team_id , league_id , inseason , g , w , l , rank , plyr_mgr | manager_half : player_id , year , team_id , league_id , inseason , half , g , w , l , rank | player : player_id , birth_year , birth_month , birth_day , birth_country , birth_state , birth_city , death_year , death_month , death_day , death_country , death_state , death_city , name_first , name_last , name_given , weight , height , bats , throws , debut , final_game , retro_id , bbref_id | park : park_id , park_name , park_alias , city , state , country | pitching : player_id , year , stint , team_id , league_id , w , l , g , gs , cg , sho , sv , ipouts , h , er , hr , bb , so , baopp , era , ibb , wp , hbp , bk , bfp , gf , r , sh , sf , g_idp | pitching_postseason : player_id , year , round , team_id , league_id , w , l , g , gs , cg , sho , sv , ipouts , h , er , hr , bb , so , baopp , era , ibb , wp , hbp , bk , bfp , gf , r , sh , sf , g_idp | salary : year , team_id , league_id , player_id , salary | college : college_id , name_full , city , state , country | postseason : year , round , team_id_winner , league_id_winner , team_id_loser , league_id_loser , wins , losses , ties | team : year , league_id , team_id , franchise_id , div_id , rank , g , ghome , w , l , div_win , wc_win , lg_win , ws_win , r , ab , h , double , triple , hr , bb , so , sb , cs , hbp , sf , ra , er , era , cg , sho , sv , ipouts , ha , hra , bba , soa , e , dp , fp , name , park , attendance , bpf , ppf , team_id_br , team_id_lahman45 , team_id_retro | team_franchise : franchise_id , franchise_name , active , na_assoc | team_half : year , league_id , team_id , half , div_id , div_win , rank , g , w , l output: SELECT birth_country FROM player GROUP BY birth_country ORDER BY count(*) ASC LIMIT 3;\n Now please use valid SQLite to answer the following questions: Return the birth date of the poker player with the lowest earnings.",
    "Here is an examples including input and output:\n input: question: What are the different names of all the races in reverse alphabetical order? serialized_schema:  | formula_1 | circuits : circuitid , circuitref , name , location , country , lat , lng , alt , url | races : raceid , year , round , circuitid , name , date , time , url | drivers : driverid , driverref , number , code , forename , surname , dob , nationality , url | status : statusid , status | seasons : year , url | constructors : constructorid , constructorref , name , nationality , url | constructorstandings : constructorstandingsid , raceid , constructorid , points , position , positiontext , wins | results : resultid , raceid , driverid , constructorid , number , grid , position , positiontext , positionorder , points , laps , time , milliseconds , fastestlap , rank , fastestlaptime , fastestlapspeed , statusid | driverstandings : driverstandingsid , raceid , driverid , points , position , positiontext , wins | constructorresults : constructorresultsid , raceid , constructorid , points , status | qualifying : qualifyid , raceid , driverid , constructorid , number , position , q1 , q2 , q3 | pitstops : raceid , driverid , stop , lap , time , duration , milliseconds | laptimes : raceid , driverid , lap , position , time , milliseconds output: SELECT DISTINCT name FROM races ORDER BY name DESC\n Now please use valid SQLite to answer the following questions: What is the money rank of the tallest poker player?",
    "Here is an examples including input and output:\n input: question: How many employees have a first name of Ludie? serialized_schema:  | driving_school | addresses : address_id , line_1_number_building , city , zip_postcode , state_province_county , country | staff : staff_id , staff_address_id , nickname , first_name , middle_name , last_name , date_of_birth , date_joined_staff , date_left_staff | vehicles : vehicle_id , vehicle_details | customers : customer_id , customer_address_id , customer_status_code , date_became_customer , date_of_birth , first_name , last_name , amount_outstanding , email_address , phone_number , cell_mobile_phone_number | customer_payments : customer_id , datetime_payment , payment_method_code , amount_payment | lessons : lesson_id , customer_id , lesson_status_code , staff_id , vehicle_id , lesson_date , lesson_time , price output: SELECT count(*) FROM Staff WHERE first_name = \"Ludie\";\n Now please use valid SQLite to answer the following questions: Return the money rank of the poker player with the greatest height.",
    "Here is an examples including input and output:\n input: question: How many available hotels are there in total? serialized_schema:  | cre_Theme_park | ref_hotel_star_ratings : star_rating_code , star_rating_description | locations : location_id , location_name , address , other_details | ref_attraction_types : attraction_type_code , attraction_type_description | visitors : tourist_id , tourist_details | features : feature_id , feature_details | hotels : hotel_id , star_rating_code , pets_allowed_yn , price_range , other_hotel_details | tourist_attractions : tourist_attraction_id , attraction_type_code , location_id , how_to_get_there , name , description , opening_hours , other_details | street_markets : market_id , market_details | shops : shop_id , shop_details | museums : museum_id , museum_details | royal_family : royal_family_id , royal_family_details | theme_parks : theme_park_id , theme_park_details | visits : visit_id , tourist_attraction_id , tourist_id , visit_date , visit_details | photos : photo_id , tourist_attraction_id , name , description , filename , other_details | staff : staff_id , tourist_attraction_id , name , other_details | tourist_attraction_features : tourist_attraction_id , feature_id output: SELECT count(*) FROM HOTELS\n Now please use valid SQLite to answer the following questions: What is the average earnings of poker players with height higher than 200?",
    "Here is an examples including input and output:\n input: question: Return the maximum enrollment across all schools. serialized_schema:  | university_basketball | basketball_match : team_id , school_id , team_name , acc_regular_season , acc_percent , acc_home , acc_road , all_games , all_games_percent , all_home , all_road , all_neutral | university : school_id , school , location , founded , affiliation , enrollment , nickname , primary_conference output: SELECT max(Enrollment) FROM university\n Now please use valid SQLite to answer the following questions: Give average earnings of poker players who are taller than 200.",
    "Here is an examples including input and output:\n input: question: Show the name of drivers in descending order of age. serialized_schema:  | school_bus | driver : driver_id , name , party , home_city , age | school : school_id , grade , school , location , type | school_bus : school_id , driver_id , years_working , if_full_time output: SELECT name FROM driver ORDER BY age DESC\n Now please use valid SQLite to answer the following questions: What are the names of poker players in descending order of earnings?",
    "Here is an examples including input and output:\n input: question: Find the name of the students who have more than one advisor? serialized_schema:  | college_2 | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id output: SELECT T1.name FROM student AS T1 JOIN advisor AS T2 ON T1.id  =  T2.s_id GROUP BY T2.s_id HAVING count(*)  >  1\n Now please use valid SQLite to answer the following questions: Return the names of poker players sorted by their earnings descending.",
    "Here is an examples including input and output:\n input: question: Find the titles of the papers the author \"Stephanie Weirich\" wrote. serialized_schema:  | icfp_1 | inst : instid , name , country | authors : authid , lname , fname | papers : paperid , title | authorship : authid , instid , paperid , authorder output: SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t1.fname  =  \"Stephanie\" AND t1.lname  =  \"Weirich\"\n Now please use valid SQLite to answer the following questions: What are different nationalities of people and the corresponding number of people from each nation?",
    "Here is an examples including input and output:\n input: question: How many customers in total? serialized_schema:  | driving_school | addresses : address_id , line_1_number_building , city , zip_postcode , state_province_county , country | staff : staff_id , staff_address_id , nickname , first_name , middle_name , last_name , date_of_birth , date_joined_staff , date_left_staff | vehicles : vehicle_id , vehicle_details | customers : customer_id , customer_address_id , customer_status_code , date_became_customer , date_of_birth , first_name , last_name , amount_outstanding , email_address , phone_number , cell_mobile_phone_number | customer_payments : customer_id , datetime_payment , payment_method_code , amount_payment | lessons : lesson_id , customer_id , lesson_status_code , staff_id , vehicle_id , lesson_date , lesson_time , price output: SELECT count(*) FROM Customers;\n Now please use valid SQLite to answer the following questions: How many people are there of each nationality?",
    "Here is an examples including input and output:\n input: question: Find the full name and id of the college that has the most baseball players. serialized_schema:  | baseball_1 | all_star : player_id , year , game_num , game_id , team_id , league_id , gp , starting_pos | appearances : year , team_id , league_id , player_id , g_all , gs , g_batting , g_defense , g_p , g_c , g_1b , g_2b , g_3b , g_ss , g_lf , g_cf , g_rf , g_of , g_dh , g_ph , g_pr | manager_award : player_id , award_id , year , league_id , tie , notes | player_award : player_id , award_id , year , league_id , tie , notes | manager_award_vote : award_id , year , league_id , player_id , points_won , points_max , votes_first | player_award_vote : award_id , year , league_id , player_id , points_won , points_max , votes_first | batting : player_id , year , stint , team_id , league_id , g , ab , r , h , double , triple , hr , rbi , sb , cs , bb , so , ibb , hbp , sh , sf , g_idp | batting_postseason : year , round , player_id , team_id , league_id , g , ab , r , h , double , triple , hr , rbi , sb , cs , bb , so , ibb , hbp , sh , sf , g_idp | player_college : player_id , college_id , year | fielding : player_id , year , stint , team_id , league_id , pos , g , gs , inn_outs , po , a , e , dp , pb , wp , sb , cs , zr | fielding_outfield : player_id , year , stint , glf , gcf , grf | fielding_postseason : player_id , year , team_id , league_id , round , pos , g , gs , inn_outs , po , a , e , dp , tp , pb , sb , cs | hall_of_fame : player_id , yearid , votedby , ballots , needed , votes , inducted , category , needed_note | home_game : year , league_id , team_id , park_id , span_first , span_last , games , openings , attendance | manager : player_id , year , team_id , league_id , inseason , g , w , l , rank , plyr_mgr | manager_half : player_id , year , team_id , league_id , inseason , half , g , w , l , rank | player : player_id , birth_year , birth_month , birth_day , birth_country , birth_state , birth_city , death_year , death_month , death_day , death_country , death_state , death_city , name_first , name_last , name_given , weight , height , bats , throws , debut , final_game , retro_id , bbref_id | park : park_id , park_name , park_alias , city , state , country | pitching : player_id , year , stint , team_id , league_id , w , l , g , gs , cg , sho , sv , ipouts , h , er , hr , bb , so , baopp , era , ibb , wp , hbp , bk , bfp , gf , r , sh , sf , g_idp | pitching_postseason : player_id , year , round , team_id , league_id , w , l , g , gs , cg , sho , sv , ipouts , h , er , hr , bb , so , baopp , era , ibb , wp , hbp , bk , bfp , gf , r , sh , sf , g_idp | salary : year , team_id , league_id , player_id , salary | college : college_id , name_full , city , state , country | postseason : year , round , team_id_winner , league_id_winner , team_id_loser , league_id_loser , wins , losses , ties | team : year , league_id , team_id , franchise_id , div_id , rank , g , ghome , w , l , div_win , wc_win , lg_win , ws_win , r , ab , h , double , triple , hr , bb , so , sb , cs , hbp , sf , ra , er , era , cg , sho , sv , ipouts , ha , hra , bba , soa , e , dp , fp , name , park , attendance , bpf , ppf , team_id_br , team_id_lahman45 , team_id_retro | team_franchise : franchise_id , franchise_name , active , na_assoc | team_half : year , league_id , team_id , half , div_id , div_win , rank , g , w , l output: SELECT T1.name_full ,  T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id  =  T2.college_id GROUP BY T1.college_id ORDER BY count(*) DESC LIMIT 1;\n Now please use valid SQLite to answer the following questions: What is the most common nationality of people?",
    "Here is an examples including input and output:\n input: question: Show the distinct director of films with market estimation in the year of 1995. serialized_schema:  | film_rank | film : film_id , title , studio , director , gross_in_dollar | market : market_id , country , number_cities | film_market_estimation : estimation_id , low_estimate , high_estimate , film_id , type , market_id , year output: SELECT DISTINCT T1.Director FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID  =  T2.Film_ID WHERE T2.Year  =  1995\n Now please use valid SQLite to answer the following questions: Give the nationality that is most common across all people.",
    "Here is an examples including input and output:\n input: question: What is the average fastest lap speed for the Monaco Grand Prix in 2008? serialized_schema:  | formula_1 | circuits : circuitid , circuitref , name , location , country , lat , lng , alt , url | races : raceid , year , round , circuitid , name , date , time , url | drivers : driverid , driverref , number , code , forename , surname , dob , nationality , url | status : statusid , status | seasons : year , url | constructors : constructorid , constructorref , name , nationality , url | constructorstandings : constructorstandingsid , raceid , constructorid , points , position , positiontext , wins | results : resultid , raceid , driverid , constructorid , number , grid , position , positiontext , positionorder , points , laps , time , milliseconds , fastestlap , rank , fastestlaptime , fastestlapspeed , statusid | driverstandings : driverstandingsid , raceid , driverid , points , position , positiontext , wins | constructorresults : constructorresultsid , raceid , constructorid , points , status | qualifying : qualifyid , raceid , driverid , constructorid , number , position , q1 , q2 , q3 | pitstops : raceid , driverid , stop , lap , time , duration , milliseconds | laptimes : raceid , driverid , lap , position , time , milliseconds output: SELECT avg(T2.fastestlapspeed) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year = 2008 AND T1.name = \"Monaco Grand Prix\"\n Now please use valid SQLite to answer the following questions: What are the nationalities that are shared by at least two people?",
    "Here is an examples including input and output:\n input: question: What details are there on the research staff? List the result in ascending alphabetical order. serialized_schema:  | tracking_grants_for_research | document_types : document_type_code , document_description | documents : document_id , document_type_code , grant_id , sent_date , response_received_date , other_details | grants : grant_id , organisation_id , grant_amount , grant_start_date , grant_end_date , other_details | organisation_types : organisation_type , organisation_type_description | organisations : organisation_id , organisation_type , organisation_details | project_outcomes : project_id , outcome_code , outcome_details | project_staff : staff_id , project_id , role_code , date_from , date_to , other_details | projects : project_id , organisation_id , project_details | research_outcomes : outcome_code , outcome_description | research_staff : staff_id , employer_organisation_id , staff_details | staff_roles : role_code , role_description | tasks : task_id , project_id , task_details , eg agree objectives output: SELECT staff_details FROM Research_Staff ORDER BY staff_details ASC\n Now please use valid SQLite to answer the following questions: Return the nationalities for which there are two or more people.",
    "Here is an examples including input and output:\n input: question: Show the types of schools that have two schools. serialized_schema:  | school_bus | driver : driver_id , name , party , home_city , age | school : school_id , grade , school , location , type | school_bus : school_id , driver_id , years_working , if_full_time output: SELECT TYPE FROM school GROUP BY TYPE HAVING count(*)  =  2\n Now please use valid SQLite to answer the following questions: List the names and birth dates of people in ascending alphabetical order of name.",
    "Here is an examples including input and output:\n input: question: List all the scientists' names, their projects' names, and the hours worked by that scientist on each project, in alphabetical order of project name, and then scientist name. serialized_schema:  | scientist_1 | scientists : ssn , name | projects : code , name , hours | assignedto : scientist , project output: SELECT T1.Name ,  T3.Name ,  T3.Hours FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN = T2.Scientist JOIN Projects AS T3 ON T2.Project = T3.Code ORDER BY T3.Name ,  T1.Name\n Now please use valid SQLite to answer the following questions: What are the names and birth dates of people, ordered by their names in alphabetical order?",
    "Here is an examples including input and output:\n input: question: Find the top 3 artists who have the largest number of songs works whose language is Bangla. serialized_schema:  | music_1 | genre : g_name , rating , most_popular_in | artist : artist_name , country , gender , preferred_genre | files : f_id , artist_name , file_size , duration , formats | song : song_name , artist_name , country , f_id , genre_is , rating , languages , releasedate , resolution output: SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"bangla\" GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3\n Now please use valid SQLite to answer the following questions: Show names of people whose nationality is not \"Russia\".",
    "Here is an examples including input and output:\n input: question: List the school color of the school that has the largest enrollment. serialized_schema:  | school_player | school : school_id , school , location , enrollment , founded , denomination , boys_or_girls , day_or_boarding , year_entered_competition , school_colors | school_details : school_id , nickname , colors , league , class , division | school_performance : school_id , school_year , class_a , class_aa | player : player_id , player , team , age , position , school_id output: SELECT School_Colors FROM school ORDER BY Enrollment DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: What are the names of people who are not from Russia?",
    "Here is an examples including input and output:\n input: question: Find the average number of customers cross all banks. serialized_schema:  | loan_1 | bank : branch_id , bname , no_of_customers , city , state | customer : cust_id , cust_name , acc_type , acc_bal , no_of_loans , credit_score , branch_id , state | loan : loan_id , loan_type , cust_id , branch_id , amount output: SELECT avg(no_of_customers) FROM bank\n Now please use valid SQLite to answer the following questions: List the names of people that are not poker players.",
    "Here is an examples including input and output:\n input: question: Give me the names and prices of furnitures which some companies are manufacturing. serialized_schema:  | manufacturer | manufacturer : manufacturer_id , open_year , name , num_of_factories , num_of_shops | furniture : furniture_id , name , num_of_component , market_rate | furniture_manufacte : manufacturer_id , furniture_id , price_in_dollar output: SELECT t1.name ,  t2.price_in_dollar FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID  =  t2.Furniture_ID\n Now please use valid SQLite to answer the following questions: What are the names of people who do not play poker?",
    "Here is an examples including input and output:\n input: question: Find the average credit score of the customers who do not have any loan. serialized_schema:  | loan_1 | bank : branch_id , bname , no_of_customers , city , state | customer : cust_id , cust_name , acc_type , acc_bal , no_of_loans , credit_score , branch_id , state | loan : loan_id , loan_type , cust_id , branch_id , amount output: SELECT avg(credit_score) FROM customer WHERE cust_id NOT IN (SELECT cust_id FROM loan)\n Now please use valid SQLite to answer the following questions: How many distinct nationalities are there?",
    "Here is an examples including input and output:\n input: question: How many video games exist? serialized_schema:  | game_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | video_games : gameid , gname , gtype | plays_games : stuid , gameid , hours_played | sportsinfo : stuid , sportname , hoursperweek , gamesplayed , onscholarship output: SELECT count(*) FROM Video_games\n Now please use valid SQLite to answer the following questions: Count the number of different nationalities.",
    "Here is an examples including input and output:\n input: question: Find the first name and major of the students who are not allegry to soy. serialized_schema:  | allergy_1 | allergy_type : allergy , allergytype | has_allergy : stuid , allergy | student : stuid , lname , fname , age , sex , major , advisor , city_code output: SELECT fname ,  major FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Soy\")\n Now please use valid SQLite to answer the following questions: How many states are there?",
    "Here is an examples including input and output:\n input: question: Find the names and total checking and savings balances of accounts whose savings balance is higher than the average savings balance. serialized_schema:  | small_bank_1 | accounts : custid , name | savings : custid , balance | checking : custid , balance output: SELECT T1.name ,  T2.balance + T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  >  (SELECT avg(balance) FROM savings)\n Now please use valid SQLite to answer the following questions: List the contestant numbers and names, ordered by contestant name descending.",
    "Here is an examples including input and output:\n input: question: Find the number of students whose age is older than the average age for each gender. serialized_schema:  | dorm_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | dorm : dormid , dorm_name , student_capacity , gender | dorm_amenity : amenid , amenity_name | has_amenity : dormid , amenid | lives_in : stuid , dormid , room_number output: SELECT count(*) ,  sex FROM student WHERE age  >  (SELECT avg(age) FROM student) GROUP BY sex\n Now please use valid SQLite to answer the following questions: List the vote ids, phone numbers and states of all votes.",
    "Here is an examples including input and output:\n input: question: What are the average, maximum, and minimum number of floors for all buildings? serialized_schema:  | protein_institute | building : building_id , name , street_address , years_as_tallest , height_feet , floors | institution : institution_id , institution , location , founded , type , enrollment , team , primary_conference , building_id | protein : common_name , protein_name , divergence_from_human_lineage , accession_number , sequence_length , sequence_identity_to_human_protein , institution_id output: SELECT avg(floors) ,  max(floors) ,  min(floors) FROM building\n Now please use valid SQLite to answer the following questions: What are the maximum and minimum values of area codes?",
    "Here is an examples including input and output:\n input: question: What are the countries of markets and their corresponding years of market estimation? serialized_schema:  | film_rank | film : film_id , title , studio , director , gross_in_dollar | market : market_id , country , number_cities | film_market_estimation : estimation_id , low_estimate , high_estimate , film_id , type , market_id , year output: SELECT T2.Country ,  T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID\n Now please use valid SQLite to answer the following questions: What is last date created of votes from the state 'CA'?",
    "Here is an examples including input and output:\n input: question: Find the name and age of the person who is a friend of Dan or Alice. serialized_schema:  | network_2 | person : name , age , city , gender , job | personfriend : name , friend , year output: SELECT DISTINCT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Dan' OR T2.friend  =  'Alice'\n Now please use valid SQLite to answer the following questions: What are the names of the contestants whose names are not 'Jessie Alloway'",
    "Here is an examples including input and output:\n input: question: Show the name of track with most number of races. serialized_schema:  | race_track | race : race_id , name , class , date , track_id | track : track_id , name , location , seating , year_opened output: SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: What are the distinct states and create time of all votes?",
    "Here is an examples including input and output:\n input: question: What are the birthdays of people in ascending order of height? serialized_schema:  | body_builder | body_builder : body_builder_id , people_id , snatch , clean_jerk , total | people : people_id , name , height , weight , birth_date , birth_place output: SELECT Birth_Date FROM People ORDER BY Height ASC\n Now please use valid SQLite to answer the following questions: What are the contestant numbers and names of the contestants who had at least two votes?",
    "Here is an examples including input and output:\n input: question: Find the names of customers who never ordered product Latte. serialized_schema:  | customers_and_addresses | addresses : address_id , address_content , city , zip_postcode , state_province_county , country , other_address_details | products : product_id , product_details | customers : customer_id , payment_method , customer_name , date_became_customer , other_customer_details | customer_addresses : customer_id , address_id , date_address_from , address_type , date_address_to | customer_contact_channels : customer_id , channel_code , active_from_date , active_to_date , contact_number | customer_orders : order_id , customer_id , order_status , order_date , order_details | order_items : order_id , product_id , order_quantity output: SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Latte'\n Now please use valid SQLite to answer the following questions: Of all the contestants who got voted, what is the contestant number and name of the contestant who got least votes?",
    "Here is an examples including input and output:\n input: question: What are the different pilot names who had piloted a flight in the country 'United States' or in the airport named 'Billund Airport'? serialized_schema:  | flight_company | airport : id , city , country , iata , icao , name | operate_company : id , name , type , principal_activities , incorporated_in , group_equity_shareholding | flight : id , vehicle_flight_number , date , pilot , velocity , altitude , airport_id , company_id output: SELECT DISTINCT T2.pilot FROM airport AS T1 JOIN flight AS T2 ON T1.id  =  T2.airport_id WHERE T1.country  =  'United States' OR T1.name  =  'Billund Airport'\n Now please use valid SQLite to answer the following questions: What are the number of votes from state 'NY' or 'CA'?",
    "Here is an examples including input and output:\n input: question: Find the id and color description of the products with at least 2 characteristics. serialized_schema:  | products_gen_characteristics | ref_characteristic_types : characteristic_type_code , characteristic_type_description | ref_colors : color_code , color_description | ref_product_categories : product_category_code , product_category_description , unit_of_measure | characteristics : characteristic_id , characteristic_type_code , characteristic_data_type , characteristic_name , other_characteristic_details | products : product_id , color_code , product_category_code , product_name , typical_buying_price , typical_selling_price , product_description , other_product_details | product_characteristics : product_id , characteristic_id , product_characteristic_value output: SELECT t1.product_id ,  t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code JOIN product_characteristics AS t3 ON t1.product_id  =  t3.product_id GROUP BY t1.product_id HAVING count(*)  >=  2\n Now please use valid SQLite to answer the following questions: How many contestants did not get voted?",
    "Here is an examples including input and output:\n input: question: What are the names of banks in the state of New York? serialized_schema:  | loan_1 | bank : branch_id , bname , no_of_customers , city , state | customer : cust_id , cust_name , acc_type , acc_bal , no_of_loans , credit_score , branch_id , state | loan : loan_id , loan_type , cust_id , branch_id , amount output: SELECT bname FROM bank WHERE state  =  'New York'\n Now please use valid SQLite to answer the following questions: What is the area code in which the most voters voted?",
    "Here is an examples including input and output:\n input: question: What are the types of competition and number of competitions for that type? serialized_schema:  | sports_competition | club : club_id , name , region , start_year | club_rank : rank , club_id , gold , silver , bronze , total | player : player_id , name , position , club_id , apps , tries , goals , points | competition : competition_id , year , competition_type , country | competition_result : competition_id , club_id_1 , club_id_2 , score output: SELECT Competition_type ,  COUNT(*) FROM competition GROUP BY Competition_type\n Now please use valid SQLite to answer the following questions: What are the create dates, states, and phone numbers of the votes that were for the contestant named 'Tabatha Gehling'?",
    "Here is an examples including input and output:\n input: question: How many albums has Billy Cobam released? serialized_schema:  | store_1 | artists : id , name | sqlite_sequence : name , seq | albums : id , title , artist_id | employees : id , last_name , first_name , title , reports_to , birth_date , hire_date , address , city , state , country , postal_code , phone , fax , email | customers : id , first_name , last_name , company , address , city , state , country , postal_code , phone , fax , email , support_rep_id | genres : id , name | invoices : id , customer_id , invoice_date , billing_address , billing_city , billing_state , billing_country , billing_postal_code , total | media_types : id , name | tracks : id , name , album_id , media_type_id , genre_id , composer , milliseconds , bytes , unit_price | invoice_lines : id , invoice_id , track_id , unit_price , quantity | playlists : id , name | playlist_tracks : playlist_id , track_id output: SELECT count(*) FROM albums AS T1 JOIN artists AS T2 ON  T1.artist_id = T2.id WHERE T2.name = \"Billy Cobham\";\n Now please use valid SQLite to answer the following questions: List the area codes in which voters voted both for the contestant 'Tabatha Gehling' and the contestant 'Kelly Clauss'.",
    "Here is an examples including input and output:\n input: question: What are the title and maximum price of each film? serialized_schema:  | cinema | film : film_id , rank_in_series , number_in_season , title , directed_by , original_air_date , production_code | cinema : cinema_id , name , openning_year , capacity , location | schedule : cinema_id , film_id , date , show_times_per_day , price output: SELECT T2.title ,  max(T1.price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id\n Now please use valid SQLite to answer the following questions: Return the names of the contestants whose names contain the substring 'Al' .",
    "Here is an examples including input and output:\n input: question: List the names of climbers in descending order of points. serialized_schema:  | climbing | mountain : mountain_id , name , height , prominence , range , country | climber : climber_id , name , country , time , points , mountain_id output: SELECT Name FROM climber ORDER BY Points DESC\n Now please use valid SQLite to answer the following questions: What are the names of all the countries that became independent after 1950?",
    "Here is an examples including input and output:\n input: question: What is the average unit price of tracks that belong to Jazz genre? serialized_schema:  | chinook_1 | album : albumid , title , artistid | artist : artistid , name | customer : customerid , firstname , lastname , company , address , city , state , country , postalcode , phone , fax , email , supportrepid | employee : employeeid , lastname , firstname , title , reportsto , birthdate , hiredate , address , city , state , country , postalcode , phone , fax , email | genre : genreid , name | invoice : invoiceid , customerid , invoicedate , billingaddress , billingcity , billingstate , billingcountry , billingpostalcode , total | invoiceline : invoicelineid , invoiceid , trackid , unitprice , quantity | mediatype : mediatypeid , name | playlist : playlistid , name | playlisttrack : playlistid , trackid | track : trackid , name , albumid , mediatypeid , genreid , composer , milliseconds , bytes , unitprice output: SELECT AVG(UnitPrice) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Jazz\"\n Now please use valid SQLite to answer the following questions: Give the names of the nations that were founded after 1950.",
    "Here is an examples including input and output:\n input: question: How many submissions are there? serialized_schema:  | workshop_paper | workshop : workshop_id , date , venue , name | submission : submission_id , scores , author , college | acceptance : submission_id , workshop_id , result output: SELECT count(*) FROM submission\n Now please use valid SQLite to answer the following questions: How many countries have a republic as their form of government?",
    "Here is an examples including input and output:\n input: question: What are the different allergy types? serialized_schema:  | allergy_1 | allergy_type : allergy , allergytype | has_allergy : stuid , allergy | student : stuid , lname , fname , age , sex , major , advisor , city_code output: SELECT DISTINCT allergytype FROM Allergy_type\n Now please use valid SQLite to answer the following questions: How many countries have governments that are republics?",
    "Here is an examples including input and output:\n input: question: Which students have professors as their advisors? Find their student ids. serialized_schema:  | activity_1 | activity : actid , activity_name | participates_in : stuid , actid | faculty_participates_in : facid , actid | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building output: SELECT T2.StuID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T1.rank  =  \"Professor\"\n Now please use valid SQLite to answer the following questions: What is the total surface area of the countries in the Caribbean region?",
    "Here is an examples including input and output:\n input: question: Show the working years of managers in descending order of their level. serialized_schema:  | railway | railway : railway_id , railway , builder , built , wheels , location , objectnumber | train : train_id , train_num , name , from , arrival , railway_id | manager : manager_id , name , country , working_year_starts , age , level | railway_manage : railway_id , manager_id , from_year output: SELECT Working_year_starts FROM manager ORDER BY LEVEL DESC\n Now please use valid SQLite to answer the following questions: How much surface area do the countires in the Carribean cover together?",
    "Here is an examples including input and output:\n input: question: List the names of all the distinct customers who bought a keyboard. serialized_schema:  | department_store | addresses : address_id , address_details | staff : staff_id , staff_gender , staff_name | suppliers : supplier_id , supplier_name , supplier_phone | department_store_chain : dept_store_chain_id , dept_store_chain_name | customers : customer_id , payment_method_code , customer_code , customer_name , customer_address , customer_phone , customer_email | products : product_id , product_type_code , product_name , product_price | supplier_addresses : supplier_id , address_id , date_from , date_to | customer_addresses : customer_id , address_id , date_from , date_to | customer_orders : order_id , customer_id , order_status_code , order_date | department_stores : dept_store_id , dept_store_chain_id , store_name , store_address , store_phone , store_email | departments : department_id , dept_store_id , department_name | order_items : order_item_id , order_id , product_id | product_suppliers : product_id , supplier_id , date_supplied_from , date_supplied_to , total_amount_purchased , total_value_purchased | staff_department_assignments : staff_id , department_id , date_assigned_from , job_title_code , date_assigned_to output: SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T2.order_id  =  T3.order_id JOIN products AS T4 ON T3.product_id  =  T4.product_id WHERE T4.product_name  =  \"keyboard\"\n Now please use valid SQLite to answer the following questions: Which continent is Anguilla in?",
    "Here is an examples including input and output:\n input: question: What are the different positions of players from UCLA or Duke colleges? serialized_schema:  | match_season | country : country_id , country_name , capital , official_native_language | team : team_id , name | match_season : season , player , position , country , team , draft_pick_number , draft_class , college | player : player_id , player , years_played , total_wl , singles_wl , doubles_wl , team output: SELECT DISTINCT POSITION FROM match_season WHERE College  =  \"UCLA\" OR College  =  \"Duke\"\n Now please use valid SQLite to answer the following questions: What is the continent name which Anguilla belongs to?",
    "Here is an examples including input and output:\n input: question: How many stations are in Mountain View? serialized_schema:  | bike_1 | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code output: SELECT COUNT(*) FROM station WHERE city  =  \"Mountain View\"\n Now please use valid SQLite to answer the following questions: Which region is the city Kabul located in?",
    "Here is an examples including input and output:\n input: question: Show all allergies and their types. serialized_schema:  | allergy_1 | allergy_type : allergy , allergytype | has_allergy : stuid , allergy | student : stuid , lname , fname , age , sex , major , advisor , city_code output: SELECT allergy ,  allergytype FROM Allergy_type\n Now please use valid SQLite to answer the following questions: What region is Kabul in?",
    "Here is an examples including input and output:\n input: question: How many students does each advisor have? serialized_schema:  | allergy_1 | allergy_type : allergy , allergytype | has_allergy : stuid , allergy | student : stuid , lname , fname , age , sex , major , advisor , city_code output: SELECT advisor ,  count(*) FROM Student GROUP BY advisor\n Now please use valid SQLite to answer the following questions: Which language is the most popular in Aruba?",
    "Here is an examples including input and output:\n input: question: What is the most popular full name of the actors? serialized_schema:  | sakila_1 | actor : actor_id , first_name , last_name , last_update | address : address_id , address , address2 , district , city_id , postal_code , phone , last_update | category : category_id , name , last_update | city : city_id , city , country_id , last_update | country : country_id , country , last_update | customer : customer_id , store_id , first_name , last_name , email , address_id , active , create_date , last_update | film : film_id , title , description , release_year , language_id , original_language_id , rental_duration , rental_rate , length , replacement_cost , rating , special_features , last_update | film_actor : actor_id , film_id , last_update | film_category : film_id , category_id , last_update | film_text : film_id , title , description | inventory : inventory_id , film_id , store_id , last_update | language : language_id , name , last_update | payment : payment_id , customer_id , staff_id , rental_id , amount , payment_date , last_update | rental : rental_id , rental_date , inventory_id , customer_id , return_date , staff_id , last_update | staff : staff_id , first_name , last_name , address_id , picture , email , store_id , active , username , password , last_update | store : store_id , manager_staff_id , address_id , last_update output: SELECT first_name ,  last_name FROM actor GROUP BY first_name ,  last_name ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: What language is predominantly spoken in Aruba?",
    "Here is an examples including input and output:\n input: question: Find the name of medication used on the patient who stays in room 111? serialized_schema:  | hospital_1 | physician : employeeid , name , position , ssn | department : departmentid , name , head | affiliated_with : physician , department , primaryaffiliation | procedures : code , name , cost | trained_in : physician , treatment , certificationdate , certificationexpires | patient : ssn , name , address , phone , insuranceid , pcp | nurse : employeeid , name , position , registered , ssn | appointment : appointmentid , patient , prepnurse , physician , start , end , examinationroom | medication : code , name , brand , description | prescribes : physician , patient , medication , date , appointment , dose | block : blockfloor , blockcode | room : roomnumber , roomtype , blockfloor , blockcode , unavailable | on_call : nurse , blockfloor , blockcode , oncallstart , oncallend | stay : stayid , patient , room , staystart , stayend | undergoes : patient , procedures , stay , dateundergoes , physician , assistingnurse output: SELECT T4.name FROM stay AS T1 JOIN patient AS T2 ON T1.Patient  =  T2.SSN JOIN Prescribes AS T3 ON T3.Patient  =  T2.SSN JOIN Medication AS T4 ON T3.Medication  =  T4.Code WHERE room  =  111\n Now please use valid SQLite to answer the following questions: What are the population and life expectancies in Brazil?",
    "Here is an examples including input and output:\n input: question: What are id and name of the products whose price is lower than 600 or higher than 900? serialized_schema:  | department_store | addresses : address_id , address_details | staff : staff_id , staff_gender , staff_name | suppliers : supplier_id , supplier_name , supplier_phone | department_store_chain : dept_store_chain_id , dept_store_chain_name | customers : customer_id , payment_method_code , customer_code , customer_name , customer_address , customer_phone , customer_email | products : product_id , product_type_code , product_name , product_price | supplier_addresses : supplier_id , address_id , date_from , date_to | customer_addresses : customer_id , address_id , date_from , date_to | customer_orders : order_id , customer_id , order_status_code , order_date | department_stores : dept_store_id , dept_store_chain_id , store_name , store_address , store_phone , store_email | departments : department_id , dept_store_id , department_name | order_items : order_item_id , order_id , product_id | product_suppliers : product_id , supplier_id , date_supplied_from , date_supplied_to , total_amount_purchased , total_value_purchased | staff_department_assignments : staff_id , department_id , date_assigned_from , job_title_code , date_assigned_to output: SELECT product_id ,  product_name FROM products WHERE product_price  <  600 OR product_price  >  900\n Now please use valid SQLite to answer the following questions: Give me Brazil’s population and life expectancies.",
    "Here is an examples including input and output:\n input: question: What are the names of all the clubs ordered in descending alphabetical order? serialized_schema:  | sports_competition | club : club_id , name , region , start_year | club_rank : rank , club_id , gold , silver , bronze , total | player : player_id , name , position , club_id , apps , tries , goals , points | competition : competition_id , year , competition_type , country | competition_result : competition_id , club_id_1 , club_id_2 , score output: SELECT name FROM club ORDER BY name DESC\n Now please use valid SQLite to answer the following questions: What are the region and population of Angola?",
    "Here is an examples including input and output:\n input: question: Find the captain rank that has no captain in Third-rate ship of the line class. serialized_schema:  | ship_1 | captain : captain_id , name , ship_id , age , class , rank | ship : ship_id , name , type , built_year , class , flag output: SELECT rank FROM captain EXCEPT SELECT rank FROM captain WHERE CLASS  =  'Third-rate ship of the line'\n Now please use valid SQLite to answer the following questions: What region does Angola belong to and what is its population?",
    "Here is an examples including input and output:\n input: question: What are the different locations of the school with the code BUS? serialized_schema:  | college_1 | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num output: SELECT count(DISTINCT dept_address) FROM department WHERE school_code  =  'BUS'\n Now please use valid SQLite to answer the following questions: What is the average expected life expectancy for countries in the region of Central Africa?",
    "Here is an examples including input and output:\n input: question: How many cinema do we have? serialized_schema:  | cinema | film : film_id , rank_in_series , number_in_season , title , directed_by , original_air_date , production_code | cinema : cinema_id , name , openning_year , capacity , location | schedule : cinema_id , film_id , date , show_times_per_day , price output: SELECT count(*) FROM cinema\n Now please use valid SQLite to answer the following questions: How long is the people’s average life expectancy in Central Africa?",
    "Here is an examples including input and output:\n input: question: which country did participated in the most number of Tournament competitions? serialized_schema:  | sports_competition | club : club_id , name , region , start_year | club_rank : rank , club_id , gold , silver , bronze , total | player : player_id , name , position , club_id , apps , tries , goals , points | competition : competition_id , year , competition_type , country | competition_result : competition_id , club_id_1 , club_id_2 , score output: SELECT country FROM competition WHERE competition_type  =  'Tournament' GROUP BY country ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: What is the name of country that has the shortest life expectancy in Asia?",
    "Here is an examples including input and output:\n input: question: Count the number of exhibitions that have had an attendnance of over 100 or a ticket prices under 10. serialized_schema:  | theme_gallery | artist : artist_id , name , country , year_join , age | exhibition : exhibition_id , year , theme , artist_id , ticket_price | exhibition_record : exhibition_id , date , attendance output: SELECT count(*) FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  >  100 OR T2.ticket_price  <  10\n Now please use valid SQLite to answer the following questions: Give the name of the country in Asia with the lowest life expectancy.",
    "Here is an examples including input and output:\n input: question: What is the date of the performance with the highest number of attendees? serialized_schema:  | performance_attendance | member : member_id , name , nationality , role | performance : performance_id , date , host , location , attendance | member_attendance : member_id , performance_id , num_of_pieces output: SELECT Date FROM performance ORDER BY Attendance DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: What is the total population and maximum GNP in Asia?",
    "Here is an examples including input and output:\n input: question: Find the names and number of works of all artists who have at least one English songs. serialized_schema:  | music_1 | genre : g_name , rating , most_popular_in | artist : artist_name , country , gender , preferred_genre | files : f_id , artist_name , file_size , duration , formats | song : song_name , artist_name , country , f_id , genre_is , rating , languages , releasedate , resolution output: SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"english\" GROUP BY T2.artist_name HAVING count(*)  >=  1\n Now please use valid SQLite to answer the following questions: How many people live in Asia, and what is the largest GNP among them?",
    "Here is an examples including input and output:\n input: question: Find the name of account that has the lowest total checking and saving balance. serialized_schema:  | small_bank_1 | accounts : custid , name | savings : custid , balance | checking : custid , balance output: SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance + T3.balance LIMIT 1\n Now please use valid SQLite to answer the following questions: What is the average life expectancy in African countries that are republics?",
    "Here is an examples including input and output:\n input: question: Find the county where produces the most number of wines with score higher than 90. serialized_schema:  | wine_1 | grapes : id , grape , color | appellations : no , appelation , county , state , area , isava | wine : no , grape , winery , appelation , state , name , year , price , score , cases , drink output: SELECT T1.County FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T2.Score  >  90 GROUP BY T1.County ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: Give the average life expectancy for countries in Africa which are republics?",
    "Here is an examples including input and output:\n input: question: What are the highest and lowest prices of products, grouped by and alphabetically ordered by product type? serialized_schema:  | department_store | addresses : address_id , address_details | staff : staff_id , staff_gender , staff_name | suppliers : supplier_id , supplier_name , supplier_phone | department_store_chain : dept_store_chain_id , dept_store_chain_name | customers : customer_id , payment_method_code , customer_code , customer_name , customer_address , customer_phone , customer_email | products : product_id , product_type_code , product_name , product_price | supplier_addresses : supplier_id , address_id , date_from , date_to | customer_addresses : customer_id , address_id , date_from , date_to | customer_orders : order_id , customer_id , order_status_code , order_date | department_stores : dept_store_id , dept_store_chain_id , store_name , store_address , store_phone , store_email | departments : department_id , dept_store_id , department_name | order_items : order_item_id , order_id , product_id | product_suppliers : product_id , supplier_id , date_supplied_from , date_supplied_to , total_amount_purchased , total_value_purchased | staff_department_assignments : staff_id , department_id , date_assigned_from , job_title_code , date_assigned_to output: SELECT max(product_price) ,  min(product_price) ,  product_type_code FROM products GROUP BY product_type_code ORDER BY product_type_code\n Now please use valid SQLite to answer the following questions: What is the total surface area of the continents Asia and Europe?",
    "Here is an examples including input and output:\n input: question: What are the department name and room for the course INTRODUCTION TO COMPUTER SCIENCE? serialized_schema:  | college_3 | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building | department : dno , division , dname , room , building , dphone | member_of : facid , dno , appt_type | course : cid , cname , credits , instructor , days , hours , dno | minor_in : stuid , dno | enrolled_in : stuid , cid , grade | gradeconversion : lettergrade , gradepoint output: SELECT T2.Dname ,  T2.Room FROM COURSE AS T1 JOIN DEPARTMENT AS T2 ON T1.DNO  =  T2.DNO WHERE T1.CName  =  \"INTRODUCTION TO COMPUTER SCIENCE\"\n Now please use valid SQLite to answer the following questions: Give the total surface area covered by countries in Asia or Europe.",
    "Here is an examples including input and output:\n input: question: What are the memories and carriers of phones? serialized_schema:  | phone_market | phone : name , phone_id , memory_in_g , carrier , price | market : market_id , district , num_of_employees , num_of_shops , ranking | phone_market : market_id , phone_id , num_of_stock output: SELECT Memory_in_G ,  Carrier FROM phone\n Now please use valid SQLite to answer the following questions: How many people live in Gelderland district?",
    "Here is an examples including input and output:\n input: question: What is the school code of the accounting department? serialized_schema:  | college_1 | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num output: SELECT school_code FROM department WHERE dept_name  =  \"Accounting\"\n Now please use valid SQLite to answer the following questions: What is the total population of Gelderland district?",
    "Here is an examples including input and output:\n input: question: Count the number of entrepreneurs. serialized_schema:  | entrepreneur | entrepreneur : entrepreneur_id , people_id , company , money_requested , investor | people : people_id , name , height , weight , date_of_birth output: SELECT count(*) FROM entrepreneur\n Now please use valid SQLite to answer the following questions: What is the average GNP and total population in all nations whose government is US territory?",
    "Here is an examples including input and output:\n input: question: What are the star rating descriptions of the hotels with price above 10000? serialized_schema:  | cre_Theme_park | ref_hotel_star_ratings : star_rating_code , star_rating_description | locations : location_id , location_name , address , other_details | ref_attraction_types : attraction_type_code , attraction_type_description | visitors : tourist_id , tourist_details | features : feature_id , feature_details | hotels : hotel_id , star_rating_code , pets_allowed_yn , price_range , other_hotel_details | tourist_attractions : tourist_attraction_id , attraction_type_code , location_id , how_to_get_there , name , description , opening_hours , other_details | street_markets : market_id , market_details | shops : shop_id , shop_details | museums : museum_id , museum_details | royal_family : royal_family_id , royal_family_details | theme_parks : theme_park_id , theme_park_details | visits : visit_id , tourist_attraction_id , tourist_id , visit_date , visit_details | photos : photo_id , tourist_attraction_id , name , description , filename , other_details | staff : staff_id , tourist_attraction_id , name , other_details | tourist_attraction_features : tourist_attraction_id , feature_id output: SELECT T2.star_rating_description FROM HOTELS AS T1 JOIN Ref_Hotel_Star_Ratings AS T2 ON T1.star_rating_code  =  T2.star_rating_code WHERE T1.price_range  >  10000\n Now please use valid SQLite to answer the following questions: Give the mean GNP and total population of nations which are considered US territory.",
    "Here is an examples including input and output:\n input: question: What are the prices of products that have never gotten a complaint? serialized_schema:  | customer_complaints | staff : staff_id , gender , first_name , last_name , email_address , phone_number | customers : customer_id , customer_type_code , address_line_1 , address_line_2 , town_city , state , email_address , phone_number | products : product_id , parent_product_id , product_category_code , date_product_first_available , date_product_discontinued , product_name , product_description , product_price | complaints : complaint_id , product_id , customer_id , complaint_outcome_code , complaint_status_code , complaint_type_code , date_complaint_raised , date_complaint_closed , staff_id output: SELECT product_price FROM products WHERE product_id NOT IN (SELECT product_id FROM complaints)\n Now please use valid SQLite to answer the following questions: How many unique languages are spoken in the world?",
    "Here is an examples including input and output:\n input: question: Return the hispanic percentage for cities in which the black percentage is greater than 10. serialized_schema:  | county_public_safety | county_public_safety : county_id , name , population , police_officers , residents_per_officer , case_burden , crime_rate , police_force , location | city : city_id , county_id , name , white , black , amerindian , asian , multiracial , hispanic output: SELECT Hispanic FROM city WHERE Black  >  10\n Now please use valid SQLite to answer the following questions: What is the number of distinct languages used around the world?",
    "Here is an examples including input and output:\n input: question: What are the different product names? What is the average product price for each of them? serialized_schema:  | cre_Drama_Workshop_Groups | ref_payment_methods : payment_method_code , payment_method_description | ref_service_types : service_type_code , parent_service_type_code , service_type_description | addresses : address_id , line_1 , line_2 , city_town , state_county , other_details | products : product_id , product_name , product_price , product_description , other_product_service_details | marketing_regions : marketing_region_code , marketing_region_name , marketing_region_descriptrion , other_details | clients : client_id , address_id , customer_email_address , customer_name , customer_phone , other_details | drama_workshop_groups : workshop_group_id , address_id , currency_code , marketing_region_code , store_name , store_phone , store_email_address , other_details | performers : performer_id , address_id , customer_name , customer_phone , customer_email_address , other_details | customers : customer_id , address_id , customer_name , customer_phone , customer_email_address , other_details | stores : store_id , address_id , marketing_region_code , store_name , store_phone , store_email_address , other_details | bookings : booking_id , customer_id , workshop_group_id , status_code , store_id , order_date , planned_delivery_date , actual_delivery_date , other_order_details | performers_in_bookings : order_id , performer_id | customer_orders : order_id , customer_id , store_id , order_date , planned_delivery_date , actual_delivery_date , other_order_details | order_items : order_item_id , order_id , product_id , order_quantity , other_item_details | invoices : invoice_id , order_id , payment_method_code , product_id , order_quantity , other_item_details , order_item_id | services : service_id , service_type_code , workshop_group_id , product_description , product_name , product_price , other_product_service_details | bookings_services : order_id , product_id | invoice_items : invoice_item_id , invoice_id , order_id , order_item_id , product_id , order_quantity , other_item_details output: SELECT Product_Name ,  avg(Product_Price) FROM PRODUCTS GROUP BY Product_Name\n Now please use valid SQLite to answer the following questions: How many type of governments are in Africa?",
    "Here is an examples including input and output:\n input: question: Show names of companies and that of employees in descending order of number of years working for that employee. serialized_schema:  | company_employee | people : people_id , age , name , nationality , graduation_college | company : company_id , name , headquarters , industry , sales_in_billion , profits_in_billion , assets_in_billion , market_value_in_billion | employment : company_id , people_id , year_working output: SELECT T3.Name ,  T2.Name FROM employment AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID JOIN company AS T3 ON T1.Company_ID  =  T3.Company_ID ORDER BY T1.Year_working\n Now please use valid SQLite to answer the following questions: How many different forms of governments are there in Africa?",
    "Here is an examples including input and output:\n input: question: Count the number of budgets in year 2001 or before whose budgeted amount is greater than 3000 serialized_schema:  | school_finance | school : school_id , school_name , location , mascot , enrollment , ihsaa_class , ihsaa_football_class , county | budget : school_id , year , budgeted , total_budget_percent_budgeted , invested , total_budget_percent_invested , budget_invested_percent | endowment : endowment_id , school_id , donator_name , amount output: SELECT count(*) FROM budget WHERE budgeted  >  3000 AND YEAR  <=  2001\n Now please use valid SQLite to answer the following questions: What is the total number of languages used in Aruba?",
    "Here is an examples including input and output:\n input: question: Show the name of storms which don't have affected region in record. serialized_schema:  | storm_record | storm : storm_id , name , dates_active , max_speed , damage_millions_usd , number_deaths | region : region_id , region_code , region_name | affected_region : region_id , storm_id , number_city_affected output: SELECT name FROM storm WHERE storm_id NOT IN (SELECT storm_id FROM affected_region)\n Now please use valid SQLite to answer the following questions: How many languages are spoken in Aruba?",
    "Here is an examples including input and output:\n input: question: Find the student first and last names and grade points of all enrollments. serialized_schema:  | college_3 | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building | department : dno , division , dname , room , building , dphone | member_of : facid , dno , appt_type | course : cid , cname , credits , instructor , days , hours , dno | minor_in : stuid , dno | enrolled_in : stuid , cid , grade | gradeconversion : lettergrade , gradepoint output: SELECT T3.Fname ,  T3.LName ,  T2.gradepoint FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID\n Now please use valid SQLite to answer the following questions: How many official languages does Afghanistan have?",
    "Here is an examples including input and output:\n input: question: Find the id and name of the most expensive base price room. serialized_schema:  | inn_1 | rooms : roomid , roomname , beds , bedtype , maxoccupancy , baseprice , decor | reservations : code , room , checkin , checkout , rate , lastname , firstname , adults , kids output: SELECT RoomId ,  roomName FROM Rooms ORDER BY basePrice DESC LIMIT 1;\n Now please use valid SQLite to answer the following questions: How many official languages are spoken in Afghanistan?",
    "Here is an examples including input and output:\n input: question: Show the theme for exhibitions with both records of an attendance below 100 and above 500. serialized_schema:  | theme_gallery | artist : artist_id , name , country , year_join , age | exhibition : exhibition_id , year , theme , artist_id , ticket_price | exhibition_record : exhibition_id , date , attendance output: SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  <  100 INTERSECT SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  >  500\n Now please use valid SQLite to answer the following questions: What is name of the country that speaks the largest number of languages?",
    "Here is an examples including input and output:\n input: question: Find the name of dorms that can accommodate more than 300 students. serialized_schema:  | dorm_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | dorm : dormid , dorm_name , student_capacity , gender | dorm_amenity : amenid , amenity_name | has_amenity : dormid , amenid | lives_in : stuid , dormid , room_number output: SELECT dorm_name FROM dorm WHERE student_capacity  >  300\n Now please use valid SQLite to answer the following questions: Give the name of the nation that uses the greatest amount of languages.",
    "Here is an examples including input and output:\n input: question: How many addresses are in the district of California? serialized_schema:  | sakila_1 | actor : actor_id , first_name , last_name , last_update | address : address_id , address , address2 , district , city_id , postal_code , phone , last_update | category : category_id , name , last_update | city : city_id , city , country_id , last_update | country : country_id , country , last_update | customer : customer_id , store_id , first_name , last_name , email , address_id , active , create_date , last_update | film : film_id , title , description , release_year , language_id , original_language_id , rental_duration , rental_rate , length , replacement_cost , rating , special_features , last_update | film_actor : actor_id , film_id , last_update | film_category : film_id , category_id , last_update | film_text : film_id , title , description | inventory : inventory_id , film_id , store_id , last_update | language : language_id , name , last_update | payment : payment_id , customer_id , staff_id , rental_id , amount , payment_date , last_update | rental : rental_id , rental_date , inventory_id , customer_id , return_date , staff_id , last_update | staff : staff_id , first_name , last_name , address_id , picture , email , store_id , active , username , password , last_update | store : store_id , manager_staff_id , address_id , last_update output: SELECT count(*) FROM address WHERE district  =  'California'\n Now please use valid SQLite to answer the following questions: Which continent has the most diverse languages?",
    "Here is an examples including input and output:\n input: question: Find the number of distinct room types available. serialized_schema:  | hospital_1 | physician : employeeid , name , position , ssn | department : departmentid , name , head | affiliated_with : physician , department , primaryaffiliation | procedures : code , name , cost | trained_in : physician , treatment , certificationdate , certificationexpires | patient : ssn , name , address , phone , insuranceid , pcp | nurse : employeeid , name , position , registered , ssn | appointment : appointmentid , patient , prepnurse , physician , start , end , examinationroom | medication : code , name , brand , description | prescribes : physician , patient , medication , date , appointment , dose | block : blockfloor , blockcode | room : roomnumber , roomtype , blockfloor , blockcode , unavailable | on_call : nurse , blockfloor , blockcode , oncallstart , oncallend | stay : stayid , patient , room , staystart , stayend | undergoes : patient , procedures , stay , dateundergoes , physician , assistingnurse output: SELECT count(DISTINCT roomtype) FROM room\n Now please use valid SQLite to answer the following questions: Which continent speaks the most languages?",
    "Here is an examples including input and output:\n input: question: How many different types of transactions are there? serialized_schema:  | customers_card_transactions | accounts : account_id , customer_id , account_name , other_account_details | customers : customer_id , customer_first_name , customer_last_name , customer_address , customer_phone , customer_email , other_customer_details | customers_cards : card_id , customer_id , card_type_code , card_number , date_valid_from , date_valid_to , other_card_details | financial_transactions : transaction_id , previous_transaction_id , account_id , card_id , transaction_type , transaction_date , transaction_amount , transaction_comment , other_transaction_details output: SELECT count(DISTINCT transaction_type) FROM Financial_Transactions\n Now please use valid SQLite to answer the following questions: How many countries speak both English and Dutch?",
    "Here is an examples including input and output:\n input: question: List the ids of the problems from the product \"voluptatem\" that are reported after 1995? serialized_schema:  | tracking_software_problems | problem_category_codes : problem_category_code , problem_category_description | problem_log : problem_log_id , assigned_to_staff_id , problem_id , problem_category_code , problem_status_code , log_entry_date , log_entry_description , log_entry_fix , other_log_details | problem_status_codes : problem_status_code , problem_status_description | product : product_id , product_name , product_details | staff : staff_id , staff_first_name , staff_last_name , other_staff_details | problems : problem_id , product_id , closure_authorised_by_staff_id , reported_by_staff_id , date_problem_reported , date_problem_closed , problem_description , other_problem_details output: SELECT T1.problem_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T2.product_name = \"voluptatem\" AND T1.date_problem_reported > \"1995\"\n Now please use valid SQLite to answer the following questions: What is the number of nations that use English and Dutch?",
    "Here is an examples including input and output:\n input: question: Which schools do not have any player? Give me the school locations. serialized_schema:  | school_player | school : school_id , school , location , enrollment , founded , denomination , boys_or_girls , day_or_boarding , year_entered_competition , school_colors | school_details : school_id , nickname , colors , league , class , division | school_performance : school_id , school_year , class_a , class_aa | player : player_id , player , team , age , position , school_id output: SELECT LOCATION FROM school WHERE School_ID NOT IN (SELECT School_ID FROM Player)\n Now please use valid SQLite to answer the following questions: What are the names of nations speak both English and French?",
    "Here is an examples including input and output:\n input: question: What is the most common mill type, and how many are there? serialized_schema:  | architecture | architect : id , name , nationality , gender | bridge : architect_id , id , name , location , length_meters , length_feet | mill : architect_id , id , location , name , type , built_year , notes output: SELECT TYPE ,  count(*) FROM mill GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: Give the names of nations that speak both English and French.",
    "Here is an examples including input and output:\n input: question: What are the amenities in alphabetical order that Anonymous Donor Hall has? serialized_schema:  | dorm_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | dorm : dormid , dorm_name , student_capacity , gender | dorm_amenity : amenid , amenity_name | has_amenity : dormid , amenid | lives_in : stuid , dormid , room_number output: SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T2.amenid  =  T1.amenid JOIN dorm AS T3 ON T2.dormid  =  T3.dormid WHERE T3.dorm_name  =  'Anonymous Donor Hall' ORDER BY T1.amenity_name\n Now please use valid SQLite to answer the following questions: What are the names of nations where both English and French are official languages?",
    "Here is an examples including input and output:\n input: question: What are the names of storms that did not affect any regions? serialized_schema:  | storm_record | storm : storm_id , name , dates_active , max_speed , damage_millions_usd , number_deaths | region : region_id , region_code , region_name | affected_region : region_id , storm_id , number_city_affected output: SELECT name FROM storm WHERE storm_id NOT IN (SELECT storm_id FROM affected_region)\n Now please use valid SQLite to answer the following questions: Give the names of countries with English and French as official languages.",
    "Here is an examples including input and output:\n input: question: What is the county that produces the most wines scoring higher than 90? serialized_schema:  | wine_1 | grapes : id , grape , color | appellations : no , appelation , county , state , area , isava | wine : no , grape , winery , appelation , state , name , year , price , score , cases , drink output: SELECT T1.County FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T2.Score  >  90 GROUP BY T1.County ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: What is the number of distinct continents where Chinese is spoken?",
    "Here is an examples including input and output:\n input: question: Which problems were reported by the staff named Dameon Frami or Jolie Weber? Give me the ids of the problems. serialized_schema:  | tracking_software_problems | problem_category_codes : problem_category_code , problem_category_description | problem_log : problem_log_id , assigned_to_staff_id , problem_id , problem_category_code , problem_status_code , log_entry_date , log_entry_description , log_entry_fix , other_log_details | problem_status_codes : problem_status_code , problem_status_description | product : product_id , product_name , product_details | staff : staff_id , staff_first_name , staff_last_name , other_staff_details | problems : problem_id , product_id , closure_authorised_by_staff_id , reported_by_staff_id , date_problem_reported , date_problem_closed , problem_description , other_problem_details output: SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Dameon\" AND T2.staff_last_name = \"Frami\" UNION SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Jolie\" AND T2.staff_last_name = \"Weber\"\n Now please use valid SQLite to answer the following questions: How many continents speak Chinese?",
    "Here is an examples including input and output:\n input: question: List in alphabetic order all different amenities. serialized_schema:  | dorm_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | dorm : dormid , dorm_name , student_capacity , gender | dorm_amenity : amenid , amenity_name | has_amenity : dormid , amenid | lives_in : stuid , dormid , room_number output: SELECT amenity_name FROM dorm_amenity ORDER BY amenity_name\n Now please use valid SQLite to answer the following questions: What are the regions that use English or Dutch?",
    "Here is an examples including input and output:\n input: question: Show the school name and type for schools without a school bus. serialized_schema:  | school_bus | driver : driver_id , name , party , home_city , age | school : school_id , grade , school , location , type | school_bus : school_id , driver_id , years_working , if_full_time output: SELECT school ,  TYPE FROM school WHERE school_id NOT IN (SELECT school_id FROM school_bus)\n Now please use valid SQLite to answer the following questions: Which regions speak Dutch or English?",
    "Here is an examples including input and output:\n input: question: Which problem id and log id are assigned to the staff named Rylan Homenick? serialized_schema:  | tracking_software_problems | problem_category_codes : problem_category_code , problem_category_description | problem_log : problem_log_id , assigned_to_staff_id , problem_id , problem_category_code , problem_status_code , log_entry_date , log_entry_description , log_entry_fix , other_log_details | problem_status_codes : problem_status_code , problem_status_description | product : product_id , product_name , product_details | staff : staff_id , staff_first_name , staff_last_name , other_staff_details | problems : problem_id , product_id , closure_authorised_by_staff_id , reported_by_staff_id , date_problem_reported , date_problem_closed , problem_description , other_problem_details output: SELECT DISTINCT T2.problem_id ,  T2.problem_log_id FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T1.staff_first_name = \"Rylan\" AND T1.staff_last_name = \"Homenick\"\n Now please use valid SQLite to answer the following questions: What are the countries where either English or Dutch is the official language ?",
    "Here is an examples including input and output:\n input: question: Show ids, customer ids, card type codes, card numbers for all cards. serialized_schema:  | customers_card_transactions | accounts : account_id , customer_id , account_name , other_account_details | customers : customer_id , customer_first_name , customer_last_name , customer_address , customer_phone , customer_email , other_customer_details | customers_cards : card_id , customer_id , card_type_code , card_number , date_valid_from , date_valid_to , other_card_details | financial_transactions : transaction_id , previous_transaction_id , account_id , card_id , transaction_type , transaction_date , transaction_amount , transaction_comment , other_transaction_details output: SELECT card_id ,  customer_id ,  card_type_code ,  card_number FROM Customers_cards\n Now please use valid SQLite to answer the following questions: Which countries have either English or Dutch as an official language?",
    "Here is an examples including input and output:\n input: question: what is the name of the country that participated in the most tournament competitions? serialized_schema:  | sports_competition | club : club_id , name , region , start_year | club_rank : rank , club_id , gold , silver , bronze , total | player : player_id , name , position , club_id , apps , tries , goals , points | competition : competition_id , year , competition_type , country | competition_result : competition_id , club_id_1 , club_id_2 , score output: SELECT country FROM competition WHERE competition_type  =  'Tournament' GROUP BY country ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: Which language is the most popular on the Asian continent?",
    "Here is an examples including input and output:\n input: question: How many milliseconds long is Fast As a Shark? serialized_schema:  | store_1 | artists : id , name | sqlite_sequence : name , seq | albums : id , title , artist_id | employees : id , last_name , first_name , title , reports_to , birth_date , hire_date , address , city , state , country , postal_code , phone , fax , email | customers : id , first_name , last_name , company , address , city , state , country , postal_code , phone , fax , email , support_rep_id | genres : id , name | invoices : id , customer_id , invoice_date , billing_address , billing_city , billing_state , billing_country , billing_postal_code , total | media_types : id , name | tracks : id , name , album_id , media_type_id , genre_id , composer , milliseconds , bytes , unit_price | invoice_lines : id , invoice_id , track_id , unit_price , quantity | playlists : id , name | playlist_tracks : playlist_id , track_id output: SELECT milliseconds FROM tracks WHERE name = \"Fast As a Shark\";\n Now please use valid SQLite to answer the following questions: What is the language that is used by the largest number of Asian nations?",
    "Here is an examples including input and output:\n input: question: Find the first names and last names of the authors whose institution affiliation is \"Google\". serialized_schema:  | icfp_1 | inst : instid , name , country | authors : authid , lname , fname | papers : paperid , title | authorship : authid , instid , paperid , authorder output: SELECT DISTINCT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Google\"\n Now please use valid SQLite to answer the following questions: Which languages are spoken by only one country in republic governments?",
    "Here is an examples including input and output:\n input: question: Which artist has the most albums? serialized_schema:  | chinook_1 | album : albumid , title , artistid | artist : artistid , name | customer : customerid , firstname , lastname , company , address , city , state , country , postalcode , phone , fax , email , supportrepid | employee : employeeid , lastname , firstname , title , reportsto , birthdate , hiredate , address , city , state , country , postalcode , phone , fax , email | genre : genreid , name | invoice : invoiceid , customerid , invoicedate , billingaddress , billingcity , billingstate , billingcountry , billingpostalcode , total | invoiceline : invoicelineid , invoiceid , trackid , unitprice , quantity | mediatype : mediatypeid , name | playlist : playlistid , name | playlisttrack : playlistid , trackid | track : trackid , name , albumid , mediatypeid , genreid , composer , milliseconds , bytes , unitprice output: SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId GROUP BY T2.Name ORDER BY COUNT(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: What languages are only used by a single country with a republic government?",
    "Here is an examples including input and output:\n input: question: Find the maximum and minimum sales of the companies that are not in the \"Banking\" industry. serialized_schema:  | company_office | buildings : id , name , city , height , stories , status | companies : id , name , headquarters , industry , sales_billion , profits_billion , assets_billion , market_value_billion | office_locations : building_id , company_id , move_in_year output: SELECT max(Sales_billion) ,  min(Sales_billion) FROM Companies WHERE Industry != \"Banking\"\n Now please use valid SQLite to answer the following questions: Find the city with the largest population that uses English.",
    "Here is an examples including input and output:\n input: question: Give the average quantity of stocks. serialized_schema:  | device | device : device_id , device , carrier , package_version , applications , software_platform | shop : shop_id , shop_name , location , open_date , open_year | stock : shop_id , device_id , quantity output: SELECT avg(Quantity) FROM stock\n Now please use valid SQLite to answer the following questions: What is the most populace city that speaks English?",
    "Here is an examples including input and output:\n input: question: How many assessment notes are there in total? serialized_schema:  | behavior_monitoring | ref_address_types : address_type_code , address_type_description | ref_detention_type : detention_type_code , detention_type_description | ref_incident_type : incident_type_code , incident_type_description | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | students : student_id , address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , date_first_rental , date_left_university , other_student_details | teachers : teacher_id , address_id , first_name , middle_name , last_name , gender , cell_mobile_number , email_address , other_details | assessment_notes : notes_id , student_id , teacher_id , date_of_notes , text_of_notes , other_details | behavior_incident : incident_id , incident_type_code , student_id , date_incident_start , date_incident_end , incident_summary , recommendations , other_details | detention : detention_id , detention_type_code , teacher_id , datetime_detention_start , datetime_detention_end , detention_summary , other_details | student_addresses : student_id , address_id , date_address_from , date_address_to , monthly_rental , other_details | students_in_detention : student_id , detention_id , incident_id output: SELECT count(*) FROM ASSESSMENT_NOTES\n Now please use valid SQLite to answer the following questions: Find the name, population and expected life length of asian country with the largest area?",
    "Here is an examples including input and output:\n input: question: Find the total balance across checking accounts. serialized_schema:  | small_bank_1 | accounts : custid , name | savings : custid , balance | checking : custid , balance output: SELECT sum(balance) FROM checking\n Now please use valid SQLite to answer the following questions: What are the name, population, and life expectancy of the largest Asian country by land?",
    "Here is an examples including input and output:\n input: question: Return the names of entrepreneurs. serialized_schema:  | entrepreneur | entrepreneur : entrepreneur_id , people_id , company , money_requested , investor | people : people_id , name , height , weight , date_of_birth output: SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID\n Now please use valid SQLite to answer the following questions: What is average life expectancy in the countries where English is not the official language?",
    "Here is an examples including input and output:\n input: question: How much money did Lucas Mancini spend? serialized_schema:  | store_1 | artists : id , name | sqlite_sequence : name , seq | albums : id , title , artist_id | employees : id , last_name , first_name , title , reports_to , birth_date , hire_date , address , city , state , country , postal_code , phone , fax , email | customers : id , first_name , last_name , company , address , city , state , country , postal_code , phone , fax , email , support_rep_id | genres : id , name | invoices : id , customer_id , invoice_date , billing_address , billing_city , billing_state , billing_country , billing_postal_code , total | media_types : id , name | tracks : id , name , album_id , media_type_id , genre_id , composer , milliseconds , bytes , unit_price | invoice_lines : id , invoice_id , track_id , unit_price , quantity | playlists : id , name | playlist_tracks : playlist_id , track_id output: SELECT sum(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = \"Lucas\" AND T1.last_name = \"Mancini\";\n Now please use valid SQLite to answer the following questions: Give the mean life expectancy of countries in which English is not the official language.",
    "Here is an examples including input and output:\n input: question: What are the student IDs for everybody who worked for more than 10 hours per week on all sports? serialized_schema:  | game_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | video_games : gameid , gname , gtype | plays_games : stuid , gameid , hours_played | sportsinfo : stuid , sportname , hoursperweek , gamesplayed , onscholarship output: SELECT StuID FROM Sportsinfo GROUP BY StuID HAVING sum(hoursperweek)  >  10\n Now please use valid SQLite to answer the following questions: What is the total number of people living in the nations that do not use English?",
    "Here is an examples including input and output:\n input: question: Find the id of routes whose source and destination airports are in the United States. serialized_schema:  | flight_4 | routes : rid , dst_apid , dst_ap , src_apid , src_ap , alid , airline , codeshare | airports : apid , name , city , country , x , y , elevation , iata , icao | airlines : alid , name , iata , icao , callsign , country , active output: SELECT rid FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'United States') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States')\n Now please use valid SQLite to answer the following questions: How many people live in countries that do not speak English?",
    "Here is an examples including input and output:\n input: question: How many adults stay in the room CONRAD SELBIG checked in on Oct 23, 2010? serialized_schema:  | inn_1 | rooms : roomid , roomname , beds , bedtype , maxoccupancy , baseprice , decor | reservations : code , room , checkin , checkout , rate , lastname , firstname , adults , kids output: SELECT Adults FROM Reservations WHERE CheckIn  =  \"2010-10-23\" AND FirstName  =  \"CONRAD\" AND LastName  =  \"SELBIG\";\n Now please use valid SQLite to answer the following questions: What is the official language spoken in the country whose head of state is Beatrix?",
    "Here is an examples including input and output:\n input: question: How many kinds of enzymes are there? serialized_schema:  | medicine_enzyme_interaction | medicine : id , name , trade_name , fda_approved | enzyme : id , name , location , product , chromosome , omim , porphyria | medicine_enzyme_interaction : enzyme_id , medicine_id , interaction_type output: SELECT count(*) FROM enzyme\n Now please use valid SQLite to answer the following questions: What is the official language used in the country the name of whose head of state is Beatrix.",
    "Here is an examples including input and output:\n input: question: How many airports' names have the word Interanation in them? serialized_schema:  | flight_4 | routes : rid , dst_apid , dst_ap , src_apid , src_ap , alid , airline , codeshare | airports : apid , name , city , country , x , y , elevation , iata , icao | airlines : alid , name , iata , icao , callsign , country , active output: SELECT count(*) FROM airports WHERE name LIKE '%International%'\n Now please use valid SQLite to answer the following questions: What is the total number of unique official languages spoken in the countries that are founded before 1930?",
    "Here is an examples including input and output:\n input: question: What is the unit of measurement of product named \"cumin\"? serialized_schema:  | products_gen_characteristics | ref_characteristic_types : characteristic_type_code , characteristic_type_description | ref_colors : color_code , color_description | ref_product_categories : product_category_code , product_category_description , unit_of_measure | characteristics : characteristic_id , characteristic_type_code , characteristic_data_type , characteristic_name , other_characteristic_details | products : product_id , color_code , product_category_code , product_name , typical_buying_price , typical_selling_price , product_description , other_product_details | product_characteristics : product_id , characteristic_id , product_characteristic_value output: SELECT t2.unit_of_measure FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code WHERE t1.product_name  =  \"cumin\"\n Now please use valid SQLite to answer the following questions: For the countries founded before 1930, what is the total number of distinct official languages?",
    "Here is an examples including input and output:\n input: question: Find the id of the customers who have order status both \"On Road\" and \"Shipped\". serialized_schema:  | tracking_orders | customers : customer_id , customer_name , customer_details | invoices : invoice_number , invoice_date , invoice_details | orders : order_id , customer_id , order_status , date_order_placed , order_details | products : product_id , product_name , product_details | order_items : order_item_id , product_id , order_id , order_item_status , order_item_details | shipments : shipment_id , order_id , invoice_number , shipment_tracking_number , shipment_date , other_shipment_details | shipment_items : shipment_id , order_item_id output: SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"On Road\" INTERSECT SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"Shipped\"\n Now please use valid SQLite to answer the following questions: What are the countries that have greater surface area than any country in Europe?",
    "Here is an examples including input and output:\n input: question: When did the first payment happen? serialized_schema:  | sakila_1 | actor : actor_id , first_name , last_name , last_update | address : address_id , address , address2 , district , city_id , postal_code , phone , last_update | category : category_id , name , last_update | city : city_id , city , country_id , last_update | country : country_id , country , last_update | customer : customer_id , store_id , first_name , last_name , email , address_id , active , create_date , last_update | film : film_id , title , description , release_year , language_id , original_language_id , rental_duration , rental_rate , length , replacement_cost , rating , special_features , last_update | film_actor : actor_id , film_id , last_update | film_category : film_id , category_id , last_update | film_text : film_id , title , description | inventory : inventory_id , film_id , store_id , last_update | language : language_id , name , last_update | payment : payment_id , customer_id , staff_id , rental_id , amount , payment_date , last_update | rental : rental_id , rental_date , inventory_id , customer_id , return_date , staff_id , last_update | staff : staff_id , first_name , last_name , address_id , picture , email , store_id , active , username , password , last_update | store : store_id , manager_staff_id , address_id , last_update output: SELECT payment_date FROM payment ORDER BY payment_date ASC LIMIT 1\n Now please use valid SQLite to answer the following questions: Which countries have greater area than that of any country in Europe?",
    "Here is an examples including input and output:\n input: question: Show the ages of gymnasts in descending order of total points. serialized_schema:  | gymnast | gymnast : gymnast_id , floor_exercise_points , pommel_horse_points , rings_points , vault_points , parallel_bars_points , horizontal_bar_points , total_points | people : people_id , name , age , height , hometown output: SELECT T2.Age FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T1.Total_Points DESC\n Now please use valid SQLite to answer the following questions: What are the African countries that have a  population less than any country in Asia?",
    "Here is an examples including input and output:\n input: question: What are the themes of farm competitions sorted by year in ascending order? serialized_schema:  | farm | city : city_id , official_name , status , area_km_2 , population , census_ranking | farm : farm_id , year , total_horses , working_horses , total_cattle , oxen , bulls , cows , pigs , sheep_and_goats | farm_competition : competition_id , year , theme , host_city_id , hosts | competition_record : competition_id , farm_id , rank output: SELECT Theme FROM farm_competition ORDER BY YEAR ASC\n Now please use valid SQLite to answer the following questions: Which African countries have a smaller population than that of any country in Asia?",
    "Here is an examples including input and output:\n input: question: What is the party that has the largest number of representatives? serialized_schema:  | election_representative | election : election_id , representative_id , date , votes , vote_percent , seats , place | representative : representative_id , name , state , party , lifespan output: SELECT Party ,  COUNT(*) FROM representative GROUP BY Party ORDER BY COUNT(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: Which Asian countries have a population that is larger than any country in Africa?",
    "Here is an examples including input and output:\n input: question: What is the savings balance of the account belonging to the customer with the highest checking balance? serialized_schema:  | small_bank_1 | accounts : custid , name | savings : custid , balance | checking : custid , balance output: SELECT T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: What are the Asian countries which have a population larger than that of any country in Africa?",
    "Here is an examples including input and output:\n input: question: List the hardware model name and company name for all the phones that were launched in year 2002 or have RAM size greater than 32. serialized_schema:  | phone_1 | chip_model : model_name , launch_year , ram_mib , rom_mib , slots , wifi , bluetooth | screen_mode : graphics_mode , char_cells , pixels , hardware_colours , used_kb , map , type | phone : company_name , hardware_model_name , accreditation_type , accreditation_level , date , chip_model , screen_mode output: SELECT T2.Hardware_Model_name ,  T2.Company_name FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model WHERE T1.Launch_year = 2002 OR T1.RAM_MiB  >  32;\n Now please use valid SQLite to answer the following questions: What are the country codes for countries that do not speak English?",
    "Here is an examples including input and output:\n input: question: Show all locations with only 1 station. serialized_schema:  | train_station | station : station_id , name , annual_entry_exit , annual_interchanges , total_passengers , location , main_services , number_of_platforms | train : train_id , name , time , service | train_station : train_id , station_id output: SELECT LOCATION FROM station GROUP BY LOCATION HAVING count(*)  =  1\n Now please use valid SQLite to answer the following questions: Return the country codes for countries that do not speak English.",
    "Here is an examples including input and output:\n input: question: Show all majors. serialized_schema:  | allergy_1 | allergy_type : allergy , allergytype | has_allergy : stuid , allergy | student : stuid , lname , fname , age , sex , major , advisor , city_code output: SELECT DISTINCT Major FROM Student\n Now please use valid SQLite to answer the following questions: What are the country codes of countries where people use languages other than English?",
    "Here is an examples including input and output:\n input: question: What are the card numbers of members from Kentucky? serialized_schema:  | shop_membership | member : member_id , card_number , name , hometown , level | branch : branch_id , name , open_year , address_road , city , membership_amount | membership_register_branch : member_id , branch_id , register_year | purchase : member_id , branch_id , year , total_pounds output: SELECT card_number FROM member WHERE Hometown LIKE \"%Kentucky%\"\n Now please use valid SQLite to answer the following questions: Give the country codes for countries in which people speak langauges that are not English.",
    "Here is an examples including input and output:\n input: question: List the name of the aircraft that has been named winning aircraft the most number of times. serialized_schema:  | aircraft | pilot : pilot_id , name , age | aircraft : aircraft_id , aircraft , description , max_gross_weight , total_disk_area , max_disk_loading | match : round , location , country , date , fastest_qualifying , winning_pilot , winning_aircraft | airport : airport_id , airport_name , total_passengers , %_change_2007 , international_passengers , domestic_passengers , transit_passengers , aircraft_movements , freight_metric_tonnes | airport_aircraft : id , airport_id , aircraft_id output: SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft ORDER BY COUNT(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: What are the codes of the countries that do not speak English and whose government forms are not Republic?",
    "Here is an examples including input and output:\n input: question: Find the phone number of all the customers and staff. serialized_schema:  | customer_complaints | staff : staff_id , gender , first_name , last_name , email_address , phone_number | customers : customer_id , customer_type_code , address_line_1 , address_line_2 , town_city , state , email_address , phone_number | products : product_id , parent_product_id , product_category_code , date_product_first_available , date_product_discontinued , product_name , product_description , product_price | complaints : complaint_id , product_id , customer_id , complaint_outcome_code , complaint_status_code , complaint_type_code , date_complaint_raised , date_complaint_closed , staff_id output: SELECT phone_number FROM customers UNION SELECT phone_number FROM staff\n Now please use valid SQLite to answer the following questions: Return the codes of countries that do not speak English and do not have Republics for governments.",
    "Here is an examples including input and output:\n input: question: List all the customers in increasing order of IDs. serialized_schema:  | insurance_fnol | customers : customer_id , customer_name | services : service_id , service_name | available_policies : policy_id , policy_type_code , customer_phone | customers_policies : customer_id , policy_id , date_opened , date_closed | first_notification_of_loss : fnol_id , customer_id , policy_id , service_id | claims : claim_id , fnol_id , effective_date | settlements : settlement_id , claim_id , effective_date , settlement_amount output: SELECT customer_id ,  customer_name FROM customers ORDER BY customer_id ASC\n Now please use valid SQLite to answer the following questions: Which cities are in European countries where English is not the official language?",
    "Here is an examples including input and output:\n input: question: List the hardware model name for the phones that were produced by \"Nokia Corporation\" or whose screen mode type is \"Graphics.\" serialized_schema:  | phone_1 | chip_model : model_name , launch_year , ram_mib , rom_mib , slots , wifi , bluetooth | screen_mode : graphics_mode , char_cells , pixels , hardware_colours , used_kb , map , type | phone : company_name , hardware_model_name , accreditation_type , accreditation_level , date , chip_model , screen_mode output: SELECT DISTINCT T2.Hardware_Model_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.Type  =  \"Graphics\" OR t2.Company_name  =  \"Nokia Corporation\"\n Now please use valid SQLite to answer the following questions: What are the names of cities in Europe for which English is not the official language?",
    "Here is an examples including input and output:\n input: question: What is the average song duration for the songs that are in mp3 format and whose resolution below 800? serialized_schema:  | music_1 | genre : g_name , rating , most_popular_in | artist : artist_name , country , gender , preferred_genre | files : f_id , artist_name , file_size , duration , formats | song : song_name , artist_name , country , f_id , genre_is , rating , languages , releasedate , resolution output: SELECT avg(T1.duration) FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.formats  =  \"mp3\" AND T2.resolution   <  800\n Now please use valid SQLite to answer the following questions: Which unique cities are in Asian countries where Chinese is the official language ?",
    "Here is an examples including input and output:\n input: question: Find the name and credit score of the customers who have some loans. serialized_schema:  | loan_1 | bank : branch_id , bname , no_of_customers , city , state | customer : cust_id , cust_name , acc_type , acc_bal , no_of_loans , credit_score , branch_id , state | loan : loan_id , loan_type , cust_id , branch_id , amount output: SELECT DISTINCT T1.cust_name ,  T1.credit_score FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id\n Now please use valid SQLite to answer the following questions: Return the different names of cities that are in Asia and for which Chinese is the official language.",
    "Here is an examples including input and output:\n input: question: What is the type of interaction for the enzyme named 'ALA synthase' and the medicine named 'Aripiprazole'? serialized_schema:  | medicine_enzyme_interaction | medicine : id , name , trade_name , fda_approved | enzyme : id , name , location , product , chromosome , omim , porphyria | medicine_enzyme_interaction : enzyme_id , medicine_id , interaction_type output: SELECT T1.interaction_type FROM medicine_enzyme_interaction AS T1 JOIN medicine AS T2 ON T1.medicine_id  =  T2.id JOIN enzyme AS T3 ON T1.enzyme_id  =  T3.id WHERE T3.name  =  'ALA synthase' AND T2.name  =  'Aripiprazole'\n Now please use valid SQLite to answer the following questions: What are the name, independence year, and surface area of the country with the smallest population?",
    "Here is an examples including input and output:\n input: question: For each fourth-grade classroom, show the classroom number and the total number of students using it. serialized_schema:  | student_1 | list : lastname , firstname , grade , classroom | teachers : lastname , firstname , classroom output: SELECT classroom ,  count(*) FROM list WHERE grade  =  \"4\" GROUP BY classroom\n Now please use valid SQLite to answer the following questions: Give the name, year of independence, and surface area of the country that has the lowest population.",
    "Here is an examples including input and output:\n input: question: What are the rank, first name, and last name of the faculty members? serialized_schema:  | activity_1 | activity : actid , activity_name | participates_in : stuid , actid | faculty_participates_in : facid , actid | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building output: SELECT rank ,  Fname ,  Lname FROM Faculty\n Now please use valid SQLite to answer the following questions: What are the population, name and leader of the country with the largest area?",
    "Here is an examples including input and output:\n input: question: List name and damage for all storms in a descending order of max speed. serialized_schema:  | storm_record | storm : storm_id , name , dates_active , max_speed , damage_millions_usd , number_deaths | region : region_id , region_code , region_name | affected_region : region_id , storm_id , number_city_affected output: SELECT name ,  damage_millions_USD FROM storm ORDER BY max_speed DESC\n Now please use valid SQLite to answer the following questions: Give the name, population, and head of state for the country that has the largest area.",
    "Here is an examples including input and output:\n input: question: What are the names of rooms that have either king or queen bed? serialized_schema:  | inn_1 | rooms : roomid , roomname , beds , bedtype , maxoccupancy , baseprice , decor | reservations : code , room , checkin , checkout , rate , lastname , firstname , adults , kids output: SELECT roomName FROM Rooms WHERE bedType  =  \"King\" OR bedType  =  \"Queen\";\n Now please use valid SQLite to answer the following questions: Return the country name and the numbers of languages spoken for each country that speaks at least 3 languages.",
    "Here is an examples including input and output:\n input: question: Show the people that have been comptroller the most times and the corresponding number of times. serialized_schema:  | election | county : county_id , county_name , population , zip_code | party : party_id , year , party , governor , lieutenant_governor , comptroller , attorney_general , us_senate | election : election_id , counties_represented , district , delegate , party , first_elected , committee output: SELECT Comptroller ,  COUNT(*) FROM party GROUP BY Comptroller ORDER BY COUNT(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: What are the names of countries that speak more than 2 languages, as well as how many languages they speak?",
    "Here is an examples including input and output:\n input: question: Find the number of items without any review. serialized_schema:  | epinions_1 | item : i_id , title | review : a_id , u_id , i_id , rating , rank | useracct : u_id , name | trust : source_u_id , target_u_id , trust output: SELECT count(*) FROM item WHERE i_id NOT IN (SELECT i_id FROM review)\n Now please use valid SQLite to answer the following questions: Find the number of cities in each district whose population is greater than the average population of cities?",
    "Here is an examples including input and output:\n input: question: List the total points of gymnasts in descending order of floor exercise points. serialized_schema:  | gymnast | gymnast : gymnast_id , floor_exercise_points , pommel_horse_points , rings_points , vault_points , parallel_bars_points , horizontal_bar_points , total_points | people : people_id , name , age , height , hometown output: SELECT Total_Points FROM gymnast ORDER BY Floor_Exercise_Points DESC\n Now please use valid SQLite to answer the following questions: How many cities in each district have a population that is above the average population across all cities?",
    "Here is an examples including input and output:\n input: question: How many different colleges do attend the tryout test? serialized_schema:  | soccer_2 | college : cname , state , enr | player : pid , pname , ycard , hs | tryout : pid , cname , ppos , decision output: SELECT count(DISTINCT cName) FROM tryout\n Now please use valid SQLite to answer the following questions: Find the government form name and total population for each government form whose average life expectancy is longer than 72.",
    "Here is an examples including input and output:\n input: question: Give the ids of the three products purchased in the largest amounts. serialized_schema:  | department_store | addresses : address_id , address_details | staff : staff_id , staff_gender , staff_name | suppliers : supplier_id , supplier_name , supplier_phone | department_store_chain : dept_store_chain_id , dept_store_chain_name | customers : customer_id , payment_method_code , customer_code , customer_name , customer_address , customer_phone , customer_email | products : product_id , product_type_code , product_name , product_price | supplier_addresses : supplier_id , address_id , date_from , date_to | customer_addresses : customer_id , address_id , date_from , date_to | customer_orders : order_id , customer_id , order_status_code , order_date | department_stores : dept_store_id , dept_store_chain_id , store_name , store_address , store_phone , store_email | departments : department_id , dept_store_id , department_name | order_items : order_item_id , order_id , product_id | product_suppliers : product_id , supplier_id , date_supplied_from , date_supplied_to , total_amount_purchased , total_value_purchased | staff_department_assignments : staff_id , department_id , date_assigned_from , job_title_code , date_assigned_to output: SELECT product_id FROM product_suppliers ORDER BY total_amount_purchased DESC LIMIT 3\n Now please use valid SQLite to answer the following questions: What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?",
    "Here is an examples including input and output:\n input: question: What is the name of the movie produced after 2000 and directed by James Cameron? serialized_schema:  | movie_1 | movie : mid , title , year , director | reviewer : rid , name | rating : rid , mid , stars , ratingdate output: SELECT title FROM Movie WHERE director = 'James Cameron' AND YEAR  >  2000\n Now please use valid SQLite to answer the following questions: Find the average life expectancy and total population for each continent where the average life expectancy is shorter than 72?",
    "Here is an examples including input and output:\n input: question: Return the famous titles of the artist called \"Triumfall\". serialized_schema:  | music_4 | artist : artist_id , artist , age , famous_title , famous_release_date | volume : volume_id , volume_issue , issue_date , weeks_on_top , song , artist_id | music_festival : id , music_festival , date_of_ceremony , category , volume , result output: SELECT Famous_Title FROM artist WHERE Artist  =  \"Triumfall\"\n Now please use valid SQLite to answer the following questions: What are the different continents and the total popuation and average life expectancy corresponding to each, for continents that have an average life expectancy less than 72?",
    "Here is an examples including input and output:\n input: question: List the names of all courses ordered by their titles and credits. serialized_schema:  | college_2 | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id output: SELECT title FROM course ORDER BY title ,  credits\n Now please use valid SQLite to answer the following questions: What are the names and areas of countries with the top 5 largest area?",
    "Here is an examples including input and output:\n input: question: Which students not enrolled in any course? Find their personal names. serialized_schema:  | e_learning | course_authors_and_tutors : author_id , author_tutor_atb , login_name , password , personal_name , middle_name , family_name , gender_mf , address_line_1 | students : student_id , date_of_registration , date_of_latest_logon , login_name , password , personal_name , middle_name , family_name | subjects : subject_id , subject_name | courses : course_id , author_id , subject_id , course_name , course_description | student_course_enrolment : registration_id , student_id , course_id , date_of_enrolment , date_of_completion | student_tests_taken : registration_id , date_test_taken , test_result output: SELECT personal_name FROM Students EXCEPT SELECT T1.personal_name FROM Students AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.student_id  =  T2.student_id\n Now please use valid SQLite to answer the following questions: Return the names and surface areas of the 5 largest countries.",
    "Here is an examples including input and output:\n input: question: Find names and ids of all documents with document type code BK. serialized_schema:  | cre_Docs_and_Epenses | ref_document_types : document_type_code , document_type_name , document_type_description | ref_budget_codes : budget_type_code , budget_type_description | projects : project_id , project_details | documents : document_id , document_type_code , project_id , document_date , document_name , document_description , other_details | statements : statement_id , statement_details | documents_with_expenses : document_id , budget_type_code , document_details | accounts : account_id , statement_id , account_details output: SELECT document_name ,  document_id FROM Documents WHERE document_type_code  =  \"BK\"\n Now please use valid SQLite to answer the following questions: What are names of countries with the top 3 largest population?",
    "Here is an examples including input and output:\n input: question: Return the address content for the customer whose name is \"Maudie Kertzmann\". serialized_schema:  | customers_and_addresses | addresses : address_id , address_content , city , zip_postcode , state_province_county , country , other_address_details | products : product_id , product_details | customers : customer_id , payment_method , customer_name , date_became_customer , other_customer_details | customer_addresses : customer_id , address_id , date_address_from , address_type , date_address_to | customer_contact_channels : customer_id , channel_code , active_from_date , active_to_date , contact_number | customer_orders : order_id , customer_id , order_status , order_date , order_details | order_items : order_id , product_id , order_quantity output: SELECT t3.address_content FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t1.customer_name  =  \"Maudie Kertzmann\"\n Now please use valid SQLite to answer the following questions: Return the names of the 3 most populated countries.",
    "Here is an examples including input and output:\n input: question: What are the names of all the players who received a yes during tryouts, and also what are the names of their colleges? serialized_schema:  | soccer_2 | college : cname , state , enr | player : pid , pname , ycard , hs | tryout : pid , cname , ppos , decision output: SELECT T1.pName ,  T2.cName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'\n Now please use valid SQLite to answer the following questions: What are the names of the nations with the 3 lowest populations?",
    "Here is an examples including input and output:\n input: question: Find the name of the train whose route runs through greatest number of stations. serialized_schema:  | station_weather | train : id , train_number , name , origin , destination , time , interval | station : id , network_name , services , local_authority | route : train_id , station_id | weekly_weather : station_id , day_of_week , high_temperature , low_temperature , precipitation , wind_speed_mph output: SELECT t1.name FROM train AS t1 JOIN route AS t2 ON t1.id  =  t2.train_id GROUP BY t2.train_id ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: Return the names of the 3 countries with the fewest people.",
    "Here is an examples including input and output:\n input: question: How many documents have the status code done? serialized_schema:  | cre_Doc_Control_Systems | ref_document_types : document_type_code , document_type_description | roles : role_code , role_description | addresses : address_id , address_details | ref_document_status : document_status_code , document_status_description | ref_shipping_agents : shipping_agent_code , shipping_agent_name , shipping_agent_description | documents : document_id , document_status_code , document_type_code , shipping_agent_code , receipt_date , receipt_number , other_details | employees : employee_id , role_code , employee_name , other_details | document_drafts : document_id , draft_number , draft_details | draft_copies : document_id , draft_number , copy_number | circulation_history : document_id , draft_number , copy_number , employee_id | documents_mailed : document_id , mailed_to_address_id , mailing_date output: SELECT count(*) FROM Documents WHERE document_status_code = \"done\";\n Now please use valid SQLite to answer the following questions: how many countries are in Asia?",
    "Here is an examples including input and output:\n input: question: What are the names of races held between 2009 and 2011? serialized_schema:  | formula_1 | circuits : circuitid , circuitref , name , location , country , lat , lng , alt , url | races : raceid , year , round , circuitid , name , date , time , url | drivers : driverid , driverref , number , code , forename , surname , dob , nationality , url | status : statusid , status | seasons : year , url | constructors : constructorid , constructorref , name , nationality , url | constructorstandings : constructorstandingsid , raceid , constructorid , points , position , positiontext , wins | results : resultid , raceid , driverid , constructorid , number , grid , position , positiontext , positionorder , points , laps , time , milliseconds , fastestlap , rank , fastestlaptime , fastestlapspeed , statusid | driverstandings : driverstandingsid , raceid , driverid , points , position , positiontext , wins | constructorresults : constructorresultsid , raceid , constructorid , points , status | qualifying : qualifyid , raceid , driverid , constructorid , number , position , q1 , q2 , q3 | pitstops : raceid , driverid , stop , lap , time , duration , milliseconds | laptimes : raceid , driverid , lap , position , time , milliseconds output: SELECT name FROM races WHERE YEAR BETWEEN 2009 AND 2011\n Now please use valid SQLite to answer the following questions: Count the number of countries in Asia.",
    "Here is an examples including input and output:\n input: question: What is the total number of all football games played by scholarship students? serialized_schema:  | game_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | video_games : gameid , gname , gtype | plays_games : stuid , gameid , hours_played | sportsinfo : stuid , sportname , hoursperweek , gamesplayed , onscholarship output: SELECT sum(gamesplayed) FROM Sportsinfo WHERE sportname  =  \"Football\" AND onscholarship  =  'Y'\n Now please use valid SQLite to answer the following questions: What are the names of the countries that are in the continent of Europe and have a population of 80000?",
    "Here is an examples including input and output:\n input: question: How many distinct hometowns did these people have? serialized_schema:  | gymnast | gymnast : gymnast_id , floor_exercise_points , pommel_horse_points , rings_points , vault_points , parallel_bars_points , horizontal_bar_points , total_points | people : people_id , name , age , height , hometown output: SELECT count(DISTINCT Hometown) FROM people\n Now please use valid SQLite to answer the following questions: Give the names of countries that are in Europe and have a population equal to 80000.",
    "Here is an examples including input and output:\n input: question: How many routes go from the United States to Canada? serialized_schema:  | flight_4 | routes : rid , dst_apid , dst_ap , src_apid , src_ap , alid , airline , codeshare | airports : apid , name , city , country , x , y , elevation , iata , icao | airlines : alid , name , iata , icao , callsign , country , active output: SELECT count(*) FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'Canada') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States')\n Now please use valid SQLite to answer the following questions: What is the total population and average area of countries in the continent of North America whose area is bigger than 3000 ?",
    "Here is an examples including input and output:\n input: question: How many credits is the course that the student with the last name Smithson took, and what is its description? serialized_schema:  | college_1 | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num output: SELECT T4.crs_description ,  T4.crs_credit FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T3.stu_num  =  T2.stu_num JOIN course AS T4 ON T4.crs_code  =  T1.crs_code WHERE T3.stu_lname  =  'Smithson'\n Now please use valid SQLite to answer the following questions: Give the total population and average surface area corresponding to countries in North America that have a surface area greater than 3000 .",
    "Here is an examples including input and output:\n input: question: Find the number of students who participate in the tryout for each college ordered by descending count. serialized_schema:  | soccer_2 | college : cname , state , enr | player : pid , pname , ycard , hs | tryout : pid , cname , ppos , decision output: SELECT count(*) ,  cName FROM tryout GROUP BY cName ORDER BY count(*) DESC\n Now please use valid SQLite to answer the following questions: What are the cities whose population is between 160000 and 900000?",
    "Here is an examples including input and output:\n input: question: Show the times used by climbers to climb mountains in Country Uganda. serialized_schema:  | climbing | mountain : mountain_id , name , height , prominence , range , country | climber : climber_id , name , country , time , points , mountain_id output: SELECT T1.Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID WHERE T2.Country  =  \"Uganda\"\n Now please use valid SQLite to answer the following questions: Return the names of cities that have a population between 160000 and 900000 .",
    "Here is an examples including input and output:\n input: question: Find the name and nationality of the swimmer who has won (i.e., has a result of \"win\") more than 1 time. serialized_schema:  | swimming | swimmer : id , name , nationality , meter_100 , meter_200 , meter_300 , meter_400 , meter_500 , meter_600 , meter_700 , time | stadium : id , name , capacity , city , country , opening_year | event : id , name , stadium_id , year | record : id , result , swimmer_id , event_id output: SELECT t1.name ,  t1.nationality FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id WHERE RESULT  =  'Win' GROUP BY t2.swimmer_id HAVING count(*)  >  1\n Now please use valid SQLite to answer the following questions: Which language is spoken by the largest number of countries?",
    "Here is an examples including input and output:\n input: question: Which part has the least chargeable amount? List the part id and amount. serialized_schema:  | assets_maintenance | third_party_companies : company_id , company_type , company_name , company_address , other_company_details | maintenance_contracts : maintenance_contract_id , maintenance_contract_company_id , contract_start_date , contract_end_date , other_contract_details | parts : part_id , part_name , chargeable_yn , chargeable_amount , other_part_details | skills : skill_id , skill_code , skill_description | staff : staff_id , staff_name , gender , other_staff_details | assets : asset_id , maintenance_contract_id , supplier_company_id , asset_details , asset_make , asset_model , asset_acquired_date , asset_disposed_date , other_asset_details | asset_parts : asset_id , part_id | maintenance_engineers : engineer_id , company_id , first_name , last_name , other_details | engineer_skills : engineer_id , skill_id | fault_log : fault_log_entry_id , asset_id , recorded_by_staff_id , fault_log_entry_datetime , fault_description , other_fault_details | engineer_visits : engineer_visit_id , contact_staff_id , engineer_id , fault_log_entry_id , fault_status , visit_start_datetime , visit_end_datetime , other_visit_details | part_faults : part_fault_id , part_id , fault_short_name , fault_description , other_fault_details | fault_log_parts : fault_log_entry_id , part_fault_id , fault_status | skills_required_to_fix : part_fault_id , skill_id output: SELECT part_id ,  chargeable_amount FROM Parts ORDER BY chargeable_amount ASC LIMIT 1\n Now please use valid SQLite to answer the following questions: Give the language that is spoken in the most countries.",
    "Here is an examples including input and output:\n input: question: What is the total number of faculty members? serialized_schema:  | activity_1 | activity : actid , activity_name | participates_in : stuid , actid | faculty_participates_in : facid , actid | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building output: SELECT count(*) FROM Faculty\n Now please use valid SQLite to answer the following questions: What is the language spoken by the largest percentage of people in each country?",
    "Here is an examples including input and output:\n input: question: What is the average cost of procedures that physician John Wen was trained in? serialized_schema:  | hospital_1 | physician : employeeid , name , position , ssn | department : departmentid , name , head | affiliated_with : physician , department , primaryaffiliation | procedures : code , name , cost | trained_in : physician , treatment , certificationdate , certificationexpires | patient : ssn , name , address , phone , insuranceid , pcp | nurse : employeeid , name , position , registered , ssn | appointment : appointmentid , patient , prepnurse , physician , start , end , examinationroom | medication : code , name , brand , description | prescribes : physician , patient , medication , date , appointment , dose | block : blockfloor , blockcode | room : roomnumber , roomtype , blockfloor , blockcode , unavailable | on_call : nurse , blockfloor , blockcode , oncallstart , oncallend | stay : stayid , patient , room , staystart , stayend | undergoes : patient , procedures , stay , dateundergoes , physician , assistingnurse output: SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"\n Now please use valid SQLite to answer the following questions: What are the country codes of the different countries, and what are the languages spoken by the greatest percentage of people for each?",
    "Here is an examples including input and output:\n input: question: Find the number of scientists involved for the projects that require more than 300 hours. serialized_schema:  | scientist_1 | scientists : ssn , name | projects : code , name , hours | assignedto : scientist , project output: SELECT count(*) ,  T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project WHERE T1.hours  >  300 GROUP BY T1.name\n Now please use valid SQLite to answer the following questions: What is the total number of countries where Spanish is spoken by the largest percentage of people?",
    "Here is an examples including input and output:\n input: question: What are the full names and cities of employees who have the letter Z in their first names? serialized_schema:  | hr_1 | regions : region_id , region_name | countries : country_id , country_name , region_id | departments : department_id , department_name , manager_id , location_id | jobs : job_id , job_title , min_salary , max_salary | employees : employee_id , first_name , last_name , email , phone_number , hire_date , job_id , salary , commission_pct , manager_id , department_id | job_history : employee_id , start_date , end_date , job_id , department_id | locations : location_id , street_address , postal_code , city , state_province , country_id output: SELECT T1.first_name ,  T1.last_name ,  T3.city FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id WHERE T1.first_name LIKE '%z%'\n Now please use valid SQLite to answer the following questions: Count the number of countries for which Spanish is the predominantly spoken language.",
    "Here is an examples including input and output:\n input: question: Which type of policy is most frequently used? Give me the policy type code. serialized_schema:  | insurance_and_eClaims | customers : customer_id , customer_details | staff : staff_id , staff_details | policies : policy_id , customer_id , policy_type_code , start_date , end_date | claim_headers : claim_header_id , claim_status_code , claim_type_code , policy_id , date_of_claim , date_of_settlement , amount_claimed , amount_piad | claims_documents : claim_id , document_type_code , created_by_staff_id , created_date | claims_processing_stages : claim_stage_id , next_claim_stage_id , claim_status_name , claim_status_description | claims_processing : claim_processing_id , claim_id , claim_outcome_code , claim_stage_id , staff_id output: SELECT policy_type_code FROM policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: What are the codes of countries where Spanish is spoken by the largest percentage of people?",
    "Here is an examples including input and output:\n input: question: Show the average, maximum, minimum enrollment of all schools. serialized_schema:  | school_finance | school : school_id , school_name , location , mascot , enrollment , ihsaa_class , ihsaa_football_class , county | budget : school_id , year , budgeted , total_budget_percent_budgeted , invested , total_budget_percent_invested , budget_invested_percent | endowment : endowment_id , school_id , donator_name , amount output: SELECT avg(enrollment) ,  max(enrollment) ,  min(enrollment) FROM school\n Now please use valid SQLite to answer the following questions: Return the codes of countries for which Spanish is the predominantly spoken language.",
    "Here is an examples including input and output:\n input: question: Which authors did not submit to any workshop? serialized_schema:  | workshop_paper | workshop : workshop_id , date , venue , name | submission : submission_id , scores , author , college | acceptance : submission_id , workshop_id , result output: SELECT Author FROM submission WHERE Submission_ID NOT IN (SELECT Submission_ID FROM acceptance)\n Now please use valid SQLite to answer the following questions: How many conductors are there?",
    "Here is an examples including input and output:\n input: question: Find the names and phone numbers of customers living in California state. serialized_schema:  | customer_deliveries | products : product_id , product_name , product_price , product_description | addresses : address_id , address_details , city , zip_postcode , state_province_county , country | customers : customer_id , payment_method , customer_name , customer_phone , customer_email , date_became_customer | regular_orders : regular_order_id , distributer_id | regular_order_products : regular_order_id , product_id | actual_orders : actual_order_id , order_status_code , regular_order_id , actual_order_date | actual_order_products : actual_order_id , product_id | customer_addresses : customer_id , address_id , date_from , address_type , date_to | delivery_routes : route_id , route_name , other_route_details | delivery_route_locations : location_code , route_id , location_address_id , location_name | trucks : truck_id , truck_licence_number , truck_details | employees : employee_id , employee_address_id , employee_name , employee_phone | order_deliveries : location_code , actual_order_id , delivery_status_code , driver_employee_id , truck_id , delivery_date output: SELECT t1.customer_name ,  t1.customer_phone FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.state_province_county  =  'California'\n Now please use valid SQLite to answer the following questions: Count the number of conductors.",
    "Here is an examples including input and output:\n input: question: Which distinct source system code includes the substring 'en'? serialized_schema:  | local_govt_mdm | customer_master_index : master_customer_id , cmi_details | cmi_cross_references : cmi_cross_ref_id , master_customer_id , source_system_code | council_tax : council_tax_id , cmi_cross_ref_id | business_rates : business_rates_id , cmi_cross_ref_id | benefits_overpayments : council_tax_id , cmi_cross_ref_id | parking_fines : council_tax_id , cmi_cross_ref_id | rent_arrears : council_tax_id , cmi_cross_ref_id | electoral_register : electoral_register_id , cmi_cross_ref_id output: SELECT DISTINCT source_system_code FROM cmi_cross_references WHERE source_system_code LIKE '%en%'\n Now please use valid SQLite to answer the following questions: List the names of conductors in ascending order of age.",
    "Here is an examples including input and output:\n input: question: Find the number of rooms for different block code? serialized_schema:  | hospital_1 | physician : employeeid , name , position , ssn | department : departmentid , name , head | affiliated_with : physician , department , primaryaffiliation | procedures : code , name , cost | trained_in : physician , treatment , certificationdate , certificationexpires | patient : ssn , name , address , phone , insuranceid , pcp | nurse : employeeid , name , position , registered , ssn | appointment : appointmentid , patient , prepnurse , physician , start , end , examinationroom | medication : code , name , brand , description | prescribes : physician , patient , medication , date , appointment , dose | block : blockfloor , blockcode | room : roomnumber , roomtype , blockfloor , blockcode , unavailable | on_call : nurse , blockfloor , blockcode , oncallstart , oncallend | stay : stayid , patient , room , staystart , stayend | undergoes : patient , procedures , stay , dateundergoes , physician , assistingnurse output: SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode\n Now please use valid SQLite to answer the following questions: What are the names of conductors, ordered by age?",
    "Here is an examples including input and output:\n input: question: Find the name and position of the head of the department with the least employees. serialized_schema:  | hospital_1 | physician : employeeid , name , position , ssn | department : departmentid , name , head | affiliated_with : physician , department , primaryaffiliation | procedures : code , name , cost | trained_in : physician , treatment , certificationdate , certificationexpires | patient : ssn , name , address , phone , insuranceid , pcp | nurse : employeeid , name , position , registered , ssn | appointment : appointmentid , patient , prepnurse , physician , start , end , examinationroom | medication : code , name , brand , description | prescribes : physician , patient , medication , date , appointment , dose | block : blockfloor , blockcode | room : roomnumber , roomtype , blockfloor , blockcode , unavailable | on_call : nurse , blockfloor , blockcode , oncallstart , oncallend | stay : stayid , patient , room , staystart , stayend | undergoes : patient , procedures , stay , dateundergoes , physician , assistingnurse output: SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;\n Now please use valid SQLite to answer the following questions: What are the names of conductors whose nationalities are not \"USA\"?",
    "Here is an examples including input and output:\n input: question: Find the states where have some college students in tryout and their decisions are yes. serialized_schema:  | soccer_2 | college : cname , state , enr | player : pid , pname , ycard , hs | tryout : pid , cname , ppos , decision output: SELECT DISTINCT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision  =  'yes'\n Now please use valid SQLite to answer the following questions: Return the names of conductors that do not have the nationality \"USA\".",
    "Here is an examples including input and output:\n input: question: List the names of the browser that are compatible with both 'CACHEbox' and 'Fasterfox'. serialized_schema:  | browser_web | web_client_accelerator : id , name , operating_system , client , connection | browser : id , name , market_share | accelerator_compatible_browser : accelerator_id , browser_id , compatible_since_year output: SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T1.name  =  'CACHEbox' INTERSECT SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T1.name  =  'Fasterfox'\n Now please use valid SQLite to answer the following questions: What are the record companies of orchestras in descending order of years in which they were founded?",
    "Here is an examples including input and output:\n input: question: What are the details for the projects which were launched by the organization with the most projects? serialized_schema:  | tracking_grants_for_research | document_types : document_type_code , document_description | documents : document_id , document_type_code , grant_id , sent_date , response_received_date , other_details | grants : grant_id , organisation_id , grant_amount , grant_start_date , grant_end_date , other_details | organisation_types : organisation_type , organisation_type_description | organisations : organisation_id , organisation_type , organisation_details | project_outcomes : project_id , outcome_code , outcome_details | project_staff : staff_id , project_id , role_code , date_from , date_to , other_details | projects : project_id , organisation_id , project_details | research_outcomes : outcome_code , outcome_description | research_staff : staff_id , employer_organisation_id , staff_details | staff_roles : role_code , role_description | tasks : task_id , project_id , task_details , eg agree objectives output: SELECT project_details FROM Projects WHERE organisation_id IN ( SELECT organisation_id FROM Projects GROUP BY organisation_id ORDER BY count(*) DESC LIMIT 1 )\n Now please use valid SQLite to answer the following questions: Return the record companies of orchestras, sorted descending by the years in which they were founded.",
    "Here is an examples including input and output:\n input: question: What are the names of artists who did not have an exhibition in 2004? serialized_schema:  | theme_gallery | artist : artist_id , name , country , year_join , age | exhibition : exhibition_id , year , theme , artist_id , ticket_price | exhibition_record : exhibition_id , date , attendance output: SELECT name FROM artist EXCEPT SELECT T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id WHERE T1.year  =  2004\n Now please use valid SQLite to answer the following questions: What is the average attendance of shows?",
    "Here is an examples including input and output:\n input: question: What are the dates of ceremony and results for each music festival? serialized_schema:  | music_4 | artist : artist_id , artist , age , famous_title , famous_release_date | volume : volume_id , volume_issue , issue_date , weeks_on_top , song , artist_id | music_festival : id , music_festival , date_of_ceremony , category , volume , result output: SELECT Date_of_ceremony ,  RESULT FROM music_festival\n Now please use valid SQLite to answer the following questions: Return the average attendance across all shows.",
    "Here is an examples including input and output:\n input: question: Show the school name and driver name for all school buses. serialized_schema:  | school_bus | driver : driver_id , name , party , home_city , age | school : school_id , grade , school , location , type | school_bus : school_id , driver_id , years_working , if_full_time output: SELECT T2.school ,  T3.name FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id JOIN driver AS T3 ON T1.driver_id  =  T3.driver_id\n Now please use valid SQLite to answer the following questions: What are the maximum and minimum share of performances whose type is not \"Live final\".",
    "Here is an examples including input and output:\n input: question: Which course authors teach two or more courses? Give me their addresses and author IDs. serialized_schema:  | e_learning | course_authors_and_tutors : author_id , author_tutor_atb , login_name , password , personal_name , middle_name , family_name , gender_mf , address_line_1 | students : student_id , date_of_registration , date_of_latest_logon , login_name , password , personal_name , middle_name , family_name | subjects : subject_id , subject_name | courses : course_id , author_id , subject_id , course_name , course_description | student_course_enrolment : registration_id , student_id , course_id , date_of_enrolment , date_of_completion | student_tests_taken : registration_id , date_test_taken , test_result output: SELECT T1.address_line_1 ,  T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id GROUP BY T2.author_id HAVING Count(*)  >=  2\n Now please use valid SQLite to answer the following questions: Return the maximum and minimum shares for performances that do not have the type \"Live final\".",
    "Here is an examples including input and output:\n input: question: On average, how old are the members in the club \"Hopkins Student Enterprises\"? serialized_schema:  | club_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | club : clubid , clubname , clubdesc , clublocation | member_of_club : stuid , clubid , position output: SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\"\n Now please use valid SQLite to answer the following questions: How many different nationalities do conductors have?",
    "Here is an examples including input and output:\n input: question: What is the partition id of the user named \"Iron Man\". serialized_schema:  | twitter_1 | follows : f1 , f2 | tweets : id , uid , text , createdate | user_profiles : uid , name , email , partitionid , followers output: SELECT partitionid FROM user_profiles WHERE name  =  'Iron Man'\n Now please use valid SQLite to answer the following questions: Count the number of different nationalities of conductors.",
    "Here is an examples including input and output:\n input: question: Find the name of the youngest organization. serialized_schema:  | e_government | addresses : address_id , line_1_number_building , town_city , zip_postcode , state_province_county , country | services : service_id , service_type_code , service_name , service_descriptio | forms : form_id , form_type_code , service_id , form_number , form_name , form_description | individuals : individual_id , individual_first_name , individual_middle_name , inidividual_phone , individual_email , individual_address , individual_last_name | organizations : organization_id , date_formed , organization_name , uk_vat_number | parties : party_id , payment_method_code , party_phone , party_email | organization_contact_individuals : individual_id , organization_id , date_contact_from , date_contact_to | party_addresses : party_id , address_id , date_address_from , address_type_code , date_address_to | party_forms : party_id , form_id , date_completion_started , form_status_code , date_fully_completed | party_services : booking_id , customer_id , service_id , service_datetime , booking_made_date output: SELECT organization_name FROM organizations ORDER BY date_formed DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: List names of conductors in descending order of years of work.",
    "Here is an examples including input and output:\n input: question: Among those engineers who have visited, which engineer makes the least number of visits? List the engineer id, first name and last name. serialized_schema:  | assets_maintenance | third_party_companies : company_id , company_type , company_name , company_address , other_company_details | maintenance_contracts : maintenance_contract_id , maintenance_contract_company_id , contract_start_date , contract_end_date , other_contract_details | parts : part_id , part_name , chargeable_yn , chargeable_amount , other_part_details | skills : skill_id , skill_code , skill_description | staff : staff_id , staff_name , gender , other_staff_details | assets : asset_id , maintenance_contract_id , supplier_company_id , asset_details , asset_make , asset_model , asset_acquired_date , asset_disposed_date , other_asset_details | asset_parts : asset_id , part_id | maintenance_engineers : engineer_id , company_id , first_name , last_name , other_details | engineer_skills : engineer_id , skill_id | fault_log : fault_log_entry_id , asset_id , recorded_by_staff_id , fault_log_entry_datetime , fault_description , other_fault_details | engineer_visits : engineer_visit_id , contact_staff_id , engineer_id , fault_log_entry_id , fault_status , visit_start_datetime , visit_end_datetime , other_visit_details | part_faults : part_fault_id , part_id , fault_short_name , fault_description , other_fault_details | fault_log_parts : fault_log_entry_id , part_fault_id , fault_status | skills_required_to_fix : part_fault_id , skill_id output: SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 ON T1.engineer_id  =  T2.engineer_id GROUP BY T1.engineer_id ORDER BY count(*) ASC LIMIT 1\n Now please use valid SQLite to answer the following questions: What are the names of conductors, sorted descending by the number of years they have worked?",
    "Here is an examples including input and output:\n input: question: Show names of cities and names of counties they are in. serialized_schema:  | county_public_safety | county_public_safety : county_id , name , population , police_officers , residents_per_officer , case_burden , crime_rate , police_force , location | city : city_id , county_id , name , white , black , amerindian , asian , multiracial , hispanic output: SELECT T1.Name ,  T2.Name FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID\n Now please use valid SQLite to answer the following questions: List the name of the conductor with the most years of work.",
    "Here is an examples including input and output:\n input: question: Return the address and email of the customer with the first name Linda. serialized_schema:  | sakila_1 | actor : actor_id , first_name , last_name , last_update | address : address_id , address , address2 , district , city_id , postal_code , phone , last_update | category : category_id , name , last_update | city : city_id , city , country_id , last_update | country : country_id , country , last_update | customer : customer_id , store_id , first_name , last_name , email , address_id , active , create_date , last_update | film : film_id , title , description , release_year , language_id , original_language_id , rental_duration , rental_rate , length , replacement_cost , rating , special_features , last_update | film_actor : actor_id , film_id , last_update | film_category : film_id , category_id , last_update | film_text : film_id , title , description | inventory : inventory_id , film_id , store_id , last_update | language : language_id , name , last_update | payment : payment_id , customer_id , staff_id , rental_id , amount , payment_date , last_update | rental : rental_id , rental_date , inventory_id , customer_id , return_date , staff_id , last_update | staff : staff_id , first_name , last_name , address_id , picture , email , store_id , active , username , password , last_update | store : store_id , manager_staff_id , address_id , last_update output: SELECT T2.address ,  T1.email FROM customer AS T1 JOIN address AS T2 ON T2.address_id  =  T1.address_id WHERE T1.first_name  =  'LINDA'\n Now please use valid SQLite to answer the following questions: What is the name of the conductor who has worked the greatest number of years?",
    "Here is an examples including input and output:\n input: question: What are the names of stations that are located in Palo Alto city but have never been the ending point of trips more than 100 times? serialized_schema:  | bike_1 | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code output: SELECT name FROM station WHERE city  =  \"Palo Alto\" EXCEPT SELECT end_station_name FROM trip GROUP BY end_station_name HAVING count(*)  >  100\n Now please use valid SQLite to answer the following questions: Show the names of conductors and the orchestras they have conducted.",
    "Here is an examples including input and output:\n input: question: What are the average price and score of wines for each appelation? serialized_schema:  | wine_1 | grapes : id , grape , color | appellations : no , appelation , county , state , area , isava | wine : no , grape , winery , appelation , state , name , year , price , score , cases , drink output: SELECT avg(Price) ,  avg(Score) ,  Appelation FROM WINE GROUP BY Appelation\n Now please use valid SQLite to answer the following questions: What are the names of conductors as well as the corresonding orchestras that they have conducted?",
    "Here is an examples including input and output:\n input: question: What is the full name of the employee who has the most customers? serialized_schema:  | store_1 | artists : id , name | sqlite_sequence : name , seq | albums : id , title , artist_id | employees : id , last_name , first_name , title , reports_to , birth_date , hire_date , address , city , state , country , postal_code , phone , fax , email | customers : id , first_name , last_name , company , address , city , state , country , postal_code , phone , fax , email , support_rep_id | genres : id , name | invoices : id , customer_id , invoice_date , billing_address , billing_city , billing_state , billing_country , billing_postal_code , total | media_types : id , name | tracks : id , name , album_id , media_type_id , genre_id , composer , milliseconds , bytes , unit_price | invoice_lines : id , invoice_id , track_id , unit_price , quantity | playlists : id , name | playlist_tracks : playlist_id , track_id output: SELECT T1.first_name , T1.last_name FROM employees AS T1 JOIN customers AS T2 ON T1.id  =  T2.support_rep_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: Show the names of conductors that have conducted more than one orchestras.",
    "Here is an examples including input and output:\n input: question: Count the number of female Professors we have. serialized_schema:  | activity_1 | activity : actid , activity_name | participates_in : stuid , actid | faculty_participates_in : facid , actid | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building output: SELECT count(*) FROM Faculty WHERE Sex  =  'F' AND Rank  =  \"Professor\"\n Now please use valid SQLite to answer the following questions: What are the names of conductors who have conducted at more than one orchestra?",
    "Here is an examples including input and output:\n input: question: Find the last name of the staff whose email address contains \"wrau\". serialized_schema:  | customer_complaints | staff : staff_id , gender , first_name , last_name , email_address , phone_number | customers : customer_id , customer_type_code , address_line_1 , address_line_2 , town_city , state , email_address , phone_number | products : product_id , parent_product_id , product_category_code , date_product_first_available , date_product_discontinued , product_name , product_description , product_price | complaints : complaint_id , product_id , customer_id , complaint_outcome_code , complaint_status_code , complaint_type_code , date_complaint_raised , date_complaint_closed , staff_id output: SELECT last_name FROM staff WHERE email_address LIKE \"%wrau%\"\n Now please use valid SQLite to answer the following questions: Show the name of the conductor that has conducted the most number of orchestras.",
    "Here is an examples including input and output:\n input: question: Find the three most expensive procedures. serialized_schema:  | hospital_1 | physician : employeeid , name , position , ssn | department : departmentid , name , head | affiliated_with : physician , department , primaryaffiliation | procedures : code , name , cost | trained_in : physician , treatment , certificationdate , certificationexpires | patient : ssn , name , address , phone , insuranceid , pcp | nurse : employeeid , name , position , registered , ssn | appointment : appointmentid , patient , prepnurse , physician , start , end , examinationroom | medication : code , name , brand , description | prescribes : physician , patient , medication , date , appointment , dose | block : blockfloor , blockcode | room : roomnumber , roomtype , blockfloor , blockcode , unavailable | on_call : nurse , blockfloor , blockcode , oncallstart , oncallend | stay : stayid , patient , room , staystart , stayend | undergoes : patient , procedures , stay , dateundergoes , physician , assistingnurse output: SELECT name FROM procedures ORDER BY cost LIMIT 3\n Now please use valid SQLite to answer the following questions: What is the name of the conductor who has conducted the most orchestras?",
    "Here is an examples including input and output:\n input: question: Tell me the total quantity of products bought by the customer called \"Rodrick Heaney\". serialized_schema:  | customers_and_addresses | addresses : address_id , address_content , city , zip_postcode , state_province_county , country , other_address_details | products : product_id , product_details | customers : customer_id , payment_method , customer_name , date_became_customer , other_customer_details | customer_addresses : customer_id , address_id , date_address_from , address_type , date_address_to | customer_contact_channels : customer_id , channel_code , active_from_date , active_to_date , contact_number | customer_orders : order_id , customer_id , order_status , order_date , order_details | order_items : order_id , product_id , order_quantity output: SELECT sum(t3.order_quantity) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t1.customer_name  =  \"Rodrick Heaney\"\n Now please use valid SQLite to answer the following questions: Please show the name of the conductor that has conducted orchestras founded after 2008.",
    "Here is an examples including input and output:\n input: question: What is the membership level with the most people? serialized_schema:  | shop_membership | member : member_id , card_number , name , hometown , level | branch : branch_id , name , open_year , address_road , city , membership_amount | membership_register_branch : member_id , branch_id , register_year | purchase : member_id , branch_id , year , total_pounds output: SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: What are the names of conductors who have conducted orchestras founded after the year 2008?",
    "Here is an examples including input and output:\n input: question: Find the total amount of products ordered before 2018-03-17 07:13:53. serialized_schema:  | customers_and_addresses | addresses : address_id , address_content , city , zip_postcode , state_province_county , country , other_address_details | products : product_id , product_details | customers : customer_id , payment_method , customer_name , date_became_customer , other_customer_details | customer_addresses : customer_id , address_id , date_address_from , address_type , date_address_to | customer_contact_channels : customer_id , channel_code , active_from_date , active_to_date , contact_number | customer_orders : order_id , customer_id , order_status , order_date , order_details | order_items : order_id , product_id , order_quantity output: SELECT sum(t2.order_quantity) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id  =  t2.order_id WHERE t1.order_date  <  \"2018-03-17 07:13:53\"\n Now please use valid SQLite to answer the following questions: Please show the different record companies and the corresponding number of orchestras.",
    "Here is an examples including input and output:\n input: question: What are the titles and directors of the movies whose star is greater than the average stars of the movies directed by James Cameron? serialized_schema:  | movie_1 | movie : mid , title , year , director | reviewer : rid , name | rating : rid , mid , stars , ratingdate output: SELECT T2.title ,  T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars  >  (SELECT avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.director  =  \"James Cameron\")\n Now please use valid SQLite to answer the following questions: How many orchestras does each record company manage?",
    "Here is an examples including input and output:\n input: question: What is the founded year of the non public school that was founded most recently? serialized_schema:  | university_basketball | basketball_match : team_id , school_id , team_name , acc_regular_season , acc_percent , acc_home , acc_road , all_games , all_games_percent , all_home , all_road , all_neutral | university : school_id , school , location , founded , affiliation , enrollment , nickname , primary_conference output: SELECT founded FROM university WHERE affiliation != 'Public' ORDER BY founded DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: Please show the record formats of orchestras in ascending order of count.",
    "Here is an examples including input and output:\n input: question: What are the dates of the assessment notes? serialized_schema:  | behavior_monitoring | ref_address_types : address_type_code , address_type_description | ref_detention_type : detention_type_code , detention_type_description | ref_incident_type : incident_type_code , incident_type_description | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | students : student_id , address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , date_first_rental , date_left_university , other_student_details | teachers : teacher_id , address_id , first_name , middle_name , last_name , gender , cell_mobile_number , email_address , other_details | assessment_notes : notes_id , student_id , teacher_id , date_of_notes , text_of_notes , other_details | behavior_incident : incident_id , incident_type_code , student_id , date_incident_start , date_incident_end , incident_summary , recommendations , other_details | detention : detention_id , detention_type_code , teacher_id , datetime_detention_start , datetime_detention_end , detention_summary , other_details | student_addresses : student_id , address_id , date_address_from , date_address_to , monthly_rental , other_details | students_in_detention : student_id , detention_id , incident_id output: SELECT date_of_notes FROM Assessment_Notes\n Now please use valid SQLite to answer the following questions: What are the major record formats of orchestras, sorted by their frequency?",
    "Here is an examples including input and output:\n input: question: What is each customer's move in date, and the corresponding customer id and details? serialized_schema:  | local_govt_and_lot | customers : customer_id , customer_details | properties : property_id , property_type_code , property_address , other_details | residents : resident_id , property_id , date_moved_in , date_moved_out , other_details | organizations : organization_id , parent_organization_id , organization_details | services : service_id , organization_id , service_type_code , service_details | residents_services : resident_id , service_id , date_moved_in , property_id , date_requested , date_provided , other_details | things : thing_id , organization_id , type_of_thing_code , service_type_code , service_details | customer_events : customer_event_id , customer_id , date_moved_in , property_id , resident_id , thing_id | customer_event_notes : customer_event_note_id , customer_event_id , service_type_code , resident_id , property_id , date_moved_in | timed_status_of_things : thing_id , date_and_date , status_of_thing_code | timed_locations_of_things : thing_id , date_and_time , location_code output: SELECT T2.date_moved_in ,  T1.customer_id ,  T1.customer_details FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id  =  T2.customer_id\n Now please use valid SQLite to answer the following questions: List the record company shared by the most number of orchestras.",
    "Here is an examples including input and output:\n input: question: Which location names contain the word \"film\"? serialized_schema:  | cre_Theme_park | ref_hotel_star_ratings : star_rating_code , star_rating_description | locations : location_id , location_name , address , other_details | ref_attraction_types : attraction_type_code , attraction_type_description | visitors : tourist_id , tourist_details | features : feature_id , feature_details | hotels : hotel_id , star_rating_code , pets_allowed_yn , price_range , other_hotel_details | tourist_attractions : tourist_attraction_id , attraction_type_code , location_id , how_to_get_there , name , description , opening_hours , other_details | street_markets : market_id , market_details | shops : shop_id , shop_details | museums : museum_id , museum_details | royal_family : royal_family_id , royal_family_details | theme_parks : theme_park_id , theme_park_details | visits : visit_id , tourist_attraction_id , tourist_id , visit_date , visit_details | photos : photo_id , tourist_attraction_id , name , description , filename , other_details | staff : staff_id , tourist_attraction_id , name , other_details | tourist_attraction_features : tourist_attraction_id , feature_id output: SELECT Location_Name FROM LOCATIONS WHERE Location_Name LIKE \"%film%\"\n Now please use valid SQLite to answer the following questions: What is the record company used by the greatest number of orchestras?",
    "Here is an examples including input and output:\n input: question: Show card number, name, and hometown for all members in a descending order of level. serialized_schema:  | shop_membership | member : member_id , card_number , name , hometown , level | branch : branch_id , name , open_year , address_road , city , membership_amount | membership_register_branch : member_id , branch_id , register_year | purchase : member_id , branch_id , year , total_pounds output: SELECT card_number ,  name ,  hometown FROM member ORDER BY LEVEL DESC\n Now please use valid SQLite to answer the following questions: List the names of orchestras that have no performance.",
    "Here is an examples including input and output:\n input: question: What are the names of actors ordered descending by the year in which their musical was awarded? serialized_schema:  | musical | musical : musical_id , name , year , award , category , nominee , result | actor : actor_id , name , musical_id , character , duration , age output: SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID ORDER BY T2.Year DESC\n Now please use valid SQLite to answer the following questions: What are the orchestras that do not have any performances?",
    "Here is an examples including input and output:\n input: question: Give me the title and highest price for each film. serialized_schema:  | cinema | film : film_id , rank_in_series , number_in_season , title , directed_by , original_air_date , production_code | cinema : cinema_id , name , openning_year , capacity , location | schedule : cinema_id , film_id , date , show_times_per_day , price output: SELECT T2.title ,  max(T1.price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id\n Now please use valid SQLite to answer the following questions: Show the record companies shared by orchestras founded before 2003 and after 2003.",
    "Here is an examples including input and output:\n input: question: What city does the employee who helps the customer with postal code 70174 live in? serialized_schema:  | chinook_1 | album : albumid , title , artistid | artist : artistid , name | customer : customerid , firstname , lastname , company , address , city , state , country , postalcode , phone , fax , email , supportrepid | employee : employeeid , lastname , firstname , title , reportsto , birthdate , hiredate , address , city , state , country , postalcode , phone , fax , email | genre : genreid , name | invoice : invoiceid , customerid , invoicedate , billingaddress , billingcity , billingstate , billingcountry , billingpostalcode , total | invoiceline : invoicelineid , invoiceid , trackid , unitprice , quantity | mediatype : mediatypeid , name | playlist : playlistid , name | playlisttrack : playlistid , trackid | track : trackid , name , albumid , mediatypeid , genreid , composer , milliseconds , bytes , unitprice output: SELECT T2.City FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId WHERE T1.PostalCode  =  \"70174\"\n Now please use valid SQLite to answer the following questions: What are the record companies that are used by both orchestras founded before 2003 and those founded after 2003?",
    "Here is an examples including input and output:\n input: question: Find the id and name of customers whose address contains WY state and do not use credit card for payment. serialized_schema:  | department_store | addresses : address_id , address_details | staff : staff_id , staff_gender , staff_name | suppliers : supplier_id , supplier_name , supplier_phone | department_store_chain : dept_store_chain_id , dept_store_chain_name | customers : customer_id , payment_method_code , customer_code , customer_name , customer_address , customer_phone , customer_email | products : product_id , product_type_code , product_name , product_price | supplier_addresses : supplier_id , address_id , date_from , date_to | customer_addresses : customer_id , address_id , date_from , date_to | customer_orders : order_id , customer_id , order_status_code , order_date | department_stores : dept_store_id , dept_store_chain_id , store_name , store_address , store_phone , store_email | departments : department_id , dept_store_id , department_name | order_items : order_item_id , order_id , product_id | product_suppliers : product_id , supplier_id , date_supplied_from , date_supplied_to , total_amount_purchased , total_value_purchased | staff_department_assignments : staff_id , department_id , date_assigned_from , job_title_code , date_assigned_to output: SELECT customer_id ,  customer_name FROM customers WHERE customer_address LIKE \"%WY%\" AND payment_method_code != \"Credit Card\"\n Now please use valid SQLite to answer the following questions: Find the number of orchestras whose record format is \"CD\" or \"DVD\".",
    "Here is an examples including input and output:\n input: question: What are all the document type codes and document type names? serialized_schema:  | cre_Doc_Tracking_DB | ref_document_types : document_type_code , document_type_name , document_type_description | ref_calendar : calendar_date , day_number | ref_locations : location_code , location_name , location_description | roles : role_code , role_name , role_description | all_documents : document_id , date_stored , document_type_code , document_name , document_description , other_details | employees : employee_id , role_code , employee_name , gender_mfu , date_of_birth , other_details | document_locations : document_id , location_code , date_in_location_from , date_in_locaton_to | documents_to_be_destroyed : document_id , destruction_authorised_by_employee_id , destroyed_by_employee_id , planned_destruction_date , actual_destruction_date , other_details output: SELECT document_type_code ,  document_type_name FROM Ref_document_types\n Now please use valid SQLite to answer the following questions: Count the number of orchestras that have CD or DVD as their record format.",
    "Here is an examples including input and output:\n input: question: Give the names and scores of wines made from white grapes. serialized_schema:  | wine_1 | grapes : id , grape , color | appellations : no , appelation , county , state , area , isava | wine : no , grape , winery , appelation , state , name , year , price , score , cases , drink output: SELECT T2.Name ,   T2.Score FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"White\"\n Now please use valid SQLite to answer the following questions: Show the years in which orchestras that have given more than one performance are founded.",
    "Here is an examples including input and output:\n input: question: What are the names and ids of artists with 3 or more albums, listed in alphabetical order? serialized_schema:  | chinook_1 | album : albumid , title , artistid | artist : artistid , name | customer : customerid , firstname , lastname , company , address , city , state , country , postalcode , phone , fax , email , supportrepid | employee : employeeid , lastname , firstname , title , reportsto , birthdate , hiredate , address , city , state , country , postalcode , phone , fax , email | genre : genreid , name | invoice : invoiceid , customerid , invoicedate , billingaddress , billingcity , billingstate , billingcountry , billingpostalcode , total | invoiceline : invoicelineid , invoiceid , trackid , unitprice , quantity | mediatype : mediatypeid , name | playlist : playlistid , name | playlisttrack : playlistid , trackid | track : trackid , name , albumid , mediatypeid , genreid , composer , milliseconds , bytes , unitprice output: SELECT T2.Name ,  T1.ArtistId FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistID GROUP BY T1.ArtistId HAVING COUNT(*)  >=  3 ORDER BY T2.Name\n Now please use valid SQLite to answer the following questions: What are years of founding for orchestras that have had more than a single performance?",
    "Here is an examples including input and output:\n input: question: List the name of artworks that are not nominated. serialized_schema:  | entertainment_awards | festival_detail : festival_id , festival_name , chair_name , location , year , num_of_audience | artwork : artwork_id , type , name | nomination : artwork_id , festival_id , result output: SELECT Name FROM Artwork WHERE Artwork_ID NOT IN (SELECT Artwork_ID FROM nomination)\n Now please use valid SQLite to answer the following questions: How many high schoolers are there?",
    "Here is an examples including input and output:\n input: question: How many professors attained either Ph.D. or Masters degrees? serialized_schema:  | college_1 | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num output: SELECT count(*) FROM professor WHERE prof_high_degree  =  'Ph.D.' OR prof_high_degree  =  'MA'\n Now please use valid SQLite to answer the following questions: Count the number of high schoolers.",
    "Here is an examples including input and output:\n input: question: List venues of all matches in the order of their dates starting from the most recent one. serialized_schema:  | city_record | city : city_id , city , hanzi , hanyu_pinyin , regional_population , gdp | match : match_id , date , venue , score , result , competition | temperature : city_id , jan , feb , mar , apr , jun , jul , aug , sep , oct , nov , dec | hosting_city : year , match_id , host_city output: SELECT venue FROM MATCH ORDER BY date DESC\n Now please use valid SQLite to answer the following questions: Show the names and grades of each high schooler.",
    "Here is an examples including input and output:\n input: question: Which building has the largest number of company offices? Give me the building name. serialized_schema:  | company_office | buildings : id , name , city , height , stories , status | companies : id , name , headquarters , industry , sales_billion , profits_billion , assets_billion , market_value_billion | office_locations : building_id , company_id , move_in_year output: SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id GROUP BY T1.building_id ORDER BY COUNT(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: What are the names and grades for each high schooler?",
    "Here is an examples including input and output:\n input: question: What is the number of players who have points less than 30 for each position? serialized_schema:  | sports_competition | club : club_id , name , region , start_year | club_rank : rank , club_id , gold , silver , bronze , total | player : player_id , name , position , club_id , apps , tries , goals , points | competition : competition_id , year , competition_type , country | competition_result : competition_id , club_id_1 , club_id_2 , score output: SELECT count(*) ,  POSITION FROM player WHERE points  <  30 GROUP BY POSITION\n Now please use valid SQLite to answer the following questions: Show all the grades of the high schoolers.",
    "Here is an examples including input and output:\n input: question: What is the language that was used most often in songs with resolution above 500? serialized_schema:  | music_1 | genre : g_name , rating , most_popular_in | artist : artist_name , country , gender , preferred_genre | files : f_id , artist_name , file_size , duration , formats | song : song_name , artist_name , country , f_id , genre_is , rating , languages , releasedate , resolution output: SELECT artist_name FROM song WHERE resolution  >  500 GROUP BY languages ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: What is the grade of each high schooler?",
    "Here is an examples including input and output:\n input: question: What are the ids of all reviewers who have not given 4 stars at least once? serialized_schema:  | movie_1 | movie : mid , title , year , director | reviewer : rid , name | rating : rid , mid , stars , ratingdate output: SELECT rID FROM Rating WHERE stars != 4\n Now please use valid SQLite to answer the following questions: What grade is Kyle in?",
    "Here is an examples including input and output:\n input: question: On average how large is the population of the counties? serialized_schema:  | election | county : county_id , county_name , population , zip_code | party : party_id , year , party , governor , lieutenant_governor , comptroller , attorney_general , us_senate | election : election_id , counties_represented , district , delegate , party , first_elected , committee output: SELECT avg(Population) FROM county\n Now please use valid SQLite to answer the following questions: Return the grade for the high schooler named Kyle.",
    "Here is an examples including input and output:\n input: question: Count the number of different scientists assigned to any project. serialized_schema:  | scientist_1 | scientists : ssn , name | projects : code , name , hours | assignedto : scientist , project output: SELECT count(DISTINCT scientist) FROM assignedto\n Now please use valid SQLite to answer the following questions: Show the names of all high schoolers in grade 10.",
    "Here is an examples including input and output:\n input: question: What are the id and name of the stations that have ever had more than 12 bikes available? serialized_schema:  | bike_1 | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code output: SELECT DISTINCT T1.id ,  T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id WHERE T2.bikes_available  >  12\n Now please use valid SQLite to answer the following questions: What are the names of all high schoolers in grade 10?",
    "Here is an examples including input and output:\n input: question: Find all the forenames of distinct drivers who was in position 1 as standing and won? serialized_schema:  | formula_1 | circuits : circuitid , circuitref , name , location , country , lat , lng , alt , url | races : raceid , year , round , circuitid , name , date , time , url | drivers : driverid , driverref , number , code , forename , surname , dob , nationality , url | status : statusid , status | seasons : year , url | constructors : constructorid , constructorref , name , nationality , url | constructorstandings : constructorstandingsid , raceid , constructorid , points , position , positiontext , wins | results : resultid , raceid , driverid , constructorid , number , grid , position , positiontext , positionorder , points , laps , time , milliseconds , fastestlap , rank , fastestlaptime , fastestlapspeed , statusid | driverstandings : driverstandingsid , raceid , driverid , points , position , positiontext , wins | constructorresults : constructorresultsid , raceid , constructorid , points , status | qualifying : qualifyid , raceid , driverid , constructorid , number , position , q1 , q2 , q3 | pitstops : raceid , driverid , stop , lap , time , duration , milliseconds | laptimes : raceid , driverid , lap , position , time , milliseconds output: SELECT DISTINCT T1.forename FROM drivers AS T1 JOIN driverstandings AS T2 ON T1.driverid = T2.driverid WHERE T2.position = 1 AND T2.wins = 1\n Now please use valid SQLite to answer the following questions: Show the ID of the high schooler named Kyle.",
    "Here is an examples including input and output:\n input: question: Return the names of parties that have two or more events. serialized_schema:  | party_people | region : region_id , region_name , date , label , format , catalogue | party : party_id , minister , took_office , left_office , region_id , party_name | member : member_id , member_name , party_id , in_office | party_events : event_id , event_name , party_id , member_in_charge_id output: SELECT T2.party_name FROM party_events AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id HAVING count(*)  >=  2\n Now please use valid SQLite to answer the following questions: What is Kyle's id?",
    "Here is an examples including input and output:\n input: question: Show the most common nationality for journalists. serialized_schema:  | news_report | event : event_id , date , venue , name , event_attendance | journalist : journalist_id , name , nationality , age , years_working | news_report : journalist_id , event_id , work_type output: SELECT Nationality FROM journalist GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: How many high schoolers are there in grade 9 or 10?",
    "Here is an examples including input and output:\n input: question: find the name of the program that was launched most recently. serialized_schema:  | program_share | program : program_id , name , origin , launch , owner | channel : channel_id , name , owner , share_in_percent , rating_in_percent | broadcast : channel_id , program_id , time_of_day | broadcast_share : channel_id , program_id , date , share_in_percent output: SELECT name FROM program ORDER BY launch DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: Count the number of high schoolers in grades 9 or 10.",
    "Here is an examples including input and output:\n input: question: What are the bed type and name of all the rooms with traditional decor? serialized_schema:  | inn_1 | rooms : roomid , roomname , beds , bedtype , maxoccupancy , baseprice , decor | reservations : code , room , checkin , checkout , rate , lastname , firstname , adults , kids output: SELECT roomName ,  bedType FROM Rooms WHERE decor = \"traditional\";\n Now please use valid SQLite to answer the following questions: Show the number of high schoolers for each grade.",
    "Here is an examples including input and output:\n input: question: List the weight of the body builders who have snatch score higher than 140 or have the height greater than 200. serialized_schema:  | body_builder | body_builder : body_builder_id , people_id , snatch , clean_jerk , total | people : people_id , name , height , weight , birth_date , birth_place output: SELECT T2.weight FROM body_builder AS T1 JOIN people AS T2 ON T1.people_id  =  T2.people_id WHERE T1.snatch  >  140 OR T2.height  >  200;\n Now please use valid SQLite to answer the following questions: How many high schoolers are in each grade?",
    "Here is an examples including input and output:\n input: question: Show flight number, origin, destination of all flights in the alphabetical order of the departure cities. serialized_schema:  | flight_1 | flight : flno , origin , destination , distance , departure_date , arrival_date , price , aid | aircraft : aid , name , distance | employee : eid , name , salary | certificate : eid , aid output: SELECT flno ,  origin ,  destination FROM Flight ORDER BY origin\n Now please use valid SQLite to answer the following questions: Which grade has the most high schoolers?",
    "Here is an examples including input and output:\n input: question: What are the last names that are used by customers and staff? serialized_schema:  | driving_school | addresses : address_id , line_1_number_building , city , zip_postcode , state_province_county , country | staff : staff_id , staff_address_id , nickname , first_name , middle_name , last_name , date_of_birth , date_joined_staff , date_left_staff | vehicles : vehicle_id , vehicle_details | customers : customer_id , customer_address_id , customer_status_code , date_became_customer , date_of_birth , first_name , last_name , amount_outstanding , email_address , phone_number , cell_mobile_phone_number | customer_payments : customer_id , datetime_payment , payment_method_code , amount_payment | lessons : lesson_id , customer_id , lesson_status_code , staff_id , vehicle_id , lesson_date , lesson_time , price output: SELECT last_name FROM Customers INTERSECT SELECT last_name FROM Staff\n Now please use valid SQLite to answer the following questions: Return the grade that has the greatest number of high schoolers.",
    "Here is an examples including input and output:\n input: question: Find the rank of the faculty that the fewest faculties belong to. serialized_schema:  | college_3 | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building | department : dno , division , dname , room , building , dphone | member_of : facid , dno , appt_type | course : cid , cname , credits , instructor , days , hours , dno | minor_in : stuid , dno | enrolled_in : stuid , cid , grade | gradeconversion : lettergrade , gradepoint output: SELECT Rank FROM FACULTY GROUP BY Rank ORDER BY count(*) ASC LIMIT 1\n Now please use valid SQLite to answer the following questions: Show me all grades that have at least 4 students.",
    "Here is an examples including input and output:\n input: question: What are the full name (first and last name) and salary for all employees who does not have any value for commission? serialized_schema:  | hr_1 | regions : region_id , region_name | countries : country_id , country_name , region_id | departments : department_id , department_name , manager_id , location_id | jobs : job_id , job_title , min_salary , max_salary | employees : employee_id , first_name , last_name , email , phone_number , hire_date , job_id , salary , commission_pct , manager_id , department_id | job_history : employee_id , start_date , end_date , job_id , department_id | locations : location_id , street_address , postal_code , city , state_province , country_id output: SELECT first_name ,  last_name ,  salary FROM  employees WHERE commission_pct  =  \"null\"\n Now please use valid SQLite to answer the following questions: Which grades have 4 or more high schoolers?",
    "Here is an examples including input and output:\n input: question: List the names and emails of customers who payed by Visa card. serialized_schema:  | customer_deliveries | products : product_id , product_name , product_price , product_description | addresses : address_id , address_details , city , zip_postcode , state_province_county , country | customers : customer_id , payment_method , customer_name , customer_phone , customer_email , date_became_customer | regular_orders : regular_order_id , distributer_id | regular_order_products : regular_order_id , product_id | actual_orders : actual_order_id , order_status_code , regular_order_id , actual_order_date | actual_order_products : actual_order_id , product_id | customer_addresses : customer_id , address_id , date_from , address_type , date_to | delivery_routes : route_id , route_name , other_route_details | delivery_route_locations : location_code , route_id , location_address_id , location_name | trucks : truck_id , truck_licence_number , truck_details | employees : employee_id , employee_address_id , employee_name , employee_phone | order_deliveries : location_code , actual_order_id , delivery_status_code , driver_employee_id , truck_id , delivery_date output: SELECT customer_email ,  customer_name FROM customers WHERE payment_method  =  'Visa'\n Now please use valid SQLite to answer the following questions: Show the student IDs and numbers of friends corresponding to each.",
    "Here is an examples including input and output:\n input: question: List the names of all players who have a crossing score higher than 90 and prefer their right foot. serialized_schema:  | soccer_1 | player_attributes : id , player_fifa_api_id , player_api_id , date , overall_rating , potential , preferred_foot , attacking_work_rate , defensive_work_rate , crossing , finishing , heading_accuracy , short_passing , volleys , dribbling , curve , free_kick_accuracy , long_passing , ball_control , acceleration , sprint_speed , agility , reactions , balance , shot_power , jumping , stamina , strength , long_shots , aggression , interceptions , positioning , vision , penalties , marking , standing_tackle , sliding_tackle , gk_diving , gk_handling , gk_kicking , gk_positioning , gk_reflexes | sqlite_sequence : name , seq | player : id , player_api_id , player_name , player_fifa_api_id , birthday , height , weight | league : id , country_id , name | country : id , name | team : id , team_api_id , team_fifa_api_id , team_long_name , team_short_name | team_attributes : id , team_fifa_api_id , team_api_id , date , buildupplayspeed , buildupplayspeedclass , buildupplaydribbling , buildupplaydribblingclass , buildupplaypassing , buildupplaypassingclass , buildupplaypositioningclass , chancecreationpassing , chancecreationpassingclass , chancecreationcrossing , chancecreationcrossingclass , chancecreationshooting , chancecreationshootingclass , chancecreationpositioningclass , defencepressure , defencepressureclass , defenceaggression , defenceaggressionclass , defenceteamwidth , defenceteamwidthclass , defencedefenderlineclass output: SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.crossing  >  90 AND T2.preferred_foot  =  \"right\"\n Now please use valid SQLite to answer the following questions: How many friends does each student have?",
    "Here is an examples including input and output:\n input: question: What are the official names of cities, ordered descending by population? serialized_schema:  | farm | city : city_id , official_name , status , area_km_2 , population , census_ranking | farm : farm_id , year , total_horses , working_horses , total_cattle , oxen , bulls , cows , pigs , sheep_and_goats | farm_competition : competition_id , year , theme , host_city_id , hosts | competition_record : competition_id , farm_id , rank output: SELECT Official_Name FROM city ORDER BY Population DESC\n Now please use valid SQLite to answer the following questions: Show the names of high school students and their corresponding number of friends.",
    "Here is an examples including input and output:\n input: question: What are all distinct country for artists? serialized_schema:  | theme_gallery | artist : artist_id , name , country , year_join , age | exhibition : exhibition_id , year , theme , artist_id , ticket_price | exhibition_record : exhibition_id , date , attendance output: SELECT DISTINCT country FROM artist\n Now please use valid SQLite to answer the following questions: What are the names of the high schoolers and how many friends does each have?",
    "Here is an examples including input and output:\n input: question: What information do you have on colleges sorted by increasing enrollment numbers? serialized_schema:  | soccer_2 | college : cname , state , enr | player : pid , pname , ycard , hs | tryout : pid , cname , ppos , decision output: SELECT * FROM College ORDER BY enr\n Now please use valid SQLite to answer the following questions: What is the name of the high schooler who has the greatest number of friends?",
    "Here is an examples including input and output:\n input: question: Show the names of members and the decoration themes they have. serialized_schema:  | decoration_competition | college : college_id , name , leader_name , college_location | member : member_id , name , country , college_id | round : round_id , member_id , decoration_theme , rank_in_round output: SELECT T1.Name ,  T2.Decoration_Theme FROM member AS T1 JOIN round AS T2 ON T1.Member_ID  =  T2.Member_ID\n Now please use valid SQLite to answer the following questions: Return the name of the high school student with the most friends.",
    "Here is an examples including input and output:\n input: question: List all country and league names. serialized_schema:  | soccer_1 | player_attributes : id , player_fifa_api_id , player_api_id , date , overall_rating , potential , preferred_foot , attacking_work_rate , defensive_work_rate , crossing , finishing , heading_accuracy , short_passing , volleys , dribbling , curve , free_kick_accuracy , long_passing , ball_control , acceleration , sprint_speed , agility , reactions , balance , shot_power , jumping , stamina , strength , long_shots , aggression , interceptions , positioning , vision , penalties , marking , standing_tackle , sliding_tackle , gk_diving , gk_handling , gk_kicking , gk_positioning , gk_reflexes | sqlite_sequence : name , seq | player : id , player_api_id , player_name , player_fifa_api_id , birthday , height , weight | league : id , country_id , name | country : id , name | team : id , team_api_id , team_fifa_api_id , team_long_name , team_short_name | team_attributes : id , team_fifa_api_id , team_api_id , date , buildupplayspeed , buildupplayspeedclass , buildupplaydribbling , buildupplaydribblingclass , buildupplaypassing , buildupplaypassingclass , buildupplaypositioningclass , chancecreationpassing , chancecreationpassingclass , chancecreationcrossing , chancecreationcrossingclass , chancecreationshooting , chancecreationshootingclass , chancecreationpositioningclass , defencepressure , defencepressureclass , defenceaggression , defenceaggressionclass , defenceteamwidth , defenceteamwidthclass , defencedefenderlineclass output: SELECT T1.name ,  T2.name FROM Country AS T1 JOIN League AS T2 ON T1.id  =  T2.country_id\n Now please use valid SQLite to answer the following questions: Show the names of high schoolers who have at least 3 friends.",
    "Here is an examples including input and output:\n input: question: Find courses that ran in Fall 2009 but not in Spring 2010. serialized_schema:  | college_2 | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id output: SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 EXCEPT SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010\n Now please use valid SQLite to answer the following questions: What are the names of high schoolers who have 3 or more friends?",
    "Here is an examples including input and output:\n input: question: What is the name of the nurse has the most appointments? serialized_schema:  | hospital_1 | physician : employeeid , name , position , ssn | department : departmentid , name , head | affiliated_with : physician , department , primaryaffiliation | procedures : code , name , cost | trained_in : physician , treatment , certificationdate , certificationexpires | patient : ssn , name , address , phone , insuranceid , pcp | nurse : employeeid , name , position , registered , ssn | appointment : appointmentid , patient , prepnurse , physician , start , end , examinationroom | medication : code , name , brand , description | prescribes : physician , patient , medication , date , appointment , dose | block : blockfloor , blockcode | room : roomnumber , roomtype , blockfloor , blockcode , unavailable | on_call : nurse , blockfloor , blockcode , oncallstart , oncallend | stay : stayid , patient , room , staystart , stayend | undergoes : patient , procedures , stay , dateundergoes , physician , assistingnurse output: SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: Show the names of all of the high schooler Kyle's friends.",
    "Here is an examples including input and output:\n input: question: Which three cities have the largest regional population? serialized_schema:  | city_record | city : city_id , city , hanzi , hanyu_pinyin , regional_population , gdp | match : match_id , date , venue , score , result , competition | temperature : city_id , jan , feb , mar , apr , jun , jul , aug , sep , oct , nov , dec | hosting_city : year , match_id , host_city output: SELECT city FROM city ORDER BY regional_population DESC LIMIT 3\n Now please use valid SQLite to answer the following questions: Return the names of friends of the high school student Kyle.",
    "Here is an examples including input and output:\n input: question: What are the state and country of all the cities that have post codes starting with 4.\\ serialized_schema:  | customers_and_addresses | addresses : address_id , address_content , city , zip_postcode , state_province_county , country , other_address_details | products : product_id , product_details | customers : customer_id , payment_method , customer_name , date_became_customer , other_customer_details | customer_addresses : customer_id , address_id , date_address_from , address_type , date_address_to | customer_contact_channels : customer_id , channel_code , active_from_date , active_to_date , contact_number | customer_orders : order_id , customer_id , order_status , order_date , order_details | order_items : order_id , product_id , order_quantity output: SELECT state_province_county ,  country FROM addresses WHERE zip_postcode LIKE \"4%\"\n Now please use valid SQLite to answer the following questions: How many friends does the high school student Kyle have?",
    "Here is an examples including input and output:\n input: question: List the physicians' employee ids together with their primary affiliation departments' ids. serialized_schema:  | hospital_1 | physician : employeeid , name , position , ssn | department : departmentid , name , head | affiliated_with : physician , department , primaryaffiliation | procedures : code , name , cost | trained_in : physician , treatment , certificationdate , certificationexpires | patient : ssn , name , address , phone , insuranceid , pcp | nurse : employeeid , name , position , registered , ssn | appointment : appointmentid , patient , prepnurse , physician , start , end , examinationroom | medication : code , name , brand , description | prescribes : physician , patient , medication , date , appointment , dose | block : blockfloor , blockcode | room : roomnumber , roomtype , blockfloor , blockcode , unavailable | on_call : nurse , blockfloor , blockcode , oncallstart , oncallend | stay : stayid , patient , room , staystart , stayend | undergoes : patient , procedures , stay , dateundergoes , physician , assistingnurse output: SELECT physician ,  department FROM affiliated_with WHERE primaryaffiliation  =  1\n Now please use valid SQLite to answer the following questions: Count the number of friends Kyle has.",
    "Here is an examples including input and output:\n input: question: How many distinct parties are there for representatives? serialized_schema:  | election_representative | election : election_id , representative_id , date , votes , vote_percent , seats , place | representative : representative_id , name , state , party , lifespan output: SELECT count(DISTINCT Party) FROM representative\n Now please use valid SQLite to answer the following questions: Show ids of all students who do not have any friends.",
    "Here is an examples including input and output:\n input: question: Show the ids of the employees who don't authorize destruction for any document. serialized_schema:  | cre_Doc_Tracking_DB | ref_document_types : document_type_code , document_type_name , document_type_description | ref_calendar : calendar_date , day_number | ref_locations : location_code , location_name , location_description | roles : role_code , role_name , role_description | all_documents : document_id , date_stored , document_type_code , document_name , document_description , other_details | employees : employee_id , role_code , employee_name , gender_mfu , date_of_birth , other_details | document_locations : document_id , location_code , date_in_location_from , date_in_locaton_to | documents_to_be_destroyed : document_id , destruction_authorised_by_employee_id , destroyed_by_employee_id , planned_destruction_date , actual_destruction_date , other_details output: SELECT employee_id FROM Employees EXCEPT SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed\n Now please use valid SQLite to answer the following questions: What are the ids of high school students who do not have friends?",
    "Here is an examples including input and output:\n input: question: What is the structure of the document with the least number of accesses? serialized_schema:  | document_management | roles : role_code , role_description | users : user_id , role_code , user_name , user_login , password | document_structures : document_structure_code , parent_document_structure_code , document_structure_description | functional_areas : functional_area_code , parent_functional_area_code , functional_area_description | images : image_id , image_alt_text , image_name , image_url | documents : document_code , document_structure_code , document_type_code , access_count , document_name | document_functional_areas : document_code , functional_area_code | document_sections : section_id , document_code , section_sequence , section_code , section_title | document_sections_images : section_id , image_id output: SELECT t2.document_structure_description FROM documents AS t1 JOIN document_structures AS t2 ON t1.document_structure_code  =  t2.document_structure_code GROUP BY t1.document_structure_code ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: Show names of all high school students who do not have any friends.",
    "Here is an examples including input and output:\n input: question: Return the average price of products that have each category code. serialized_schema:  | customer_complaints | staff : staff_id , gender , first_name , last_name , email_address , phone_number | customers : customer_id , customer_type_code , address_line_1 , address_line_2 , town_city , state , email_address , phone_number | products : product_id , parent_product_id , product_category_code , date_product_first_available , date_product_discontinued , product_name , product_description , product_price | complaints : complaint_id , product_id , customer_id , complaint_outcome_code , complaint_status_code , complaint_type_code , date_complaint_raised , date_complaint_closed , staff_id output: SELECT avg(product_price) ,  product_category_code FROM products GROUP BY product_category_code\n Now please use valid SQLite to answer the following questions: What are the names of students who have no friends?",
    "Here is an examples including input and output:\n input: question: Are the customers holding coupons with amount 500 bad or good? serialized_schema:  | products_for_hire | discount_coupons : coupon_id , date_issued , coupon_amount | customers : customer_id , coupon_id , good_or_bad_customer , first_name , last_name , gender_mf , date_became_customer , date_last_hire | bookings : booking_id , customer_id , booking_status_code , returned_damaged_yn , booking_start_date , booking_end_date , count_hired , amount_payable , amount_of_discount , amount_outstanding , amount_of_refund | products_for_hire : product_id , product_type_code , daily_hire_cost , product_name , product_description | payments : payment_id , booking_id , customer_id , payment_type_code , amount_paid_in_full_yn , payment_date , amount_due , amount_paid | products_booked : booking_id , product_id , returned_yn , returned_late_yn , booked_count , booked_amount | view_product_availability : product_id , booking_id , status_date , available_yn output: SELECT T1.good_or_bad_customer FROM customers AS T1 JOIN discount_coupons AS T2 ON T1.coupon_id  =  T2.coupon_id WHERE T2.coupon_amount  =  500\n Now please use valid SQLite to answer the following questions: Show the ids of high schoolers who have friends and are also liked by someone else.",
    "Here is an examples including input and output:\n input: question: What are the names of the three artists who have produced the most songs, and how many works did they produce? serialized_schema:  | music_1 | genre : g_name , rating , most_popular_in | artist : artist_name , country , gender , preferred_genre | files : f_id , artist_name , file_size , duration , formats | song : song_name , artist_name , country , f_id , genre_is , rating , languages , releasedate , resolution output: SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3\n Now please use valid SQLite to answer the following questions: What are the ids of students who both have friends and are liked?",
    "Here is an examples including input and output:\n input: question: Return the description and unit of measurement for products in the 'Herbs' category. serialized_schema:  | products_gen_characteristics | ref_characteristic_types : characteristic_type_code , characteristic_type_description | ref_colors : color_code , color_description | ref_product_categories : product_category_code , product_category_description , unit_of_measure | characteristics : characteristic_id , characteristic_type_code , characteristic_data_type , characteristic_name , other_characteristic_details | products : product_id , color_code , product_category_code , product_name , typical_buying_price , typical_selling_price , product_description , other_product_details | product_characteristics : product_id , characteristic_id , product_characteristic_value output: SELECT product_category_description ,  unit_of_measure FROM ref_product_categories WHERE product_category_code  =  \"Herbs\"\n Now please use valid SQLite to answer the following questions: Show name of all students who have some friends and also are liked by someone else.",
    "Here is an examples including input and output:\n input: question: What are the distinct positions of the players from a country whose capital is Dublin? serialized_schema:  | match_season | country : country_id , country_name , capital , official_native_language | team : team_id , name | match_season : season , player , position , country , team , draft_pick_number , draft_class , college | player : player_id , player , years_played , total_wl , singles_wl , doubles_wl , team output: SELECT DISTINCT T2.Position FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T1.Capital  =  \"Dublin\"\n Now please use valid SQLite to answer the following questions: What are the names of high schoolers who both have friends and are liked?",
    "Here is an examples including input and output:\n input: question: Find the distinct names of all races held between 2014 and 2017? serialized_schema:  | formula_1 | circuits : circuitid , circuitref , name , location , country , lat , lng , alt , url | races : raceid , year , round , circuitid , name , date , time , url | drivers : driverid , driverref , number , code , forename , surname , dob , nationality , url | status : statusid , status | seasons : year , url | constructors : constructorid , constructorref , name , nationality , url | constructorstandings : constructorstandingsid , raceid , constructorid , points , position , positiontext , wins | results : resultid , raceid , driverid , constructorid , number , grid , position , positiontext , positionorder , points , laps , time , milliseconds , fastestlap , rank , fastestlaptime , fastestlapspeed , statusid | driverstandings : driverstandingsid , raceid , driverid , points , position , positiontext , wins | constructorresults : constructorresultsid , raceid , constructorid , points , status | qualifying : qualifyid , raceid , driverid , constructorid , number , position , q1 , q2 , q3 | pitstops : raceid , driverid , stop , lap , time , duration , milliseconds | laptimes : raceid , driverid , lap , position , time , milliseconds output: SELECT DISTINCT name FROM races WHERE YEAR BETWEEN 2014 AND 2017\n Now please use valid SQLite to answer the following questions: Count the number of likes for each student id.",
    "Here is an examples including input and output:\n input: question: display the employee number and job id for all employees whose salary is smaller than any salary of those employees whose job title is MK_MAN. serialized_schema:  | hr_1 | regions : region_id , region_name | countries : country_id , country_name , region_id | departments : department_id , department_name , manager_id , location_id | jobs : job_id , job_title , min_salary , max_salary | employees : employee_id , first_name , last_name , email , phone_number , hire_date , job_id , salary , commission_pct , manager_id , department_id | job_history : employee_id , start_date , end_date , job_id , department_id | locations : location_id , street_address , postal_code , city , state_province , country_id output: SELECT employee_id ,  job_id FROM employees WHERE salary  <  ( SELECT min(salary) FROM employees WHERE job_id  =  'MK_MAN' )\n Now please use valid SQLite to answer the following questions: How many likes correspond to each student id?",
    "Here is an examples including input and output:\n input: question: Show storm name with at least two regions and 10 cities affected. serialized_schema:  | storm_record | storm : storm_id , name , dates_active , max_speed , damage_millions_usd , number_deaths | region : region_id , region_code , region_name | affected_region : region_id , storm_id , number_city_affected output: SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING count(*)  >=  2 INTERSECT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING sum(T2.number_city_affected)  >=  10\n Now please use valid SQLite to answer the following questions: Show the names of high schoolers who have likes, and numbers of likes for each.",
    "Here is an examples including input and output:\n input: question: What are the ids of all songs that are available on mp4 or have a higher resolution than 720? serialized_schema:  | music_1 | genre : g_name , rating , most_popular_in | artist : artist_name , country , gender , preferred_genre | files : f_id , artist_name , file_size , duration , formats | song : song_name , artist_name , country , f_id , genre_is , rating , languages , releasedate , resolution output: SELECT f_id FROM files WHERE formats  =  \"mp4\" UNION SELECT f_id FROM song WHERE resolution  >  720\n Now please use valid SQLite to answer the following questions: What are the names of high schoolers who have likes, and how many likes does each have?",
    "Here is an examples including input and output:\n input: question: What is the name of the course that has the most student enrollment? serialized_schema:  | e_learning | course_authors_and_tutors : author_id , author_tutor_atb , login_name , password , personal_name , middle_name , family_name , gender_mf , address_line_1 | students : student_id , date_of_registration , date_of_latest_logon , login_name , password , personal_name , middle_name , family_name | subjects : subject_id , subject_name | courses : course_id , author_id , subject_id , course_name , course_description | student_course_enrolment : registration_id , student_id , course_id , date_of_enrolment , date_of_completion | student_tests_taken : registration_id , date_test_taken , test_result output: SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY COUNT(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: What is the name of the high schooler who has the greatest number of likes?",
    "Here is an examples including input and output:\n input: question: What are the phones and emails of workshop groups in which services are performed? serialized_schema:  | cre_Drama_Workshop_Groups | ref_payment_methods : payment_method_code , payment_method_description | ref_service_types : service_type_code , parent_service_type_code , service_type_description | addresses : address_id , line_1 , line_2 , city_town , state_county , other_details | products : product_id , product_name , product_price , product_description , other_product_service_details | marketing_regions : marketing_region_code , marketing_region_name , marketing_region_descriptrion , other_details | clients : client_id , address_id , customer_email_address , customer_name , customer_phone , other_details | drama_workshop_groups : workshop_group_id , address_id , currency_code , marketing_region_code , store_name , store_phone , store_email_address , other_details | performers : performer_id , address_id , customer_name , customer_phone , customer_email_address , other_details | customers : customer_id , address_id , customer_name , customer_phone , customer_email_address , other_details | stores : store_id , address_id , marketing_region_code , store_name , store_phone , store_email_address , other_details | bookings : booking_id , customer_id , workshop_group_id , status_code , store_id , order_date , planned_delivery_date , actual_delivery_date , other_order_details | performers_in_bookings : order_id , performer_id | customer_orders : order_id , customer_id , store_id , order_date , planned_delivery_date , actual_delivery_date , other_order_details | order_items : order_item_id , order_id , product_id , order_quantity , other_item_details | invoices : invoice_id , order_id , payment_method_code , product_id , order_quantity , other_item_details , order_item_id | services : service_id , service_type_code , workshop_group_id , product_description , product_name , product_price , other_product_service_details | bookings_services : order_id , product_id | invoice_items : invoice_item_id , invoice_id , order_id , order_item_id , product_id , order_quantity , other_item_details output: SELECT T1.Store_Phone ,  T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID\n Now please use valid SQLite to answer the following questions: Give the name of the student with the most likes.",
    "Here is an examples including input and output:\n input: question: How many customers have email that contains \"gmail.com\"? serialized_schema:  | chinook_1 | album : albumid , title , artistid | artist : artistid , name | customer : customerid , firstname , lastname , company , address , city , state , country , postalcode , phone , fax , email , supportrepid | employee : employeeid , lastname , firstname , title , reportsto , birthdate , hiredate , address , city , state , country , postalcode , phone , fax , email | genre : genreid , name | invoice : invoiceid , customerid , invoicedate , billingaddress , billingcity , billingstate , billingcountry , billingpostalcode , total | invoiceline : invoicelineid , invoiceid , trackid , unitprice , quantity | mediatype : mediatypeid , name | playlist : playlistid , name | playlisttrack : playlistid , trackid | track : trackid , name , albumid , mediatypeid , genreid , composer , milliseconds , bytes , unitprice output: SELECT COUNT(*) FROM CUSTOMER WHERE Email LIKE \"%gmail.com%\"\n Now please use valid SQLite to answer the following questions: Show the names of students who have at least 2 likes.",
    "Here is an examples including input and output:\n input: question: How many distinct kinds of camera lenses are used to take photos of mountains in the country 'Ethiopia'? serialized_schema:  | mountain_photos | mountain : id , name , height , prominence , range , country | camera_lens : id , brand , name , focal_length_mm , max_aperture | photos : id , camera_lens_id , mountain_id , color , name output: SELECT count(DISTINCT T2.camera_lens_id) FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id WHERE T1.country  =  'Ethiopia'\n Now please use valid SQLite to answer the following questions: What are the names of students who have 2 or more likes?",
    "Here is an examples including input and output:\n input: question: What is department name and office for the professor whose last name is Heffington? serialized_schema:  | college_1 | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num output: SELECT T3.dept_name  ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T1.emp_lname  =  'Heffington'\n Now please use valid SQLite to answer the following questions: Show the names of students who have a grade higher than 5 and have at least 2 friends.",
    "Here is an examples including input and output:\n input: question: For each city, how many branches opened before 2010? serialized_schema:  | shop_membership | member : member_id , card_number , name , hometown , level | branch : branch_id , name , open_year , address_road , city , membership_amount | membership_register_branch : member_id , branch_id , register_year | purchase : member_id , branch_id , year , total_pounds output: SELECT city ,  count(*) FROM branch WHERE open_year  <  2010 GROUP BY city\n Now please use valid SQLite to answer the following questions: What are the names of high schoolers who have a grade of over 5 and have 2 or more friends?",
    "Here is an examples including input and output:\n input: question: What is the number of professors who are in the Accounting or Biology departments? serialized_schema:  | college_1 | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num output: SELECT count(*) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T2.dept_name  =  'Accounting' OR T2.dept_name  =  'Biology'\n Now please use valid SQLite to answer the following questions: How many likes does Kyle have?",
    "Here is an examples including input and output:\n input: question: Find the distinct driver id of all drivers that have a longer stop duration than some drivers in the race whose id is 841? serialized_schema:  | formula_1 | circuits : circuitid , circuitref , name , location , country , lat , lng , alt , url | races : raceid , year , round , circuitid , name , date , time , url | drivers : driverid , driverref , number , code , forename , surname , dob , nationality , url | status : statusid , status | seasons : year , url | constructors : constructorid , constructorref , name , nationality , url | constructorstandings : constructorstandingsid , raceid , constructorid , points , position , positiontext , wins | results : resultid , raceid , driverid , constructorid , number , grid , position , positiontext , positionorder , points , laps , time , milliseconds , fastestlap , rank , fastestlaptime , fastestlapspeed , statusid | driverstandings : driverstandingsid , raceid , driverid , points , position , positiontext , wins | constructorresults : constructorresultsid , raceid , constructorid , points , status | qualifying : qualifyid , raceid , driverid , constructorid , number , position , q1 , q2 , q3 | pitstops : raceid , driverid , stop , lap , time , duration , milliseconds | laptimes : raceid , driverid , lap , position , time , milliseconds output: SELECT DISTINCT driverid ,  STOP FROM pitstops WHERE duration  >  (SELECT min(duration) FROM pitstops WHERE raceid  =  841)\n Now please use valid SQLite to answer the following questions: Return the number of likes that the high schooler named Kyle has.",
    "Here is an examples including input and output:\n input: question: What are the names of the storms that affected both the regions of Afghanistan and Albania? serialized_schema:  | storm_record | storm : storm_id , name , dates_active , max_speed , damage_millions_usd , number_deaths | region : region_id , region_code , region_name | affected_region : region_id , storm_id , number_city_affected output: SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.Region_name  =  'Afghanistan' INTERSECT SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.Region_name  =  'Albania'\n Now please use valid SQLite to answer the following questions: Find the average grade of all students who have some friends.",
    "Here is an examples including input and output:\n input: question: How many companies were created by Andy? serialized_schema:  | manufactory_1 | manufacturers : code , name , headquarter , founder , revenue | products : code , name , price , manufacturer output: SELECT count(*) FROM manufacturers WHERE founder  =  'Andy'\n Now please use valid SQLite to answer the following questions: What is the average grade of students who have friends?",
    "Here is an examples including input and output:\n input: question: Show the names of countries and the average speed of roller coasters from each country. serialized_schema:  | roller_coaster | roller_coaster : roller_coaster_id , name , park , country_id , length , height , speed , opened , status | country : country_id , name , population , area , languages output: SELECT T1.Name ,  avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID GROUP BY T1.Name\n Now please use valid SQLite to answer the following questions: Find the minimum grade of students who have no friends.",
    "Here is an examples including input and output:\n input: question: What are the names of the states that have 2 to 4 employees living there? serialized_schema:  | driving_school | addresses : address_id , line_1_number_building , city , zip_postcode , state_province_county , country | staff : staff_id , staff_address_id , nickname , first_name , middle_name , last_name , date_of_birth , date_joined_staff , date_left_staff | vehicles : vehicle_id , vehicle_details | customers : customer_id , customer_address_id , customer_status_code , date_became_customer , date_of_birth , first_name , last_name , amount_outstanding , email_address , phone_number , cell_mobile_phone_number | customer_payments : customer_id , datetime_payment , payment_method_code , amount_payment | lessons : lesson_id , customer_id , lesson_status_code , staff_id , vehicle_id , lesson_date , lesson_time , price output: SELECT T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.state_province_county HAVING count(*) BETWEEN 2 AND 4;\n Now please use valid SQLite to answer the following questions: What is the lowest grade of students who do not have any friends?",
    "Here is an examples including input and output:\n input: question: Find the names of procedures which physician John Wen was trained in. serialized_schema:  | hospital_1 | physician : employeeid , name , position , ssn | department : departmentid , name , head | affiliated_with : physician , department , primaryaffiliation | procedures : code , name , cost | trained_in : physician , treatment , certificationdate , certificationexpires | patient : ssn , name , address , phone , insuranceid , pcp | nurse : employeeid , name , position , registered , ssn | appointment : appointmentid , patient , prepnurse , physician , start , end , examinationroom | medication : code , name , brand , description | prescribes : physician , patient , medication , date , appointment , dose | block : blockfloor , blockcode | room : roomnumber , roomtype , blockfloor , blockcode , unavailable | on_call : nurse , blockfloor , blockcode , oncallstart , oncallend | stay : stayid , patient , room , staystart , stayend | undergoes : patient , procedures , stay , dateundergoes , physician , assistingnurse output: SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"\n Now please use valid SQLite to answer the following questions: Which states have both owners and professionals living there?",
    "Here is an examples including input and output:\n input: question: What are the different regions of clubs in ascending alphabetical order? serialized_schema:  | sports_competition | club : club_id , name , region , start_year | club_rank : rank , club_id , gold , silver , bronze , total | player : player_id , name , position , club_id , apps , tries , goals , points | competition : competition_id , year , competition_type , country | competition_result : competition_id , club_id_1 , club_id_2 , score output: SELECT DISTINCT Region FROM club ORDER BY Region ASC\n Now please use valid SQLite to answer the following questions: Find the states where both owners and professionals live.",
    "Here is an examples including input and output:\n input: question: Show writers who have published a book with price more than 4000000. serialized_schema:  | book_2 | publication : publication_id , book_id , publisher , publication_date , price | book : book_id , title , issues , writer output: SELECT T1.Writer FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID  =  T2.Book_ID WHERE T2.Price  >  4000000\n Now please use valid SQLite to answer the following questions: What is the average age of the dogs who have gone through any treatments?",
    "Here is an examples including input and output:\n input: question: Find the name of physicians who are affiliated with Surgery or Psychiatry department. serialized_schema:  | hospital_1 | physician : employeeid , name , position , ssn | department : departmentid , name , head | affiliated_with : physician , department , primaryaffiliation | procedures : code , name , cost | trained_in : physician , treatment , certificationdate , certificationexpires | patient : ssn , name , address , phone , insuranceid , pcp | nurse : employeeid , name , position , registered , ssn | appointment : appointmentid , patient , prepnurse , physician , start , end , examinationroom | medication : code , name , brand , description | prescribes : physician , patient , medication , date , appointment , dose | block : blockfloor , blockcode | room : roomnumber , roomtype , blockfloor , blockcode , unavailable | on_call : nurse , blockfloor , blockcode , oncallstart , oncallend | stay : stayid , patient , room , staystart , stayend | undergoes : patient , procedures , stay , dateundergoes , physician , assistingnurse output: SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Surgery' OR T3.name  =  'Psychiatry'\n Now please use valid SQLite to answer the following questions: Find the average age of the dogs who went through treatments.",
    "Here is an examples including input and output:\n input: question: what is the name of the instructor who is in Statistics department and earns the lowest salary? serialized_schema:  | college_2 | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id output: SELECT name FROM instructor WHERE dept_name  =  'Statistics' ORDER BY salary LIMIT 1\n Now please use valid SQLite to answer the following questions: Which professionals live in the state of Indiana or have done treatment on more than 2 treatments? List his or her id, last name and cell phone.",
    "Here is an examples including input and output:\n input: question: Show the names of the buildings that have more than one company offices. serialized_schema:  | company_office | buildings : id , name , city , height , stories , status | companies : id , name , headquarters , industry , sales_billion , profits_billion , assets_billion , market_value_billion | office_locations : building_id , company_id , move_in_year output: SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id GROUP BY T1.building_id HAVING COUNT(*)  >  1\n Now please use valid SQLite to answer the following questions: Find the id, last name and cell phone of the professionals who live in the state of Indiana or have performed more than two treatments.",
    "Here is an examples including input and output:\n input: question: Find the number of routes operated by American Airlines. serialized_schema:  | flight_4 | routes : rid , dst_apid , dst_ap , src_apid , src_ap , alid , airline , codeshare | airports : apid , name , city , country , x , y , elevation , iata , icao | airlines : alid , name , iata , icao , callsign , country , active output: SELECT count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  'American Airlines'\n Now please use valid SQLite to answer the following questions: Which dogs have not cost their owner more than 1000 for treatment ? List the dog names .",
    "Here is an examples including input and output:\n input: question: List the all the distinct names of the products with the characteristic name 'warm'. serialized_schema:  | products_gen_characteristics | ref_characteristic_types : characteristic_type_code , characteristic_type_description | ref_colors : color_code , color_description | ref_product_categories : product_category_code , product_category_description , unit_of_measure | characteristics : characteristic_id , characteristic_type_code , characteristic_data_type , characteristic_name , other_characteristic_details | products : product_id , color_code , product_category_code , product_name , typical_buying_price , typical_selling_price , product_description , other_product_details | product_characteristics : product_id , characteristic_id , product_characteristic_value output: SELECT DISTINCT t1.product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  \"warm\"\n Now please use valid SQLite to answer the following questions: What are the names of the dogs for which the owner has not spend more than 1000 for treatment ?",
    "Here is an examples including input and output:\n input: question: List the names of people that are not employed by any company serialized_schema:  | company_employee | people : people_id , age , name , nationality , graduation_college | company : company_id , name , headquarters , industry , sales_in_billion , profits_in_billion , assets_in_billion , market_value_in_billion | employment : company_id , people_id , year_working output: SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM employment)\n Now please use valid SQLite to answer the following questions: Which first names are used for professionals or owners but are not used as dog names?",
    "Here is an examples including input and output:\n input: question: Find the names of the tourist attractions that is either accessible by bus or at address 254 Ottilie Junction. serialized_schema:  | cre_Theme_park | ref_hotel_star_ratings : star_rating_code , star_rating_description | locations : location_id , location_name , address , other_details | ref_attraction_types : attraction_type_code , attraction_type_description | visitors : tourist_id , tourist_details | features : feature_id , feature_details | hotels : hotel_id , star_rating_code , pets_allowed_yn , price_range , other_hotel_details | tourist_attractions : tourist_attraction_id , attraction_type_code , location_id , how_to_get_there , name , description , opening_hours , other_details | street_markets : market_id , market_details | shops : shop_id , shop_details | museums : museum_id , museum_details | royal_family : royal_family_id , royal_family_details | theme_parks : theme_park_id , theme_park_details | visits : visit_id , tourist_attraction_id , tourist_id , visit_date , visit_details | photos : photo_id , tourist_attraction_id , name , description , filename , other_details | staff : staff_id , tourist_attraction_id , name , other_details | tourist_attraction_features : tourist_attraction_id , feature_id output: SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID  =  T2.Location_ID WHERE T1.Address  =  \"254 Ottilie Junction\" OR T2.How_to_Get_There  =  \"bus\"\n Now please use valid SQLite to answer the following questions: Find the first names that are used for professionals or owners but are not used as dog names.",
    "Here is an examples including input and output:\n input: question: How many allergies are there? serialized_schema:  | allergy_1 | allergy_type : allergy , allergytype | has_allergy : stuid , allergy | student : stuid , lname , fname , age , sex , major , advisor , city_code output: SELECT count(DISTINCT allergy) FROM Allergy_type\n Now please use valid SQLite to answer the following questions: Which professional did not operate any treatment on dogs? List the professional's id, role and email.",
    "Here is an examples including input and output:\n input: question: How many patients do each physician take care of? List their names and number of patients they take care of. serialized_schema:  | hospital_1 | physician : employeeid , name , position , ssn | department : departmentid , name , head | affiliated_with : physician , department , primaryaffiliation | procedures : code , name , cost | trained_in : physician , treatment , certificationdate , certificationexpires | patient : ssn , name , address , phone , insuranceid , pcp | nurse : employeeid , name , position , registered , ssn | appointment : appointmentid , patient , prepnurse , physician , start , end , examinationroom | medication : code , name , brand , description | prescribes : physician , patient , medication , date , appointment , dose | block : blockfloor , blockcode | room : roomnumber , roomtype , blockfloor , blockcode , unavailable | on_call : nurse , blockfloor , blockcode , oncallstart , oncallend | stay : stayid , patient , room , staystart , stayend | undergoes : patient , procedures , stay , dateundergoes , physician , assistingnurse output: SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid\n Now please use valid SQLite to answer the following questions: Give me the id, role and email of the professionals who did not perform any treatment on dogs.",
    "Here is an examples including input and output:\n input: question: What are the names of documents that have both one of the three most common types and one of three most common structures? serialized_schema:  | document_management | roles : role_code , role_description | users : user_id , role_code , user_name , user_login , password | document_structures : document_structure_code , parent_document_structure_code , document_structure_description | functional_areas : functional_area_code , parent_functional_area_code , functional_area_description | images : image_id , image_alt_text , image_name , image_url | documents : document_code , document_structure_code , document_type_code , access_count , document_name | document_functional_areas : document_code , functional_area_code | document_sections : section_id , document_code , section_sequence , section_code , section_title | document_sections_images : section_id , image_id output: SELECT document_name FROM documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 3 INTERSECT SELECT document_name FROM documents GROUP BY document_structure_code ORDER BY count(*) DESC LIMIT 3\n Now please use valid SQLite to answer the following questions: Which owner owns the most dogs? List the owner id, first name and last name.",
    "Here is an examples including input and output:\n input: question: Find the number of female students (with F sex) living in Smith Hall serialized_schema:  | dorm_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | dorm : dormid , dorm_name , student_capacity , gender | dorm_amenity : amenid , amenity_name | has_amenity : dormid , amenid | lives_in : stuid , dormid , room_number output: SELECT count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.dorm_name  =  'Smith Hall' AND T1.sex  =  'F'\n Now please use valid SQLite to answer the following questions: Return the owner id, first name and last name of the owner who has the most dogs.",
    "Here is an examples including input and output:\n input: question: Who is the youngest male? serialized_schema:  | network_2 | person : name , age , city , gender , job | personfriend : name , friend , year output: SELECT name FROM Person WHERE gender  =  'male' AND age  =  (SELECT min(age) FROM person WHERE gender  =  'male' )\n Now please use valid SQLite to answer the following questions: Which professionals have done at least two treatments? List the professional's id, role, and first name.",
    "Here is an examples including input and output:\n input: question: What are the balances of checking accounts belonging to people with savings balances greater than the average savings balance? serialized_schema:  | small_bank_1 | accounts : custid , name | savings : custid , balance | checking : custid , balance output: SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T1.name IN (SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  >  (SELECT avg(balance) FROM savings))\n Now please use valid SQLite to answer the following questions: What are the id, role, and first name of the professionals who have performed two or more treatments?",
    "Here is an examples including input and output:\n input: question: What is the maximum and minimum resolution of all songs that are approximately 3 minutes long? serialized_schema:  | music_1 | genre : g_name , rating , most_popular_in | artist : artist_name , country , gender , preferred_genre | files : f_id , artist_name , file_size , duration , formats | song : song_name , artist_name , country , f_id , genre_is , rating , languages , releasedate , resolution output: SELECT max(T2.resolution) ,  min(T2.resolution) FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.duration LIKE \"3:%\"\n Now please use valid SQLite to answer the following questions: What is the name of the breed with the most dogs?",
    "Here is an examples including input and output:\n input: question: Show the names and ids of tourist attractions that are visited at most once. serialized_schema:  | cre_Theme_park | ref_hotel_star_ratings : star_rating_code , star_rating_description | locations : location_id , location_name , address , other_details | ref_attraction_types : attraction_type_code , attraction_type_description | visitors : tourist_id , tourist_details | features : feature_id , feature_details | hotels : hotel_id , star_rating_code , pets_allowed_yn , price_range , other_hotel_details | tourist_attractions : tourist_attraction_id , attraction_type_code , location_id , how_to_get_there , name , description , opening_hours , other_details | street_markets : market_id , market_details | shops : shop_id , shop_details | museums : museum_id , museum_details | royal_family : royal_family_id , royal_family_details | theme_parks : theme_park_id , theme_park_details | visits : visit_id , tourist_attraction_id , tourist_id , visit_date , visit_details | photos : photo_id , tourist_attraction_id , name , description , filename , other_details | staff : staff_id , tourist_attraction_id , name , other_details | tourist_attraction_features : tourist_attraction_id , feature_id output: SELECT T1.Name ,  T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*)  <=  1\n Now please use valid SQLite to answer the following questions: Which breed do the most dogs have? Give me the breed name.",
    "Here is an examples including input and output:\n input: question: What are the medicine and trade names that cannot interact with the enzyme with the product 'Heme'? serialized_schema:  | medicine_enzyme_interaction | medicine : id , name , trade_name , fda_approved | enzyme : id , name , location , product , chromosome , omim , porphyria | medicine_enzyme_interaction : enzyme_id , medicine_id , interaction_type output: SELECT name ,  trade_name FROM medicine EXCEPT SELECT T1.name ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id JOIN enzyme AS T3 ON T3.id  =  T2.enzyme_id WHERE T3.product  =  'Protoporphyrinogen IX'\n Now please use valid SQLite to answer the following questions: Which owner has paid for the most treatments on his or her dogs? List the owner id and last name.",
    "Here is an examples including input and output:\n input: question: Select the name and price of all products with a price larger than or equal to $180, and sort first by price (in descending order), and then by name  (in ascending order). serialized_schema:  | manufactory_1 | manufacturers : code , name , headquarter , founder , revenue | products : code , name , price , manufacturer output: SELECT name ,  price FROM products WHERE price  >=  180 ORDER BY price DESC ,  name ASC\n Now please use valid SQLite to answer the following questions: Tell me the owner id and last name of the owner who spent the most on treatments of his or her dogs.",
    "Here is an examples including input and output:\n input: question: How many accelerators are not compatible with the browsers listed ? serialized_schema:  | browser_web | web_client_accelerator : id , name , operating_system , client , connection | browser : id , name , market_share | accelerator_compatible_browser : accelerator_id , browser_id , compatible_since_year output: SELECT count(*) FROM web_client_accelerator WHERE id NOT IN ( SELECT accelerator_id FROM accelerator_compatible_browser );\n Now please use valid SQLite to answer the following questions: What is the description of the treatment type that costs the least money in total?",
    "Here is an examples including input and output:\n input: question: Find the number of male (sex is 'M') students who have some food type allery. serialized_schema:  | allergy_1 | allergy_type : allergy , allergytype | has_allergy : stuid , allergy | student : stuid , lname , fname , age , sex , major , advisor , city_code output: SELECT count(*) FROM Student WHERE sex  =  \"M\" AND StuID IN (SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\")\n Now please use valid SQLite to answer the following questions: Give me the description of the treatment type whose total cost is the lowest.",
    "Here is an examples including input and output:\n input: question: How many schools are in the basketball match? serialized_schema:  | university_basketball | basketball_match : team_id , school_id , team_name , acc_regular_season , acc_percent , acc_home , acc_road , all_games , all_games_percent , all_home , all_road , all_neutral | university : school_id , school , location , founded , affiliation , enrollment , nickname , primary_conference output: SELECT count(DISTINCT school_id) FROM basketball_match\n Now please use valid SQLite to answer the following questions: Which owner has paid the largest amount of money in total for their dogs? Show the owner id and zip code.",
    "Here is an examples including input and output:\n input: question: How many wines are produced at Robert Biale winery? serialized_schema:  | wine_1 | grapes : id , grape , color | appellations : no , appelation , county , state , area , isava | wine : no , grape , winery , appelation , state , name , year , price , score , cases , drink output: SELECT count(*) FROM WINE WHERE Winery  =  \"Robert Biale\"\n Now please use valid SQLite to answer the following questions: Find the owner id and zip code of the owner who spent the most money in total for his or her dogs.",
    "Here is an examples including input and output:\n input: question: Show different occupations along with the number of players in each occupation. serialized_schema:  | riding_club | player : player_id , sponsor_name , player_name , gender , residence , occupation , votes , rank | club : club_id , club_name , region , start_year | coach : coach_id , coach_name , gender , club_id , rank | player_coach : player_id , coach_id , starting_year | match_result : rank , club_id , gold , big_silver , small_silver , bronze , points output: SELECT Occupation ,  COUNT(*) FROM player GROUP BY Occupation\n Now please use valid SQLite to answer the following questions: Which professionals have done at least two types of treatments? List the professional id and cell phone.",
    "Here is an examples including input and output:\n input: question: For each origin, how many flights came from there? serialized_schema:  | flight_1 | flight : flno , origin , destination , distance , departure_date , arrival_date , price , aid | aircraft : aid , name , distance | employee : eid , name , salary | certificate : eid , aid output: SELECT origin ,  count(*) FROM Flight GROUP BY origin\n Now please use valid SQLite to answer the following questions: Find the id and cell phone of the professionals who operate two or more types of treatments.",
    "Here is an examples including input and output:\n input: question: What are the names of parties and their respective regions? serialized_schema:  | party_people | region : region_id , region_name , date , label , format , catalogue | party : party_id , minister , took_office , left_office , region_id , party_name | member : member_id , member_name , party_id , in_office | party_events : event_id , event_name , party_id , member_in_charge_id output: SELECT T1.party_name ,  T2.region_name FROM party AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id\n Now please use valid SQLite to answer the following questions: What are the first name and last name of the professionals who have done treatment with cost below average?",
    "Here is an examples including input and output:\n input: question: How many Bangladeshi artists are listed? serialized_schema:  | music_1 | genre : g_name , rating , most_popular_in | artist : artist_name , country , gender , preferred_genre | files : f_id , artist_name , file_size , duration , formats | song : song_name , artist_name , country , f_id , genre_is , rating , languages , releasedate , resolution output: SELECT count(*) FROM artist WHERE country  =  \"Bangladesh\"\n Now please use valid SQLite to answer the following questions: Which professionals have operated a treatment that costs less than the average? Give me theor first names and last names.",
    "Here is an examples including input and output:\n input: question: Who is the youngest employee in the company? List employee's first and last name. serialized_schema:  | store_1 | artists : id , name | sqlite_sequence : name , seq | albums : id , title , artist_id | employees : id , last_name , first_name , title , reports_to , birth_date , hire_date , address , city , state , country , postal_code , phone , fax , email | customers : id , first_name , last_name , company , address , city , state , country , postal_code , phone , fax , email , support_rep_id | genres : id , name | invoices : id , customer_id , invoice_date , billing_address , billing_city , billing_state , billing_country , billing_postal_code , total | media_types : id , name | tracks : id , name , album_id , media_type_id , genre_id , composer , milliseconds , bytes , unit_price | invoice_lines : id , invoice_id , track_id , unit_price , quantity | playlists : id , name | playlist_tracks : playlist_id , track_id output: SELECT first_name , last_name FROM employees ORDER BY birth_date DESC LIMIT 1;\n Now please use valid SQLite to answer the following questions: List the date of each treatment, together with the first name of the professional who operated it.",
    "Here is an examples including input and output:\n input: question: Count the products that have the color description \"white\" or have the characteristic name \"hot\". serialized_schema:  | products_gen_characteristics | ref_characteristic_types : characteristic_type_code , characteristic_type_description | ref_colors : color_code , color_description | ref_product_categories : product_category_code , product_category_description , unit_of_measure | characteristics : characteristic_id , characteristic_type_code , characteristic_data_type , characteristic_name , other_characteristic_details | products : product_id , color_code , product_category_code , product_name , typical_buying_price , typical_selling_price , product_description , other_product_details | product_characteristics : product_id , characteristic_id , product_characteristic_value output: SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  \"white\" OR t3.characteristic_name  =  \"hot\"\n Now please use valid SQLite to answer the following questions: What are the date and the operating professional's first name of each treatment?",
    "Here is an examples including input and output:\n input: question: Show the season, the player, and the name of the team that players belong to. serialized_schema:  | match_season | country : country_id , country_name , capital , official_native_language | team : team_id , name | match_season : season , player , position , country , team , draft_pick_number , draft_class , college | player : player_id , player , years_played , total_wl , singles_wl , doubles_wl , team output: SELECT T1.Season ,  T1.Player ,  T2.Name FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id\n Now please use valid SQLite to answer the following questions: List the cost of each treatment and the corresponding treatment type description.",
    "Here is an examples including input and output:\n input: question: Count the number of documents that do not have expenses. serialized_schema:  | cre_Docs_and_Epenses | ref_document_types : document_type_code , document_type_name , document_type_description | ref_budget_codes : budget_type_code , budget_type_description | projects : project_id , project_details | documents : document_id , document_type_code , project_id , document_date , document_name , document_description , other_details | statements : statement_id , statement_details | documents_with_expenses : document_id , budget_type_code , document_details | accounts : account_id , statement_id , account_details output: SELECT count(*) FROM Documents WHERE document_id NOT IN ( SELECT document_id FROM Documents_with_expenses )\n Now please use valid SQLite to answer the following questions: What are the cost and treatment type description of each treatment?",
    "Here is an examples including input and output:\n input: question: List all of the ids for left-footed players with a height between 180cm and 190cm. serialized_schema:  | soccer_1 | player_attributes : id , player_fifa_api_id , player_api_id , date , overall_rating , potential , preferred_foot , attacking_work_rate , defensive_work_rate , crossing , finishing , heading_accuracy , short_passing , volleys , dribbling , curve , free_kick_accuracy , long_passing , ball_control , acceleration , sprint_speed , agility , reactions , balance , shot_power , jumping , stamina , strength , long_shots , aggression , interceptions , positioning , vision , penalties , marking , standing_tackle , sliding_tackle , gk_diving , gk_handling , gk_kicking , gk_positioning , gk_reflexes | sqlite_sequence : name , seq | player : id , player_api_id , player_name , player_fifa_api_id , birthday , height , weight | league : id , country_id , name | country : id , name | team : id , team_api_id , team_fifa_api_id , team_long_name , team_short_name | team_attributes : id , team_fifa_api_id , team_api_id , date , buildupplayspeed , buildupplayspeedclass , buildupplaydribbling , buildupplaydribblingclass , buildupplaypassing , buildupplaypassingclass , buildupplaypositioningclass , chancecreationpassing , chancecreationpassingclass , chancecreationcrossing , chancecreationcrossingclass , chancecreationshooting , chancecreationshootingclass , chancecreationpositioningclass , defencepressure , defencepressureclass , defenceaggression , defenceaggressionclass , defenceteamwidth , defenceteamwidthclass , defencedefenderlineclass output: SELECT player_api_id FROM Player WHERE height  >=  180 AND height  <=  190 INTERSECT SELECT player_api_id FROM Player_Attributes WHERE preferred_foot  =  \"left\"\n Now please use valid SQLite to answer the following questions: List each owner's first name, last name, and the size of his for her dog.",
    "Here is an examples including input and output:\n input: question: What are the ids and names of the architects who built at least 3 bridges ? serialized_schema:  | architecture | architect : id , name , nationality , gender | bridge : architect_id , id , name , location , length_meters , length_feet | mill : architect_id , id , location , name , type , built_year , notes output: SELECT T1.id ,  T1.name FROM architect AS T1 JOIN bridge AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id HAVING count(*)  >=  3\n Now please use valid SQLite to answer the following questions: What are each owner's first name, last name, and the size of their dog?",
    "Here is an examples including input and output:\n input: question: Find the ship type that are used by both ships with Panama and Malta flags. serialized_schema:  | ship_1 | captain : captain_id , name , ship_id , age , class , rank | ship : ship_id , name , type , built_year , class , flag output: SELECT TYPE FROM ship WHERE flag  =  'Panama' INTERSECT SELECT TYPE FROM ship WHERE flag  =  'Malta'\n Now please use valid SQLite to answer the following questions: List pairs of the owner's first name and the dogs's name.",
    "Here is an examples including input and output:\n input: question: How many students are there? serialized_schema:  | dorm_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | dorm : dormid , dorm_name , student_capacity , gender | dorm_amenity : amenid , amenity_name | has_amenity : dormid , amenid | lives_in : stuid , dormid , room_number output: SELECT count(*) FROM student\n Now please use valid SQLite to answer the following questions: What are each owner's first name and their dogs's name?",
    "Here is an examples including input and output:\n input: question: How many sports do we have? serialized_schema:  | game_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | video_games : gameid , gname , gtype | plays_games : stuid , gameid , hours_played | sportsinfo : stuid , sportname , hoursperweek , gamesplayed , onscholarship output: SELECT count(DISTINCT sportname) FROM Sportsinfo\n Now please use valid SQLite to answer the following questions: List the names of the dogs of the rarest breed and the treatment dates of them.",
    "Here is an examples including input and output:\n input: question: What are the times of elimination for wrestlers with over 50 days held? serialized_schema:  | wrestler | wrestler : wrestler_id , name , reign , days_held , location , event | elimination : elimination_id , wrestler_id , team , eliminated_by , elimination_move , time output: SELECT T1.Time FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID WHERE T2.Days_held  >  50\n Now please use valid SQLite to answer the following questions: Which dogs are of the rarest breed? Show their names and treatment dates.",
    "Here is an examples including input and output:\n input: question: what are the order id and customer id of the oldest order? serialized_schema:  | tracking_orders | customers : customer_id , customer_name , customer_details | invoices : invoice_number , invoice_date , invoice_details | orders : order_id , customer_id , order_status , date_order_placed , order_details | products : product_id , product_name , product_details | order_items : order_item_id , product_id , order_id , order_item_status , order_item_details | shipments : shipment_id , order_id , invoice_number , shipment_tracking_number , shipment_date , other_shipment_details | shipment_items : shipment_id , order_item_id output: SELECT order_id ,  customer_id FROM orders ORDER BY date_order_placed LIMIT 1\n Now please use valid SQLite to answer the following questions: Which dogs are owned by someone who lives in Virginia? List the owner's first name and the dog's name.",
    "Here is an examples including input and output:\n input: question: What is the name corresponding to the accoung with the lowest sum of checking and savings balances? serialized_schema:  | small_bank_1 | accounts : custid , name | savings : custid , balance | checking : custid , balance output: SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance + T3.balance LIMIT 1\n Now please use valid SQLite to answer the following questions: Find the first names of owners living in Virginia and the names of dogs they own.",
    "Here is an examples including input and output:\n input: question: What are all the distinct last names of all the engineers? serialized_schema:  | assets_maintenance | third_party_companies : company_id , company_type , company_name , company_address , other_company_details | maintenance_contracts : maintenance_contract_id , maintenance_contract_company_id , contract_start_date , contract_end_date , other_contract_details | parts : part_id , part_name , chargeable_yn , chargeable_amount , other_part_details | skills : skill_id , skill_code , skill_description | staff : staff_id , staff_name , gender , other_staff_details | assets : asset_id , maintenance_contract_id , supplier_company_id , asset_details , asset_make , asset_model , asset_acquired_date , asset_disposed_date , other_asset_details | asset_parts : asset_id , part_id | maintenance_engineers : engineer_id , company_id , first_name , last_name , other_details | engineer_skills : engineer_id , skill_id | fault_log : fault_log_entry_id , asset_id , recorded_by_staff_id , fault_log_entry_datetime , fault_description , other_fault_details | engineer_visits : engineer_visit_id , contact_staff_id , engineer_id , fault_log_entry_id , fault_status , visit_start_datetime , visit_end_datetime , other_visit_details | part_faults : part_fault_id , part_id , fault_short_name , fault_description , other_fault_details | fault_log_parts : fault_log_entry_id , part_fault_id , fault_status | skills_required_to_fix : part_fault_id , skill_id output: SELECT DISTINCT last_name FROM Maintenance_Engineers\n Now please use valid SQLite to answer the following questions: What are the arriving date and the departing date of the dogs who have gone through a treatment?",
    "Here is an examples including input and output:\n input: question: What are the names of the pilots that have not won any matches in Australia? serialized_schema:  | aircraft | pilot : pilot_id , name , age | aircraft : aircraft_id , aircraft , description , max_gross_weight , total_disk_area , max_disk_loading | match : round , location , country , date , fastest_qualifying , winning_pilot , winning_aircraft | airport : airport_id , airport_name , total_passengers , %_change_2007 , international_passengers , domestic_passengers , transit_passengers , aircraft_movements , freight_metric_tonnes | airport_aircraft : id , airport_id , aircraft_id output: SELECT name FROM pilot WHERE pilot_id NOT IN (SELECT Winning_Pilot  FROM MATCH WHERE country  =  'Australia')\n Now please use valid SQLite to answer the following questions: Find the arriving date and the departing date of the dogs that received a treatment.",
    "Here is an examples including input and output:\n input: question: What is the largest payment amount? serialized_schema:  | sakila_1 | actor : actor_id , first_name , last_name , last_update | address : address_id , address , address2 , district , city_id , postal_code , phone , last_update | category : category_id , name , last_update | city : city_id , city , country_id , last_update | country : country_id , country , last_update | customer : customer_id , store_id , first_name , last_name , email , address_id , active , create_date , last_update | film : film_id , title , description , release_year , language_id , original_language_id , rental_duration , rental_rate , length , replacement_cost , rating , special_features , last_update | film_actor : actor_id , film_id , last_update | film_category : film_id , category_id , last_update | film_text : film_id , title , description | inventory : inventory_id , film_id , store_id , last_update | language : language_id , name , last_update | payment : payment_id , customer_id , staff_id , rental_id , amount , payment_date , last_update | rental : rental_id , rental_date , inventory_id , customer_id , return_date , staff_id , last_update | staff : staff_id , first_name , last_name , address_id , picture , email , store_id , active , username , password , last_update | store : store_id , manager_staff_id , address_id , last_update output: SELECT amount FROM payment ORDER BY amount DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: List the last name of the owner owning the youngest dog.",
    "Here is an examples including input and output:\n input: question: List the names of all music genres. serialized_schema:  | chinook_1 | album : albumid , title , artistid | artist : artistid , name | customer : customerid , firstname , lastname , company , address , city , state , country , postalcode , phone , fax , email , supportrepid | employee : employeeid , lastname , firstname , title , reportsto , birthdate , hiredate , address , city , state , country , postalcode , phone , fax , email | genre : genreid , name | invoice : invoiceid , customerid , invoicedate , billingaddress , billingcity , billingstate , billingcountry , billingpostalcode , total | invoiceline : invoicelineid , invoiceid , trackid , unitprice , quantity | mediatype : mediatypeid , name | playlist : playlistid , name | playlisttrack : playlistid , trackid | track : trackid , name , albumid , mediatypeid , genreid , composer , milliseconds , bytes , unitprice output: SELECT Name FROM GENRE\n Now please use valid SQLite to answer the following questions: Who owns the youngest dog? Give me his or her last name.",
    "Here is an examples including input and output:\n input: question: What address was the document with id 4 mailed to? serialized_schema:  | cre_Doc_Control_Systems | ref_document_types : document_type_code , document_type_description | roles : role_code , role_description | addresses : address_id , address_details | ref_document_status : document_status_code , document_status_description | ref_shipping_agents : shipping_agent_code , shipping_agent_name , shipping_agent_description | documents : document_id , document_status_code , document_type_code , shipping_agent_code , receipt_date , receipt_number , other_details | employees : employee_id , role_code , employee_name , other_details | document_drafts : document_id , draft_number , draft_details | draft_copies : document_id , draft_number , copy_number | circulation_history : document_id , draft_number , copy_number , employee_id | documents_mailed : document_id , mailed_to_address_id , mailing_date output: SELECT Addresses.address_details FROM Addresses JOIN Documents_Mailed ON Documents_Mailed.mailed_to_address_id = Addresses.address_id WHERE document_id = 4;\n Now please use valid SQLite to answer the following questions: List the emails of the professionals who live in the state of Hawaii or the state of Wisconsin.",
    "Here is an examples including input and output:\n input: question: Count the number of wrestlers. serialized_schema:  | wrestler | wrestler : wrestler_id , name , reign , days_held , location , event | elimination : elimination_id , wrestler_id , team , eliminated_by , elimination_move , time output: SELECT count(*) FROM wrestler\n Now please use valid SQLite to answer the following questions: What are the emails of the professionals living in either the state of Hawaii or the state of Wisconsin?",
    "Here is an examples including input and output:\n input: question: What are the states, account types, and credit scores for customers who have 0 loans? serialized_schema:  | loan_1 | bank : branch_id , bname , no_of_customers , city , state | customer : cust_id , cust_name , acc_type , acc_bal , no_of_loans , credit_score , branch_id , state | loan : loan_id , loan_type , cust_id , branch_id , amount output: SELECT state ,  acc_type ,  credit_score FROM customer WHERE no_of_loans  =  0\n Now please use valid SQLite to answer the following questions: What are the arriving date and the departing date of all the dogs?",
    "Here is an examples including input and output:\n input: question: What is the placement date of the order whose invoice number is 10? serialized_schema:  | tracking_orders | customers : customer_id , customer_name , customer_details | invoices : invoice_number , invoice_date , invoice_details | orders : order_id , customer_id , order_status , date_order_placed , order_details | products : product_id , product_name , product_details | order_items : order_item_id , product_id , order_id , order_item_status , order_item_details | shipments : shipment_id , order_id , invoice_number , shipment_tracking_number , shipment_date , other_shipment_details | shipment_items : shipment_id , order_item_id output: SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.invoice_number = 10\n Now please use valid SQLite to answer the following questions: List the arrival date and the departure date for all the dogs.",
    "Here is an examples including input and output:\n input: question: What is the weight of the shortest person? serialized_schema:  | entrepreneur | entrepreneur : entrepreneur_id , people_id , company , money_requested , investor | people : people_id , name , height , weight , date_of_birth output: SELECT Weight FROM people ORDER BY Height ASC LIMIT 1\n Now please use valid SQLite to answer the following questions: How many dogs went through any treatments?",
    "Here is an examples including input and output:\n input: question: What is the name and salary of all employees in order of salary? serialized_schema:  | flight_1 | flight : flno , origin , destination , distance , departure_date , arrival_date , price , aid | aircraft : aid , name , distance | employee : eid , name , salary | certificate : eid , aid output: SELECT name ,  salary FROM Employee ORDER BY salary\n Now please use valid SQLite to answer the following questions: Count the number of dogs that went through a treatment.",
    "Here is an examples including input and output:\n input: question: Show publishers with a book published in 1989 and a book in 1990. serialized_schema:  | culture_company | book_club : book_club_id , year , author_or_editor , book_title , publisher , category , result | movie : movie_id , title , year , director , budget_million , gross_worldwide | culture_company : company_name , type , incorporated_in , group_equity_shareholding , book_club_id , movie_id output: SELECT publisher FROM book_club WHERE YEAR  =  1989 INTERSECT SELECT publisher FROM book_club WHERE YEAR  =  1990\n Now please use valid SQLite to answer the following questions: How many professionals have performed any treatment to dogs?",
    "Here is an examples including input and output:\n input: question: What are the years of film market estimation for the market of Japan, ordered by year descending? serialized_schema:  | film_rank | film : film_id , title , studio , director , gross_in_dollar | market : market_id , country , number_cities | film_market_estimation : estimation_id , low_estimate , high_estimate , film_id , type , market_id , year output: SELECT T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID WHERE T2.Country  =  \"Japan\" ORDER BY T1.Year DESC\n Now please use valid SQLite to answer the following questions: Find the number of professionals who have ever treated dogs.",
    "Here is an examples including input and output:\n input: question: What are the names of the artists that are from the UK and sang songs in English? serialized_schema:  | music_1 | genre : g_name , rating , most_popular_in | artist : artist_name , country , gender , preferred_genre | files : f_id , artist_name , file_size , duration , formats | song : song_name , artist_name , country , f_id , genre_is , rating , languages , releasedate , resolution output: SELECT artist_name FROM artist WHERE country  =  \"UK\" INTERSECT SELECT artist_name FROM song WHERE languages  =  \"english\"\n Now please use valid SQLite to answer the following questions: Which professionals live in a city containing the substring 'West'? List his or her role, street, city and state.",
    "Here is an examples including input and output:\n input: question: What is the name of the activity with the most students? serialized_schema:  | activity_1 | activity : actid , activity_name | participates_in : stuid , actid | faculty_participates_in : facid , actid | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building output: SELECT T1.activity_name FROM Activity AS T1 JOIN Participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: Find the role, street, city and state of the professionals living in a city that contains the substring 'West'.",
    "Here is an examples including input and output:\n input: question: Find the name, type, and flag of the ship that is built in the most recent year. serialized_schema:  | ship_1 | captain : captain_id , name , ship_id , age , class , rank | ship : ship_id , name , type , built_year , class , flag output: SELECT name ,  TYPE ,  flag FROM ship ORDER BY built_year DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: Which owners live in the state whose name contains the substring 'North'? List his first name, last name and email.",
    "Here is an examples including input and output:\n input: question: What are the names of every person who has a friend over 40 and under 30? serialized_schema:  | network_2 | person : name , age , city , gender , job | personfriend : name , friend , year output: SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  >  40) INTERSECT SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  <  30)\n Now please use valid SQLite to answer the following questions: Return the first name, last name and email of the owners living in a state whose name contains the substring 'North'.",
    "Here is an examples including input and output:\n input: question: What is the location of the festival with the largest number of audience? serialized_schema:  | entertainment_awards | festival_detail : festival_id , festival_name , chair_name , location , year , num_of_audience | artwork : artwork_id , type , name | nomination : artwork_id , festival_id , result output: SELECT LOCATION FROM festival_detail ORDER BY Num_of_Audience DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: How many dogs have an age below the average?",
    "Here is an examples including input and output:\n input: question: What is the average enrollment of schools? serialized_schema:  | school_player | school : school_id , school , location , enrollment , founded , denomination , boys_or_girls , day_or_boarding , year_entered_competition , school_colors | school_details : school_id , nickname , colors , league , class , division | school_performance : school_id , school_year , class_a , class_aa | player : player_id , player , team , age , position , school_id output: SELECT avg(Enrollment) FROM school\n Now please use valid SQLite to answer the following questions: Count the number of dogs of an age below the average.",
    "Here is an examples including input and output:\n input: question: Show the name and the nationality of the oldest host. serialized_schema:  | party_host | party : party_id , party_theme , location , first_year , last_year , number_of_hosts | host : host_id , name , nationality , age | party_host : party_id , host_id , is_main_in_charge output: SELECT Name ,  Nationality FROM HOST ORDER BY Age DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: How much does the most recent treatment cost?",
    "Here is an examples including input and output:\n input: question: What are the completion dates of all the tests that have result \"Fail\"? serialized_schema:  | e_learning | course_authors_and_tutors : author_id , author_tutor_atb , login_name , password , personal_name , middle_name , family_name , gender_mf , address_line_1 | students : student_id , date_of_registration , date_of_latest_logon , login_name , password , personal_name , middle_name , family_name | subjects : subject_id , subject_name | courses : course_id , author_id , subject_id , course_name , course_description | student_course_enrolment : registration_id , student_id , course_id , date_of_enrolment , date_of_completion | student_tests_taken : registration_id , date_test_taken , test_result output: SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id  =  T2.registration_id WHERE T2.test_result  =  \"Fail\"\n Now please use valid SQLite to answer the following questions: Show me the cost of the most recently performed treatment.",
    "Here is an examples including input and output:\n input: question: For each country and airline name, how many routes are there? serialized_schema:  | flight_4 | routes : rid , dst_apid , dst_ap , src_apid , src_ap , alid , airline , codeshare | airports : apid , name , city , country , x , y , elevation , iata , icao | airlines : alid , name , iata , icao , callsign , country , active output: SELECT T1.country ,  T1.name ,  count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.country ,  T1.name\n Now please use valid SQLite to answer the following questions: How many dogs have not gone through any treatment?",
    "Here is an examples including input and output:\n input: question: For each grade 0 classroom, return the classroom number and the count of students. serialized_schema:  | student_1 | list : lastname , firstname , grade , classroom | teachers : lastname , firstname , classroom output: SELECT classroom ,  count(*) FROM list WHERE grade  =  \"0\" GROUP BY classroom\n Now please use valid SQLite to answer the following questions: Tell me the number of dogs that have not received any treatment .",
    "Here is an examples including input and output:\n input: question: What is the name and distance for aircraft with id 12? serialized_schema:  | flight_1 | flight : flno , origin , destination , distance , departure_date , arrival_date , price , aid | aircraft : aid , name , distance | employee : eid , name , salary | certificate : eid , aid output: SELECT name ,  distance FROM Aircraft WHERE aid  =  12\n Now please use valid SQLite to answer the following questions: How many owners temporarily do not have any dogs?",
    "Here is an examples including input and output:\n input: question: Please show the categories of the music festivals and the count. serialized_schema:  | music_4 | artist : artist_id , artist , age , famous_title , famous_release_date | volume : volume_id , volume_issue , issue_date , weeks_on_top , song , artist_id | music_festival : id , music_festival , date_of_ceremony , category , volume , result output: SELECT Category ,  COUNT(*) FROM music_festival GROUP BY Category\n Now please use valid SQLite to answer the following questions: Find the number of owners who do not own any dogs at this moment.",
    "Here is an examples including input and output:\n input: question: display the average salary of employees for each department who gets a commission percentage. serialized_schema:  | hr_1 | regions : region_id , region_name | countries : country_id , country_name , region_id | departments : department_id , department_name , manager_id , location_id | jobs : job_id , job_title , min_salary , max_salary | employees : employee_id , first_name , last_name , email , phone_number , hire_date , job_id , salary , commission_pct , manager_id , department_id | job_history : employee_id , start_date , end_date , job_id , department_id | locations : location_id , street_address , postal_code , city , state_province , country_id output: SELECT department_id ,  AVG(salary) FROM employees WHERE commission_pct != \"null\" GROUP BY department_id\n Now please use valid SQLite to answer the following questions: How many professionals did not operate any treatment on dogs?",
    "Here is an examples including input and output:\n input: question: Find the total hours of all projects. serialized_schema:  | scientist_1 | scientists : ssn , name | projects : code , name , hours | assignedto : scientist , project output: SELECT sum(hours) FROM projects\n Now please use valid SQLite to answer the following questions: Find the number of professionals who have not treated any dogs.",
    "Here is an examples including input and output:\n input: question: What are the names of storms that both affected two or more regions and affected a total of 10 or more cities? serialized_schema:  | storm_record | storm : storm_id , name , dates_active , max_speed , damage_millions_usd , number_deaths | region : region_id , region_code , region_name | affected_region : region_id , storm_id , number_city_affected output: SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING count(*)  >=  2 INTERSECT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING sum(T2.number_city_affected)  >=  10\n Now please use valid SQLite to answer the following questions: List the dog name, age and weight of the dogs who have been abandoned? 1 stands for yes, and 0 stands for no.",
    "Here is an examples including input and output:\n input: question: List the id of students who registered course statistics in the order of registration date. serialized_schema:  | student_assessment | addresses : address_id , line_1 , line_2 , city , zip_postcode , state_province_county , country | people : person_id , first_name , middle_name , last_name , cell_mobile_number , email_address , login_name , password | students : student_id , student_details | courses : course_id , course_name , course_description , other_details | people_addresses : person_address_id , person_id , address_id , date_from , date_to | student_course_registrations : student_id , course_id , registration_date | student_course_attendance : student_id , course_id , date_of_attendance | candidates : candidate_id , candidate_details | candidate_assessments : candidate_id , qualification , assessment_date , asessment_outcome_code output: SELECT T2.student_id FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"statistics\" ORDER BY T2.registration_date\n Now please use valid SQLite to answer the following questions: What are the dog name, age and weight of the dogs that were abandoned? Note that 1 stands for yes, and 0 stands for no in the tables.",
    "Here is an examples including input and output:\n input: question: Which services type had both successful and failure event details? serialized_schema:  | local_govt_in_alabama | services : service_id , service_type_code | participants : participant_id , participant_type_code , participant_details | events : event_id , service_id , event_details | participants_in_events : event_id , participant_id output: SELECT T1.service_type_code FROM services AS T1 JOIN EVENTS AS T2 ON T1.service_id  =  T2.service_id WHERE T2.event_details  =  'Success' INTERSECT SELECT T1.service_type_code FROM services AS T1 JOIN EVENTS AS T2 ON T1.service_id  =  T2.service_id WHERE T2.event_details  =  'Fail'\n Now please use valid SQLite to answer the following questions: What is the average age of all the dogs?",
    "Here is an examples including input and output:\n input: question: Find the id of the order made most recently. serialized_schema:  | tracking_orders | customers : customer_id , customer_name , customer_details | invoices : invoice_number , invoice_date , invoice_details | orders : order_id , customer_id , order_status , date_order_placed , order_details | products : product_id , product_name , product_details | order_items : order_item_id , product_id , order_id , order_item_status , order_item_details | shipments : shipment_id , order_id , invoice_number , shipment_tracking_number , shipment_date , other_shipment_details | shipment_items : shipment_id , order_item_id output: SELECT order_id FROM orders ORDER BY date_order_placed DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: Compute the average age of all the dogs.",
    "Here is an examples including input and output:\n input: question: Find the country that has the most stadiums. serialized_schema:  | swimming | swimmer : id , name , nationality , meter_100 , meter_200 , meter_300 , meter_400 , meter_500 , meter_600 , meter_700 , time | stadium : id , name , capacity , city , country , opening_year | event : id , name , stadium_id , year | record : id , result , swimmer_id , event_id output: SELECT country FROM stadium GROUP BY country ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: What is the age of the oldest dog?",
    "Here is an examples including input and output:\n input: question: What is the average, maximum, and minimum for the number of hours spent training? serialized_schema:  | soccer_2 | college : cname , state , enr | player : pid , pname , ycard , hs | tryout : pid , cname , ppos , decision output: SELECT avg(HS) ,  max(HS) ,  min(HS) FROM Player\n Now please use valid SQLite to answer the following questions: Tell me the age of the oldest dog.",
    "Here is an examples including input and output:\n input: question: What are the names, headquarters and revenues for manufacturers, sorted by revenue descending? serialized_schema:  | manufactory_1 | manufacturers : code , name , headquarter , founder , revenue | products : code , name , price , manufacturer output: SELECT name ,  headquarter ,  revenue FROM manufacturers ORDER BY revenue DESC\n Now please use valid SQLite to answer the following questions: How much does each charge type costs? List both charge type and amount.",
    "Here is an examples including input and output:\n input: question: display those employees who joined after 7th September, 1987. serialized_schema:  | hr_1 | regions : region_id , region_name | countries : country_id , country_name , region_id | departments : department_id , department_name , manager_id , location_id | jobs : job_id , job_title , min_salary , max_salary | employees : employee_id , first_name , last_name , email , phone_number , hire_date , job_id , salary , commission_pct , manager_id , department_id | job_history : employee_id , start_date , end_date , job_id , department_id | locations : location_id , street_address , postal_code , city , state_province , country_id output: SELECT * FROM employees WHERE hire_date  >  '1987-09-07'\n Now please use valid SQLite to answer the following questions: List each charge type and its amount.",
    "Here is an examples including input and output:\n input: question: How many books fall into each category? serialized_schema:  | culture_company | book_club : book_club_id , year , author_or_editor , book_title , publisher , category , result | movie : movie_id , title , year , director , budget_million , gross_worldwide | culture_company : company_name , type , incorporated_in , group_equity_shareholding , book_club_id , movie_id output: SELECT category ,  count(*) FROM book_club GROUP BY category\n Now please use valid SQLite to answer the following questions: How much does the most expensive charge type costs?",
    "Here is an examples including input and output:\n input: question: List the names of products that are not in any event. serialized_schema:  | solvency_ii | addresses : address_id , address_details | locations : location_id , other_details | products : product_id , product_type_code , product_name , product_price | parties : party_id , party_details | assets : asset_id , other_details | channels : channel_id , other_details | finances : finance_id , other_details | events : event_id , address_id , channel_id , event_type_code , finance_id , location_id | products_in_events : product_in_event_id , event_id , product_id | parties_in_events : party_id , event_id , role_code | agreements : document_id , event_id | assets_in_events : asset_id , event_id output: SELECT Product_Name FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events)\n Now please use valid SQLite to answer the following questions: What is the charge amount of the most expensive charge type?",
    "Here is an examples including input and output:\n input: question: Which studios have an average gross of over 4500000? serialized_schema:  | film_rank | film : film_id , title , studio , director , gross_in_dollar | market : market_id , country , number_cities | film_market_estimation : estimation_id , low_estimate , high_estimate , film_id , type , market_id , year output: SELECT Studio FROM film GROUP BY Studio HAVING avg(Gross_in_dollar)  >=  4500000\n Now please use valid SQLite to answer the following questions: List the email, cell phone and home phone of all the professionals.",
    "Here is an examples including input and output:\n input: question: find the names of programs whose origin is not in Beijing. serialized_schema:  | program_share | program : program_id , name , origin , launch , owner | channel : channel_id , name , owner , share_in_percent , rating_in_percent | broadcast : channel_id , program_id , time_of_day | broadcast_share : channel_id , program_id , date , share_in_percent output: SELECT name FROM program WHERE origin != 'Beijing'\n Now please use valid SQLite to answer the following questions: What are the email, cell phone and home phone of each professional?",
    "Here is an examples including input and output:\n input: question: What are the ids of all female students who play football? serialized_schema:  | game_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | video_games : gameid , gname , gtype | plays_games : stuid , gameid , hours_played | sportsinfo : stuid , sportname , hoursperweek , gamesplayed , onscholarship output: SELECT StuID FROM Student WHERE sex  =  'F' INTERSECT SELECT StuID FROM Sportsinfo WHERE sportname  =  \"Football\"\n Now please use valid SQLite to answer the following questions: What are all the possible breed type and size type combinations?",
    "Here is an examples including input and output:\n input: question: What are the papers published under the institution \"Indiana University\"? serialized_schema:  | icfp_1 | inst : instid , name , country | authors : authid , lname , fname | papers : paperid , title | authorship : authid , instid , paperid , authorder output: SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Indiana University\"\n Now please use valid SQLite to answer the following questions: Find the distinct breed type and size type combinations for dogs.",
    "Here is an examples including input and output:\n input: question: What is the name and date of the race that occurred most recently? serialized_schema:  | formula_1 | circuits : circuitid , circuitref , name , location , country , lat , lng , alt , url | races : raceid , year , round , circuitid , name , date , time , url | drivers : driverid , driverref , number , code , forename , surname , dob , nationality , url | status : statusid , status | seasons : year , url | constructors : constructorid , constructorref , name , nationality , url | constructorstandings : constructorstandingsid , raceid , constructorid , points , position , positiontext , wins | results : resultid , raceid , driverid , constructorid , number , grid , position , positiontext , positionorder , points , laps , time , milliseconds , fastestlap , rank , fastestlaptime , fastestlapspeed , statusid | driverstandings : driverstandingsid , raceid , driverid , points , position , positiontext , wins | constructorresults : constructorresultsid , raceid , constructorid , points , status | qualifying : qualifyid , raceid , driverid , constructorid , number , position , q1 , q2 , q3 | pitstops : raceid , driverid , stop , lap , time , duration , milliseconds | laptimes : raceid , driverid , lap , position , time , milliseconds output: SELECT name ,  date FROM races ORDER BY date DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: List the first name of all the professionals along with the description of the treatment they have done.",
    "Here is an examples including input and output:\n input: question: What are the date of ceremony of music festivals with category \"Best Song\" and result \"Awarded\"? serialized_schema:  | music_4 | artist : artist_id , artist , age , famous_title , famous_release_date | volume : volume_id , volume_issue , issue_date , weeks_on_top , song , artist_id | music_festival : id , music_festival , date_of_ceremony , category , volume , result output: SELECT Date_of_ceremony FROM music_festival WHERE Category  =  \"Best Song\" AND RESULT  =  \"Awarded\"\n Now please use valid SQLite to answer the following questions: What are each professional's first name and description of the treatment they have performed?",
    "Here is an examples including input and output:\n input: question: Find names of instructors with salary greater than that of some (at least one) instructor in the Biology department. serialized_schema:  | college_2 | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id output: SELECT name FROM instructor WHERE salary  >  (SELECT min(salary) FROM instructor WHERE dept_name  =  'Biology')\n Now please use valid SQLite to answer the following questions: How many singers are there?",
    "Here is an examples including input and output:\n input: question: What are the countries that participated in both friendly and tournament type competitions? serialized_schema:  | sports_competition | club : club_id , name , region , start_year | club_rank : rank , club_id , gold , silver , bronze , total | player : player_id , name , position , club_id , apps , tries , goals , points | competition : competition_id , year , competition_type , country | competition_result : competition_id , club_id_1 , club_id_2 , score output: SELECT country FROM competition WHERE competition_type  =  'Friendly' INTERSECT SELECT country FROM competition WHERE competition_type  =  'Tournament'\n Now please use valid SQLite to answer the following questions: What is the count of singers?",
    "Here is an examples including input and output:\n input: question: Find the names of all modern rooms with a base price below $160 and two beds. serialized_schema:  | inn_1 | rooms : roomid , roomname , beds , bedtype , maxoccupancy , baseprice , decor | reservations : code , room , checkin , checkout , rate , lastname , firstname , adults , kids output: SELECT roomName FROM Rooms WHERE basePrice  <  160 AND beds =  2 AND decor  =  'modern';\n Now please use valid SQLite to answer the following questions: List the name of singers in ascending order of net worth.",
    "Here is an examples including input and output:\n input: question: Count the number of different complaint type codes. serialized_schema:  | customer_complaints | staff : staff_id , gender , first_name , last_name , email_address , phone_number | customers : customer_id , customer_type_code , address_line_1 , address_line_2 , town_city , state , email_address , phone_number | products : product_id , parent_product_id , product_category_code , date_product_first_available , date_product_discontinued , product_name , product_description , product_price | complaints : complaint_id , product_id , customer_id , complaint_outcome_code , complaint_status_code , complaint_type_code , date_complaint_raised , date_complaint_closed , staff_id output: SELECT count(DISTINCT complaint_type_code) FROM complaints\n Now please use valid SQLite to answer the following questions: What are the names of singers ordered by ascending net worth?",
    "Here is an examples including input and output:\n input: question: What are the names of wines made from red grapes? serialized_schema:  | wine_1 | grapes : id , grape , color | appellations : no , appelation , county , state , area , isava | wine : no , grape , winery , appelation , state , name , year , price , score , cases , drink output: SELECT DISTINCT T2.Name FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"Red\"\n Now please use valid SQLite to answer the following questions: What are the birth year and citizenship of singers?",
    "Here is an examples including input and output:\n input: question: Show all artist names and the number of exhibitions for each artist. serialized_schema:  | theme_gallery | artist : artist_id , name , country , year_join , age | exhibition : exhibition_id , year , theme , artist_id , ticket_price | exhibition_record : exhibition_id , date , attendance output: SELECT T2.name ,  count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id GROUP BY T1.artist_id\n Now please use valid SQLite to answer the following questions: What are the birth years and citizenships of the singers?",
    "Here is an examples including input and output:\n input: question: Find the id and location of circuits that belong to France or Belgium? serialized_schema:  | formula_1 | circuits : circuitid , circuitref , name , location , country , lat , lng , alt , url | races : raceid , year , round , circuitid , name , date , time , url | drivers : driverid , driverref , number , code , forename , surname , dob , nationality , url | status : statusid , status | seasons : year , url | constructors : constructorid , constructorref , name , nationality , url | constructorstandings : constructorstandingsid , raceid , constructorid , points , position , positiontext , wins | results : resultid , raceid , driverid , constructorid , number , grid , position , positiontext , positionorder , points , laps , time , milliseconds , fastestlap , rank , fastestlaptime , fastestlapspeed , statusid | driverstandings : driverstandingsid , raceid , driverid , points , position , positiontext , wins | constructorresults : constructorresultsid , raceid , constructorid , points , status | qualifying : qualifyid , raceid , driverid , constructorid , number , position , q1 , q2 , q3 | pitstops : raceid , driverid , stop , lap , time , duration , milliseconds | laptimes : raceid , driverid , lap , position , time , milliseconds output: SELECT circuitid ,  LOCATION FROM circuits WHERE country = \"France\" OR country = \"Belgium\"\n Now please use valid SQLite to answer the following questions: List the name of singers whose citizenship is not \"France\".",
    "Here is an examples including input and output:\n input: question: Show the years, book titles, and publishers for all books, in descending order by year. serialized_schema:  | culture_company | book_club : book_club_id , year , author_or_editor , book_title , publisher , category , result | movie : movie_id , title , year , director , budget_million , gross_worldwide | culture_company : company_name , type , incorporated_in , group_equity_shareholding , book_club_id , movie_id output: SELECT YEAR ,  book_title ,  publisher FROM book_club ORDER BY YEAR DESC\n Now please use valid SQLite to answer the following questions: What are the names of the singers who are not French citizens?",
    "Here is an examples including input and output:\n input: question: What are the names of customers with accounts, and how many checking accounts do each of them have? serialized_schema:  | small_bank_1 | accounts : custid , name | savings : custid , balance | checking : custid , balance output: SELECT count(*) ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid GROUP BY T1.name\n Now please use valid SQLite to answer the following questions: Show the name of singers whose birth year is either 1948 or 1949?",
    "Here is an examples including input and output:\n input: question: What are the names of tourist attractions that can be reached by bus or is at address 254 Ottilie Junction? serialized_schema:  | cre_Theme_park | ref_hotel_star_ratings : star_rating_code , star_rating_description | locations : location_id , location_name , address , other_details | ref_attraction_types : attraction_type_code , attraction_type_description | visitors : tourist_id , tourist_details | features : feature_id , feature_details | hotels : hotel_id , star_rating_code , pets_allowed_yn , price_range , other_hotel_details | tourist_attractions : tourist_attraction_id , attraction_type_code , location_id , how_to_get_there , name , description , opening_hours , other_details | street_markets : market_id , market_details | shops : shop_id , shop_details | museums : museum_id , museum_details | royal_family : royal_family_id , royal_family_details | theme_parks : theme_park_id , theme_park_details | visits : visit_id , tourist_attraction_id , tourist_id , visit_date , visit_details | photos : photo_id , tourist_attraction_id , name , description , filename , other_details | staff : staff_id , tourist_attraction_id , name , other_details | tourist_attraction_features : tourist_attraction_id , feature_id output: SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID  =  T2.Location_ID WHERE T1.Address  =  \"254 Ottilie Junction\" OR T2.How_to_Get_There  =  \"bus\"\n Now please use valid SQLite to answer the following questions: What are the names of the singers whose birth years are either 1948 or 1949?",
    "Here is an examples including input and output:\n input: question: Show the total number of rooms of the apartments in the building with short name \"Columbus Square\". serialized_schema:  | apartment_rentals | apartment_buildings : building_id , building_short_name , building_full_name , building_description , building_address , building_manager , building_phone | apartments : apt_id , building_id , apt_type_code , apt_number , bathroom_count , bedroom_count , room_count | apartment_facilities : apt_id , facility_code | guests : guest_id , gender_code , guest_first_name , guest_last_name , date_of_birth | apartment_bookings : apt_booking_id , apt_id , guest_id , booking_status_code , booking_start_date , booking_end_date | view_unit_status : apt_id , apt_booking_id , status_date , available_yn output: SELECT sum(T2.room_count) FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_short_name  =  \"Columbus Square\"\n Now please use valid SQLite to answer the following questions: What is the name of the singer with the largest net worth?",
    "Here is an examples including input and output:\n input: question: What are the ids of suppliers which have an average amount purchased of above 50000 or below 30000? serialized_schema:  | department_store | addresses : address_id , address_details | staff : staff_id , staff_gender , staff_name | suppliers : supplier_id , supplier_name , supplier_phone | department_store_chain : dept_store_chain_id , dept_store_chain_name | customers : customer_id , payment_method_code , customer_code , customer_name , customer_address , customer_phone , customer_email | products : product_id , product_type_code , product_name , product_price | supplier_addresses : supplier_id , address_id , date_from , date_to | customer_addresses : customer_id , address_id , date_from , date_to | customer_orders : order_id , customer_id , order_status_code , order_date | department_stores : dept_store_id , dept_store_chain_id , store_name , store_address , store_phone , store_email | departments : department_id , dept_store_id , department_name | order_items : order_item_id , order_id , product_id | product_suppliers : product_id , supplier_id , date_supplied_from , date_supplied_to , total_amount_purchased , total_value_purchased | staff_department_assignments : staff_id , department_id , date_assigned_from , job_title_code , date_assigned_to output: SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id HAVING avg(total_amount_purchased)  >  50000 OR avg(total_amount_purchased)  <  30000\n Now please use valid SQLite to answer the following questions: What is the name of the singer who is worth the most?",
    "Here is an examples including input and output:\n input: question: What are the names of the customers who have made two or less orders? serialized_schema:  | tracking_orders | customers : customer_id , customer_name , customer_details | invoices : invoice_number , invoice_date , invoice_details | orders : order_id , customer_id , order_status , date_order_placed , order_details | products : product_id , product_name , product_details | order_items : order_item_id , product_id , order_id , order_item_status , order_item_details | shipments : shipment_id , order_id , invoice_number , shipment_tracking_number , shipment_date , other_shipment_details | shipment_items : shipment_id , order_item_id output: SELECT T2.customer_name FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*)  <=  2\n Now please use valid SQLite to answer the following questions: Show different citizenship of singers and the number of singers of each citizenship.",
    "Here is an examples including input and output:\n input: question: Show all video games with type Collectible card game. serialized_schema:  | game_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | video_games : gameid , gname , gtype | plays_games : stuid , gameid , hours_played | sportsinfo : stuid , sportname , hoursperweek , gamesplayed , onscholarship output: SELECT gname FROM Video_games WHERE gtype  =  \"Collectible card game\"\n Now please use valid SQLite to answer the following questions: For each citizenship, how many singers are from that country?",
    "Here is an examples including input and output:\n input: question: Find the number of patients' prescriptions physician John Dorian made. serialized_schema:  | hospital_1 | physician : employeeid , name , position , ssn | department : departmentid , name , head | affiliated_with : physician , department , primaryaffiliation | procedures : code , name , cost | trained_in : physician , treatment , certificationdate , certificationexpires | patient : ssn , name , address , phone , insuranceid , pcp | nurse : employeeid , name , position , registered , ssn | appointment : appointmentid , patient , prepnurse , physician , start , end , examinationroom | medication : code , name , brand , description | prescribes : physician , patient , medication , date , appointment , dose | block : blockfloor , blockcode | room : roomnumber , roomtype , blockfloor , blockcode , unavailable | on_call : nurse , blockfloor , blockcode , oncallstart , oncallend | stay : stayid , patient , room , staystart , stayend | undergoes : patient , procedures , stay , dateundergoes , physician , assistingnurse output: SELECT count(T1.SSN) FROM patient AS T1 JOIN prescribes AS T2 ON T1.SSN  =  T2.patient JOIN physician AS T3 ON T2.physician  =  T3.employeeid WHERE T3.name = \"John Dorian\"\n Now please use valid SQLite to answer the following questions: Please show the most common citizenship of singers.",
    "Here is an examples including input and output:\n input: question: What is the minimum salary in each department? serialized_schema:  | hr_1 | regions : region_id , region_name | countries : country_id , country_name , region_id | departments : department_id , department_name , manager_id , location_id | jobs : job_id , job_title , min_salary , max_salary | employees : employee_id , first_name , last_name , email , phone_number , hire_date , job_id , salary , commission_pct , manager_id , department_id | job_history : employee_id , start_date , end_date , job_id , department_id | locations : location_id , street_address , postal_code , city , state_province , country_id output: SELECT MIN(salary) ,  department_id FROM employees GROUP BY department_id\n Now please use valid SQLite to answer the following questions: What is the most common singer citizenship ?",
    "Here is an examples including input and output:\n input: question: what are the names and classes of the ships that do not have any captain yet? serialized_schema:  | ship_1 | captain : captain_id , name , ship_id , age , class , rank | ship : ship_id , name , type , built_year , class , flag output: SELECT name ,  CLASS FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain)\n Now please use valid SQLite to answer the following questions: Show different citizenships and the maximum net worth of singers of each citizenship.",
    "Here is an examples including input and output:\n input: question: What is average age of male for different job title? serialized_schema:  | network_2 | person : name , age , city , gender , job | personfriend : name , friend , year output: SELECT avg(age) ,  job FROM Person WHERE gender  =  'male' GROUP BY job\n Now please use valid SQLite to answer the following questions: For each citizenship, what is the maximum net worth?",
    "Here is an examples including input and output:\n input: question: Which students are unaffected by allergies? serialized_schema:  | allergy_1 | allergy_type : allergy , allergytype | has_allergy : stuid , allergy | student : stuid , lname , fname , age , sex , major , advisor , city_code output: SELECT StuID FROM Student EXCEPT SELECT StuID FROM Has_allergy\n Now please use valid SQLite to answer the following questions: Show titles of songs and names of singers.",
    "Here is an examples including input and output:\n input: question: Return the names of all counties sorted by county name in descending alphabetical order. serialized_schema:  | election | county : county_id , county_name , population , zip_code | party : party_id , year , party , governor , lieutenant_governor , comptroller , attorney_general , us_senate | election : election_id , counties_represented , district , delegate , party , first_elected , committee output: SELECT County_name FROM county ORDER BY County_name DESC\n Now please use valid SQLite to answer the following questions: What are the song titles and singer names?",
    "Here is an examples including input and output:\n input: question: What is the number of aircraft? serialized_schema:  | aircraft | pilot : pilot_id , name , age | aircraft : aircraft_id , aircraft , description , max_gross_weight , total_disk_area , max_disk_loading | match : round , location , country , date , fastest_qualifying , winning_pilot , winning_aircraft | airport : airport_id , airport_name , total_passengers , %_change_2007 , international_passengers , domestic_passengers , transit_passengers , aircraft_movements , freight_metric_tonnes | airport_aircraft : id , airport_id , aircraft_id output: SELECT count(*) FROM aircraft\n Now please use valid SQLite to answer the following questions: Show distinct names of singers that have songs with sales more than 300000.",
    "Here is an examples including input and output:\n input: question: Find the total access count of all documents in the most popular document type. serialized_schema:  | document_management | roles : role_code , role_description | users : user_id , role_code , user_name , user_login , password | document_structures : document_structure_code , parent_document_structure_code , document_structure_description | functional_areas : functional_area_code , parent_functional_area_code , functional_area_description | images : image_id , image_alt_text , image_name , image_url | documents : document_code , document_structure_code , document_type_code , access_count , document_name | document_functional_areas : document_code , functional_area_code | document_sections : section_id , document_code , section_sequence , section_code , section_title | document_sections_images : section_id , image_id output: SELECT sum(access_count) FROM documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: what are the different names of the singers that have sales more than 300000?",
    "Here is an examples including input and output:\n input: question: What are the names and data types of the characteristics of the 'cumin' product? serialized_schema:  | products_gen_characteristics | ref_characteristic_types : characteristic_type_code , characteristic_type_description | ref_colors : color_code , color_description | ref_product_categories : product_category_code , product_category_description , unit_of_measure | characteristics : characteristic_id , characteristic_type_code , characteristic_data_type , characteristic_name , other_characteristic_details | products : product_id , color_code , product_category_code , product_name , typical_buying_price , typical_selling_price , product_description , other_product_details | product_characteristics : product_id , characteristic_id , product_characteristic_value output: SELECT t3.characteristic_name ,  t3.characteristic_data_type FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"cumin\"\n Now please use valid SQLite to answer the following questions: Show the names of singers that have more than one song.",
    "Here is an examples including input and output:\n input: question: Show different ways to get to attractions and the number of attractions that can be accessed in the corresponding way. serialized_schema:  | cre_Theme_park | ref_hotel_star_ratings : star_rating_code , star_rating_description | locations : location_id , location_name , address , other_details | ref_attraction_types : attraction_type_code , attraction_type_description | visitors : tourist_id , tourist_details | features : feature_id , feature_details | hotels : hotel_id , star_rating_code , pets_allowed_yn , price_range , other_hotel_details | tourist_attractions : tourist_attraction_id , attraction_type_code , location_id , how_to_get_there , name , description , opening_hours , other_details | street_markets : market_id , market_details | shops : shop_id , shop_details | museums : museum_id , museum_details | royal_family : royal_family_id , royal_family_details | theme_parks : theme_park_id , theme_park_details | visits : visit_id , tourist_attraction_id , tourist_id , visit_date , visit_details | photos : photo_id , tourist_attraction_id , name , description , filename , other_details | staff : staff_id , tourist_attraction_id , name , other_details | tourist_attraction_features : tourist_attraction_id , feature_id output: SELECT How_to_Get_There ,  COUNT(*) FROM Tourist_Attractions GROUP BY How_to_Get_There\n Now please use valid SQLite to answer the following questions: What are the names of the singers that have more than one songs?",
    "Here is an examples including input and output:\n input: question: What is the name of the wrestler with the fewest days held? serialized_schema:  | wrestler | wrestler : wrestler_id , name , reign , days_held , location , event | elimination : elimination_id , wrestler_id , team , eliminated_by , elimination_move , time output: SELECT Name FROM wrestler ORDER BY Days_held ASC LIMIT 1\n Now please use valid SQLite to answer the following questions: Show the names of singers and the total sales of their songs.",
    "Here is an examples including input and output:\n input: question: Return the result that is most frequent at music festivals. serialized_schema:  | music_4 | artist : artist_id , artist , age , famous_title , famous_release_date | volume : volume_id , volume_issue , issue_date , weeks_on_top , song , artist_id | music_festival : id , music_festival , date_of_ceremony , category , volume , result output: SELECT RESULT FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: For each singer name, what is the total sales for their songs?",
    "Here is an examples including input and output:\n input: question: What are the famous titles of artists who do not have any volumes? serialized_schema:  | music_4 | artist : artist_id , artist , age , famous_title , famous_release_date | volume : volume_id , volume_issue , issue_date , weeks_on_top , song , artist_id | music_festival : id , music_festival , date_of_ceremony , category , volume , result output: SELECT Famous_Title FROM artist WHERE Artist_ID NOT IN(SELECT Artist_ID FROM volume)\n Now please use valid SQLite to answer the following questions: List the name of singers that do not have any song.",
    "Here is an examples including input and output:\n input: question: What is the most common company type, and how many are there? serialized_schema:  | flight_company | airport : id , city , country , iata , icao , name | operate_company : id , name , type , principal_activities , incorporated_in , group_equity_shareholding | flight : id , vehicle_flight_number , date , pilot , velocity , altitude , airport_id , company_id output: SELECT TYPE ,  count(*) FROM operate_company GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1\n Now please use valid SQLite to answer the following questions: What is the sname of every sing that does not have any song?",
    "Here is an examples including input and output:\n input: question: Find the ids and first names of the 3 teachers that have the most number of assessment notes? serialized_schema:  | behavior_monitoring | ref_address_types : address_type_code , address_type_description | ref_detention_type : detention_type_code , detention_type_description | ref_incident_type : incident_type_code , incident_type_description | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | students : student_id , address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , date_first_rental , date_left_university , other_student_details | teachers : teacher_id , address_id , first_name , middle_name , last_name , gender , cell_mobile_number , email_address , other_details | assessment_notes : notes_id , student_id , teacher_id , date_of_notes , text_of_notes , other_details | behavior_incident : incident_id , incident_type_code , student_id , date_incident_start , date_incident_end , incident_summary , recommendations , other_details | detention : detention_id , detention_type_code , teacher_id , datetime_detention_start , datetime_detention_end , detention_summary , other_details | student_addresses : student_id , address_id , date_address_from , date_address_to , monthly_rental , other_details | students_in_detention : student_id , detention_id , incident_id output: SELECT T1.teacher_id ,  T2.first_name FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id  =  T2.teacher_id GROUP BY T1.teacher_id ORDER BY count(*) DESC LIMIT 3\n Now please use valid SQLite to answer the following questions: Show the citizenship shared by singers with birth year before 1945 and after 1955.",
    "Here is an examples including input and output:\n input: question: Find the names of all swimmers, sorted by their 100 meter scores in ascending order. serialized_schema:  | swimming | swimmer : id , name , nationality , meter_100 , meter_200 , meter_300 , meter_400 , meter_500 , meter_600 , meter_700 , time | stadium : id , name , capacity , city , country , opening_year | event : id , name , stadium_id , year | record : id , result , swimmer_id , event_id output: SELECT name FROM swimmer ORDER BY meter_100\n Now please use valid SQLite to answer the following questions: What are the citizenships that are shared by singers with a birth year before 1945 and after 1955?",
    "Here is an examples including input and output:\n input: question: Find the ids and names of stations from which at least 200 trips started. serialized_schema:  | bike_1 | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code output: SELECT start_station_id ,  start_station_name FROM trip GROUP BY start_station_name HAVING COUNT(*)  >=  200\n Now please use valid SQLite to answer the following questions: How many available features are there in total?",
    "Here is an examples including input and output:\n input: question: What are the maximum scores the team Boston Red Stockings got when the team won in postseason? serialized_schema:  | baseball_1 | all_star : player_id , year , game_num , game_id , team_id , league_id , gp , starting_pos | appearances : year , team_id , league_id , player_id , g_all , gs , g_batting , g_defense , g_p , g_c , g_1b , g_2b , g_3b , g_ss , g_lf , g_cf , g_rf , g_of , g_dh , g_ph , g_pr | manager_award : player_id , award_id , year , league_id , tie , notes | player_award : player_id , award_id , year , league_id , tie , notes | manager_award_vote : award_id , year , league_id , player_id , points_won , points_max , votes_first | player_award_vote : award_id , year , league_id , player_id , points_won , points_max , votes_first | batting : player_id , year , stint , team_id , league_id , g , ab , r , h , double , triple , hr , rbi , sb , cs , bb , so , ibb , hbp , sh , sf , g_idp | batting_postseason : year , round , player_id , team_id , league_id , g , ab , r , h , double , triple , hr , rbi , sb , cs , bb , so , ibb , hbp , sh , sf , g_idp | player_college : player_id , college_id , year | fielding : player_id , year , stint , team_id , league_id , pos , g , gs , inn_outs , po , a , e , dp , pb , wp , sb , cs , zr | fielding_outfield : player_id , year , stint , glf , gcf , grf | fielding_postseason : player_id , year , team_id , league_id , round , pos , g , gs , inn_outs , po , a , e , dp , tp , pb , sb , cs | hall_of_fame : player_id , yearid , votedby , ballots , needed , votes , inducted , category , needed_note | home_game : year , league_id , team_id , park_id , span_first , span_last , games , openings , attendance | manager : player_id , year , team_id , league_id , inseason , g , w , l , rank , plyr_mgr | manager_half : player_id , year , team_id , league_id , inseason , half , g , w , l , rank | player : player_id , birth_year , birth_month , birth_day , birth_country , birth_state , birth_city , death_year , death_month , death_day , death_country , death_state , death_city , name_first , name_last , name_given , weight , height , bats , throws , debut , final_game , retro_id , bbref_id | park : park_id , park_name , park_alias , city , state , country | pitching : player_id , year , stint , team_id , league_id , w , l , g , gs , cg , sho , sv , ipouts , h , er , hr , bb , so , baopp , era , ibb , wp , hbp , bk , bfp , gf , r , sh , sf , g_idp | pitching_postseason : player_id , year , round , team_id , league_id , w , l , g , gs , cg , sho , sv , ipouts , h , er , hr , bb , so , baopp , era , ibb , wp , hbp , bk , bfp , gf , r , sh , sf , g_idp | salary : year , team_id , league_id , player_id , salary | college : college_id , name_full , city , state , country | postseason : year , round , team_id_winner , league_id_winner , team_id_loser , league_id_loser , wins , losses , ties | team : year , league_id , team_id , franchise_id , div_id , rank , g , ghome , w , l , div_win , wc_win , lg_win , ws_win , r , ab , h , double , triple , hr , bb , so , sb , cs , hbp , sf , ra , er , era , cg , sho , sv , ipouts , ha , hra , bba , soa , e , dp , fp , name , park , attendance , bpf , ppf , team_id_br , team_id_lahman45 , team_id_retro | team_franchise : franchise_id , franchise_name , active , na_assoc | team_half : year , league_id , team_id , half , div_id , div_win , rank , g , w , l output: SELECT max(T1.wins) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings';\n Now please use valid SQLite to answer the following questions: What is the feature type name of feature AirCon?",
    "Here is an examples including input and output:\n input: question: How many games are played for all students? serialized_schema:  | game_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | video_games : gameid , gname , gtype | plays_games : stuid , gameid , hours_played | sportsinfo : stuid , sportname , hoursperweek , gamesplayed , onscholarship output: SELECT sum(gamesplayed) FROM Sportsinfo\n Now please use valid SQLite to answer the following questions: Show the property type descriptions of properties belonging to that code.",
    "Here is an examples including input and output:\n input: question: Show the average price of hotels for each star rating code. serialized_schema:  | cre_Theme_park | ref_hotel_star_ratings : star_rating_code , star_rating_description | locations : location_id , location_name , address , other_details | ref_attraction_types : attraction_type_code , attraction_type_description | visitors : tourist_id , tourist_details | features : feature_id , feature_details | hotels : hotel_id , star_rating_code , pets_allowed_yn , price_range , other_hotel_details | tourist_attractions : tourist_attraction_id , attraction_type_code , location_id , how_to_get_there , name , description , opening_hours , other_details | street_markets : market_id , market_details | shops : shop_id , shop_details | museums : museum_id , museum_details | royal_family : royal_family_id , royal_family_details | theme_parks : theme_park_id , theme_park_details | visits : visit_id , tourist_attraction_id , tourist_id , visit_date , visit_details | photos : photo_id , tourist_attraction_id , name , description , filename , other_details | staff : staff_id , tourist_attraction_id , name , other_details | tourist_attraction_features : tourist_attraction_id , feature_id output: SELECT star_rating_code ,  avg(price_range) FROM HOTELS GROUP BY star_rating_code\n Now please use valid SQLite to answer the following questions: What are the names of properties that are either houses or apartments with more than 1 room?"
]