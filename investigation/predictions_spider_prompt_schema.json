[
    "SELECT COUNT(*) FROM singer;",
    "SELECT COUNT(*) FROM singer;",
    "SELECT name, country, age FROM singer ORDER BY age DESC",
    "SELECT name, country, age FROM singer ORDER BY age DESC",
    "SELECT AVG(age) AS average_age, MIN(age) AS minimum_age, MAX(age) AS maximum_age  FROM singer  WHERE country = 'France'",
    "SELECT AVG(age) AS average_age, MIN(age) AS minimum_age, MAX(age) AS maximum_age FROM singer WHERE country = 'French'",
    "SELECT s.name, s.song_release_year FROM singer s WHERE s.age = (SELECT MIN(age) FROM singer)",
    "SELECT song_name, song_release_year FROM singer WHERE age = (SELECT MIN(age) FROM singer)",
    "SELECT DISTINCT country FROM singer WHERE age > 20;",
    "SELECT DISTINCT singer.country FROM singer WHERE singer.age > 20",
    "SELECT singer.country, COUNT(singer.singer_id) AS num_singers FROM singer GROUP BY singer.country;",
    "SELECT singer.country, COUNT(singer.singer_id) AS num_singers FROM concert_singer AS singer GROUP BY singer.country",
    "SELECT song_name  FROM singer  WHERE age > (SELECT AVG(age) FROM singer)",
    "SELECT song_name FROM singer WHERE age > (SELECT AVG(age) FROM singer)",
    "SELECT location, name FROM stadium WHERE capacity BETWEEN 5000 AND 10000;",
    "SELECT location, name FROM stadium WHERE capacity BETWEEN 5000 AND 10000;",
    "SELECT MAX(capacity), AVG(capacity) FROM stadium;",
    "SELECT AVG(capacity), MAX(capacity) FROM stadium;",
    "SELECT name, capacity FROM stadium WHERE average = (SELECT MAX(average) FROM stadium)",
    "SELECT name, capacity FROM stadium WHERE stadium_id = (     SELECT stadium_id     FROM concert     GROUP BY stadium_id     HAVING AVG(average) = (         SELECT MAX(avg_attendance)         FROM (             SELECT stadium_id, AVG(average) AS avg_attendance             FROM concert             GROUP BY stadium_id         ) AS avg_attendance_table     ) )",
    "SELECT COUNT(*) FROM concert WHERE year = 2014 OR year = 2015;",
    "SELECT COUNT(*) FROM concert WHERE year = 2014 OR year = 2015;",
    "SELECT stadium.name, COUNT(concert.concert_id) AS num_concerts FROM stadium LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id GROUP BY stadium.name;",
    "SELECT stadium.name, COUNT(concert.concert_id) AS num_concerts FROM stadium LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id GROUP BY stadium.name",
    "SELECT name, capacity FROM stadium WHERE stadium_id = (     SELECT stadium_id     FROM concert     WHERE year >= 2014     GROUP BY stadium_id     ORDER BY COUNT(*) DESC     LIMIT 1 )",
    "SELECT name, capacity FROM stadium WHERE stadium_id = (     SELECT stadium_id     FROM concert     WHERE year > 2013     GROUP BY stadium_id     ORDER BY COUNT(*) DESC     LIMIT 1 )",
    "SELECT year FROM concert GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1;",
    "SELECT year FROM concert GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1;",
    "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)",
    "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)",
    "SELECT DISTINCT s1.country FROM singer s1, singer s2, singer_in_concert sic1, singer_in_concert sic2, concert c WHERE s1.age > 40 AND s2.age < 30 AND s1.singer_id = sic1.singer_id AND s2.singer_id = sic2.singer_id AND sic1.concert_id = sic2.concert_id AND c.concert_id = sic1.concert_id",
    "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert WHERE year = 2014);",
    "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert WHERE year = 2014)",
    "SELECT concert.concert_name, concert.theme, COUNT(singer_in_concert.singer_id) AS num_singers FROM concert JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id GROUP BY concert.concert_id",
    "SELECT concert.concert_name, concert.theme, COUNT(singer_in_concert.singer_id) AS number_of_singers FROM concert JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id GROUP BY concert.concert_name, concert.theme",
    "SELECT singer.name, COUNT(concert.concert_id) AS num_concerts FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON concert.concert_id = singer_in_concert.concert_id GROUP BY singer.name",
    "SELECT singer.name, COUNT(concert.concert_id) AS number_of_concerts FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON concert.concert_id = singer_in_concert.concert_id GROUP BY singer.name",
    "SELECT singer.name  FROM singer  JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id  JOIN concert ON concert.concert_id = singer_in_concert.concert_id  WHERE concert.year = 2014",
    "SELECT singer.name  FROM singer  JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id  JOIN concert ON concert.concert_id = singer_in_concert.concert_id  WHERE concert.year = 2014",
    "SELECT singer.name, singer.country  FROM singer  WHERE singer.song_name LIKE '%Hey%'",
    "SELECT singer.name, singer.country FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON concert.concert_id = singer_in_concert.concert_id WHERE singer.song_name LIKE '%Hey%'",
    "SELECT DISTINCT stadium.name, stadium.location FROM stadium INNER JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year = 2014 AND stadium.stadium_id IN (     SELECT concert.stadium_id     FROM concert     WHERE concert.year = 2015 )",
    "SELECT DISTINCT stadium.name, stadium.location FROM stadium INNER JOIN concert ON stadium.stadium_id = concert.stadium_id INNER JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id WHERE concert.year = 2014 AND stadium.stadium_id IN (     SELECT concert.stadium_id     FROM concert     INNER JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id     WHERE concert.year = 2015 )",
    "SELECT COUNT(*)  FROM concert  WHERE stadium_id = (SELECT stadium_id                      FROM stadium                      ORDER BY capacity DESC                      LIMIT 1);",
    "SELECT COUNT(*)  FROM concert  WHERE stadium_id = (SELECT stadium_id                      FROM stadium                      ORDER BY capacity DESC                      LIMIT 1);",
    "SELECT COUNT(*) FROM pets WHERE weight > 10;",
    "SELECT COUNT(*) FROM pets WHERE weight > 10;",
    "SELECT weight FROM pets WHERE pet_age = (SELECT MIN(pet_age) FROM pets)",
    "SELECT MIN(weight) FROM pets",
    "SELECT pettype, MAX(weight) AS max_weight FROM pets GROUP BY pettype;",
    "SELECT pettype, MAX(weight) AS max_weight, MAX(pettype) AS type FROM pets GROUP BY pettype;",
    "SELECT COUNT(pets.petid)  FROM pets  JOIN has_pet ON pets.petid = has_pet.petid  JOIN student ON has_pet.stuid = student.stuid  WHERE student.age > 20",
    "SELECT COUNT(DISTINCT petid)  FROM has_pet  JOIN student ON has_pet.stuid = student.stuid  WHERE age > 20",
    "SELECT COUNT(pets.petid)  FROM pets  JOIN has_pet ON pets.petid = has_pet.petid  JOIN student ON has_pet.stuid = student.stuid  WHERE pets.pettype = 'dog' AND student.sex = 'F'",
    "SELECT COUNT(petid) FROM pets p JOIN has_pet hp ON p.petid = hp.petid JOIN student s ON hp.stuid = s.stuid WHERE p.pettype = 'dog' AND s.sex = 'female'",
    "SELECT COUNT(DISTINCT pettype) FROM pets",
    "SELECT COUNT(DISTINCT pettype) FROM pets",
    "SELECT DISTINCT fname FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' OR pets.pettype = 'dog'",
    "SELECT DISTINCT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype IN ('cat', 'dog')",
    "SELECT DISTINCT fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pettype = 'cat' AND stuid IN (     SELECT stuid     FROM has_pet     JOIN pets ON has_pet.petid = pets.petid     WHERE pettype = 'dog' )",
    "SELECT DISTINCT fname FROM student  WHERE stuid IN (SELECT stuid FROM has_pet WHERE petid IN  (SELECT petid FROM pets WHERE pettype = 'cat'))  AND stuid IN (SELECT stuid FROM has_pet WHERE petid IN  (SELECT petid FROM pets WHERE pettype = 'dog'));",
    "SELECT major, age FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE pettype = 'cat')",
    "SELECT DISTINCT student.major, student.age FROM student WHERE student.stuid NOT IN (   SELECT has_pet.stuid   FROM has_pet   JOIN pets ON has_pet.petid = pets.petid   WHERE pets.pettype = 'cat' )",
    "SELECT DISTINCT stuid  FROM student  WHERE stuid NOT IN (SELECT stuid FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE pettype = 'cat')",
    "SELECT DISTINCT stuid FROM student WHERE stuid NOT IN (   SELECT stuid   FROM has_pet   JOIN pets ON has_pet.petid = pets.petid   WHERE pets.pettype = 'cat' )",
    "SELECT fname, age  FROM student  WHERE stuid IN (SELECT stuid FROM has_pet WHERE petid IN (SELECT petid FROM pets WHERE pettype = 'dog'))  AND stuid NOT IN (SELECT stuid FROM has_pet WHERE petid IN (SELECT petid FROM pets WHERE pettype = 'cat'))",
    "SELECT fname FROM student WHERE stuid IN (SELECT stuid FROM has_pet WHERE petid IN (SELECT petid FROM pets WHERE pettype = 'dog') AND stuid NOT IN (SELECT stuid FROM has_pet WHERE petid IN (SELECT petid FROM pets WHERE pettype = 'cat'))) ORDER BY fname LIMIT 1;",
    "SELECT pettype, weight FROM pets WHERE pet_age = (SELECT MIN(pet_age) FROM pets)",
    "SELECT pettype, weight FROM pets WHERE pet_age = (SELECT MIN(pet_age) FROM pets)",
    "SELECT petid, weight FROM pets WHERE pet_age > 1",
    "SELECT petid, weight FROM pets_1.pets WHERE pet_age > 1;",
    "SELECT pettype, AVG(pet_age) AS avg_age, MAX(pet_age) AS max_age FROM pets GROUP BY pettype;",
    "SELECT pettype, AVG(pet_age) AS avg_age, MAX(pet_age) AS max_age FROM pets GROUP BY pettype;",
    "SELECT pettype, AVG(weight) AS avg_weight FROM pets GROUP BY pettype;",
    "SELECT pettype, AVG(weight) AS avg_weight FROM pets GROUP BY pettype;",
    "SELECT fname, age FROM student WHERE stuid IN (SELECT stuid FROM has_pet) ORDER BY stuid ASC LIMIT 1;",
    "SELECT DISTINCT student.fname, student.age FROM student INNER JOIN has_pet ON student.stuid = has_pet.stuid INNER JOIN pets ON has_pet.petid = pets.petid;",
    "SELECT petid  FROM has_pet  WHERE stuid IN (SELECT stuid FROM student WHERE lname = 'Smith')",
    "SELECT petid FROM has_pet JOIN pets ON has_pet.petid = pets.petid JOIN student ON has_pet.stuid = student.stuid WHERE student.lname = 'Smith'",
    "SELECT has_pet.stuid, COUNT(pets.petid) AS num_pets FROM has_pet JOIN pets ON has_pet.petid = pets.petid GROUP BY has_pet.stuid",
    "SELECT has_pet.stuid, COUNT(has_pet.petid) AS num_pets FROM has_pet GROUP BY has_pet.stuid HAVING COUNT(has_pet.petid) > 0;",
    "SELECT fname, sex FROM student WHERE stuid IN (SELECT stuid FROM has_pet GROUP BY stuid HAVING COUNT(*) > 1)",
    "SELECT student.fname, student.sex FROM student INNER JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY student.stuid HAVING COUNT(has_pet.petid) > 1;",
    "SELECT s.lname FROM student s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'cat' AND p.pet_age = 3 ORDER BY hp.petid DESC LIMIT 1;",
    "SELECT s.lname FROM student s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'cat' AND p.pet_age = 3 ORDER BY hp.petid DESC LIMIT 1;",
    "SELECT AVG(age) FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet)",
    "SELECT AVG(age) FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet)",
    "SELECT COUNT(*) FROM continents;",
    "SELECT COUNT(DISTINCT continent) FROM continents;",
    "SELECT continents.contid, continents.continent, COUNT(countries.countryid) AS num_countries FROM continents LEFT JOIN countries ON continents.contid = countries.continent GROUP BY continents.contid, continents.continent",
    "SELECT contid, continent, COUNT(countryid) AS num_countries FROM continents LEFT JOIN countries ON continents.continent = countries.continent GROUP BY contid, continent",
    "SELECT COUNT(*) FROM countries;",
    "SELECT COUNT(*) FROM countries;",
    "SELECT car_makers.id, car_makers.fullname, COUNT(model_list.modelid) AS number_of_models FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id, car_makers.fullname",
    "SELECT car_makers.id, car_makers.fullname, COUNT(model_list.modelid) AS num_models FROM car_makers JOIN model_list ON car_makers.maker = model_list.maker GROUP BY car_makers.id, car_makers.fullname",
    "SELECT model FROM car_names JOIN cars_data ON car_names.modelid = cars_data.id WHERE horsepower = (SELECT MIN(horsepower) FROM cars_data)",
    "SELECT model FROM car_names JOIN cars_data ON car_names.makeid = cars_data.id WHERE horsepower = (SELECT MIN(horsepower) FROM cars_data)",
    "SELECT model FROM model_list WHERE weight < (SELECT AVG(weight) FROM cars_data)",
    "SELECT model FROM model_list WHERE weight < (SELECT AVG(weight) FROM cars_data)",
    "SELECT DISTINCT car_makers.maker FROM car_makers INNER JOIN car_names ON car_makers.id = car_names.makeid INNER JOIN cars_data ON car_names.model = cars_data.id WHERE cars_data.year = 1970;",
    "SELECT DISTINCT car_makers.maker FROM car_makers INNER JOIN cars_data ON car_makers.id = cars_data.id WHERE cars_data.year = 1970;",
    "SELECT car_names.makeid, cars_data.year FROM car_names JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.year = (SELECT MIN(year) FROM cars_data)",
    "SELECT car_makers.maker, MIN(cars_data.year) AS earliest_year FROM car_makers JOIN car_names ON car_makers.id = car_names.makeid JOIN cars_data ON car_names.model = cars_data.id GROUP BY car_makers.maker ORDER BY earliest_year LIMIT 1;",
    "SELECT DISTINCT model FROM car_names JOIN cars_data ON car_names.makeid = cars_data.id WHERE year > 1980",
    "SELECT DISTINCT model FROM model_list INNER JOIN cars_data ON model_list.modelid = cars_data.id WHERE year > 1980",
    "SELECT continents.continent, COUNT(DISTINCT car_makers.id) AS car_maker_count FROM continents JOIN countries ON continents.contid = countries.continent JOIN car_makers ON countries.countryid = car_makers.country GROUP BY continents.continent",
    "SELECT c.continent, COUNT(DISTINCT cm.id) AS num_car_makers FROM continents c JOIN countries co ON c.contid = co.continent JOIN car_makers cm ON co.countryid = cm.country GROUP BY c.continent",
    "SELECT countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryname ORDER BY COUNT(DISTINCT car_makers.maker) DESC LIMIT 1;",
    "SELECT countryname  FROM countries  WHERE countryid = (     SELECT country      FROM car_makers      GROUP BY country      ORDER BY COUNT(DISTINCT maker) DESC      LIMIT 1 )",
    "SELECT car_makers.fullname, COUNT(model_list.modelid) AS model_count FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.fullname",
    "SELECT car_makers.id, car_makers.fullname, COUNT(model_list.modelid) AS num_models FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id, car_makers.fullname",
    "SELECT accelerate FROM cars_data  JOIN car_names ON cars_data.id = car_names.makeid  WHERE car_names.make = 'amc hornet sportabout (sw)'",
    "SELECT accelerate FROM cars_data  JOIN car_names ON cars_data.id = car_names.makeid  JOIN model_list ON car_names.model = model_list.model  WHERE model_list.maker = 'amc' AND model_list.model = 'hornet sportabout (sw)'",
    "SELECT COUNT(DISTINCT car_makers.id)  FROM car_makers  JOIN countries ON car_makers.country = countries.countryid  WHERE countries.countryname = 'france'",
    "SELECT COUNT(DISTINCT car_makers.id)  FROM car_makers  JOIN countries ON car_makers.country = countries.countryid  WHERE countries.countryname = 'France' AND car_makers.maker = 'care'",
    "SELECT COUNT(DISTINCT modelid)  FROM model_list  INNER JOIN car_makers ON model_list.maker = car_makers.maker  INNER JOIN countries ON car_makers.country = countries.countryid  WHERE countries.continent = 'usa'",
    "SELECT COUNT(DISTINCT model) FROM model_list  INNER JOIN car_makers ON model_list.maker = car_makers.maker  INNER JOIN countries ON car_makers.country = countries.countryname  WHERE countries.continent = 'United States'",
    "SELECT AVG(mpg) FROM cars_data WHERE cylinders = 4",
    "SELECT AVG(mpg) FROM cars_data WHERE cylinders = 4;",
    "SELECT MIN(weight) FROM cars_data WHERE cylinders = 8 AND year = 1974;",
    "SELECT MIN(weight) FROM cars_data WHERE cylinders=8 AND year=1974",
    "SELECT car_makers.maker, model_list.model FROM car_makers INNER JOIN model_list ON car_makers.id = model_list.maker;",
    "SELECT car_makers.maker, model_list.model FROM car_makers JOIN model_list ON car_makers.id = model_list.maker;",
    "SELECT DISTINCT countries.countryname, countries.countryid FROM countries INNER JOIN car_makers ON countries.countryid = car_makers.country;",
    "SELECT DISTINCT countries.countryid, countries.countryname FROM countries INNER JOIN car_makers ON countries.countryid = car_makers.country;",
    "SELECT COUNT(*) FROM cars_data WHERE horsepower > 150;",
    "SELECT COUNT(*) FROM cars_data WHERE horsepower > 150;",
    "SELECT year, AVG(weight) AS average_weight FROM cars_data GROUP BY year",
    "SELECT AVG(weight), year FROM cars_data GROUP BY year;",
    "SELECT DISTINCT countries.countryname FROM countries INNER JOIN car_makers ON countries.countryid = car_makers.country WHERE countries.continent = 'Europe' GROUP BY countries.countryname HAVING COUNT(DISTINCT car_makers.maker) >= 3;",
    "SELECT DISTINCT countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country WHERE countries.continent = 'Europe' GROUP BY countries.countryname HAVING COUNT(DISTINCT car_makers.maker) >= 3;",
    "SELECT MAX(horsepower), car_makers.maker FROM cars_data JOIN car_makers ON cars_data.id = car_makers.id WHERE cars_data.cylinders = 3 GROUP BY car_makers.maker",
    "SELECT MAX(horsepower), maker FROM cars_data WHERE cylinders = 3",
    "SELECT model  FROM cars_data  WHERE mpg = (SELECT MAX(mpg) FROM cars_data)",
    "SELECT model FROM car_names JOIN cars_data ON car_names.makeid = cars_data.id ORDER BY mpg DESC LIMIT 1;",
    "SELECT AVG(horsepower) FROM cars_data WHERE year < 1980;",
    "SELECT AVG(horsepower) FROM cars_data WHERE year < 1980",
    "SELECT AVG(edispl) FROM cars_data  WHERE id IN (SELECT id FROM car_names WHERE model = 'volvo')",
    "SELECT AVG(cars_data.edispl) FROM car_makers  JOIN car_names ON car_makers.id = car_names.makeid  JOIN model_list ON car_names.model = model_list.model  JOIN cars_data ON model_list.modelid = cars_data.id  WHERE car_makers.maker = 'volvo'",
    "SELECT cylinders, MAX(accelerate) FROM cars_data GROUP BY cylinders",
    "SELECT MAX(accelerate) FROM cars_data;",
    "SELECT model FROM model_list WHERE maker = (     SELECT maker     FROM car_makers     WHERE id = (         SELECT makeid         FROM car_names         GROUP BY makeid         ORDER BY COUNT(*) DESC         LIMIT 1     ) ) GROUP BY model ORDER BY COUNT(*) DESC LIMIT 1;",
    "SELECT model, COUNT(DISTINCT makeid) AS num_versions FROM model_list JOIN car_names ON model_list.modelid = car_names.model GROUP BY model ORDER BY num_versions DESC LIMIT 1;",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 4;",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 4;",
    "SELECT COUNT(*) FROM cars_data WHERE year = 1980;",
    "SELECT COUNT(*) FROM cars_data WHERE year = 1980;",
    "SELECT COUNT(DISTINCT model) FROM model_list WHERE maker IN (SELECT id FROM car_makers WHERE fullname = 'American Motor Company')",
    "SELECT COUNT(DISTINCT modelid)  FROM model_list  WHERE maker = (SELECT id FROM car_makers WHERE maker = 'American Motor Company')",
    "SELECT car_makers.id, car_makers.fullname FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id, car_makers.fullname HAVING COUNT(DISTINCT model_list.modelid) > 3;",
    "SELECT id, maker FROM car_makers WHERE id IN (SELECT maker FROM model_list GROUP BY maker HAVING COUNT(*) > 3)",
    "SELECT DISTINCT model_list.model FROM model_list JOIN car_makers ON model_list.maker = car_makers.maker WHERE (car_makers.fullname = 'General Motors' OR cars_data.weight > 3500)",
    "SELECT DISTINCT model FROM model_list WHERE maker = 'General Motors' OR weight > 3500;",
    "SELECT DISTINCT year FROM cars_data WHERE weight >= 3000 AND weight <= 4000;",
    "SELECT DISTINCT year  FROM cars_data  WHERE weight < 4000 AND year IN (SELECT year FROM cars_data WHERE weight > 3000)",
    "SELECT horsepower FROM cars_data WHERE accelerate = (SELECT MAX(accelerate) FROM cars_data)",
    "SELECT horsepower FROM cars_data ORDER BY accelerate DESC LIMIT 1;",
    "SELECT cylinders FROM cars_data WHERE model = 'volvo' ORDER BY accelerate ASC LIMIT 1;",
    "SELECT cylinders FROM cars_data WHERE model = 'volvo' ORDER BY accelerate ASC LIMIT 1;",
    "SELECT COUNT(*) FROM cars_data WHERE accelerate > (SELECT MAX(accelerate) FROM cars_data WHERE horsepower = (SELECT MAX(horsepower) FROM cars_data))",
    "SELECT COUNT(*) FROM cars_data WHERE accelerate > (SELECT MAX(accelerate) FROM cars_data WHERE horsepower = (SELECT MAX(horsepower) FROM cars_data))",
    "SELECT COUNT(DISTINCT countries.countryid) FROM countries INNER JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryid HAVING COUNT(DISTINCT car_makers.id) > 2;",
    "SELECT COUNT(DISTINCT countries.countryid) FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryid HAVING COUNT(DISTINCT car_makers.id) > 2;",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 6;",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 6;",
    "SELECT model FROM cars_data WHERE cylinders = 4 ORDER BY horsepower DESC LIMIT 1;",
    "SELECT model FROM cars_data WHERE cylinders = 4 ORDER BY horsepower DESC LIMIT 1;",
    "SELECT car_names.makeid, car_makers.maker FROM car_names JOIN cars_data ON car_names.model = cars_data.id JOIN car_makers ON car_names.makeid = car_makers.id WHERE cars_data.horsepower > (SELECT MIN(horsepower) FROM cars_data) AND cars_data.cylinders <= 3;",
    "SELECT car_makers.id, car_makers.maker  FROM car_makers  JOIN car_names ON car_makers.id = car_names.makeid  JOIN cars_data ON car_names.model = cars_data.id  WHERE cars_data.cylinders < 4 AND cars_data.horsepower > (SELECT MIN(horsepower) FROM cars_data)",
    "SELECT MAX(mpg) FROM cars_data WHERE cylinders = 8 AND year < 1980;",
    "SELECT MAX(mpg) FROM cars_data WHERE cylinders = 8 OR year < 1980;",
    "SELECT model FROM model_list WHERE maker NOT LIKE 'Ford Motor Company' AND weight < 3500;",
    "SELECT model FROM model_list WHERE maker <> 'Ford Motor Company' AND weight < 3500;",
    "SELECT DISTINCT countries.countryname FROM countries LEFT JOIN car_makers ON countries.countryid = car_makers.country WHERE car_makers.id IS NULL;",
    "SELECT DISTINCT countries.countryname FROM countries LEFT JOIN car_makers ON countries.countryid = car_makers.country WHERE car_makers.id IS NULL",
    "SELECT car_makers.id, car_makers.maker FROM car_makers INNER JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id, car_makers.maker HAVING COUNT(DISTINCT model_list.modelid) >= 2 AND COUNT(DISTINCT car_makers.maker) > 3;",
    "SELECT car_makers.id, car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.modelid = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE car_makers.id IN (     SELECT maker     FROM model_list     GROUP BY maker     HAVING COUNT(DISTINCT model) >= 2 ) AND car_makers.id IN (     SELECT maker     FROM car_names     GROUP BY maker     HAVING COUNT(DISTINCT make) > 3 )",
    "SELECT DISTINCT countries.countryid, countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.modelid = car_names.model WHERE car_makers.maker = 'fiat' OR countries.countryid IN (     SELECT car_makers.country     FROM car_makers     GROUP BY car_makers.country     HAVING COUNT(DISTINCT car_makers.id) > 3 )",
    "SELECT DISTINCT countries.countryid, countries.countryname FROM countries LEFT JOIN car_makers ON countries.countryid = car_makers.country WHERE car_makers.id IN (     SELECT car_makers.id     FROM car_makers     GROUP BY car_makers.country     HAVING COUNT(DISTINCT car_makers.maker) > 3 ) OR countries.countryid IN (     SELECT car_makers.country     FROM car_makers     INNER JOIN model_list ON car_makers.id = model_list.maker     WHERE model_list.model = 'fiat' )",
    "SELECT country FROM airlines WHERE airline = \"JetBlue Airways\"",
    "SELECT country FROM airlines WHERE airline = 'Jetblue Airways'",
    "SELECT abbreviation FROM airlines WHERE airline = 'JetBlue Airways'",
    "SELECT abbreviation FROM airlines WHERE airline = 'Jetblue Airways'",
    "SELECT airline, abbreviation FROM airlines WHERE country = 'USA'",
    "SELECT airline, abbreviation FROM airlines WHERE country = 'USA'",
    "SELECT airportcode, airportname FROM airports WHERE city = 'Anthony'",
    "SELECT airportcode, airportname FROM airports WHERE city='Anthony'",
    "SELECT COUNT(*) FROM airlines;",
    "SELECT COUNT(*) FROM airlines;",
    "SELECT COUNT(*) FROM airports;",
    "SELECT COUNT(*) FROM airports;",
    "SELECT COUNT(*) FROM flights;",
    "SELECT COUNT(*) FROM flights;",
    "SELECT airline FROM airlines WHERE abbreviation = 'UAL'",
    "SELECT airline FROM airlines WHERE abbreviation = 'UAL'",
    "SELECT COUNT(*) FROM airlines WHERE country = 'USA'",
    "SELECT COUNT(*) FROM airlines WHERE country = 'USA'",
    "SELECT city, country FROM airports WHERE airportname = 'Alton airport'",
    "SELECT city, country FROM airports WHERE airportname = 'Alton airport'",
    "SELECT airportname FROM airports WHERE airportcode = 'AKO'"
]