[
    "SELECT COUNT(*) FROM singer",
    "SELECT COUNT(*) FROM singer",
    "SELECT Name, Country, Age FROM singer ORDER BY Age DESC",
    "SELECT Name, Country, Age FROM singer ORDER BY Age DESC",
    "SELECT AVG(Age) AS Average_Age, MIN(Age) AS Minimum_Age, MAX(Age) AS Maximum_Age  FROM singer  WHERE Country = 'France'",
    "SELECT AVG(Age) AS Average_Age, MIN(Age) AS Minimum_Age, MAX(Age) AS Maximum_Age  FROM singer  WHERE Country = 'French'",
    "SELECT s.Name, s.Song_release_year FROM singer s WHERE s.Age = (SELECT MIN(Age) FROM singer)",
    "SELECT Song_Name, Song_release_year  FROM singer  WHERE Age = (SELECT MIN(Age) FROM singer)",
    "SELECT DISTINCT Country FROM singer WHERE Age > 20",
    "SELECT DISTINCT Country FROM singer WHERE Age > 20;",
    "SELECT singer.Country, COUNT(singer.Singer_ID) AS num_singers FROM singer GROUP BY singer.Country;",
    "SELECT Country, COUNT(*) AS Num_Singers FROM singer GROUP BY Country;",
    "SELECT Song_Name FROM singer  WHERE Age > (SELECT AVG(Age) FROM singer)",
    "SELECT Song_Name  FROM singer  WHERE Age > (SELECT AVG(Age) FROM singer)",
    "SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;",
    "SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;",
    "SELECT MAX(Capacity) AS maximum_capacity, AVG(Capacity) AS average_capacity FROM stadium",
    "SELECT AVG(Capacity), MAX(Capacity) FROM stadium",
    "SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium)",
    "SELECT Name, Capacity FROM stadium WHERE Stadium_ID = (SELECT Stadium_ID FROM (SELECT Stadium_ID, AVG(Average) AS Avg_Attendance FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID GROUP BY Stadium_ID ORDER BY Avg_Attendance DESC LIMIT 1) AS subquery)",
    "SELECT COUNT(*) FROM concert WHERE Year = '2014' OR Year = '2015'",
    "SELECT COUNT(*) FROM concert WHERE Year = '2014' OR Year = '2015'",
    "SELECT stadium.Name, COUNT(concert.concert_ID) AS number_of_concerts FROM stadium LEFT JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID GROUP BY stadium.Name;",
    "SELECT stadium.Name, COUNT(concert.concert_ID) AS num_concerts FROM stadium LEFT JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID GROUP BY stadium.Name",
    "SELECT s.Name, s.Capacity FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID JOIN singer_in_concert sic ON c.concert_ID = sic.concert_ID WHERE c.Year >= '2014' GROUP BY s.Name, s.Capacity ORDER BY COUNT(DISTINCT c.concert_ID) DESC LIMIT 1;",
    "SELECT Name, Capacity FROM stadium  WHERE Stadium_ID = (SELECT Stadium_ID FROM concert                      WHERE Year > 2013                      GROUP BY Stadium_ID                      ORDER BY COUNT(*) DESC                      LIMIT 1)",
    "SELECT Year, COUNT(*) AS num_concerts FROM concert GROUP BY Year ORDER BY num_concerts DESC LIMIT 1;",
    "SELECT Year, COUNT(*) AS num_concerts FROM concert GROUP BY Year ORDER BY num_concerts DESC LIMIT 1;",
    "SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert)",
    "SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert)",
    "SELECT DISTINCT s1.Country  FROM singer s1, singer s2, singer_in_concert sic1, singer_in_concert sic2  WHERE s1.Age > 40 AND s2.Age < 30 AND s1.Singer_ID = sic1.Singer_ID AND s2.Singer_ID = sic2.Singer_ID AND sic1.concert_ID = sic2.concert_ID",
    "SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = '2014')",
    "SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = '2014')",
    "SELECT concert.concert_Name, concert.Theme, COUNT(singer_in_concert.Singer_ID) AS num_singers FROM concert JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID GROUP BY concert.concert_Name, concert.Theme",
    "SELECT concert.concert_Name, concert.Theme, COUNT(singer_in_concert.Singer_ID) AS number_of_singers FROM concert JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID GROUP BY concert.concert_Name, concert.Theme",
    "SELECT singer.Name, COUNT(singer_in_concert.concert_ID) AS number_of_concerts FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID GROUP BY singer.Name",
    "SELECT singer.Name, COUNT(concert.concert_ID) AS number_of_concerts FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID GROUP BY singer.Name",
    "SELECT singer.Name  FROM singer  JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID  JOIN concert ON concert.concert_ID = singer_in_concert.concert_ID  WHERE concert.Year = '2014'",
    "SELECT singer.Name  FROM singer  JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID  JOIN concert ON concert.concert_ID = singer_in_concert.concert_ID  WHERE concert.Year = '2014'",
    "SELECT Name, Country FROM singer WHERE Song_Name LIKE '%Hey%'",
    "SELECT singer.Name, singer.Country  FROM singer  INNER JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID  INNER JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID  WHERE singer.Song_Name LIKE '%Hey%'",
    "SELECT stadium.Name, stadium.Location  FROM stadium  INNER JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID  INNER JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID  INNER JOIN singer ON singer_in_concert.Singer_ID = singer.Singer_ID  WHERE concert.Year = '2014' AND stadium.Stadium_ID IN  (SELECT concert.Stadium_ID FROM concert WHERE concert.Year = '2015')",
    "SELECT DISTINCT s.Name, s.Location  FROM stadium s  INNER JOIN concert c ON s.Stadium_ID = c.Stadium_ID  INNER JOIN singer_in_concert sic ON c.concert_ID = sic.concert_ID  WHERE c.Year = '2014' AND s.Stadium_ID IN  (SELECT c2.Stadium_ID FROM concert c2 WHERE c2.Year = '2015')",
    "SELECT COUNT(*)  FROM concert  WHERE Stadium_ID = (SELECT Stadium_ID                      FROM stadium                      ORDER BY Capacity DESC                      FETCH FIRST 1 ROW ONLY)",
    "SELECT COUNT(*)  FROM concert  WHERE Stadium_ID = (SELECT Stadium_ID                      FROM stadium                      ORDER BY Capacity DESC                      FETCH FIRST 1 ROW ONLY)",
    "SELECT COUNT(*) FROM Has_Pet  INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID  WHERE Pets.weight > 10",
    "SELECT COUNT(*) FROM Has_Pet  JOIN Pets ON Has_Pet.PetID = Pets.PetID  WHERE Pets.weight > 10",
    "SELECT MIN(weight) FROM Pets WHERE PetType='dog' AND pet_age=(SELECT MIN(pet_age) FROM Pets INNER JOIN Has_Pet ON Pets.PetID=Has_Pet.PetID INNER JOIN Student ON Has_Pet.StuID=Student.StuID WHERE Student.Age=(SELECT MIN(Age) FROM Student))",
    "SELECT weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets)",
    "SELECT PetType, MAX(weight) AS max_weight FROM Pets GROUP BY PetType",
    "SELECT PetType, MAX(weight) AS max_weight FROM Pets GROUP BY PetType;",
    "SELECT COUNT(Pets.PetID)  FROM Student  JOIN Has_Pet ON Student.StuID = Has_Pet.StuID  JOIN Pets ON Has_Pet.PetID = Pets.PetID  WHERE Student.Age > 20",
    "SELECT COUNT(Pets.PetID)  FROM Student  JOIN Has_Pet ON Student.StuID = Has_Pet.StuID  JOIN Pets ON Has_Pet.PetID = Pets.PetID  WHERE Student.Age > 20",
    "SELECT COUNT(*) FROM Has_Pet  JOIN Student ON Has_Pet.StuID = Student.StuID  JOIN Pets ON Has_Pet.PetID = Pets.PetID  WHERE Pets.PetType = 'dog' AND Student.Sex = 'F'",
    "SELECT COUNT(Pets.PetID)  FROM Student  JOIN Has_Pet ON Student.StuID = Has_Pet.StuID  JOIN Pets ON Has_Pet.PetID = Pets.PetID  WHERE Student.Sex = 'female' AND Pets.PetType = 'dog'",
    "SELECT COUNT(DISTINCT PetType) FROM Pets",
    "SELECT COUNT(DISTINCT PetType) FROM Pets",
    "SELECT DISTINCT Fname FROM Student  INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID  INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID  WHERE PetType = 'cat' OR PetType = 'dog'",
    "SELECT DISTINCT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType IN ('cat', 'dog')",
    "SELECT DISTINCT s.Fname FROM Student s INNER JOIN Has_Pet hp1 ON s.StuID = hp1.StuID INNER JOIN Has_Pet hp2 ON hp1.StuID = hp2.StuID AND hp1.PetID <> hp2.PetID INNER JOIN Pets p1 ON hp1.PetID = p1.PetID AND p1.PetType = 'cat' INNER JOIN Pets p2 ON hp2.PetID = p2.PetID AND p2.PetType = 'dog'",
    "SELECT DISTINCT s.Fname  FROM Student s  INNER JOIN Has_Pet hp1 ON s.StuID = hp1.StuID  INNER JOIN Has_Pet hp2 ON s.StuID = hp2.StuID  INNER JOIN Pets p1 ON hp1.PetID = p1.PetID AND p1.PetType = 'cat'  INNER JOIN Pets p2 ON hp2.PetID = p2.PetID AND p2.PetType = 'dog'",
    "SELECT Major, Age FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE PetType = 'cat')",
    "SELECT Student.Major, Student.Age  FROM Student  WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat')",
    "SELECT Student.StuID  FROM Student  LEFT JOIN Has_Pet ON Student.StuID = Has_Pet.StuID  LEFT JOIN Pets ON Has_Pet.PetID = Pets.PetID  WHERE Pets.PetType <> 'cat' OR Pets.PetType IS NULL",
    "SELECT DISTINCT Student.StuID FROM Student LEFT JOIN Has_Pet ON Student.StuID = Has_Pet.StuID LEFT JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType <> 'cat' OR Pets.PetType IS NULL",
    "SELECT Fname, Age FROM Student  WHERE StuID IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = 'dog'))  AND StuID NOT IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = 'cat'))",
    "SELECT Fname FROM Student  WHERE StuID IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = 'dog'))  AND StuID NOT IN (SELECT StuID FROM Has_Pet WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = 'cat'))  ORDER BY Fname ASC;",
    "SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets INNER JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID INNER JOIN Student ON Has_Pet.StuID = Student.StuID ORDER BY Age ASC LIMIT 1);",
    "SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets)",
    "SELECT Pets.PetID, Pets.weight FROM Pets JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID WHERE Pets.pet_age > 1",
    "SELECT Pets.PetID, Pets.weight  FROM Pets  INNER JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID  INNER JOIN Student ON Has_Pet.StuID = Student.StuID  WHERE Pets.pet_age > 1",
    "SELECT PetType, AVG(pet_age) AS avg_age, MAX(pet_age) AS max_age FROM Pets JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID GROUP BY PetType",
    "SELECT PetType, AVG(pet_age) AS avg_age, MAX(pet_age) AS max_age FROM Pets GROUP BY PetType",
    "SELECT PetType, AVG(weight) AS avg_weight FROM Pets JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID GROUP BY PetType",
    "SELECT PetType, AVG(weight) FROM Pets GROUP BY PetType",
    "SELECT Student.Fname, Student.Age FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID;",
    "SELECT Student.Fname, Student.Age FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID;",
    "SELECT PetID  FROM Has_Pet  WHERE StuID IN (SELECT StuID FROM Student WHERE LName = 'Smith')",
    "SELECT Pets.PetID  FROM Pets  JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID  JOIN Student ON Has_Pet.StuID = Student.StuID  WHERE Student.LName = 'Smith'",
    "SELECT Student.StuID, COUNT(Pets.PetID) AS num_pets FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID GROUP BY Student.StuID",
    "SELECT Student.StuID, COUNT(Pets.PetID) AS num_pets FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID GROUP BY Student.StuID HAVING COUNT(Pets.PetID) > 0;",
    "SELECT Student.Fname, Student.Sex FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID GROUP BY Student.StuID, Student.Fname, Student.Sex HAVING COUNT(Has_Pet.PetID) > 1;",
    "SELECT Student.Fname, Student.Sex FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID GROUP BY Student.StuID HAVING COUNT(Has_Pet.PetID) > 1;",
    "SELECT s.LName  FROM Student s  JOIN Has_Pet hp ON s.StuID = hp.StuID  JOIN Pets p ON hp.PetID = p.PetID  WHERE p.PetType = 'cat' AND p.pet_age = 3  ORDER BY s.StuID DESC  LIMIT 1;",
    "SELECT s.LName  FROM Student s  JOIN Has_Pet hp ON s.StuID = hp.StuID  JOIN Pets p ON hp.PetID = p.PetID  WHERE p.PetType = 'cat' AND p.pet_age = 3  ORDER BY s.StuID DESC  LIMIT 1;",
    "SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet)",
    "SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet)",
    "SELECT COUNT(DISTINCT Continent) FROM continents",
    "SELECT COUNT(DISTINCT Continent) FROM continents",
    "SELECT continents.ContId, continents.Continent, COUNT(countries.CountryId) AS num_countries FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId, continents.Continent",
    "SELECT continents.ContId, continents.Continent, COUNT(countries.CountryId) AS num_countries FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId, continents.Continent",
    "SELECT COUNT(DISTINCT CountryName) FROM countries",
    "SELECT COUNT(DISTINCT CountryName) FROM countries",
    "SELECT car_makers.FullName, car_makers.Id, COUNT(model_list.Model) AS number_of_models FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName, car_makers.Id",
    "SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.Model) AS num_models FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName",
    "SELECT Model FROM model_list  JOIN cars_data ON model_list.ModelId = cars_data.Id  WHERE Horsepower = (SELECT MIN(Horsepower) FROM cars_data)",
    "SELECT Model FROM model_list  JOIN car_makers ON model_list.Maker = car_makers.Id  JOIN car_names ON model_list.Model = car_names.Model  JOIN cars_data ON car_names.MakeId = cars_data.Id  ORDER BY CAST(Horsepower AS INTEGER) ASC  LIMIT 1;",
    "SELECT Model FROM model_list WHERE Maker IN (   SELECT Id   FROM car_makers   WHERE Country IN (     SELECT CountryId     FROM countries     WHERE Continent IN (       SELECT ContId       FROM continents       WHERE Continent = 'North America'     )   ) ) AND Weight < (   SELECT AVG(Weight)   FROM cars_data )",
    "SELECT model_list.Model  FROM model_list  JOIN car_names ON model_list.ModelId = car_names.Model  JOIN cars_data ON car_names.MakeId = cars_data.Id  WHERE cars_data.Weight < (SELECT AVG(Weight) FROM cars_data)",
    "SELECT DISTINCT car_makers.Maker  FROM car_makers  INNER JOIN model_list ON car_makers.Id = model_list.Maker  INNER JOIN car_names ON model_list.ModelId = car_names.MakeId  INNER JOIN cars_data ON car_names.MakeId = cars_data.Id  WHERE cars_data.Year = 1970",
    "SELECT DISTINCT car_makers.Maker  FROM car_makers  INNER JOIN model_list ON car_makers.Id = model_list.Maker  INNER JOIN car_names ON model_list.ModelId = car_names.MakeId  INNER JOIN cars_data ON car_names.MakeId = cars_data.Id  WHERE cars_data.Year = 1970",
    "SELECT car_names.Make, cars_data.Year  FROM car_names  JOIN cars_data ON car_names.MakeId = cars_data.Id  WHERE cars_data.Year = (SELECT MIN(Year) FROM cars_data)",
    "SELECT car_makers.Maker, MIN(cars_data.Year)  FROM car_makers  JOIN model_list ON car_makers.Id = model_list.Maker  JOIN car_names ON model_list.ModelId = car_names.MakeId  JOIN cars_data ON car_names.Model = cars_data.Id  ORDER BY cars_data.Year ASC  LIMIT 1;",
    "SELECT DISTINCT Model FROM model_list  INNER JOIN cars_data ON model_list.ModelId = cars_data.Id  WHERE cars_data.Year > 1980",
    "SELECT DISTINCT Model FROM model_list  JOIN car_names ON model_list.ModelId = car_names.Model  JOIN cars_data ON car_names.MakeId = cars_data.Id  WHERE Year > 1980",
    "SELECT continents.Continent, COUNT(DISTINCT car_makers.Country) AS CarMakersCount FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY continents.Continent",
    "SELECT continents.Continent, COUNT(DISTINCT car_makers.Id)  FROM continents  JOIN countries ON continents.ContId = countries.Continent  JOIN car_makers ON countries.CountryId = car_makers.Country  GROUP BY continents.Continent",
    "SELECT countries.CountryName  FROM countries  JOIN car_makers ON countries.CountryId = car_makers.Country  GROUP BY countries.CountryName  ORDER BY COUNT(DISTINCT car_makers.Maker) DESC  LIMIT 1;",
    "SELECT countries.CountryName  FROM countries  JOIN car_makers ON countries.CountryId = car_makers.Country  GROUP BY countries.CountryName  ORDER BY COUNT(DISTINCT car_makers.Maker) DESC  LIMIT 1",
    "SELECT COUNT(model_list.ModelId), car_makers.FullName  FROM model_list  INNER JOIN car_makers ON model_list.Maker = car_makers.Id  GROUP BY car_makers.FullName",
    "SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.Model) AS num_models FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName",
    "SELECT Accelerate FROM cars_data  JOIN car_names ON cars_data.Id = car_names.MakeId  JOIN model_list ON car_names.Model = model_list.Model  JOIN car_makers ON model_list.Maker = car_makers.Id  WHERE car_names.Make = 'amc hornet sportabout (sw)'",
    "SELECT Accelerate FROM cars_data  JOIN car_names ON cars_data.Id = car_names.MakeId  JOIN model_list ON car_names.Model = model_list.Model  JOIN car_makers ON model_list.Maker = car_makers.Id  WHERE car_names.Model = 'hornet sportabout (sw)' AND car_makers.Maker = 'amc'",
    "SELECT COUNT(DISTINCT Maker) FROM car_makers WHERE Country = (SELECT CountryId FROM countries WHERE CountryName = 'france')",
    "SELECT COUNT(DISTINCT Maker) FROM car_makers WHERE Country = (SELECT CountryId FROM countries WHERE CountryName = 'France') AND Maker IN (SELECT Make FROM car_names)",
    "SELECT COUNT(DISTINCT Model) FROM model_list  JOIN car_makers ON model_list.Maker = car_makers.Id  JOIN countries ON car_makers.Country = countries.CountryId  WHERE countries.CountryName = 'usa'",
    "SELECT COUNT(DISTINCT Model) FROM model_list  JOIN car_makers ON model_list.Maker = car_makers.Id  JOIN countries ON car_makers.Country = countries.CountryId  WHERE countries.CountryName = 'United States'",
    "SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4",
    "SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4",
    "SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974;",
    "SELECT MIN(Weight) FROM cars_data  WHERE Cylinders = 8 AND Year = 1974",
    "SELECT car_makers.Maker, model_list.Model  FROM car_makers  INNER JOIN model_list ON car_makers.Id = model_list.Maker",
    "SELECT car_makers.Maker, model_list.Model  FROM car_makers  INNER JOIN model_list ON car_makers.Id = model_list.Maker",
    "SELECT DISTINCT countries.CountryName, countries.CountryId FROM countries INNER JOIN car_makers ON countries.CountryId = car_makers.Country ORDER BY countries.CountryName;",
    "SELECT CountryName, CountryId  FROM countries  WHERE CountryId IN (SELECT DISTINCT Country FROM car_makers)",
    "SELECT COUNT(*) FROM cars_data WHERE CAST(Horsepower AS INTEGER) > 150",
    "SELECT COUNT(*) FROM cars_data WHERE CAST(Horsepower AS INTEGER) > 150",
    "SELECT AVG(Weight) FROM cars_data WHERE Year = [year]; (Replace [year] with the desired year)",
    "SELECT AVG(Weight), Year FROM cars_data GROUP BY Year",
    "SELECT DISTINCT c.CountryName  FROM countries c  JOIN car_makers cm ON c.CountryId = cm.Country  WHERE c.Continent = (SELECT ContId FROM continents WHERE Continent = 'Europe')  GROUP BY c.CountryName  HAVING COUNT(DISTINCT cm.Maker) >= 3",
    "SELECT DISTINCT countries.CountryName  FROM countries  JOIN car_makers ON countries.CountryId = car_makers.Country  GROUP BY countries.CountryName  HAVING COUNT(DISTINCT car_makers.Maker) >= 3  AND countries.Continent = (SELECT ContId FROM continents WHERE Continent = 'Europe')",
    "SELECT MAX(CAST(Horsepower AS INTEGER)), car_makers.Maker  FROM cars_data  JOIN car_names ON cars_data.Id = car_names.MakeId  JOIN model_list ON car_names.Model = model_list.Model  JOIN car_makers ON model_list.Maker = car_makers.Id  WHERE cars_data.Cylinders = 3",
    "SELECT MAX(cars_data.Horsepower), car_makers.Maker  FROM cars_data  JOIN car_names ON cars_data.Id = car_names.MakeId  JOIN model_list ON car_names.Model = model_list.Model  JOIN car_makers ON model_list.Maker = car_makers.Id  WHERE cars_data.Cylinders = 3",
    "SELECT Model  FROM model_list  JOIN cars_data ON model_list.ModelId = cars_data.Id  ORDER BY CAST(REPLACE(MPG, 'N/A', '0') AS FLOAT) DESC  LIMIT 1;",
    "SELECT Model FROM model_list  JOIN car_names ON model_list.ModelId = car_names.ModelId  JOIN cars_data ON car_names.MakeId = cars_data.Id  ORDER BY CAST(REPLACE(MPG, 'N/A', '0') AS FLOAT) DESC  LIMIT 1;",
    "SELECT AVG(CAST(Horsepower AS FLOAT)) FROM cars_data WHERE Year < 1980",
    "SELECT AVG(CAST(Horsepower AS INTEGER)) FROM cars_data WHERE Year < 1980",
    "SELECT AVG(Edispl) FROM cars_data  JOIN car_names ON cars_data.Id = car_names.MakeId  JOIN model_list ON car_names.Model = model_list.Model  JOIN car_makers ON model_list.Maker = car_makers.Id  WHERE car_makers.Maker = 'volvo'",
    "SELECT AVG(Edispl) FROM cars_data WHERE MakeId IN (SELECT MakeId FROM car_names WHERE Model IN (SELECT Model FROM model_list WHERE Maker IN (SELECT Id FROM car_makers WHERE Maker = 'volvo')))",
    "SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders",
    "SELECT MAX(Accelerate) FROM cars_data",
    "SELECT model_list.Model FROM model_list JOIN car_names ON model_list.ModelId = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.MakeId GROUP BY model_list.Model ORDER BY COUNT(DISTINCT car_names.Make) DESC LIMIT 1;",
    "SELECT model_list.Model, COUNT(DISTINCT car_names.Make) AS num_versions FROM model_list JOIN car_names ON model_list.ModelId = car_names.Model GROUP BY model_list.Model ORDER BY num_versions DESC LIMIT 1;",
    "SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;",
    "SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4",
    "SELECT COUNT(*) FROM cars_data WHERE Year = 1980",
    "SELECT SUM(Weight) FROM cars_data WHERE Year = 1980",
    "SELECT COUNT(DISTINCT model_list.ModelId)  FROM car_makers  JOIN model_list ON car_makers.Id = model_list.Maker  WHERE car_makers.FullName = 'American Motor Company'",
    "SELECT COUNT(*) FROM model_list  WHERE Maker = (SELECT Id FROM car_makers WHERE Maker = 'American Motor Company')",
    "SELECT car_makers.Id, car_makers.FullName FROM car_makers WHERE car_makers.Id IN (   SELECT model_list.Maker   FROM model_list   GROUP BY model_list.Maker   HAVING COUNT(model_list.ModelId) > 3 )",
    "SELECT car_makers.Id, car_makers.Maker  FROM car_makers  WHERE car_makers.Id IN      (SELECT Maker       FROM model_list       GROUP BY Maker       HAVING COUNT(*) > 3)",
    "SELECT DISTINCT model_list.Model  FROM model_list  INNER JOIN car_makers ON model_list.Maker = car_makers.Id  WHERE (car_makers.FullName = 'General Motors' OR cars_data.Weight > 3500)",
    "SELECT Model  FROM model_list  INNER JOIN car_makers ON model_list.Maker = car_makers.Id  WHERE car_makers.Maker = 'General Motors' OR cars_data.Weight > 3500",
    "SELECT DISTINCT Year  FROM cars_data  WHERE Weight >= 3000 AND Weight <= 4000",
    "SELECT DISTINCT Year  FROM cars_data  WHERE Weight < 4000 AND Weight > 3000;",
    "SELECT MAX(cars_data.Horsepower) FROM cars_data ORDER BY cars_data.Accelerate DESC LIMIT 1;",
    "SELECT MAX(cars_data.Horsepower) FROM cars_data ORDER BY cars_data.Accelerate DESC LIMIT 1;",
    "SELECT MIN(Cylinders) FROM cars_data  JOIN car_names ON cars_data.Id = car_names.MakeId  JOIN model_list ON car_names.Model = model_list.Model  JOIN car_makers ON model_list.Maker = car_makers.Id  WHERE car_makers.Maker = 'volvo' AND Accelerate = (SELECT MIN(Accelerate) FROM cars_data  JOIN car_names ON cars_data.Id = car_names.MakeId  JOIN model_list ON car_names.Model = model_list.Model  JOIN car_makers ON model_list.Maker = car_makers.Id  WHERE car_makers.Maker = 'volvo')",
    "SELECT MIN(Cylinders) FROM cars_data  JOIN car_names ON cars_data.Id = car_names.MakeId  JOIN model_list ON car_names.Model = model_list.Model  JOIN car_makers ON model_list.Maker = car_makers.Id  WHERE car_makers.Maker = 'volvo' AND cars_data.Accelerate = (SELECT MIN(Accelerate) FROM cars_data  JOIN car_names ON cars_data.Id = car_names.MakeId  JOIN model_list ON car_names.Model = model_list.Model  JOIN car_makers ON model_list.Maker = car_makers.Id  WHERE car_makers.Maker = 'volvo')",
    "SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Accelerate) FROM cars_data WHERE Horsepower = (SELECT MAX(Horsepower) FROM cars_data))",
    "SELECT COUNT(*) FROM cars_data  WHERE Accelerate > (SELECT MAX(Accelerate) FROM cars_data WHERE Horsepower = (SELECT MAX(Horsepower) FROM cars_data))",
    "SELECT COUNT(DISTINCT countries.CountryId)  FROM countries  INNER JOIN car_makers ON countries.CountryId = car_makers.Country  GROUP BY countries.CountryId  HAVING COUNT(DISTINCT car_makers.Id) > 2",
    "SELECT COUNT(DISTINCT CountryName)  FROM countries  WHERE CountryId IN (     SELECT DISTINCT Country      FROM car_makers      GROUP BY Country      HAVING COUNT(DISTINCT Maker) > 2 )",
    "SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6",
    "SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6",
    "SELECT Model  FROM model_list  INNER JOIN car_names ON model_list.ModelId = car_names.ModelId  INNER JOIN cars_data ON car_names.MakeId = cars_data.Id  WHERE Cylinders = 4  ORDER BY CAST(Horsepower AS INTEGER) DESC  LIMIT 1;",
    "SELECT Model  FROM model_list  WHERE ModelId IN (     SELECT MakeId      FROM car_names      WHERE ModelId IN (         SELECT Maker          FROM car_makers          WHERE Id IN (             SELECT Id              FROM cars_data              WHERE Cylinders = 4              ORDER BY Horsepower DESC              LIMIT 1         )     ) )",
    "SELECT car_names.MakeId, car_makers.Maker FROM car_names JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Horsepower > (SELECT MIN(Horsepower) FROM cars_data) AND cars_data.Cylinders <= 3;",
    "SELECT car_names.MakeId, car_names.Make FROM car_names INNER JOIN model_list ON car_names.Model = model_list.Model INNER JOIN car_makers ON model_list.Maker = car_makers.Id INNER JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Horsepower > (SELECT MIN(Horsepower) FROM cars_data) AND cars_data.Cylinders < 4;",
    "SELECT MAX(MPG) FROM cars_data WHERE Cylinders = 8 AND Year < 1980",
    "SELECT MAX(Cars_data.MPG) FROM Cars_data  WHERE (Cars_data.Cylinders = 8 OR Cars_data.Year < 1980)",
    "SELECT Model  FROM model_list  INNER JOIN cars_data ON model_list.ModelId = cars_data.Id  INNER JOIN car_makers ON model_list.Maker = car_makers.Id  WHERE Weight < 3500 AND Maker NOT IN (SELECT Id FROM car_makers WHERE Maker = 'Ford Motor Company')",
    "SELECT Model  FROM model_list  INNER JOIN cars_data ON model_list.ModelId = cars_data.Id  INNER JOIN car_makers ON model_list.Maker = car_makers.Id  INNER JOIN countries ON car_makers.Country = countries.CountryId  WHERE Weight < 3500 AND Maker != (SELECT Id FROM car_makers WHERE Maker = 'Ford Motor Company')",
    "SELECT DISTINCT countries.CountryName  FROM countries  LEFT JOIN car_makers ON countries.CountryId = car_makers.Country  WHERE car_makers.Id IS NULL",
    "SELECT CountryName  FROM countries  WHERE CountryId NOT IN (SELECT DISTINCT Country FROM car_makers)",
    "SELECT car_makers.Id, car_makers.Maker  FROM car_makers  WHERE car_makers.Id IN      (SELECT model_list.Maker       FROM model_list       GROUP BY model_list.Maker       HAVING COUNT(DISTINCT model_list.Model) >= 2)  AND car_makers.Country IN      (SELECT countries.CountryId       FROM countries       INNER JOIN car_makers ON countries.CountryId = car_makers.Country       GROUP BY countries.CountryId       HAVING COUNT(DISTINCT car_makers.Id) > 3)",
    "SELECT car_makers.Id, car_makers.Maker  FROM car_makers  INNER JOIN model_list ON car_makers.Id = model_list.Maker  INNER JOIN car_names ON model_list.ModelId = car_names.MakeId  WHERE car_makers.Id IN (SELECT Maker FROM model_list GROUP BY Maker HAVING COUNT(*) >= 2)  AND car_names.Make IN (SELECT Make FROM car_names GROUP BY Make HAVING COUNT(*) > 3)",
    "SELECT countries.CountryId, countries.CountryName  FROM countries  WHERE countries.CountryId IN  (SELECT car_makers.Country FROM car_makers  INNER JOIN model_list ON car_makers.Id = model_list.Maker  INNER JOIN car_names ON model_list.ModelId = car_names.MakeId  WHERE car_makers.Country IN  (SELECT car_makers.Country FROM car_makers  GROUP BY car_makers.Country  HAVING COUNT(DISTINCT car_makers.Id) > 3)  OR car_names.Model = 'fiat')",
    "SELECT countries.CountryId, countries.CountryName  FROM countries  WHERE countries.CountryId IN  (SELECT car_makers.Country FROM car_makers  GROUP BY car_makers.Country  HAVING COUNT(DISTINCT car_makers.Id) > 3)  OR countries.CountryId IN  (SELECT countries.CountryId FROM countries  JOIN car_makers ON countries.CountryId = car_makers.Country  JOIN model_list ON car_makers.Id = model_list.Maker  WHERE model_list.Model = 'fiat')",
    "SELECT Country FROM airlines WHERE Airline = 'JetBlue Airways'",
    "SELECT airlines.Country  FROM airlines  WHERE airlines.Airline = 'Jetblue Airways'",
    "SELECT Abbreviation FROM airlines WHERE Airline = 'JetBlue Airways'",
    "SELECT Abbreviation FROM airlines WHERE Airline = 'Jetblue Airways'",
    "SELECT Airline, Abbreviation FROM airlines WHERE Country = 'USA'",
    "SELECT Airline, Abbreviation FROM airlines WHERE Country = 'USA'",
    "SELECT AirportCode, AirportName FROM airports WHERE City = 'Anthony'",
    "SELECT AirportCode, AirportName FROM airports WHERE City='Anthony'",
    "SELECT COUNT(*) FROM airlines;",
    "SELECT COUNT(*) FROM airlines",
    "SELECT COUNT(*) FROM airports;",
    "SELECT COUNT(*) FROM airports;",
    "SELECT COUNT(*) FROM flights",
    "SELECT COUNT(*) FROM flights;",
    "SELECT Airline FROM airlines WHERE Abbreviation = 'UAL'",
    "SELECT Airline FROM airlines WHERE Abbreviation = 'UAL'",
    "SELECT COUNT(*) FROM airlines WHERE Country = 'USA'",
    "SELECT COUNT(*) FROM airlines WHERE Country = 'USA'",
    "SELECT airports.City, airports.Country  FROM airports  INNER JOIN flights ON airports.AirportCode = flights.DestAirport  WHERE flights.SourceAirport = 'Alton airport'",
    "SELECT airports.City, airports.Country  FROM airports  INNER JOIN flights ON airports.AirportCode = flights.DestAirport  WHERE flights.SourceAirport = 'Alton airport'",
    "SELECT AirportName FROM airports WHERE AirportCode = 'AKO'"
]