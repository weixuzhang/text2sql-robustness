[
    "SELECT COUNT(*) FROM singer",
    "SELECT COUNT(*) FROM singer",
    "SELECT name, country, age FROM singer ORDER BY age DESC",
    "SELECT name, country, age  FROM singer  ORDER BY age DESC",
    "SELECT AVG(age), MIN(age), MAX(age) FROM singer WHERE country = 'France'",
    "SELECT AVG(age), MIN(age), MAX(age) FROM singer WHERE country = 'France'",
    "SELECT singer.name, singer.song_release_year  FROM singer  WHERE singer.age = (SELECT MIN(age) FROM singer)",
    "SELECT song_name, song_release_year FROM singer WHERE age = (SELECT MIN(age) FROM singer)",
    "SELECT DISTINCT country FROM singer WHERE age > 20.",
    "SELECT DISTINCT country FROM singer WHERE age > 20",
    "SELECT singer.country, COUNT(*) AS num_singers FROM singer GROUP BY singer.country",
    "SELECT country, COUNT(*) as num_singers FROM singer GROUP BY country",
    "SELECT song_name FROM singer  WHERE age > (SELECT AVG(age) FROM singer)",
    "SELECT DISTINCT singer.song_name  FROM singer  WHERE singer.age > (SELECT AVG(age) FROM singer)",
    "SELECT location, name FROM stadium WHERE capacity BETWEEN 5000 AND 10000.",
    "SELECT location, name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",
    "SELECT MAX(capacity), AVG(capacity) FROM stadium",
    "SELECT AVG(capacity), MAX(capacity) FROM stadium",
    "SELECT name, capacity FROM stadium WHERE average = (SELECT MAX(average) FROM stadium)",
    "SELECT name, capacity FROM stadium WHERE average = (SELECT MAX(average) FROM stadium)",
    "SELECT COUNT(*) FROM concert WHERE year = 2014 OR year = 2015",
    "SELECT COUNT(*) FROM concert WHERE year = 2014 OR year = 2015",
    "SELECT stadium.name, count(concert.concert_id) as num_concerts FROM stadium INNER JOIN concert ON stadium.stadium_id = concert.stadium_id GROUP BY stadium.name",
    "SELECT stadium.name, COUNT(concert.concert_id) FROM stadium LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id GROUP BY stadium.name",
    "SELECT name, capacity FROM stadium WHERE stadium_id IN (     SELECT stadium_id     FROM concert     WHERE year >= 2014     GROUP BY stadium_id     HAVING COUNT(*) = (         SELECT MAX(concert_count)         FROM (             SELECT stadium_id, COUNT(*) AS concert_count             FROM concert             WHERE year >= 2014             GROUP BY stadium_id         ) AS counts     ) )",
    "SELECT name, capacity  FROM stadium  WHERE stadium_id = (     SELECT stadium_id      FROM concert      WHERE year > 2013      GROUP BY stadium_id      ORDER BY COUNT(*) DESC      LIMIT 1 )",
    "SELECT year FROM concert GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1;",
    "SELECT year  FROM concert  GROUP BY year  ORDER BY COUNT(*) DESC  LIMIT 1",
    "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)",
    "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)",
    "SELECT DISTINCT s1.country  FROM singer s1, singer s2, singer_in_concert sc1, singer_in_concert sc2, concert c  WHERE s1.age > 40 AND s2.age < 30 AND s1.singer_id = sc1.singer_id AND s2.singer_id = sc2.singer_id AND sc1.concert_id = sc2.concert_id AND c.concert_id = sc1.concert_id",
    "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert WHERE year = 2014)",
    "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert WHERE year = 2014)",
    "SELECT concert.concert_name, concert.theme, COUNT(singer_in_concert.singer_id) as num_singers FROM concert  JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id GROUP BY concert.concert_id;",
    "SELECT concert_name, theme, COUNT(singer_id) AS number_of_singers FROM concert JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id GROUP BY concert.concert_id",
    "SELECT singer.name, COUNT(singer_in_concert.concert_id) AS num_concerts FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id GROUP BY singer.name",
    "SELECT singer.name, COUNT(concert_singer.concert_id)  FROM singer  JOIN concert_singer ON singer.singer_id = concert_singer.singer_id  GROUP BY singer.name",
    "SELECT singer.name FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id WHERE concert.year = 2014.",
    "SELECT singer.name FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id WHERE concert.year = 2014",
    "SELECT singer.name, singer.country FROM singer WHERE singer.song_name LIKE '%Hey%'",
    "SELECT name, country FROM singer WHERE singer_id IN  (SELECT singer_id FROM singer_in_concert WHERE concert_id IN  (SELECT concert_id FROM concert WHERE concert_name LIKE '%Hey%' AND theme LIKE '%song%'))",
    "SELECT stadium.name, stadium.location FROM stadium INNER JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year = 2014 AND stadium.stadium_id IN (     SELECT concert.stadium_id     FROM concert     WHERE concert.year = 2015 )",
    "SELECT DISTINCT s.name, s.location FROM stadium s INNER JOIN concert c1 ON s.stadium_id = c1.stadium_id INNER JOIN concert c2 ON s.stadium_id = c2.stadium_id WHERE c1.year = 2014 AND c2.year = 2015",
    "SELECT COUNT(*) FROM concert WHERE stadium_id = (SELECT stadium_id FROM stadium ORDER BY capacity DESC LIMIT 1)",
    "SELECT COUNT(*) FROM concert WHERE stadium_id = (SELECT stadium_id FROM stadium ORDER BY capacity DESC LIMIT 1)",
    "SELECT COUNT(*) FROM pets WHERE weight > 10",
    "SELECT COUNT(*) FROM pets WHERE weight > 10",
    "SELECT MIN(weight) FROM pets WHERE pettype = 'dog' AND pet_age = (SELECT MIN(pet_age) FROM pets WHERE pettype = 'dog')",
    "SELECT MIN(weight) FROM pets",
    "SELECT pettype, MAX(weight) AS max_weight FROM pets GROUP BY pettype",
    "SELECT pettype, MAX(weight) FROM pets GROUP BY pettype;",
    "SELECT COUNT(DISTINCT has_pet.petid)  FROM student JOIN has_pet ON student.stuid = has_pet.stuid  WHERE student.age > 20",
    "SELECT COUNT(*) FROM pets_1.student JOIN pets_1.has_pet ON student.stuid = has_pet.stuid JOIN pets_1.pets ON has_pet.petid = pets.petid WHERE student.age > 20.",
    "SELECT COUNT(p.petid)  FROM pets p  JOIN has_pet hp ON p.petid = hp.petid  JOIN student s ON hp.stuid = s.stuid  WHERE p.pettype = 'dog' AND s.sex = 'F'",
    "SELECT COUNT(petid) FROM pets JOIN has_pet ON pets.petid = has_pet.petid JOIN student ON has_pet.stuid = student.stuid WHERE pettype = 'dog' AND sex = 'F'",
    "SELECT COUNT(DISTINCT pettype) FROM pets",
    "SELECT COUNT(DISTINCT pettype) FROM pets",
    "SELECT fname FROM student WHERE stuid IN (SELECT stuid FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE pettype = 'cat' OR pettype = 'dog') ORDER BY stuid LIMIT 1",
    "SELECT DISTINCT student.fname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' OR pets.pettype = 'dog'",
    "SELECT DISTINCT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat' AND student.stuid IN (SELECT stuid FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'dog')",
    "SELECT DISTINCT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat'   AND student.stuid IN (SELECT has_pet.stuid FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'dog')",
    "SELECT major, age FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE pettype = 'cat')",
    "SELECT student.major, student.age FROM student WHERE student.stuid NOT IN (SELECT has_pet.stuid FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat')",
    "SELECT stuid FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet INNER JOIN pets ON has_pet.petid=pets.petid WHERE pets.pettype='cat')",
    "SELECT DISTINCT stuid FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet INNER JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat')",
    "SELECT DISTINCT s.fname, s.age FROM student s  JOIN has_pet hp ON s.stuid = hp.stuid  JOIN pets p ON hp.petid = p.petid  WHERE p.pettype = 'dog' AND s.stuid NOT IN  (SELECT s.stuid FROM student s  JOIN has_pet hp ON s.stuid = hp.stuid  JOIN pets p ON hp.petid = p.petid  WHERE p.pettype = 'cat')",
    "SELECT fname FROM student WHERE stuid IN (SELECT stuid FROM has_pet WHERE petid IN (SELECT petid FROM pets WHERE pettype = 'dog') AND stuid NOT IN (SELECT stuid FROM has_pet WHERE petid IN (SELECT petid FROM pets WHERE pettype = 'cat')))",
    "SELECT pettype, weight FROM pets WHERE pet_age = (SELECT MIN(pet_age) FROM pets)",
    "SELECT pettype, weight FROM pets WHERE pet_age = (SELECT MIN(pet_age) FROM pets)",
    "SELECT petid, weight FROM pets WHERE pet_age > 1",
    "SELECT petid, weight FROM pets WHERE pet_age > 1",
    "SELECT pettype, AVG(pet_age), MAX(pet_age) FROM pets GROUP BY pettype",
    "SELECT pettype, AVG(pet_age) as avg_age, MAX(pet_age) as max_age FROM pets GROUP BY pettype",
    "SELECT pettype, AVG(weight)  FROM pets  GROUP BY pettype",
    "SELECT pettype, AVG(weight) FROM pets GROUP BY pettype",
    "SELECT fname, age FROM student WHERE stuid IN (SELECT stuid FROM has_pet) ORDER BY stuid LIMIT 1;",
    "SELECT DISTINCT fname, age FROM student WHERE stuid IN (SELECT stuid FROM has_pet)",
    "SELECT petid FROM has_pet JOIN student ON has_pet.stuid = student.stuid JOIN pets ON has_pet.petid = pets.petid WHERE student.lname = 'Smith'",
    "SELECT petid FROM has_pet JOIN student ON has_pet.stuid = student.stuid JOIN pets ON has_pet.petid = pets.petid WHERE student.lname = 'Smith'",
    "SELECT has_pet.stuid, COUNT(pets.petid) AS num_pets FROM has_pet JOIN pets ON has_pet.petid = pets.petid GROUP BY has_pet.stuid;",
    "SELECT has_pet.stuid, COUNT(has_pet.petid) AS num_pets FROM has_pet GROUP BY has_pet.stuid",
    "SELECT student.fname, student.sex  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  GROUP BY student.stuid  HAVING COUNT(has_pet.petid) > 1",
    "SELECT student.fname, student.sex FROM student INNER JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY student.stuid HAVING COUNT(has_pet.petid) > 1",
    "SELECT s.lname FROM student s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'cat' AND p.pet_age = 3 ORDER BY p.petid DESC LIMIT 1",
    "SELECT lname FROM student WHERE stuid IN (SELECT stuid FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE pettype = 'cat' AND pet_age = 3) ORDER BY stuid DESC LIMIT 1",
    "SELECT AVG(age) FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet)",
    "SELECT AVG(age) FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet)",
    "SELECT COUNT(*) FROM continents",
    "SELECT COUNT(*) FROM continents",
    "SELECT continents.contid, continents.continent, COUNT(countries.countryid) AS number_of_countries FROM continents JOIN countries ON continents.contid = countries.continent GROUP BY continents.contid, continents.continent",
    "SELECT continents.contid, continents.continent, COUNT(countries.countryid) AS num_countries FROM continents LEFT JOIN countries ON continents.continent = countries.continent GROUP BY continents.contid, continents.continent",
    "select count(*) from countries",
    "SELECT COUNT(*) FROM countries",
    "SELECT car_makers.fullname, car_makers.id, COUNT(model_list.modelid) as number_of_models FROM car_makers JOIN model_list ON car_makers.maker = model_list.maker GROUP BY car_makers.fullname, car_makers.id;",
    "SELECT car_makers.id, car_makers.fullname, COUNT(DISTINCT model_list.modelid) as num_models FROM car_makers JOIN model_list ON car_makers.maker = model_list.maker GROUP BY car_makers.id, car_makers.fullname",
    "SELECT model FROM cars_data WHERE horsepower = (SELECT MIN(horsepower) FROM cars_data)",
    "SELECT model FROM cars_data  WHERE horsepower = (SELECT MIN(horsepower) FROM cars_data)",
    "SELECT model FROM car_names JOIN cars_data ON car_names.makeid = cars_data.id WHERE weight < (SELECT AVG(weight) FROM cars_data)",
    "SELECT model FROM model_list WHERE weight < (SELECT AVG(weight) FROM cars_data)",
    "SELECT DISTINCT cm.maker FROM car_makers cm INNER JOIN cars_data cd ON cm.id = cd.id WHERE cd.year = 1970",
    "SELECT DISTINCT car_makers.maker FROM car_makers JOIN cars_data ON car_makers.id = cars_data.id WHERE cars_data.year = 1970",
    "SELECT make, year FROM car_names  INNER JOIN cars_data ON car_names.makeid = cars_data.id  WHERE year = (SELECT MIN(year) FROM cars_data)",
    "select car_makers.maker, min(cars_data.year) from car_makers, car_names, cars_data where car_makers.id = car_names.makeid and car_names.model = cars_data.model group by car_makers.maker order by min(cars_data.year) limit 1",
    "SELECT DISTINCT model FROM model_list JOIN cars_data ON model_list.modelid = cars_data.id WHERE year > 1980",
    "SELECT DISTINCT model FROM model_list  JOIN cars_data ON model_list.modelid = cars_data.id WHERE year > 1980",
    "SELECT continents.continent, COUNT(DISTINCT car_makers.maker) FROM continents INNER JOIN countries ON continents.contid = countries.continent INNER JOIN car_makers ON countries.countryid = car_makers.country GROUP BY continents.continent",
    "SELECT continents.continent, COUNT(DISTINCT car_makers.id) AS num_car_makers FROM continents  LEFT JOIN countries ON continents.contid = countries.continent  LEFT JOIN car_makers ON countries.countryid = car_makers.country  GROUP BY continents.continent",
    "SELECT countries.countryname FROM countries INNER JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryname ORDER BY COUNT(DISTINCT car_makers.maker) DESC LIMIT 1",
    "SELECT countryname FROM countries  WHERE countryid = (SELECT country FROM car_makers                     GROUP BY country                     ORDER BY COUNT(DISTINCT maker) DESC LIMIT 1)",
    "SELECT car_makers.fullname, COUNT(DISTINCT model_list.modelid)  FROM car_makers  JOIN model_list ON car_makers.id = model_list.maker  GROUP BY car_makers.fullname",
    "SELECT car_makers.id, car_makers.fullname, COUNT(DISTINCT model_list.model)  FROM car_makers  INNER JOIN model_list ON car_makers.maker = model_list.maker  GROUP BY car_makers.id, car_makers.fullname",
    "SELECT accelerate FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE car_names.make = 'amc hornet sportabout (sw)'",
    "select accelerate from cars_data join car_names on cars_data.id = car_names.makeid and car_names.model = 'hornet sportabout (sw)' and cars_data.year = (select max(year) from cars_data where id = cars_data.id) limit 1",
    "SELECT COUNT(DISTINCT car_makers.id) FROM car_makers JOIN countries ON car_makers.country=countries.countryid WHERE countries.countryname='france'",
    "SELECT COUNT(DISTINCT id) FROM car_makers WHERE maker = 'care' AND country = 'France'",
    "SELECT COUNT(DISTINCT modelid) FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN countries ON car_makers.country = countries.countryid WHERE countries.countryname = 'usa'",
    "SELECT COUNT(car_names.modelid) FROM car_makers JOIN car_names ON car_makers.id = car_names.makeid JOIN countries ON car_makers.country = countries.countryid WHERE countries.countryname = 'United States'",
    "SELECT AVG(mpg) FROM cars_data WHERE cylinders = 4",
    "SELECT AVG(mpg) FROM cars_data WHERE cylinders = 4",
    "SELECT MIN(weight) FROM cars_data WHERE cylinders = 8 AND year = 1974",
    "SELECT MIN(weight) FROM cars_data WHERE cylinders = 8 AND year = 1974",
    "SELECT maker, model FROM model_list",
    "SELECT maker, model FROM car_makers JOIN model_list ON car_makers.id = model_list.makerid JOIN car_names ON model_list.modelid = car_names.modelid;",
    "SELECT DISTINCT countries.countryid, countries.countryname FROM countries  JOIN car_makers ON countries.countryid = car_makers.country ORDER BY countries.countryid",
    "SELECT DISTINCT countries.countryid, countries.countryname  FROM countries  JOIN car_makers ON countries.countryid = car_makers.country",
    "SELECT COUNT(*) FROM cars_data WHERE horsepower > 150",
    "SELECT COUNT(*) FROM cars_data WHERE horsepower > 150",
    "SELECT AVG(weight) FROM cars_data GROUP BY year",
    "SELECT AVG(weight), year FROM cars_data GROUP BY year",
    "SELECT countries.countryname  FROM countries  JOIN car_makers ON countries.countryid = car_makers.country  WHERE countries.continent = 'europe'  GROUP BY countries.countryid  HAVING COUNT(DISTINCT car_makers.maker) >= 3",
    "SELECT DISTINCT c.countryname  FROM countries c  JOIN car_makers cm ON c.countryid = cm.country  WHERE c.continent = 'European'  GROUP BY c.countryname  HAVING COUNT(DISTINCT cm.id) >= 3",
    "SELECT MAX(horsepower), make FROM cars_data INNER JOIN car_names ON cars_data.id = car_names.makeid WHERE cylinders = 3 GROUP BY make",
    "SELECT MAX(horsepower), maker FROM cars_data, model_list, car_makers WHERE cars_data.cylinders = 3 AND cars_data.horsepower = (SELECT MAX(horsepower) FROM cars_data WHERE cylinders = 3) AND cars_data.id = model_list.modelid AND model_list.maker = car_makers.maker GROUP BY maker",
    "SELECT model, mpg FROM cars_data WHERE mpg = (SELECT max(mpg) FROM cars_data)",
    "SELECT model FROM model_list  JOIN cars_data ON model_list.modelid = cars_data.id  ORDER BY cars_data.mpg DESC  LIMIT 1;",
    "SELECT AVG(horsepower) FROM cars_data WHERE year < 1980",
    "SELECT AVG(horsepower) FROM cars_data WHERE year < 1980",
    "SELECT AVG(edispl) FROM cars_data  WHERE id IN      (SELECT id FROM car_names       WHERE model = 'volvo')",
    "SELECT AVG(edispl) FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid JOIN model_list ON car_names.model = model_list.model WHERE model_list.maker = 'volvo'",
    "SELECT cylinders, MAX(accelerate) FROM cars_data GROUP BY cylinders",
    "SELECT MAX(accelerate) FROM cars_data GROUP BY cylinders",
    "SELECT model, COUNT(makeid) AS num_of_cars FROM car_names GROUP BY model ORDER BY num_of_cars DESC LIMIT 1",
    "SELECT maker, model, COUNT(DISTINCT model) AS num_versions  FROM model_list  GROUP BY maker, model  ORDER BY num_versions DESC  LIMIT 1;",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 4",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 4",
    "SELECT COUNT(*) FROM cars_data WHERE year = 1980",
    "SELECT COUNT(*) FROM cars_data WHERE year = 1980",
    "SELECT COUNT(DISTINCT model_list.modelid)  FROM car_makers  INNER JOIN model_list ON car_makers.maker = model_list.maker  WHERE car_makers.fullname = 'American Motor Company'",
    "SELECT COUNT(DISTINCT modelid) FROM model_list WHERE maker = 'American Motor Company'",
    "SELECT id, fullname FROM car_makers WHERE id IN (SELECT maker FROM model_list GROUP BY maker HAVING COUNT(DISTINCT model) > 3)",
    "SELECT id, maker  FROM car_makers  WHERE id IN (SELECT maker FROM model_list GROUP BY maker HAVING COUNT(*) > 3)",
    "SELECT DISTINCT model_list.model FROM model_list JOIN car_makers ON model_list.maker = car_makers.maker OR cars_data.weight > 3500 WHERE car_makers.fullname = 'General Motors'",
    "SELECT DISTINCT model FROM model_list  WHERE maker = 'General Motors' OR weight > 3500",
    "SELECT DISTINCT year FROM cars_data WHERE weight >= 3000 AND weight <= 4000",
    "SELECT DISTINCT year FROM cars_data WHERE weight < 4000 AND weight > 3000",
    "SELECT horsepower FROM cars_data ORDER BY accelerate DESC LIMIT 1",
    "SELECT horsepower FROM cars_data ORDER BY accelerate DESC LIMIT 1",
    "SELECT cylinders FROM cars_data WHERE model = 'volvo' AND accelerate = (SELECT MIN(accelerate) FROM cars_data WHERE model = 'volvo') LIMIT 1",
    "SELECT cylinders FROM cars_data WHERE model = 'volvo' AND accelerate = (SELECT MIN(accelerate) FROM cars_data WHERE model = 'volvo')",
    "SELECT COUNT(*) FROM cars_data WHERE accelerate > (SELECT MAX(accelerate) FROM cars_data WHERE horsepower = (SELECT MAX(horsepower) FROM cars_data))",
    "SELECT COUNT(*) FROM cars_data WHERE accelerate > (SELECT MAX(accelerate) FROM cars_data WHERE horsepower = (SELECT MAX(horsepower) FROM cars_data))",
    "SELECT COUNT(DISTINCT countries.countryid) FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryid HAVING COUNT(DISTINCT car_makers.maker) > 2",
    "SELECT COUNT(DISTINCT countries.countryid) FROM countries INNER JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryid HAVING COUNT(DISTINCT car_makers.maker) > 2",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 6",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 6",
    "SELECT model FROM cars_data WHERE cylinders = 4 ORDER BY horsepower DESC LIMIT 1",
    "SELECT model FROM model_list WHERE cylinders = 4 ORDER BY horsepower DESC LIMIT 1",
    "SELECT car_makers.id AS makeid, car_makers.maker AS make_name FROM car_makers  JOIN car_names ON car_makers.id = car_names.makeid  JOIN cars_data ON car_names.makeid = cars_data.id  WHERE cars_data.horsepower > (SELECT MIN(cars_data.horsepower) FROM cars_data)  AND cars_data.cylinders <= 3",
    "SELECT makeid, maker FROM car_names WHERE horsepower > (SELECT MIN(horsepower) FROM cars_data) AND cylinders < 4",
    "SELECT MAX(mpg) FROM cars_data WHERE cylinders = 8 AND year < 1980",
    "SELECT MAX(mpg) FROM cars_data WHERE cylinders = 8 OR year < 1980",
    "SELECT model  FROM car_names  JOIN cars_data ON car_names.makeid = cars_data.id  JOIN model_list ON car_names.model = model_list.model  JOIN car_makers ON model_list.maker = car_makers.maker  WHERE weight < 3500 AND car_makers.fullname <> 'Ford Motor Company'",
    "SELECT DISTINCT model FROM model_list  INNER JOIN car_makers ON model_list.maker = car_makers.maker  INNER JOIN cars_data ON model_list.modelid = cars_data.id  WHERE weight < 3500 AND car_makers.country != 'USA' AND car_makers.maker != 'Ford Motor Company'",
    "SELECT countryname FROM countries WHERE countryid NOT IN (SELECT DISTINCT country FROM car_makers)",
    "SELECT countryname FROM countries WHERE countryid NOT IN (     SELECT DISTINCT country     FROM car_makers )",
    "SELECT id, maker FROM car_makers WHERE id IN (SELECT maker FROM model_list GROUP BY maker HAVING COUNT(DISTINCT model) >= 2) AND id IN (SELECT maker FROM cars_data GROUP BY maker HAVING COUNT(DISTINCT maker) > 3)",
    "SELECT id, maker FROM car_makers WHERE id IN (SELECT maker FROM model_list GROUP BY maker HAVING COUNT(DISTINCT modelid) >= 2) AND id IN (SELECT makeid FROM car_names GROUP BY makeid HAVING COUNT(DISTINCT model) > 3)",
    "SELECT DISTINCT countries.countryid, countries.countryname FROM countries  JOIN car_makers ON countries.countryid = car_makers.country  JOIN car_names ON car_makers.id = car_names.makeid WHERE car_makers.maker = 'fiat' OR        countries.countryid IN (         SELECT car_makers.country          FROM car_makers          GROUP BY car_makers.country          HAVING COUNT(DISTINCT car_makers.id) > 3       )",
    "SELECT countryid, countryname FROM countries WHERE countryid IN (     SELECT DISTINCT country FROM car_makers     GROUP BY country     HAVING COUNT(DISTINCT maker) > 3 ) OR countryid IN (     SELECT DISTINCT country FROM car_makers     WHERE maker = 'fiat' )",
    "SELECT country FROM airlines WHERE airline = 'JetBlue Airways'",
    "SELECT country FROM airlines WHERE airline = 'Jetblue Airways'",
    "SELECT abbreviation FROM airlines WHERE airline = 'JetBlue Airways'",
    "SELECT abbreviation FROM airlines WHERE airline = 'Jetblue Airways'",
    "SELECT airline, abbreviation FROM airlines WHERE country = 'USA'",
    "SELECT airline, abbreviation FROM airlines WHERE country = 'USA'",
    "SELECT airportcode, airportname FROM airports WHERE city='Anthony'",
    "SELECT airportcode, airportname FROM airports WHERE city = 'Anthony'",
    "SELECT COUNT(*) FROM airlines",
    "select count(*) from airlines",
    "SELECT COUNT(*) FROM airports",
    "SELECT COUNT(*) FROM airports",
    "SELECT COUNT(*) FROM flights",
    "SELECT COUNT(*) FROM flights",
    "SELECT airline FROM airlines WHERE abbreviation = 'UAL'",
    "SELECT airline FROM airlines WHERE abbreviation = 'UAL'",
    "SELECT COUNT(*) FROM airlines WHERE country = 'USA'",
    "SELECT COUNT(*) FROM airlines WHERE country = 'USA'",
    "SELECT city, country FROM airports WHERE airportname = 'Alton airport'",
    "SELECT city, country FROM airports WHERE airportname = 'Alton airport'",
    "SELECT airportname FROM airports WHERE airportcode = 'AKO'"
]