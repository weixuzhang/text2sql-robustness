[
    "SELECT COUNT(*) FROM singer",
    "SELECT COUNT(*) FROM singer",
    "SELECT name, country, age FROM singer ORDER BY age DESC",
    "SELECT name, country, age FROM singer ORDER BY age DESC",
    "SELECT AVG(age) AS average_age, MIN(age) AS minimum_age, MAX(age) AS maximum_age FROM singer WHERE country = \"France\";",
    "SELECT AVG(age), MIN(age), MAX(age) FROM singer WHERE country = 'French'",
    "SELECT name, song_release_year FROM singer ORDER BY age ASC LIMIT 1;",
    "SELECT name, song_release_year FROM singer WHERE age = (SELECT MIN(age) FROM singer)",
    "SELECT DISTINCT country FROM singer WHERE age > 20",
    "SELECT DISTINCT country FROM singer WHERE age > 20",
    "SELECT country, COUNT(*) FROM singer GROUP BY country",
    "SELECT country, COUNT(*) FROM singer GROUP BY country",
    "SELECT Song_Name FROM singer WHERE Age > (SELECT AVG(Age) FROM singer)",
    "SELECT song_name FROM singer WHERE age > (SELECT AVG(age) FROM singer)",
    "SELECT location, name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",
    "SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000",
    "SELECT MAX(capacity), AVG(capacity) FROM stadium",
    "SELECT AVG(capacity), MAX(capacity) FROM stadium",
    "SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium)",
    "SELECT Name, Capacity FROM stadium ORDER BY Average DESC LIMIT 1",
    "SELECT COUNT(*) FROM concert WHERE year = 2014 OR year = 2015",
    "SELECT COUNT(*) FROM concert WHERE year IN (2014, 2015)",
    "SELECT stadium.name, COUNT(concert.concert_id) AS num_concerts FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id GROUP BY stadium.name",
    "SELECT Stadium.Name, COUNT(*) FROM Stadium JOIN Concert ON Stadium.Stadium_ID = Concert.Stadium_ID GROUP BY Stadium.Name",
    "SELECT S.Name, S.Capacity FROM Stadium AS S JOIN Concert AS C ON S.Stadium_ID = C.Stadium_ID WHERE C.Year >= 2014 GROUP BY S.Stadium_ID HAVING count(*) = (SELECT max(concert_count) FROM (SELECT count(*) AS concert_count FROM Concert GROUP BY Stadium_ID))",
    "SELECT name, capacity FROM stadium WHERE stadium_id = (SELECT stadium_id FROM concert WHERE year > 2013 GROUP BY stadium_id ORDER BY COUNT(*) DESC LIMIT 1)",
    "SELECT year, COUNT(*) AS num_concerts FROM concert GROUP BY year ORDER BY num_concerts DESC LIMIT 1",
    "SELECT year FROM concert GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1",
    "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)",
    "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)",
    "SELECT DISTINCT s1.country FROM singer s1, singer s2, concert c, singer_in_concert sic1, singer_in_concert sic2 WHERE s1.age > 40 AND s2.age < 30 AND s1.singer_id = sic1.singer_id AND s2.singer_id = sic2.singer_id AND sic1.concert_id = c.concert_id AND sic2.concert_id = c.concert_id AND s1.country = s2.country",
    "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert WHERE year = 2014)",
    "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert WHERE year = '2014');",
    "SELECT concert.concert_name, concert.theme, COUNT(singer_in_concert.singer_id) AS num_singers FROM concert LEFT JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id GROUP BY concert.concert_id",
    "SELECT concert_name, theme, COUNT(singer_id) AS num_singers  FROM concert  JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id  GROUP BY concert.concert_id",
    "SELECT Singer.name, COUNT(*) AS num_concerts  FROM Singer  JOIN Singer_in_concert ON Singer.singer_id = Singer_in_concert.singer_id  GROUP BY Singer.name",
    "SELECT Singer.name, COUNT(*) AS num_concerts FROM Singer JOIN singer_in_concert ON Singer.singer_id = singer_in_concert.singer_id GROUP BY Singer.name",
    "SELECT DISTINCT Singer.name FROM Singer JOIN Singer_in_Concert ON Singer.singer_id = Singer_in_Concert.singer_id JOIN Concert ON Singer_in_Concert.concert_id = Concert.concert_id WHERE Concert.year = 2014",
    "SELECT DISTINCT Singer.name FROM Singer JOIN Singer_In_Concert ON Singer.Singer_ID = Singer_In_Concert.Singer_ID JOIN Concert ON Singer_In_Concert.Concert_ID = Concert.Concert_ID WHERE Concert.Year = 2014",
    "SELECT name, country FROM singer WHERE song_name LIKE '%Hey%'",
    "SELECT DISTINCT singer.name, singer.country  FROM singer  JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id  WHERE singer.song_name LIKE '%Hey%'",
    "SELECT DISTINCT t1.name, t1.location  FROM stadium AS t1  JOIN concert AS t2 ON t1.stadium_id = t2.stadium_id  WHERE t2.year = 2014 AND t1.stadium_id IN      (SELECT t2.stadium_id       FROM concert AS t2       WHERE t2.year = 2015)",
    "SELECT name, location FROM stadium WHERE stadium_id IN (SELECT stadium_id FROM concert WHERE year = 2014 INTERSECT SELECT stadium_id FROM concert WHERE year = 2015)",
    "SELECT COUNT(*) FROM concert WHERE stadium_id = (SELECT stadium_id FROM stadium ORDER BY capacity DESC LIMIT 1)",
    "SELECT COUNT(*) FROM concert WHERE stadium_id = (SELECT stadium_id FROM stadium ORDER BY capacity DESC LIMIT 1)",
    "SELECT COUNT(*) FROM pets WHERE weight > 10",
    "SELECT COUNT(*) FROM pets WHERE weight > 10;",
    "SELECT weight FROM pets WHERE pettype = 'dog' ORDER BY pet_age ASC LIMIT 1",
    "SELECT MIN(weight) FROM pets",
    "SELECT pettype, MAX(weight) FROM pets GROUP BY pettype",
    "SELECT pettype, MAX(weight) FROM pets GROUP BY pettype",
    "SELECT COUNT(*) FROM has_pet JOIN student ON has_pet.stuid = student.stuid WHERE student.age > 20",
    "SELECT COUNT(DISTINCT petid) FROM has_pet JOIN pets ON has_pet.petid = pets.petid JOIN student ON has_pet.stuid = student.stuid WHERE student.age > 20",
    "SELECT COUNT(*) FROM Has_pet JOIN Pets ON Has_pet.petid = Pets.petid JOIN Student ON Has_pet.stuid = Student.stuid WHERE Pets.pettype = 'Dog' AND Student.sex = 'F'",
    "SELECT COUNT(*) FROM has_pet JOIN pets ON has_pet.petid = pets.petid JOIN student ON has_pet.stuid = student.stuid WHERE pets.pettype = 'dog' AND student.sex = 'female'",
    "SELECT COUNT(DISTINCT pettype) FROM pets",
    "SELECT COUNT(DISTINCT pettype) FROM pets",
    "SELECT DISTINCT fname FROM student WHERE stuid IN (SELECT stuid FROM has_pet INNER JOIN pets ON has_pet.petid = pets.petid WHERE pettype = 'cat' OR pettype = 'dog')",
    "SELECT DISTINCT T1.fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T2.petid = T3.petid WHERE T3.pettype IN ('cat', 'dog')",
    "SELECT DISTINCT fname FROM student WHERE stuid IN (SELECT stuid FROM has_pet WHERE petid IN (SELECT petid FROM pets WHERE pettype = 'cat')) AND stuid IN (SELECT stuid FROM has_pet WHERE petid IN (SELECT petid FROM pets WHERE pettype = 'dog'))",
    "SELECT DISTINCT T1.fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T2.petid = T3.petid WHERE T3.pettype = \"cat\" AND T1.stuid IN (SELECT stuid FROM has_pet WHERE petid IN (SELECT petid FROM pets WHERE pettype = \"dog\"))",
    "SELECT Major, Age FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE PetType = 'Cat')",
    "SELECT major, age FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE pettype = 'cat')",
    "SELECT stuid FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat')",
    "SELECT stuid FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet WHERE petid IN (SELECT petid FROM pets WHERE pettype = 'cat'))",
    "SELECT fname, age FROM student WHERE stuid IN (SELECT stuid FROM has_pet WHERE petid IN (SELECT petid FROM pets WHERE pettype = 'dog')) AND stuid NOT IN (SELECT stuid FROM has_pet WHERE petid IN (SELECT petid FROM pets WHERE pettype = 'cat'))",
    "SELECT fname FROM student WHERE stuid IN (SELECT stuid FROM has_pet WHERE petid IN (SELECT petid FROM pets WHERE pettype  =  'dog')) AND stuid NOT IN (SELECT stuid FROM has_pet WHERE petid IN (SELECT petid FROM pets WHERE pettype  =  'cat'))",
    "SELECT pettype, weight FROM pets WHERE pet_age = (SELECT MIN(pet_age) FROM pets)",
    "SELECT pettype, weight FROM pets ORDER BY pet_age ASC LIMIT 1",
    "SELECT petid, weight FROM pets WHERE pet_age > 1",
    "SELECT petid, weight FROM pets WHERE pet_age > 1",
    "SELECT pettype, AVG(pet_age), MAX(pet_age) FROM pets JOIN has_pet ON pets.petid = has_pet.petid GROUP BY pettype",
    "SELECT pettype, AVG(pet_age) AS avg_age, MAX(pet_age) AS max_age FROM pets GROUP BY pettype",
    "SELECT pettype, AVG(weight) FROM pets GROUP BY pettype",
    "SELECT pettype, AVG(weight) FROM pets GROUP BY pettype",
    "SELECT student.fname, student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid",
    "SELECT DISTINCT student.fname, student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid",
    "SELECT P.petid FROM pets AS P JOIN has_pet AS HP ON P.petid = HP.petid JOIN student AS S ON HP.stuid = S.stuid WHERE S.lname = 'Smith'",
    "SELECT pets.petid FROM pets JOIN has_pet ON pets.petid = has_pet.petid JOIN student ON has_pet.stuid = student.stuid WHERE student.lname = 'Smith'",
    "SELECT COUNT(pets.petid) AS num_pets, has_pet.stuid AS student_id  FROM has_pet  JOIN pets ON has_pet.petid = pets.petid  GROUP BY has_pet.stuid",
    "SELECT stuid, COUNT(petid) FROM has_pet GROUP BY stuid",
    "SELECT fname, sex FROM student WHERE stuid IN (SELECT stuid FROM has_pet GROUP BY stuid HAVING COUNT(*) > 1)",
    "SELECT fname, sex FROM student WHERE stuid IN (SELECT stuid FROM has_pet GROUP BY stuid HAVING COUNT(*) > 1)",
    "SELECT s.lname FROM student AS s JOIN has_pet AS hp ON s.stuid = hp.stuid JOIN pets AS p ON hp.petid = p.petid WHERE p.pettype = 'cat' AND p.pet_age = 3 ORDER BY hp.petid DESC LIMIT 1",
    "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T2.petid = T3.petid WHERE T3.pettype = \"cat\" AND T3.pet_age = 3 ORDER BY T3.pet_age DESC LIMIT 1",
    "SELECT AVG(age) FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet)",
    "SELECT AVG(age) FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet)",
    "SELECT count(DISTINCT continent) FROM continents",
    "SELECT COUNT(*) FROM continents",
    "SELECT c.contid, c.continent, COUNT(co.countryid) AS num_countries FROM continents AS c JOIN countries AS co ON c.contid = co.continent GROUP BY c.contid, c.continent",
    "SELECT continents.contid, continents.continent, COUNT(countries.countryid) AS num_countries FROM continents JOIN countries ON continents.contid = countries.continent GROUP BY continents.contid, continents.continent",
    "SELECT COUNT(*) FROM countries",
    "SELECT COUNT(*) FROM countries",
    "SELECT car_makers.fullname, car_makers.id, COUNT(model_list.modelid) AS num_models FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id",
    "SELECT car_makers.id, car_makers.fullname, COUNT(model_list.modelid) AS num_models FROM car_makers JOIN model_list ON car_makers.maker = model_list.maker GROUP BY car_makers.id, car_makers.fullname",
    "SELECT model FROM model_list JOIN cars_data ON model_list.modelid = cars_data.id ORDER BY horsepower ASC LIMIT 1;",
    "SELECT model FROM car_names JOIN cars_data ON car_names.makeid = cars_data.id ORDER BY horsepower ASC LIMIT 1",
    "SELECT Model FROM cars_data WHERE Weight < (SELECT AVG(Weight) FROM cars_data)",
    "SELECT model FROM car_names WHERE weight < (SELECT AVG(weight) FROM cars_data)",
    "SELECT DISTINCT Maker FROM car_makers JOIN cars_data ON car_makers.id = cars_data.id WHERE Year = 1970",
    "SELECT DISTINCT maker FROM car_makers WHERE id IN (SELECT makeid FROM car_names WHERE model IN (SELECT model FROM model_list WHERE maker = car_makers.maker) AND makeid IN (SELECT id FROM cars_data WHERE year = 1970))",
    "SELECT make, year FROM cars_data WHERE year = (SELECT MIN(year) FROM cars_data)",
    "SELECT T2.maker, MIN(T1.year)  FROM cars_data AS T1  JOIN car_makers AS T2 ON T1.id = T2.id  WHERE T1.year = (SELECT MIN(year) FROM cars_data)",
    "SELECT DISTINCT model FROM model_list INNER JOIN cars_data ON model_list.modelid = cars_data.id WHERE year > 1980",
    "SELECT DISTINCT model FROM model_list JOIN cars_data ON model_list.modelid = cars_data.id WHERE year > 1980",
    "SELECT continents.continent, COUNT(DISTINCT car_makers.country) FROM continents JOIN countries ON continents.contid = countries.continent JOIN car_makers ON countries.countryid = car_makers.country GROUP BY continents.continent",
    "SELECT Continents.continent, COUNT(DISTINCT Car_Makers.id) AS num_car_makers FROM Continents JOIN Countries ON Continents.contid = Countries.continent JOIN Car_Makers ON Countries.countryid = Car_Makers.country GROUP BY Continents.continent, Continents.contid",
    "SELECT countryname FROM countries WHERE countryid IN (SELECT country FROM car_makers GROUP BY country ORDER BY COUNT(*) DESC LIMIT 1)",
    "SELECT countryname FROM countries WHERE countryid IN (SELECT country FROM car_makers GROUP BY country ORDER BY COUNT(*) DESC LIMIT 1);",
    "SELECT COUNT(modelid) AS count, car_makers.fullname FROM model_list JOIN car_makers ON model_list.maker = car_makers.maker GROUP BY car_makers.fullname",
    "SELECT car_makers.id, car_makers.fullname, COUNT(DISTINCT model_list.model) AS num_car_models FROM car_makers JOIN model_list ON car_makers.maker = model_list.maker GROUP BY car_makers.id, car_makers.fullname",
    "SELECT accelerate FROM cars_data WHERE makeid IN (SELECT makeid FROM car_names WHERE model = 'hornet sportabout (sw)' AND maker = 'amc')",
    "SELECT accelerate FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE car_names.model = 'amc hornet sportabout (sw)'",
    "SELECT COUNT(DISTINCT car_makers.id) FROM car_makers JOIN countries ON car_makers.country = countries.countryid WHERE countries.countryname = 'france'",
    "SELECT COUNT(DISTINCT id) FROM car_makers WHERE country = \"France\" AND maker = \"Care\"",
    "SELECT COUNT(DISTINCT model) FROM model_list WHERE maker IN (SELECT id FROM car_makers WHERE country = 'usa')",
    "SELECT COUNT(DISTINCT model) FROM model_list JOIN car_makers ON model_list.maker = car_makers.maker JOIN countries ON car_makers.country = countries.countryname WHERE countries.continent = 'United States'",
    "SELECT AVG(mpg) FROM cars_data WHERE cylinders = 4",
    "SELECT AVG(mpg) FROM cars_data WHERE cylinders = 4",
    "SELECT MIN(weight) FROM cars_data WHERE cylinders = 8 AND year = 1974",
    "SELECT MIN(weight) FROM cars_data WHERE cylinders = 8 AND year = 1974",
    "SELECT T1.maker, T2.model FROM car_makers AS T1 JOIN model_list AS T2 ON T1.id = T2.maker JOIN car_names AS T3 ON T2.modelid = T3.model_id JOIN cars_data AS T4 ON T3.makeid = T4.id",
    "SELECT maker, model FROM car_makers JOIN model_list ON car_makers.id = model_list.maker;",
    "SELECT DISTINCT countries.countryid, countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country",
    "SELECT T1.countryname, T1.countryid  FROM countries AS T1  JOIN car_makers AS T2 ON T1.countryid = T2.country  GROUP BY T1.countryname, T1.countryid  HAVING COUNT(DISTINCT T2.id) >= 1",
    "SELECT count(*) FROM cars_data WHERE horsepower > 150",
    "SELECT COUNT(*) FROM cars_data WHERE horsepower > 150;",
    "SELECT year, AVG(weight) AS avg_weight FROM cars_data GROUP BY year",
    "SELECT AVG(weight), year FROM cars_data GROUP BY year",
    "SELECT c.countryname FROM countries AS c JOIN car_makers AS cm ON c.countryid = cm.country GROUP BY c.countryid, c.countryname, c.continent HAVING COUNT(DISTINCT cm.maker) >= 3 AND c.continent = 'Europe'",
    "SELECT DISTINCT t2.countryname  FROM car_makers AS t1  JOIN countries AS t2 ON t1.country  =  t2.countryid  WHERE t2.continent  =  \"Europe\"  GROUP BY t1.country  HAVING COUNT(DISTINCT t1.maker) >= 3",
    "SELECT MAX(horsepower), make FROM cars_data WHERE cylinders = 3 GROUP BY make;",
    "SELECT MAX(horsepower), maker FROM cars_data  JOIN model_list ON cars_data.model = model_list.modelid  JOIN car_makers ON model_list.maker = car_makers.id  WHERE cylinders = 3  GROUP BY maker  ORDER BY MAX(horsepower) DESC  LIMIT 1",
    "SELECT model FROM cars_data WHERE mpg = (SELECT MAX(mpg) FROM cars_data)",
    "SELECT model FROM cars_data WHERE mpg = (SELECT MAX(mpg) FROM cars_data)",
    "SELECT AVG(horsepower) FROM cars_data WHERE year < 1980",
    "SELECT AVG(horsepower) FROM cars_data WHERE year < 1980",
    "SELECT AVG(edispl) FROM cars_data WHERE id IN (SELECT makeid FROM car_names WHERE model = 'volvo')",
    "SELECT AVG(edispl) FROM cars_data WHERE makeid IN (SELECT id FROM car_makers WHERE maker = 'Volvo')",
    "SELECT cylinders, MAX(accelerate) FROM cars_data GROUP BY cylinders",
    "SELECT cylinders, MAX(accelerate) FROM cars_data GROUP BY cylinders",
    "SELECT maker, COUNT(DISTINCT make) AS num_of_cars FROM car_names JOIN model_list ON car_names.model = model_list.modelid GROUP BY maker ORDER BY num_of_cars DESC LIMIT 1",
    "SELECT T1.model FROM model_list AS T1 JOIN car_names AS T2 ON T1.modelid = T2.model GROUP BY T1.modelid ORDER BY COUNT(DISTINCT T2.makeid) DESC LIMIT 1",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 4",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 4",
    "SELECT COUNT(*) FROM cars_data WHERE year = 1980",
    "SELECT COUNT(*) FROM cars_data WHERE year = 1980",
    "SELECT COUNT(DISTINCT model) FROM model_list WHERE maker IN (SELECT id FROM car_makers WHERE fullname = 'American Motor Company')",
    "SELECT COUNT(DISTINCT modelid) FROM model_list WHERE maker = 'American Motor Company'",
    "SELECT id, fullname FROM car_makers WHERE id IN (SELECT maker FROM model_list GROUP BY maker HAVING COUNT(DISTINCT model) > 3)",
    "SELECT id, maker FROM car_makers WHERE id IN (SELECT maker FROM model_list GROUP BY maker HAVING COUNT(*) > 3)",
    "SELECT DISTINCT model FROM model_list WHERE maker IN (SELECT maker FROM car_makers WHERE fullname = 'General Motors') OR modelid IN (SELECT makeid FROM car_names WHERE weight > 3500)",
    "SELECT DISTINCT model FROM model_list WHERE maker  =  'General Motors' OR weight  >  3500",
    "SELECT DISTINCT year FROM cars_data WHERE weight >= 3000 AND weight <= 4000",
    "SELECT DISTINCT year FROM cars_data WHERE weight < 4000 AND weight > 3000;",
    "SELECT Horsepower FROM cars_data ORDER BY Accelerate DESC LIMIT 1",
    "SELECT horsepower FROM cars_data ORDER BY accelerate DESC LIMIT 1",
    "SELECT MIN(cylinders) FROM cars_data WHERE model = 'volvo' ORDER BY accelerate ASC LIMIT 1",
    "SELECT MIN(cylinders) FROM cars_data WHERE model IN (SELECT model FROM car_names WHERE make = 'volvo') ORDER BY accelerate LIMIT 1",
    "SELECT COUNT(*) FROM cars_data WHERE accelerate > (SELECT MAX(accelerate) FROM cars_data WHERE horsepower = (SELECT MAX(horsepower) FROM cars_data))",
    "SELECT COUNT(*) FROM cars_data WHERE accelerate > (SELECT MAX(accelerate) FROM cars_data WHERE horsepower = (SELECT MAX(horsepower) FROM cars_data))",
    "SELECT COUNT(DISTINCT country) FROM car_makers GROUP BY country HAVING COUNT(DISTINCT maker) > 2",
    "SELECT COUNT(DISTINCT country) FROM car_makers GROUP BY country HAVING COUNT(DISTINCT maker) > 2",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 6",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 6;",
    "SELECT model FROM cars_data WHERE cylinders = 4 ORDER BY horsepower DESC LIMIT 1",
    "SELECT model FROM cars_data WHERE cylinders  =  4 ORDER BY horsepower DESC LIMIT 1",
    "SELECT DISTINCT car_names.makeid, car_makers.maker  FROM car_names  JOIN cars_data ON car_names.makeid = cars_data.id  JOIN car_makers ON car_names.makeid = car_makers.id  WHERE cars_data.horsepower > (SELECT MIN(horsepower) FROM cars_data)  AND cars_data.cylinders <= 3",
    "SELECT makeid, maker FROM car_makers JOIN car_names ON car_makers.id = car_names.makeid JOIN cars_data ON car_names.modelid = cars_data.id WHERE cylinders < 4 AND horsepower > (SELECT MIN(horsepower) FROM cars_data)",
    "SELECT MAX(mpg) FROM cars_data WHERE cylinders = 8 AND year < 1980",
    "SELECT MAX(mpg) FROM cars_data WHERE cylinders = 8 OR year < 1980",
    "SELECT model FROM model_list WHERE maker != 'Ford Motor Company' AND weight < 3500;",
    "SELECT DISTINCT T3.model FROM cars_data AS T1 JOIN car_names AS T2 ON T1.id = T2.makeid JOIN model_list AS T3 ON T2.model = T3.model JOIN car_makers AS T4 ON T3.maker = T4.maker WHERE T1.weight < 3500 AND T4.fullname != \"Ford Motor Company\"",
    "SELECT DISTINCT countryname FROM countries WHERE countryid NOT IN (SELECT DISTINCT country FROM car_makers)",
    "SELECT countryname FROM countries WHERE countryid NOT IN (SELECT DISTINCT country FROM car_makers);",
    "SELECT id, maker FROM car_makers WHERE id IN (SELECT maker FROM model_list GROUP BY maker HAVING COUNT(DISTINCT model) >= 2) AND id IN (SELECT maker FROM car_names GROUP BY makeid HAVING COUNT(DISTINCT makeid) > 3)",
    "SELECT id, maker FROM car_makers WHERE id IN (SELECT maker FROM model_list GROUP BY maker HAVING COUNT(DISTINCT model) >= 2) AND id IN (SELECT makeid FROM car_names GROUP BY makeid HAVING COUNT(*) > 3)",
    "SELECT T1.countryid, T1.countryname  FROM countries AS T1  JOIN car_makers AS T2 ON T1.countryid = T2.country  JOIN model_list AS T3 ON T2.id = T3.maker  JOIN car_names AS T4 ON T3.modelid = T4.model  WHERE T2.maker = 'fiat' OR T1.countryid IN  (SELECT country FROM car_makers GROUP BY country HAVING COUNT(DISTINCT maker) > 3)",
    "SELECT DISTINCT T2.countryid, T2.countryname  FROM car_makers AS T1  JOIN countries AS T2 ON T1.country = T2.countryid  WHERE T2.countryid IN      (SELECT T2.countryid       FROM car_makers AS T1       JOIN countries AS T2 ON T1.country = T2.countryid       GROUP BY T2.countryid       HAVING COUNT(DISTINCT T1.maker) > 3)  OR T1.maker = 'fiat'  OR T1.maker = 'Fiat'",
    "SELECT country FROM airlines WHERE airline = \"JetBlue Airways\"",
    "SELECT country FROM airlines WHERE airline = \"Jetblue Airways\"",
    "SELECT abbreviation FROM airlines WHERE airline = 'JetBlue Airways'",
    "SELECT abbreviation FROM airlines WHERE airline = 'Jetblue Airways'",
    "SELECT airline, abbreviation FROM airlines WHERE country = \"USA\"",
    "SELECT airline, abbreviation FROM airlines WHERE country = \"USA\"",
    "SELECT AirportCode, AirportName FROM airports WHERE City = 'Anthony'",
    "SELECT airportcode, airportname FROM airports WHERE city = 'Anthony'",
    "SELECT COUNT(DISTINCT airline) FROM flights",
    "SELECT COUNT(*) FROM airlines;",
    "SELECT COUNT(*) FROM airports",
    "SELECT COUNT(*) FROM airports",
    "SELECT COUNT(*) FROM flights",
    "SELECT COUNT(*) FROM flights;",
    "SELECT airline FROM airlines WHERE abbreviation = 'UAL'",
    "SELECT airline FROM airlines WHERE abbreviation = 'UAL'",
    "SELECT COUNT(*) FROM airlines WHERE country = 'USA'",
    "SELECT COUNT(*) FROM airlines WHERE country = \"USA\"",
    "SELECT city, country FROM airports WHERE airportname = 'Alton airport'",
    "SELECT city, country FROM airports WHERE airportname = 'Alton'",
    "SELECT airportname FROM airports WHERE airportcode = 'AKO'"
]