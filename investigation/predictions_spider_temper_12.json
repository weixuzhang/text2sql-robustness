[
    "select count(*) from singer",
    "select count(*) from singer",
    "SELECT name, country, age FROM singer ORDER BY age DESC",
    "SELECT name, country, age FROM singer ORDER BY age DESC",
    "SELECT AVG(age), MIN(age), MAX(age) FROM singer WHERE country = 'France'",
    "SELECT AVG(age) AS average_age, MIN(age) AS minimum_age, MAX(age) AS maximum_age FROM singer WHERE country = 'France'",
    "SELECT name, song_release_year FROM singer WHERE age = (SELECT MIN(age) FROM singer)",
    "select song_name, song_release_year from singer where age = (select min(age) from singer)",
    "SELECT DISTINCT country FROM singer WHERE age > 20",
    "SELECT DISTINCT country FROM singer WHERE age > 20;",
    "SELECT s.country, COUNT(*) as num_singers  FROM singer s  GROUP BY s.country",
    "SELECT country, count(*) AS num_singers  FROM singer  GROUP BY country",
    "SELECT singer.song_name FROM concert_singer.singer WHERE singer.age > (SELECT AVG(age) FROM concert_singer.singer);",
    "SELECT DISTINCT singer.song_name  FROM singer  WHERE singer.age > (SELECT AVG(age) FROM singer)",
    "SELECT location, name FROM stadium WHERE capacity >= 5000 AND capacity <= 10000;",
    "SELECT location, name FROM stadium WHERE capacity BETWEEN 5000 AND 10000;",
    "SELECT MAX(capacity), AVG(capacity) FROM stadium",
    "SELECT AVG(capacity), MAX(capacity) FROM stadium",
    "SELECT name, capacity  FROM stadium  WHERE average = (SELECT MAX(average) FROM stadium)",
    "SELECT name, capacity FROM stadium WHERE average = (SELECT MAX(average) FROM stadium);",
    "SELECT COUNT(*) FROM concert WHERE year = 2014 OR year = 2015",
    "SELECT COUNT(*) FROM concert WHERE year IN (2014, 2015)",
    "SELECT stadium.name, count(*) as num_concerts  FROM concert  JOIN stadium ON concert.stadium_id = stadium.stadium_id  GROUP BY stadium.stadium_id ORDER BY num_concerts DESC",
    "SELECT stadium.name, COUNT(concert.concert_id) as num_concerts FROM stadium LEFT JOIN concert on stadium.stadium_id = concert.stadium_id GROUP BY stadium.name",
    "SELECT name, capacity FROM stadium WHERE stadium_id = (SELECT stadium_id FROM concert GROUP BY stadium_id HAVING COUNT(*) = (SELECT MAX(c) FROM (SELECT COUNT(*) c FROM concert WHERE year >= 2014 GROUP BY stadium_id) AS T));",
    "SELECT name, capacity FROM stadium WHERE stadium_id = (   SELECT stadium_id   FROM concert   WHERE year > '2013'   GROUP BY stadium_id   ORDER BY COUNT(concert_id) DESC   LIMIT 1 )",
    "SELECT year, count(*) AS number_of_concerts  FROM concert  GROUP BY year  HAVING count(*) = (SELECT max(concerts_per_year) FROM (SELECT year, count(*) AS concerts_per_year FROM concert GROUP BY year) AS concerts_by_year)",
    "SELECT year, COUNT(*) AS num_concerts FROM concert GROUP BY year ORDER BY num_concerts DESC LIMIT 1;",
    "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)",
    "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)",
    "SELECT DISTINCT s1.country FROM singer s1, singer s2, singer_in_concert sc1, singer_in_concert sc2 WHERE s1.singer_id = sc1.singer_id AND s2.singer_id = sc2.singer_id  AND s1.age > 40 AND s2.age < 30 AND s1.country = s2.country",
    "SELECT name from stadium where stadium_id not in (SELECT stadium_id from concert where year=2014)",
    "SELECT name from Stadium where stadium_id not in (select distinct(d.stadium_id) from concert as d where year = 2014)",
    "SELECT concert_name as name, theme, count(singer_id) as num_singers FROM concert  JOIN singer_in_concert ON concert.concert_id=singer_in_concert.concert_id  GROUP BY concert.concert_id, concert.concert_name, theme",
    "SELECT c.concert_name, c.theme, count(s_in_c.singer_id) as num_singers  FROM concert c  LEFT JOIN singer_in_concert s_in_c ON c.concert_id = s_in_c.concert_id  GROUP BY c.concert_id;   Note: As the question requests the count of singers, we may assume that the output should not contain any row representing concerts without any singers, therefore, a LEFT JOIN may be useful in this question.",
    "SELECT singer.name, COUNT(concert.concert_id) as num_concerts FROM singer LEFT JOIN singer_in_concert ON singer.singer_id=singer_in_concert.singer_id  LEFT JOIN concert ON singer_in_concert.concert_id=concert.concert_id  GROUP BY singer.name",
    "SELECT singer.name, COUNT(singer_in_concert.concert_id) as number_of_concerts  FROM singer  JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id  GROUP BY singer.name",
    "SELECT DISTINCT singer.name FROM concert_singer  JOIN concert ON concert_singer.concert_id = concert.concert_id  JOIN singer ON concert_singer.singer_id = singer.singer_id WHERE concert.year = 2014",
    "SELECT singer.name  FROM singer  INNER JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id  INNER JOIN concert ON concert.concert_id = singer_in_concert.concert_id  WHERE concert.year = 2014",
    "SELECT name, country FROM singer WHERE song_name LIKE '%Hey%'",
    "SELECT singer.name, singer.country  FROM singer  JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id  JOIN concert ON singer_in_concert.concert_id = concert.concert_id  WHERE LOWER(singer.song_name) LIKE '%hey%'",
    "SELECT DISTINCT s.name, s.location FROM concert c1 JOIN concert c2 ON c1.stadium_id=c2.stadium_id and c1.year=2014 and c2.year=2015 JOIN stadium s ON s.stadium_id=c1.stadium_id",
    "SELECT DISTINCT stadium.name, stadium.location FROM concert INNER JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id INNER JOIN stadium ON concert.stadium_id = stadium.stadium_id WHERE concert.year = 2014 AND concert.stadium_id IN (     SELECT concert.stadium_id     FROM concert     INNER JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id     INNER JOIN stadium ON concert.stadium_id = stadium.stadium_id     WHERE year = 2015 );",
    "SELECT COUNT(*)  FROM concert c  WHERE c.stadium_id = (    SELECT s.stadium_id     FROM stadium s     ORDER BY s.capacity DESC     LIMIT 1 );",
    "SELECT COUNT(*) FROM concert WHERE stadium_id = (SELECT stadium_id FROM stadium ORDER BY capacity DESC LIMIT 1)",
    "SELECT COUNT(*) FROM pets WHERE weight > 10",
    "SELECT COUNT(*)  FROM pets WHERE weight > 10;",
    "SELECT MIN(weight) FROM pets WHERE pettype = 'dog' ORDER BY pet_age ASC LIMIT 1",
    "select min(weight) from pets where pettype = 'dog'",
    "SELECT pettype, MAX(weight) FROM pets GROUP BY pettype;",
    "SELECT pettype, MAX(weight) AS max_weight FROM pets GROUP BY pettype;",
    "SELECT COUNT(petid) FROM pets_1  WHERE stuid IN (                    SELECT stuid FROM has_pet NATURAL JOIN student WHERE age > 20               );",
    "SELECT COUNT(pets.petid)  FROM pets JOIN has_pet ON pets.petid = has_pet.petid JOIN student ON student.stuid = has_pet.stuid WHERE student.age > 20",
    "SELECT COUNT(petid)  FROM has_pet  JOIN student ON has_pet.stuid=student.stuid  JOIN pets ON has_pet.petid=pets.petid  WHERE pets.pettype='dog' AND student.sex='F'",
    "select count(*) from pets  join has_pet on pets.petid = has_pet.petid  join student on has_pet.stuid = student.stuid  where pets.pettype = 'dog' and student.sex ='female'",
    "SELECT COUNT(DISTINCT pettype) FROM pets.",
    "SELECT COUNT(DISTINCT pettype) FROM pets",
    "SELECT fname FROM student S JOIN has_pet HP ON S.stuid = HP.stuid JOIN pets P ON P.petid = HP.petid WHERE P.pettype IN ('cat', 'dog')",
    "SELECT DISTINCT fname FROM student INNER JOIN has_pet ON student.stuid = has_pet.stuid INNER JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat' OR pets.pettype = 'dog'",
    "SELECT DISTINCT s.fname FROM student s JOIN has_pet hp ON hp.stuid = s.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'cat'     AND EXISTS (         SELECT 1         FROM has_pet hp2         JOIN pets p2 ON p2.petid = hp2.petid          WHERE hp2.stuid = s.stuid             AND p2.pettype = 'dog' )",
    "SELECT student.fname  FROM student  WHERE EXISTS (     SELECT *     FROM has_pet p1      JOIN has_pet p2ON p1.stuid = p2.stuid AND p1.petid <> p2.petid     JOIN pets ON p1.petid = pets.petid                  AND p1.petid = pets.petid     WHERE pet_type = 'cat'     AND p2.pet_type = 'dog'     AND p1.stuid = student.stuid )",
    "SELECT major, age FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE pettype = 'cat')",
    "SELECT s.Major, s.Age FROM student s WHERE s.stuid NOT IN (SELECT h.stuid FROM has_pet h INNER JOIN pets p ON h.petid=p.petid WHERE p.pettype='cat')",
    "SELECT DISTINCT stuid FROM student WHERE stuid NOT IN      (SELECT stuid FROM has_pet INNER JOIN pets ON has_pet.petid=pets.petid WHERE pettype='cat')",
    "SELECT student.stuid FROM student LEFT JOIN has_pet ON student.stuid = has_pet.stuid LEFT JOIN pets ON has_pet.petid = pets.petid AND pets.pettype = 'cat' WHERE pets.petid IS NULL;",
    "SELECT fname, age FROM student WHERE stuid IN (SELECT DISTINCT stuid FROM has_pet WHERE petid IN (SELECT petid FROM pets WHERE pettype = 'dog')) AND stuid NOT IN (SELECT DISTINCT stuid FROM has_pet WHERE petid IN (SELECT petid FROM pets WHERE pettype = 'cat')) ORDER BY fname LIMIT 1;",
    "SELECT s.fname FROM student s  JOIN has_pet hp ON s.stuid = hp.stuid  JOIN pets p ON hp.petid = p.petid  WHERE p.pettype = 'dog' AND hp.petid NOT IN (SELECT hp.petid FROM has_pet hp JOIN pets p on hp.petid = p.petid WHERE p.pettype = 'cat')",
    "SELECT pettype, weight FROM pets WHERE pet_age = (SELECT MIN(pet_age) FROM pets)",
    "SELECT pettype, weight  FROM pets  WHERE pet_age = (Select MIN(pet_age) from pets)",
    "SELECT petid, weight FROM pets WHERE pet_age > 1",
    "SELECT petid, weight FROM pets WHERE pet_age > 1",
    "SELECT pettype, AVG(pet_age), MAX(pet_age) FROM pets GROUP BY pettype;",
    "SELECT pettype, AVG(pet_age), MAX(pet_age) FROM pets  GROUP BY pettype",
    "SELECT pettype, AVG(weight) AS avg_weight FROM pets GROUP BY pettype",
    "SELECT pettype, AVG(weight) FROM pets GROUP BY pettype",
    "SELECT fname, age FROM student WHERE stuid IN(SELECT stuid FROM has_pet) ORDER BY stuid LIMIT 1000;",
    "SELECT DISTINCT student.fname, student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid;",
    "SELECT has_pet.petid FROM has_pet JOIN student on has_pet.stuid = student.stuid WHERE student.lname = 'Smith'",
    "SELECT petid FROM has_pet  WHERE stuid IN (SELECT stuid FROM student WHERE lname = 'Smith')",
    "SELECT has_pet.stuid, COUNT(*) as pet_count FROM has_pet JOIN pets on pets.petid = has_pet.petid GROUP BY has_pet.stuid HAVING COUNT(*) > 0;",
    "SELECT stuid, COUNT(*) as num_pets  FROM has_pet  WHERE stuid IN (SELECT stuid                  FROM has_pet                  GROUP BY stuid                  HAVING COUNT(*) > 0)  GROUP BY stuid",
    "SELECT fname, sex FROM student WHERE stuid IN (SELECT stuid FROM has_pet GROUP BY stuid HAVING COUNT(*) > 1)",
    "SELECT fname, sex FROM student WHERE stuid IN (SELECT stuid FROM has_pet GROUP BY stuid HAVING COUNT(petid) > 1)",
    "SELECT s.lname  FROM student s  JOIN has_pet hp ON s.stuid = hp.stuid  JOIN pets p ON hp.petid = p.petid  WHERE pettype = 'cat' AND pet_age = 3  ORDER BY p.petid DESC  LIMIT 1",
    "SELECT student.lname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pettype = 'cat' AND pet_age = 3  ORDER BY pets.petid DESC  LIMIT 1",
    "SELECT AVG(student.age) FROM student WHERE student.stuid NOT IN(SELECT has_pet.stuid from has_pet)",
    "SELECT AVG(age) FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet)",
    "SELECT COUNT(*) FROM continents",
    "SELECT COUNT(*) FROM continents",
    "SELECT continent.contid, continent.continent, COUNT(countries.countryid) AS num_countries  FROM continents  JOIN countries ON continents.contid = countries.continent  GROUP BY continent.contid,continent.continent ;",
    "SELECT continents.contid, continents.continent, COUNT(DISTINCT countries.countryid) AS number_of_countries FROM continents JOIN countries ON continents.continent = countries.continent GROUP BY continents.contid, continents.continent",
    "SELECT COUNT(*) FROM countries",
    "SELECT COUNT(*) FROM countries",
    "SELECT car_makers.id, car_makers.fullname, COUNT(model_list.modelid) AS num_models FROM car_makers  INNER JOIN model_list ON car_makers.maker = model_list.maker GROUP BY car_makers.id, car_makers.fullname ",
    "SELECT car_makers.id, car_makers.fullname, COUNT(DISTINCT model_list.modelid) AS num_models FROM car_1.car_makers JOIN car_1.model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id, car_makers.fullname",
    "SELECT model FROM cars_data WHERE horsepower = (SELECT MIN(horsepower) FROM cars_data)",
    "SELECT model FROM cars_data  WHERE horsepower = (SELECT MIN(horsepower) FROM cars_data) ",
    "SELECT model FROM model_list WHERE (SELECT AVG(weight) FROM cars_data) > weight",
    "SELECT model FROM model_list INNER JOIN cars_data ON model_list.modelid = cars_data.id HAVING weight < (SELECT AVG(weight) FROM cars_data)",
    "SELECT DISTINCT maker FROM car_makers WHERE id IN (SELECT makeid from car_names WHERE modelid IN (SELECT modelid FROM cars_data WHERE year=1970))",
    "SELECT DISTINCT car_makers.maker FROM car_makers INNER JOIN cars_data ON car_makers.id = cars_data.id WHERE cars_data.year = 1970;",
    "SELECT make, year  FROM car_names JOIN cars_data ON car_names.makeid = cars_data.id WHERE year = (SELECT MIN(year) FROM cars_data)",
    "SELECT car_makers.maker, MIN(cars_data.year) FROM car_makers JOIN car_names ON car_makers.id = car_names.makeid JOIN cars_data ON cars_data.id = car_names.model GROUP BY car_makers.maker ORDER BY MIN(cars_data.year) LIMIT 1",
    "SELECT DISTINCT model FROM model_list m JOIN cars_data d on m.modelid = d.id WHERE year > 1980",
    "SELECT DISTINCT model FROM model_list JOIN cars_data ON model_list.modelid = cars_data.id WHERE year > 1980",
    "SELECT c.continent, COUNT(DISTINCT cm.id) AS car_maker_count  FROM continents c  JOIN countries ct ON (c.contid = ct.continent) JOIN car_makers cm ON (ct.countryid = cm.country) GROUP BY c.continent;",
    "SELECT continents.continent, COUNT(car_makers.id)  FROM continents  JOIN countries ON continents.contid = countries.continent  JOIN car_makers ON countries.countryid = car_makers.country  GROUP BY continents.continent",
    "SELECT countryname FROM countries WHERE countryid = (SELECT country FROM car_makers GROUP BY country ORDER BY COUNT(maker) DESC LIMIT 1)",
    "SELECT country.countryname FROM  (SELECT DISTINCT country, COUNT(DISTINCT maker) AS num_makers FROM car_makers GROUP BY country) tmp  INNER JOIN countries country ON tmp.country = country.countryid  ORDER BY num_makers DESC  LIMIT 1",
    "SELECT cm.fullname, COUNT(DISTINCT ml.modelid)  FROM car_makers cm JOIN model_list ml on cm.id = ml.maker GROUP BY cm.fullname",
    "SELECT cm.id, cm.fullname, COUNT(DISTINCT m.modelid)  FROM car_makers AS cm  JOIN model_list AS m ON cm.maker=m.maker  GROUP BY cm.id, cm.fullname;",
    "SELECT accelerate FROM cars_data  INNER JOIN car_names ON cars_data.id = car_names.makeid WHERE car_names.model ='hornet sportabout (sw)' AND car_names.make = 'amc'",
    "SELECT accelerate FROM cars_data WHERE make = 'amc hornet sportabout (sw)'.",
    "SELECT count(*) FROM car_makers WHERE country = 'france'",
    "SELECT COUNT(DISTINCT id) FROM car_makers WHERE maker = 'care' AND country = ( SELECT countryid FROM countries WHERE countryname = 'France' )",
    "SELECT count(DISTINCT model)  FROM model_list    JOIN car_makers ON (model_list.maker = car_makers.maker and car_makers.country ='usa')   JOIN car_names ON (model_list.modelid = car_names.makeid)",
    "SELECT COUNT(DISTINCT model) FROM model_list  JOIN car_makers ON model_list.maker=car_makers.maker AND car_makers.country='United States'  JOIN car_names ON car_names.model=model_list.modelid",
    "SELECT AVG(mpg) FROM cars_data WHERE cylinders = 4",
    "SELECT AVG(mpg) FROM cars_data WHERE cylinders = 4",
    "SELECT MIN(weight) FROM cars_data WHERE cylinders = 8 AND year = 1974",
    "SELECT MIN(weight) FROM cars_data WHERE cylinders = 8 AND year = 1974",
    "SELECT maker, model  FROM car_makers  INNER JOIN model_list ON car_makers.id = model_list.maker;",
    "SELECT maker, model FROM model_list;",
    "SELECT DISTINCT countries.countryid, countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country;",
    "SELECT countryid, countryname FROM countries WHERE countryid IN (SELECT DISTINCT country FROM car_makers) ORDER BY countryname ASC;",
    "SELECT COUNT(*) FROM cars_data WHERE horsepower > 150",
    "SELECT COUNT(*) FROM cars_data WHERE horsepower > 150",
    "SELECT AVG(weight) FROM cars_data GROUP BY year.",
    "SELECT year, AVG(weight) as average_weight, AVG(year) as average_year FROM cars_data GROUP BY year",
    "SELECT countries.countryname FROM car_makers INNER JOIN countries ON car_makers.country = countries.countryid INNER JOIN continents ON countries.continent = continents.contid WHERE continents.continent = 'europe' GROUP BY countries.countryname HAVING COUNT(DISTINCT car_makers.maker) >= 3",
    "SELECT DISTINCT c.countryname FROM countries c INNER JOIN car_makers m ON c.countryid = m.country GROUP BY c.countryname HAVING COUNT(DISTINCT m.id) >= 3 AND c.continent = 'European'",
    "```sql SELECT MAX(horsepower) AS maximum_horsepower, car_makers.maker AS car_make FROM cars_data JOIN car_makers ON cars_data.id = car_makers.id WHERE cars_data.cylinders = 3 GROUP BY car_makers.maker ```",
    "SELECT MAX(horsepower), car_makers.maker  FROM cars_data INNER JOIN car_makers ON cars_data.id=car_makers.id WHERE cars_data.cylinders = 3",
    "SELECT car_names.model FROM cars_data INNER JOIN car_names ON car_names.makeid = cars_data.id GROUP BY car_names.model ORDER BY MAX(cars_data.mpg) DESC LIMIT 1",
    "SELECT model FROM model_list AS ml, cars_data AS cd  WHERE ml.modelid = cd.id AND cd.mpg = (SELECT MAX(mpg) FROM cars_data)",
    "SELECT AVG(horsepower) FROM cars_data WHERE year < 1980",
    "SELECT AVG(horsepower) FROM cars_data WHERE year < 1980",
    "SELECT AVG(edispl) FROM cars_data INNER JOIN car_names ON cars_data.id = car_names.makeid AND car_names.model = 'volvo'",
    "select avg(c.edispl) from cars_data as c, car_names as cn where cn.make = 'volvo' and c.id = cn.makeid",
    "SELECT cylinders, MAX(accelerate) FROM cars_data GROUP BY cylinders",
    "SELECT MAX(accelerate) FROM cars_data GROUP BY cylinders",
    "SELECT model, COUNT(*) as make_count FROM car_names GROUP BY model ORDER BY make_count DESC LIMIT 1",
    "SELECT model, COUNT(DISTINCT(makeid)) as num_versions FROM model_list JOIN car_names ON model_list.maker = car_names.model AND model_list.modelid = car_names.model GROUP BY model ORDER BY num_versions DESC LIMIT 1",
    "select count(*) from cars_data where cylinders > 4",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 4.",
    "SELECT COUNT(*) FROM cars_data WHERE year=1980",
    "SELECT COUNT(*) FROM cars_data WHERE year = 1980",
    "SELECT COUNT(DISTINCT model) FROM model_list WHERE maker IN (SELECT id FROM car_makers WHERE fullname = 'American Motor Company')",
    "SELECT COUNT(model_list.modelid) FROM model_list  JOIN car_makers ON car_makers.id = model_list.maker WHERE car_makers.maker = 'American Motor Company'",
    "SELECT maker, fullname, id FROM car_makers WHERE id IN (SELECT maker FROM model_list GROUP BY maker HAVING COUNT(*) > 3)",
    "SELECT id, maker FROM car_makers WHERE id IN (SELECT maker FROM model_list GROUP BY maker HAVING COUNT(model) > 3)",
    "SELECT DISTINCT model_list.model FROM model_list  JOIN car_makers ON model_list.maker = car_makers.maker AND (car_makers.fullname = 'General Motors' OR cars_data.weight > 3500)",
    "SELECT DISTINCT(model) FROM model_list WHERE maker = 'General Motors' OR weight > 3500",
    "SELECT DISTINCT year FROM cars_data WHERE weight >= 3000 AND weight <= 4000",
    "SELECT DISTINCT year FROM cars_data WHERE weight < 4000 AND weight > 3000",
    "SELECT horsepower FROM cars_data ORDER BY accelerate DESC LIMIT 1",
    "SELECT horsepower FROM cars_data WHERE accelerate = (SELECT MAX(accelerate) FROM cars_data)",
    "SELECT cylinders FROM cars_data WHERE model_id = (SELECT modelid FROM model_list WHERE maker = 'volvo') ORDER BY accelerate ASC LIMIT 1",
    "SELECT cylinders FROM car_names     JOIN cars_data ON makeid = id    WHERE model = 'volvo'       ORDER BY ACCELERATE ASC      LIMIT 1",
    "SELECT COUNT(*) FROM cars_data WHERE accelerate > (SELECT MAX(accelerate) FROM cars_data WHERE horsepower = (SELECT MAX(horsepower) FROM cars_data))",
    "SELECT COUNT(*) FROM cars_data  WHERE accelerate > (SELECT MAX(accelerate) FROM cars_data WHERE horsepower = (SELECT MAX(horsepower) FROM cars_data))",
    "SELECT COUNT(DISTINCT countryid) FROM countries  WHERE  (SELECT COUNT(DISTINCT id) FROM car_makers WHERE car_makers.country = countries.countryid) > 2",
    "SELECT COUNT(DISTINCT countries.countryname) FROM countries JOIN car_makers ON car_makers.country = countries.countryid GROUP BY countries.countryid HAVING COUNT(DISTINCT car_makers.maker) > 2",
    "SELECT count(*) FROM cars_data WHERE cylinders > 6",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 6",
    "SELECT model FROM cars_data WHERE cylinders = 4 AND horsepower = (SELECT MAX(horsepower) FROM cars_data WHERE cylinders = 4)",
    "select car_names.model, cars_data.horsepower from car_names join cars_data on car_names.MakeId = cars_data.id and cars_data.cylinders = 4 order by cars_data.horsepower desc limit 1",
    "SELECT DISTINCT makeid, maker FROM car_names  JOIN cars_data ON car_names.model = cars_data.model  WHERE horsepower > (SELECT MIN(horsepower) FROM cars_data)   AND cylinders <= 3",
    "SELECT car_names.makeid, car_makers.maker  FROM car_names  JOIN cars_data ON car_names.makeid = cars_data.id  JOIN car_makers ON car_makers.id = car_names.makeid  WHERE cylinders < 4  AND cars_data.horsepower != (SELECT MIN(horsepower) FROM cars_data)",
    "SELECT max(mpg) FROM cars_data WHERE cylinders = 8 AND year < 1980",
    "SELECT MAX(mpg) FROM cars_data WHERE cylinders = 8 OR year < 1980.",
    "SELECT maker, model FROM model_list  WHERE maker <> 'Ford Motor Company' AND weight < 3500;",
    "SELECT model  FROM car_names  JOIN cars_data ON car_names.makeid = cars_data.id  JOIN model_list ON car_names.model = model_list.model  JOIN car_makers ON model_list.maker = car_makers.id  WHERE weight < 3500 AND country <> 'Ford Motor Company'",
    "SELECT countryname  FROM countries WHERE countryid NOT IN (     SELECT DISTINCT country      FROM car_makers     )",
    "SELECT countryname FROM countries WHERE countryid NOT IN (SELECT DISTINCT country FROM car_makers)",
    "SELECT cm.id, cm.maker  FROM car_makers cm  JOIN model_list ml ON ml.maker = cm.maker  GROUP BY cm.id, cm.maker  HAVING COUNT(DISTINCT ml.modelid) >= 2 AND COUNT(DISTINCT cm.maker) > 3",
    "SELECT makeid, maker FROM car_names JOIN model_list on car_names.maker = model_list.maker WHERE maker in (SELECT maker from model_list GROUP BY maker HAVING count(modelid) >= 2) AND makeid in (SELECT id FROM cars_data GROUP BY id HAVING count(*)>3)",
    "SELECT countryid, countryname FROM countries  WHERE countryid IN ( \tSELECT country FROM car_makers GROUP BY country HAVING COUNT(DISTINCT maker) > 3 ) OR countryid IN ( \tSELECT c.countryid FROM countries c \tJOIN car_makers cm ON c.countryid = cm.country \tJOIN car_names cn ON cm.id = cn.makeid \tWHERE cn.model = 'fiat' )",
    "SELECT countryid, countryname FROM countries WHERE countryid IN (SELECT country FROM car_makers GROUP BY country HAVING COUNT(DISTINCT maker) > 3) OR countryid IN (SELECT DISTINCT country FROM car_makers WHERE maker = 'fiat')",
    "SELECT country FROM airlines WHERE airline = 'JetBlue Airways'",
    "SELECT country  FROM airlines  WHERE airline = 'Jetblue Airways'",
    "SELECT abbreviation FROM airlines WHERE airline = 'JetBlue Airways'",
    "SELECT abbreviation FROM airlines WHERE airline='Jetblue Airways'",
    "SELECT airline, abbreviation FROM airlines WHERE country = 'USA'",
    "SELECT airline, abbreviation from airlines WHERE country = 'USA'",
    "SELECT airportcode, airportname FROM airports WHERE city = 'Anthony'",
    "SELECT airportcode, airportname  FROM airports  WHERE city LIKE '%Anthony%'",
    "select count(*) from airlines",
    "SELECT COUNT(*) FROM airlines",
    "SELECT COUNT(*) FROM airports",
    "SELECT COUNT(*) FROM airports",
    "SELECT COUNT(*) FROM flights",
    "SELECT COUNT(*) FROM flights",
    "SELECT airline from airlines WHERE abbreviation='UAL'",
    "SELECT airline FROM airlines WHERE abbreviation = 'UAL'",
    "SELECT COUNT(*) FROM airlines WHERE country = 'USA'",
    "SELECT COUNT(*) FROM airlines WHERE country = 'USA'",
    "SELECT city, country FROM airports  WHERE airportname = 'Alton';",
    "SELECT city, country FROM airports WHERE airportname = 'Alton airport'",
    "SELECT airportname FROM airports WHERE airportcode = 'AKO'"
]