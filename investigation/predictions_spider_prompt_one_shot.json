[
    "SELECT COUNT(*) FROM singer",
    "SELECT count(*) FROM singer",
    "SELECT name, country, age FROM singer ORDER BY age DESC",
    "SELECT name, country, age FROM singer ORDER BY age DESC",
    "SELECT AVG(age) AS average_age, MIN(age) AS minimum_age, MAX(age) AS maximum_age FROM singer WHERE country = 'France';",
    "SELECT AVG(singer.age) AS average_age, MIN(singer.age) AS minimum_age, MAX(singer.age) AS maximum_age  FROM singer  INNER JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id  INNER JOIN concert ON singer_in_concert.concert_id = concert.concert_id  WHERE singer.country = 'French' AND singer.is_male = 0",
    "SELECT T2.name, T2.song_release_year  FROM singer AS T2  JOIN (SELECT MIN(age) AS min_age FROM singer) AS T1  ON T1.min_age = T2.age",
    "SELECT name, song_release_year FROM singer WHERE age = (SELECT MIN(age) FROM singer)",
    "SELECT DISTINCT country FROM singer WHERE age > 20",
    "SELECT DISTINCT country FROM singer WHERE age > 20",
    "SELECT country, COUNT(*) FROM singer GROUP BY country",
    "SELECT country, COUNT(*) FROM singer GROUP BY country",
    "SELECT song_name FROM singer WHERE age > (SELECT AVG(age) FROM singer)",
    "SELECT DISTINCT T2.song_name  FROM singer AS T1  JOIN singer_in_concert AS T3 ON T1.singer_id = T3.singer_id  JOIN concert AS T4 ON T3.concert_id = T4.concert_id  JOIN (SELECT AVG(age) AS avg_age FROM singer) AS T5  JOIN singer AS T2 ON T1.singer_id = T2.singer_id  WHERE T1.age > T5.avg_age",
    "SELECT location, name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",
    "SELECT location, name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",
    "SELECT MAX(capacity), AVG(capacity) FROM stadium;",
    "SELECT AVG(capacity), MAX(capacity) FROM stadium",
    "SELECT name, capacity FROM stadium WHERE average = (SELECT MAX(average) FROM stadium)",
    "SELECT Name, Capacity FROM stadium WHERE average = (SELECT MAX(average) FROM stadium)",
    "SELECT COUNT(*) FROM concert WHERE year = 2014 OR year = 2015",
    "SELECT COUNT(*) FROM concert WHERE year = 2014 OR year = 2015",
    "SELECT stadium.name, COUNT(concert.concert_id) AS num_concerts FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id GROUP BY stadium.name",
    "SELECT Stadium.Name, COUNT(Concert.Concert_ID) AS Num_Concerts FROM Stadium LEFT JOIN Concert ON Stadium.Stadium_ID = Concert.Stadium_ID GROUP BY Stadium.Name",
    "SELECT s.name, s.capacity  FROM stadium s  JOIN concert c ON s.stadium_id = c.stadium_id  WHERE c.year >= 2014  GROUP BY s.stadium_id  ORDER BY count(*) DESC  LIMIT 1",
    "SELECT name, capacity  FROM stadium  WHERE stadium_id = (     SELECT stadium_id      FROM concert      WHERE year > 2013      GROUP BY stadium_id      ORDER BY COUNT(*) DESC      LIMIT 1 )",
    "SELECT year, COUNT(*) AS num_concerts FROM concert GROUP BY year ORDER BY num_concerts DESC LIMIT 1;",
    "SELECT year FROM concert GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1",
    "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)",
    "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)",
    "SELECT DISTINCT s1.country  FROM singer s1, singer s2  WHERE s1.age > 40 AND s2.age < 30 AND s1.singer_id IN (SELECT singer_id FROM singer_in_concert) AND s2.singer_id IN (SELECT singer_id FROM singer_in_concert) AND s1.country = s2.country",
    "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert WHERE year = 2014)",
    "SELECT name FROM Stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM Concert WHERE year = 2014);",
    "SELECT concert.concert_name, concert.theme, COUNT(singer_in_concert.singer_id) AS num_singers FROM concert JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id GROUP BY concert.concert_id",
    "SELECT concert.concert_name, concert.theme, COUNT(singer_in_concert.singer_id) AS number_of_singers FROM concert JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id GROUP BY concert.concert_name;",
    "SELECT Singer.name, COUNT(*) AS num_concerts  FROM Singer  JOIN singer_in_concert ON Singer.singer_id = singer_in_concert.singer_id  GROUP BY Singer.name",
    "SELECT singer.name, COUNT(concert_singer.concert_id) AS number_of_concerts FROM singer JOIN concert_singer ON singer.singer_id = concert_singer.singer_id GROUP BY singer.name",
    "SELECT DISTINCT singer.name  FROM singer  JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id  JOIN concert ON singer_in_concert.concert_id = concert.concert_id  WHERE concert.year = 2014",
    "SELECT DISTINCT singer.name FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON concert.concert_id = singer_in_concert.concert_id WHERE concert.year = 2014",
    "SELECT name, country FROM singer WHERE singer_id IN (SELECT singer_id FROM singer_in_concert WHERE concert_id IN (SELECT concert_id FROM concert WHERE concert_name LIKE '%Hey%'))",
    "SELECT DISTINCT singer.name, singer.country  FROM concert_singer  JOIN singer ON concert_singer.singer_id = singer.singer_id  WHERE singer.song_name LIKE '%Hey%'",
    "SELECT DISTINCT stadium.name, stadium.location  FROM stadium  INNER JOIN concert ON stadium.stadium_id = concert.stadium_id  WHERE concert.year = 2014 AND stadium.stadium_id IN  (SELECT stadium_id FROM concert WHERE year = 2015);",
    "SELECT name, location FROM stadium WHERE stadium_id IN (SELECT stadium_id FROM concert WHERE year = 2014 INTERSECT SELECT stadium_id FROM concert WHERE year = 2015) AND stadium_id IN (SELECT stadium_id FROM concert);",
    "SELECT count(*) FROM concert WHERE stadium_id = (SELECT stadium_id FROM stadium ORDER BY capacity DESC LIMIT 1)",
    "SELECT COUNT(*) FROM concert WHERE stadium_id = (SELECT stadium_id FROM stadium ORDER BY capacity DESC LIMIT 1)",
    "SELECT COUNT(*) FROM pets WHERE weight > 10;",
    "SELECT COUNT(*) FROM pets WHERE weight > 10;",
    "SELECT weight FROM pets WHERE pettype = 'dog' AND pet_age = (SELECT MIN(pet_age) FROM pets WHERE pettype = 'dog')",
    "SELECT MIN(weight) FROM pets",
    "SELECT pettype, MAX(weight) FROM pets GROUP BY pettype",
    "SELECT pettype, MAX(weight) FROM pets GROUP BY pettype",
    "SELECT COUNT(petid) FROM has_pet WHERE stuid IN (SELECT stuid FROM student WHERE age > 20)",
    "SELECT COUNT(petid) FROM has_pet WHERE stuid IN (SELECT stuid FROM student WHERE age > 20)",
    "SELECT COUNT(*) FROM Has_pet  JOIN Student ON Has_pet.stuid = Student.stuid  JOIN Pets ON Has_pet.petid = Pets.petid  WHERE Pets.pettype = 'dog' AND Student.sex = 'F'",
    "SELECT COUNT(*) FROM has_pet AS hp JOIN pets AS p ON hp.petid = p.petid JOIN student AS s ON hp.stuid = s.stuid WHERE s.sex = 'female' AND p.pettype = 'dog'",
    "SELECT COUNT(DISTINCT pettype) FROM pets",
    "SELECT COUNT(DISTINCT pettype) FROM pets",
    "SELECT DISTINCT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat' OR pets.pettype = 'dog'",
    "SELECT DISTINCT T1.fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid = T2.stuid JOIN pets AS T3 ON T2.petid = T3.petid WHERE T3.pettype = 'cat' OR T3.pettype = 'dog'",
    "SELECT DISTINCT fname FROM student  WHERE stuid IN (SELECT stuid FROM has_pet WHERE petid IN  (SELECT petid FROM pets WHERE pettype = 'cat'))  AND stuid IN (SELECT stuid FROM has_pet WHERE petid IN  (SELECT petid FROM pets WHERE pettype = 'dog'))",
    "SELECT DISTINCT student.fname FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' AND student.stuid IN  (SELECT has_pet.stuid FROM has_pet INNER JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'dog')",
    "SELECT major, age FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE pettype = 'cat')",
    "SELECT major, age FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet WHERE pettype = \"cat\");",
    "SELECT stuid FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = \"cat\")",
    "SELECT stuid FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE pettype = 'cat')",
    "SELECT fname, age FROM student WHERE stuid IN (SELECT stuid FROM has_pet WHERE petid IN (SELECT petid FROM pets WHERE pettype = 'dog')) AND stuid NOT IN (SELECT stuid FROM has_pet WHERE petid IN (SELECT petid FROM pets WHERE pettype = 'cat')) ORDER BY stuid LIMIT 1;",
    "SELECT DISTINCT S.fname FROM student AS S JOIN has_pet AS HP ON S.stuid = HP.stuid JOIN pets AS P ON HP.petid = P.petid WHERE P.pettype = 'dog' AND S.stuid NOT IN (SELECT S.stuid FROM student AS S JOIN has_pet AS HP ON S.stuid = HP.stuid JOIN pets AS P ON HP.petid = P.petid WHERE P.pettype = 'cat')",
    "SELECT pettype, weight FROM pets WHERE pet_age = (SELECT MIN(pet_age) FROM pets)",
    "SELECT pettype, weight FROM pets WHERE pet_age = (SELECT MIN(pet_age) FROM pets)",
    "SELECT petid, weight FROM pets WHERE pet_age > 1",
    "SELECT petid, weight FROM pets WHERE pet_age > 1",
    "SELECT pettype, AVG(pet_age) AS avg_age, MAX(pet_age) AS max_age  FROM pets  GROUP BY pettype",
    "SELECT pettype, AVG(pet_age) AS avg_age, MAX(pet_age) AS max_age FROM pets GROUP BY pettype",
    "SELECT pettype, AVG(weight) FROM pets GROUP BY pettype",
    "SELECT pettype, AVG(weight) FROM pets GROUP BY pettype",
    "SELECT fname, age FROM student WHERE stuid IN (SELECT stuid FROM has_pet)",
    "SELECT DISTINCT student.fname, student.age  FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid",
    "SELECT P.petid  FROM pets AS P  JOIN has_pet AS HP ON P.petid = HP.petid  JOIN student AS S ON HP.stuid = S.stuid  WHERE S.lname = 'Smith'",
    "SELECT P.petid FROM PETS AS P JOIN HAS_PET AS HP ON P.petid = HP.petid JOIN STUDENT AS S ON HP.stuid = S.stuid WHERE S.lname = 'Smith'",
    "SELECT has_pet.stuid, COUNT(pets.petid) AS num_pets FROM has_pet JOIN pets ON has_pet.petid = pets.petid GROUP BY has_pet.stuid",
    "SELECT has_pet.stuid, COUNT(*)  FROM has_pet  JOIN pets ON has_pet.petid = pets.petid  GROUP BY has_pet.stuid",
    "SELECT student.fname, student.sex FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY student.stuid HAVING COUNT(has_pet.petid) > 1;",
    "SELECT fname, sex FROM student WHERE stuid IN (SELECT stuid FROM has_pet GROUP BY stuid HAVING COUNT(*) > 1)",
    "SELECT student.lname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' AND pets.pet_age = 3  ORDER BY pets.pet_age DESC  LIMIT 1",
    "SELECT lname FROM student WHERE stuid IN (SELECT stuid FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE pettype = 'cat' AND pet_age = 3)",
    "SELECT AVG(age) FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet)",
    "SELECT AVG(age) FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet)",
    "SELECT COUNT(*) FROM continents;",
    "SELECT COUNT(*) FROM Continents;",
    "SELECT continents.contid, continents.continent, COUNT(countries.countryid)  FROM continents  JOIN countries ON continents.contid = countries.continent  GROUP BY continents.contid, continents.continent",
    "SELECT continents.contid, continents.continent, COUNT(countries.countryid)  FROM continents  JOIN countries ON continents.contid = countries.continent  GROUP BY continents.contid",
    "SELECT COUNT(*) FROM countries",
    "SELECT COUNT(*) FROM countries",
    "SELECT t1.id, t1.fullname, COUNT(DISTINCT t2.modelid) AS num_models FROM car_makers AS t1 JOIN model_list AS t2 ON t1.id = t2.maker GROUP BY t1.id, t1.fullname",
    "SELECT car_makers.id, car_makers.fullname, COUNT(DISTINCT model_list.model) AS num_models FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id, car_makers.fullname",
    "SELECT model FROM car_names  JOIN cars_data ON car_names.modelid = cars_data.id  WHERE horsepower = (SELECT MIN(horsepower) FROM cars_data);",
    "SELECT model FROM model_list AS T1 JOIN cars_data AS T2 ON T1.modelid = T2.id WHERE T2.horsepower = (SELECT MIN(horsepower) FROM cars_data)",
    "SELECT Model FROM car_names INNER JOIN cars_data ON car_names.makeid = cars_data.id WHERE weight < (SELECT AVG(weight) FROM cars_data)",
    "SELECT model FROM model_list WHERE weight < (SELECT AVG(weight) FROM cars_data)",
    "SELECT DISTINCT car_makers.maker  FROM car_makers  JOIN model_list ON car_makers.id = model_list.maker  JOIN car_names ON model_list.modelid = car_names.makeid  JOIN cars_data ON car_names.model = cars_data.id  WHERE cars_data.year = 1970",
    "SELECT DISTINCT maker FROM car_makers  INNER JOIN model_list ON car_makers.id = model_list.maker  INNER JOIN car_names ON model_list.modelid = car_names.model  INNER JOIN cars_data ON car_names.makeid = cars_data.id  WHERE year = 1970;",
    "SELECT make, year FROM cars_data WHERE year = (SELECT MIN(year) FROM cars_data)",
    "SELECT T3.maker, T1.year FROM cars_data AS T1 JOIN car_names AS T2 ON T1.id = T2.makeid JOIN car_makers AS T3 ON T2.maker = T3.id WHERE T1.year = (SELECT MIN(year) FROM cars_data)",
    "SELECT DISTINCT model FROM model_list JOIN cars_data ON model_list.modelid = cars_data.id WHERE year > 1980",
    "SELECT DISTINCT model FROM model_list JOIN cars_data ON model_list.modelid = cars_data.id WHERE year > 1980",
    "SELECT continents.continent, COUNT(DISTINCT car_makers.country) FROM continents JOIN countries ON continents.contid = countries.continent JOIN car_makers ON countries.countryid = car_makers.country GROUP BY continents.continent",
    "SELECT continents.continent AS name, COUNT(DISTINCT car_makers.id) AS count FROM continents JOIN countries ON continents.contid = countries.continent JOIN car_makers ON countries.countryid = car_makers.country GROUP BY continents.continent",
    "SELECT countries.countryname  FROM countries  JOIN car_makers ON countries.countryid = car_makers.country  GROUP BY countries.countryid  ORDER BY COUNT(car_makers.id) DESC  LIMIT 1;",
    "SELECT countryname FROM countries  JOIN car_makers ON countries.countryid = car_makers.country  GROUP BY countries.countryid  ORDER BY count(car_makers.maker) DESC LIMIT 1",
    "SELECT car_makers.fullname, COUNT(DISTINCT model_list.modelid) AS model_count FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.fullname",
    "SELECT car_makers.id, car_makers.fullname, COUNT(model_list.modelid) AS number_of_car_models FROM car_makers JOIN model_list ON car_makers.maker = model_list.maker GROUP BY car_makers.id, car_makers.fullname",
    "SELECT accelerate FROM cars_data  JOIN car_names ON cars_data.id = car_names.makeid  JOIN model_list ON car_names.model = model_list.model  JOIN car_makers ON model_list.maker = car_makers.maker  WHERE car_makers.fullname = 'amc hornet sportabout (sw)'",
    "SELECT accelerate FROM cars_data WHERE id = (SELECT makeid FROM car_names WHERE model = 'amc hornet sportabout (sw)')",
    "SELECT COUNT(DISTINCT car_makers.id) FROM car_makers JOIN countries ON car_makers.country = countries.countryid WHERE countries.countryname = 'france'",
    "SELECT COUNT(DISTINCT car_makers.id)  FROM car_makers  JOIN countries ON car_makers.country = countries.countryid  WHERE countries.countryname = 'France' AND car_makers.maker = 'Care'",
    "SELECT COUNT(DISTINCT T3.model) FROM car_makers AS T1 JOIN countries AS T2 ON T1.country  =  T2.countryname JOIN model_list AS T3 ON T1.maker  =  T3.maker WHERE T2.continent  =  'usa'",
    "SELECT COUNT(DISTINCT model_list.modelid)  FROM model_list  JOIN car_makers ON model_list.maker = car_makers.maker  JOIN countries ON car_makers.country = countries.countryname  WHERE countries.continent = 'United States'",
    "SELECT AVG(mpg) FROM cars_data WHERE cylinders = 4",
    "SELECT AVG(mpg) FROM cars_data WHERE cylinders = 4",
    "SELECT MIN(weight) FROM cars_data WHERE cylinders = 8 AND year = 1974",
    "SELECT MIN(weight) FROM cars_data WHERE cylinders = 8 AND year = 1974",
    "SELECT maker, model FROM car_makers JOIN model_list ON car_makers.id = model_list.maker",
    "SELECT maker, model FROM car_makers JOIN model_list ON car_makers.id = model_list.maker;",
    "SELECT DISTINCT countries.countryid, countries.countryname  FROM countries  INNER JOIN car_makers ON countries.countryid = car_makers.country  ORDER BY countries.countryid ASC",
    "SELECT DISTINCT Countries.countryid, Countries.countryname  FROM Countries  JOIN car_makers ON Countries.countryid = car_makers.country  GROUP BY Countries.countryid  HAVING COUNT(DISTINCT car_makers.id) >= 1",
    "SELECT COUNT(*) FROM cars_data WHERE horsepower > 150;",
    "SELECT COUNT(*) FROM cars_data WHERE horsepower > 150;",
    "SELECT year, AVG(weight) AS avg_weight FROM cars_data GROUP BY year",
    "SELECT year, AVG(weight), AVG(year) FROM cars_data GROUP BY year",
    "SELECT DISTINCT countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country WHERE countries.continent = 'europe' GROUP BY countries.countryname HAVING COUNT(DISTINCT car_makers.maker) >= 3;",
    "SELECT DISTINCT countries.countryname  FROM countries  JOIN car_makers ON countries.countryid = car_makers.country  WHERE countries.continent = 'Europe'  GROUP BY countries.countryname  HAVING COUNT(DISTINCT car_makers.maker) >= 3",
    "SELECT MAX(horsepower), make FROM cars_data WHERE cylinders = 3 GROUP BY make",
    "SELECT MAX(horsepower), maker FROM cars_data  JOIN model_list ON cars_data.model = model_list.modelid  JOIN car_makers ON model_list.maker = car_makers.id  WHERE cylinders = 3  GROUP BY maker  ORDER BY MAX(horsepower) DESC  LIMIT 1",
    "SELECT model FROM cars_data WHERE mpg = (SELECT MAX(mpg) FROM cars_data)",
    "SELECT model FROM model_list JOIN cars_data ON model_list.modelid = cars_data.id ORDER BY mpg DESC LIMIT 1",
    "SELECT AVG(horsepower) FROM cars_data WHERE year < 1980",
    "SELECT AVG(Horsepower) FROM cars_data WHERE Year < 1980",
    "SELECT AVG(edispl) FROM cars_data WHERE id IN (SELECT id FROM car_names WHERE model = 'volvo')",
    "SELECT AVG(edispl) FROM cars_data WHERE makeid IN (SELECT id FROM car_makers WHERE maker = 'volvo')",
    "SELECT cylinders, max(accelerate) FROM cars_data GROUP BY cylinders",
    "SELECT cylinders, MAX(accelerate) FROM cars_data GROUP BY cylinders",
    "SELECT model, COUNT(DISTINCT makeid) AS num_makes FROM car_names GROUP BY model ORDER BY num_makes DESC LIMIT 1;",
    "SELECT model, COUNT(DISTINCT modelid) AS num_versions FROM model_list GROUP BY model ORDER BY num_versions DESC LIMIT 1;",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 4;",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 4",
    "SELECT COUNT(*) FROM cars_data WHERE year = 1980",
    "SELECT COUNT(*) FROM cars_data WHERE year = 1980",
    "SELECT COUNT(DISTINCT model) FROM model_list AS T1 JOIN car_makers AS T2 ON T1.maker = T2.maker WHERE T2.fullname = 'American Motor Company'",
    "SELECT COUNT(DISTINCT modelid) FROM model_list WHERE maker = 'American Motor Company'",
    "SELECT id, fullname FROM car_makers WHERE id IN (SELECT maker FROM model_list GROUP BY maker HAVING COUNT(DISTINCT model) > 3)",
    "SELECT id, maker FROM car_makers WHERE id IN (SELECT maker FROM model_list GROUP BY maker HAVING COUNT(*) > 3)",
    "SELECT DISTINCT model FROM model_list WHERE maker IN (SELECT maker FROM car_makers WHERE fullname = 'General Motors') OR modelid IN (SELECT makeid FROM car_names WHERE weight > 3500)",
    "SELECT DISTINCT Model FROM model_list WHERE Maker = 'General Motors' OR weight > 3500",
    "SELECT DISTINCT year FROM cars_data WHERE weight >= 3000 AND weight <= 4000 ORDER BY year ASC",
    "SELECT DISTINCT T1.year  FROM cars_data AS T1  WHERE T1.weight < 4000 AND EXISTS (     SELECT 1      FROM cars_data AS T2      WHERE T2.weight > 3000 AND T1.year = T2.year )",
    "SELECT Horsepower FROM cars_data ORDER BY accelerate DESC LIMIT 1",
    "SELECT horsepower FROM cars_data ORDER BY accelerate DESC LIMIT 1",
    "SELECT MIN(cylinders) FROM cars_data WHERE model IN (SELECT modelid FROM model_list WHERE maker = 'volvo') ORDER BY accelerate LIMIT 1",
    "SELECT MIN(cylinders) FROM cars_data WHERE model IN (SELECT model FROM car_names WHERE make = 'volvo') ORDER BY accelerate LIMIT 1",
    "SELECT COUNT(*) FROM cars_data WHERE accelerate > (SELECT MAX(accelerate) FROM cars_data WHERE horsepower = (SELECT MAX(horsepower) FROM cars_data))",
    "SELECT COUNT(*) FROM cars_data WHERE accelerate > (SELECT MAX(accelerate) FROM cars_data WHERE horsepower = (SELECT MAX(horsepower) FROM cars_data))",
    "SELECT COUNT(DISTINCT countries.countryid) FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryid HAVING COUNT(DISTINCT car_makers.id) > 2",
    "SELECT COUNT(DISTINCT countries.countryid)  FROM countries  INNER JOIN car_makers ON countries.countryid = car_makers.country  GROUP BY countries.countryid  HAVING COUNT(DISTINCT car_makers.id) > 2",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 6",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 6",
    "SELECT model FROM model_list  JOIN cars_data ON model_list.modelid = cars_data.id  WHERE cars_data.cylinders = 4  ORDER BY cars_data.horsepower DESC  LIMIT 1",
    "SELECT model FROM cars_data WHERE cylinders = 4 ORDER BY horsepower DESC LIMIT 1;",
    "SELECT car_names.makeid, car_makers.maker  FROM car_names  JOIN car_makers ON car_names.makeid = car_makers.id  JOIN cars_data ON car_names.makeid = cars_data.id  WHERE cars_data.horsepower > (SELECT MIN(horsepower) FROM cars_data)  AND cars_data.cylinders <= 3",
    "SELECT makeid, maker FROM car_names  INNER JOIN cars_data ON car_names.model = cars_data.id  WHERE cylinders < 4 AND horsepower > (SELECT MIN(horsepower) FROM cars_data)",
    "SELECT MAX(mpg) FROM cars_data WHERE cylinders = 8 AND year < 1980",
    "SELECT MAX(mpg) FROM cars_data WHERE cylinders = 8 OR year < 1980",
    "SELECT model FROM model_list WHERE maker NOT LIKE 'Ford%' AND weight < 3500",
    "SELECT model FROM model_list JOIN car_names ON model_list.modelid = car_names.modelid JOIN cars_data ON car_names.makeid = cars_data.id JOIN car_makers ON model_list.maker = car_makers.maker WHERE weight < 3500 AND car_makers.fullname != 'Ford Motor Company'",
    "SELECT DISTINCT C.countryname  FROM COUNTRIES AS C  WHERE NOT EXISTS (     SELECT 1      FROM CAR_MAKERS AS CM      WHERE CM.country = C.countryid )",
    "SELECT countryname FROM countries WHERE countryid NOT IN (SELECT DISTINCT country FROM car_makers);",
    "SELECT id, maker FROM car_makers WHERE id IN (SELECT maker FROM model_list GROUP BY maker HAVING COUNT(DISTINCT modelid) >= 2) GROUP BY maker HAVING COUNT(DISTINCT id) > 3",
    "SELECT id, maker FROM car_makers WHERE id IN (SELECT maker FROM model_list GROUP BY maker HAVING COUNT(DISTINCT model) >= 2) AND id IN (SELECT makeid FROM car_names GROUP BY makeid HAVING COUNT(*) > 3)",
    "SELECT DISTINCT T1.countryid, T1.countryname  FROM countries AS T1  JOIN car_makers AS T2 ON T1.countryname = T2.country  JOIN car_names AS T3 ON T2.id = T3.makeid  WHERE T2.maker = 'fiat' OR T1.countryname IN  (SELECT T4.country  FROM car_makers AS T4  GROUP BY T4.country  HAVING COUNT(DISTINCT T4.id) > 3)",
    "SELECT DISTINCT T1.countryid, T1.countryname  FROM COUNTRIES AS T1  JOIN CAR_MAKERS AS T2 ON T1.countryid = T2.country  JOIN MODEL_LIST AS T3 ON T2.id = T3.maker  JOIN CAR_NAMES AS T4 ON T3.modelid = T4.model  WHERE T2.maker = 'fiat' OR T1.countryid IN  (SELECT T5.country FROM CAR_MAKERS AS T5  GROUP BY T5.country  HAVING COUNT(DISTINCT T5.id) > 3)",
    "SELECT country FROM airlines WHERE airline = 'JetBlue Airways'",
    "SELECT country FROM airlines WHERE airline = 'Jetblue Airways'",
    "SELECT abbreviation FROM airlines WHERE airline = 'JetBlue Airways'",
    "SELECT Abbreviation FROM Airlines WHERE Airline = 'Jetblue Airways'",
    "SELECT airline, abbreviation FROM airlines WHERE country = 'USA'",
    "SELECT airline, abbreviation FROM airlines WHERE country = 'USA'",
    "SELECT airportcode, airportname FROM airports WHERE city = 'Anthony'",
    "SELECT airportcode, airportname FROM airports WHERE city = 'Anthony'",
    "SELECT COUNT(*) FROM airlines;",
    "SELECT COUNT(*) FROM airlines",
    "SELECT COUNT(*) FROM airports",
    "SELECT COUNT(*) FROM airports",
    "SELECT COUNT(*) FROM flights",
    "SELECT COUNT(*) FROM flights;",
    "SELECT airline FROM airlines WHERE abbreviation = 'UAL'",
    "SELECT airline FROM airlines WHERE abbreviation = 'UAL'",
    "SELECT COUNT(*) FROM airlines WHERE country = 'USA'",
    "SELECT COUNT(*) FROM airlines WHERE country = 'USA'",
    "SELECT city, country FROM airports WHERE airportname = \"Alton airport\"",
    "SELECT city, country FROM airports WHERE airportname = 'Alton'",
    "SELECT AirportName FROM Airports WHERE AirportCode = 'AKO'"
]