[
    "SELECT COUNT(*) FROM singer;",
    "SELECT COUNT(*) FROM singer;",
    "SELECT Name, Country, Age FROM singer ORDER BY Age DESC;",
    "SELECT Name, Country, Age FROM singer ORDER BY Age DESC",
    "SELECT AVG(Age) AS avg_age, MIN(Age) AS min_age, MAX(Age) AS max_age FROM singer WHERE Country = 'France';",
    "SELECT AVG(Age) AS avg_age, MIN(Age) AS min_age, MAX(Age) AS max_age FROM singer WHERE Country = 'France'",
    "SELECT singer.Name, singer.Song_Name, singer.Song_release_year FROM singer WHERE singer.Age = (SELECT MIN(Age) FROM singer) LIMIT 1;",
    "SELECT Name, Song_release_year FROM singer WHERE Age = (SELECT MIN(Age) FROM singer) ",
    "SELECT DISTINCT Country FROM singer WHERE Age > 20;",
    "SELECT DISTINCT Country FROM singer WHERE Age > 20;",
    "SELECT singer.Country, COUNT(*) as num_singers FROM singer GROUP BY singer.Country;",
    "SELECT Country, COUNT(*) AS Singer_Count FROM singer GROUP BY Country;",
    "SELECT singer.Song_Name FROM singer WHERE singer.Age > (SELECT AVG(Age) FROM singer) ORDER BY singer.Song_Name;",
    "SELECT singer.Song_Name FROM singer WHERE singer.Age > (SELECT AVG(Age) FROM singer)",
    "SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;",
    "SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;",
    "SELECT MAX(Capacity), AVG(Capacity) FROM stadium;",
    "SELECT AVG(Capacity), MAX(Capacity) FROM stadium;",
    "SELECT Name, Capacity  FROM stadium  WHERE Average = (SELECT MAX(Average) FROM stadium)",
    "SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium)",
    "SELECT COUNT(*) FROM concert WHERE Year IN (2014, 2015);",
    "SELECT COUNT(*) FROM concert WHERE Year IN (2014, 2015);",
    "SELECT stadium.Name, COUNT(concert.concert_ID) AS num_concerts FROM stadium LEFT JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID GROUP BY stadium.Name;",
    "SELECT stadium.Name, COUNT(concert.concert_ID) AS num_concerts FROM stadium LEFT JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID GROUP BY stadium.Name;",
    "SELECT stadium.Name, stadium.Capacity FROM stadium INNER JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert.Year >= 2014 GROUP BY stadium.Name, stadium.Capacity ORDER BY COUNT(concert.concert_ID) DESC LIMIT 1;",
    "SELECT stadium.Name, stadium.Capacity FROM stadium INNER JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert.Year > 2013 GROUP BY stadium.Name, stadium.Capacity ORDER BY COUNT(concert.concert_ID) DESC LIMIT 1;",
    "SELECT Year, COUNT(*) AS num_concerts FROM concert GROUP BY Year ORDER BY num_concerts DESC LIMIT 1;",
    "SELECT Year, COUNT(*) AS num_concerts FROM concert GROUP BY Year ORDER BY num_concerts DESC LIMIT 1;  This query will group the concerts by year and count the number of concerts in each year. It will then order the results in descending order by the number of concerts and return only the first row, which will be the year with the most concerts.",
    "SELECT stadium.Name FROM stadium LEFT JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert.concert_ID IS NULL;",
    "SELECT stadium.Name FROM stadium LEFT JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert.concert_ID IS NULL;",
    "SELECT s1.Country, s2.Country FROM singer s1, singer s2 WHERE s1.Age > 40 AND s2.Age < 30 AND s1.Country = s2.Country;",
    "SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = 2014);",
    "SELECT stadium.Name FROM stadium LEFT JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID AND concert.Year = 2014 WHERE concert.concert_ID IS NULL;",
    "SELECT concert.concert_Name, concert.Theme, COUNT(singer_in_concert.Singer_ID) AS num_singers FROM concert INNER JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID GROUP BY concert.concert_Name, concert.Theme;",
    "SELECT concert.concert_Name, concert.Theme, COUNT(singer_in_concert.Singer_ID) AS number_of_singers FROM concert INNER JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID GROUP BY concert.concert_Name, concert.Theme;",
    "SELECT singer.Name, COUNT(singer_in_concert.concert_ID) AS num_concerts FROM singer LEFT JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID GROUP BY singer.Name;",
    "SELECT singer.Name, COUNT(singer_in_concert.concert_ID) AS num_concerts FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID GROUP BY singer.Name;",
    "SELECT singer.Name FROM singer INNER JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID INNER JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID WHERE concert.Year = 2014;",
    "SELECT singer.Name FROM singer INNER JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID INNER JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID WHERE concert.Year = 2014;",
    "SELECT singer.Name, singer.Country FROM singer WHERE singer.Song_Name LIKE '%Hey%';",
    "SELECT singer.Name, singer.Country FROM singer WHERE singer.Song_Name LIKE '%Hey%';",
    "SELECT stadium.Name, stadium.Location FROM stadium INNER JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert.Year = 2014 AND stadium.Stadium_ID IN (   SELECT concert.Stadium_ID   FROM concert   WHERE concert.Year = 2015 )",
    "SELECT stadium.Name, stadium.Location FROM stadium INNER JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert.Year = 2014 AND stadium.Stadium_ID IN (   SELECT concert.Stadium_ID   FROM concert   WHERE concert.Year = 2015 )",
    "SELECT COUNT(*)  FROM concert  WHERE Stadium_ID IN (     SELECT Stadium_ID      FROM stadium      WHERE Capacity = (         SELECT MAX(Capacity)          FROM stadium     ) )",
    "SELECT COUNT(*)  FROM concert  WHERE Stadium_ID = (SELECT Stadium_ID                      FROM stadium                      ORDER BY Capacity DESC                      LIMIT 1)",
    "SELECT COUNT(*) FROM Pets WHERE weight > 10;",
    "SELECT COUNT(*) FROM Pets WHERE weight > 10;",
    "SELECT MIN(weight) FROM Pets WHERE PetType = 'dog' AND pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog')",
    "SELECT MIN(weight) FROM Pets WHERE PetType = 'dog' AND pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog')",
    "SELECT PetType, MAX(weight) AS max_weight FROM Pets GROUP BY PetType;",
    "SELECT Pets.PetType, MAX(Pets.weight) AS max_weight, Pets.PetType AS pet_type FROM Pets GROUP BY Pets.PetType;",
    "SELECT COUNT(Has_Pet.PetID)  FROM Has_Pet  JOIN Student ON Has_Pet.StuID = Student.StuID  JOIN Pets ON Has_Pet.PetID = Pets.PetID  WHERE Student.Age > 20;",
    "SELECT COUNT(Pets.PetID) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.Age > 20;",
    "SELECT COUNT(*)  FROM Has_Pet  JOIN Student ON Has_Pet.StuID = Student.StuID  JOIN Pets ON Has_Pet.PetID = Pets.PetID  WHERE Student.Sex = 'F' AND Pets.PetType = 'dog'",
    "SELECT COUNT(*)  FROM Student  JOIN Has_Pet ON Student.StuID = Has_Pet.StuID  JOIN Pets ON Has_Pet.PetID = Pets.PetID  WHERE Student.Sex = 'Female' AND Pets.PetType = 'Dog'",
    "SELECT COUNT(DISTINCT PetType) FROM Pets;",
    "SELECT COUNT(DISTINCT PetType) FROM Pets;",
    "SELECT Student.Fname FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType IN ('cat', 'dog')",
    "SELECT Student.Fname FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType IN ('cat', 'dog')",
    "SELECT Student.Fname FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' AND Student.StuID IN (   SELECT Student.StuID   FROM Student   INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID   INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID   WHERE Pets.PetType = 'dog' )",
    "SELECT Fname FROM Student  WHERE StuID IN (     SELECT StuID FROM Has_Pet      WHERE PetID IN (         SELECT PetID FROM Pets          WHERE PetType = 'cat'     )      AND PetID IN (         SELECT PetID FROM Pets          WHERE PetType = 'dog'     ) )",
    "SELECT Student.Major, Student.Age FROM Student LEFT JOIN Has_Pet ON Student.StuID = Has_Pet.StuID LEFT JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType <> 'cat' OR Pets.PetType IS NULL;",
    "SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN (   SELECT Has_Pet.StuID   FROM Has_Pet   JOIN Pets ON Has_Pet.PetID = Pets.PetID   WHERE Pets.PetType = 'cat' )",
    "SELECT Student.StuID FROM Student LEFT JOIN Has_Pet ON Student.StuID = Has_Pet.StuID LEFT JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType != 'cat' OR Pets.PetType IS NULL;",
    "SELECT Student.StuID FROM Student LEFT JOIN Has_Pet ON Student.StuID = Has_Pet.StuID LEFT JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType != 'cat' OR Pets.PetType IS NULL;",
    "SELECT Student.Fname, Student.Age FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'dog' AND Student.StuID NOT IN (   SELECT Student.StuID   FROM Student   INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID   INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID   WHERE Pets.PetType = 'cat' )",
    "SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'dog' AND Student.StuID NOT IN (   SELECT Student.StuID   FROM Student   JOIN Has_Pet ON Student.StuID = Has_Pet.StuID   JOIN Pets ON Has_Pet.PetID = Pets.PetID   WHERE Pets.PetType = 'cat' )",
    "SELECT Pets.PetType, Pets.weight FROM Pets WHERE Pets.pet_age = (SELECT MIN(pet_age) FROM Pets)",
    "SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets)",
    "SELECT Pets.PetID, Pets.weight FROM Pets WHERE Pets.pet_age > 1;",
    "SELECT Pets.PetID, Pets.weight FROM Pets WHERE Pets.pet_age > 1;",
    "SELECT Pets.PetType, AVG(Pets.pet_age) AS avg_age, MAX(Pets.pet_age) AS max_age FROM Pets GROUP BY Pets.PetType;",
    "SELECT Pets.PetType, AVG(Pets.pet_age) AS avg_age, MAX(Pets.pet_age) AS max_age FROM Pets GROUP BY Pets.PetType;",
    "SELECT PetType, AVG(weight) AS avg_weight FROM Pets GROUP BY PetType;",
    "SELECT Pets.PetType, AVG(Pets.weight) AS avg_weight FROM Pets GROUP BY Pets.PetType;",
    "SELECT Student.Fname, Student.Age FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID;",
    "SELECT Student.Fname, Student.Age FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID;",
    "SELECT Pets.PetID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.LName = 'Smith';",
    "SELECT Pets.PetID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.LName = 'Smith'",
    "SELECT Has_Pet.StuID, COUNT(Has_Pet.PetID) AS num_pets FROM Has_Pet GROUP BY Has_Pet.StuID;",
    "SELECT Has_Pet.StuID, COUNT(Pets.PetID) AS num_pets FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID GROUP BY Has_Pet.StuID;",
    "SELECT Student.Fname, Student.Sex FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID GROUP BY Student.StuID HAVING COUNT(Has_Pet.PetID) > 1;",
    "SELECT Student.Fname, Student.Sex FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID GROUP BY Student.StuID HAVING COUNT(Has_Pet.PetID) > 1;",
    "SELECT Student.LName FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' AND Pets.pet_age = 3;",
    "SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' AND Pets.pet_age = 3;",
    "SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet)",
    "SELECT AVG(Age)  FROM Student  WHERE StuID NOT IN (SELECT StuID FROM Has_Pet)",
    "SELECT COUNT(*) FROM continents;   This query will return the total number of continents present in the \"continents\" table.",
    "SELECT COUNT(*) FROM continents;   This query will return the number of continents in the \"continents\" table.",
    "SELECT continents.ContId, continents.Continent, COUNT(countries.CountryId) AS num_countries FROM continents LEFT JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId, continents.Continent ORDER BY continents.Continent ASC;  ###What is the average MPG for cars manufactured in each country? List the country name and the average MPG. SELECT car_makers.Country, AVG(cars_data.MPG) AS avg_mpg FROM car_makers INNER JOIN cars_data ON car_makers.Id = cars_data.Id GROUP BY car_makers.Country ORDER BY avg_mpg DESC;  ###What is the most common number of cylinders for cars manufactured by each car maker? List the car maker name and the most common number of cylinders. SELECT car_makers.Maker, cars_data.Cylinders, COUNT(*) AS num_cars FROM car_makers INNER JOIN cars_data ON car_makers.Id = cars_data.Id GROUP BY car_makers.Maker",
    "SELECT ContId, Continent, COUNT(countries.CountryId) AS num_countries FROM continents LEFT JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId, continents.Continent;  ###List all car makers and their respective countries, sorted by country name and then maker name. SELECT car_makers.Maker, car_makers.Country FROM car_makers ORDER BY car_makers.Country, car_makers.Maker;  ###List all car models and their respective makers, sorted by maker name and then model name. SELECT model_list.Model, model_list.Maker FROM model_list ORDER BY model_list.Maker, model_list.Model;  ###List all car names and their respective models, sorted by model name and then car name. SELECT car_names.Make, car_names.Model FROM car_names ORDER BY car_names.Model, car_names.Make;  ###List all cars and their respective data, sorted by year and then car name. SELECT cars_data.*, car_names.Make,",
    "SELECT COUNT(*) FROM countries;",
    "SELECT COUNT(*) FROM countries;",
    "SELECT car_makers.FullName, car_makers.Id, COUNT(model_list.ModelId) AS num_models FROM car_makers LEFT JOIN model_list ON car_makers.Maker = model_list.Maker GROUP BY car_makers.FullName, car_makers.Id;  ###What is the average weight of cars by continent? List continent and average weight. SELECT    countries.Continent,    AVG(cars_data.Weight) AS avg_weight FROM    countries    JOIN car_makers ON countries.CountryName = car_makers.Country    JOIN car_names ON car_makers.Id = car_names.MakeId    JOIN cars_data ON car_names.Model = cars_data.Id  GROUP BY    countries.Continent;   ###What is the average MPG for cars produced in the year 2000 or later?  SELECT AVG(MPG) AS avg_mpg FROM cars_data WHERE Year >= 2000;   ###What is the total number of cars produced by each continent?",
    "SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.ModelId) AS num_models FROM car_makers LEFT JOIN model_list ON car_makers.Maker = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName;",
    "SELECT model_list.Model FROM model_list INNER JOIN cars_data ON model_list.ModelId = cars_data.Id WHERE cars_data.Horsepower = (SELECT MIN(Horsepower) FROM cars_data)",
    "SELECT model_list.Model FROM model_list INNER JOIN cars_data ON model_list.ModelId = cars_data.Id WHERE cars_data.Horsepower = (SELECT MIN(Horsepower) FROM cars_data)",
    "SELECT model_list.Model FROM cars_data INNER JOIN car_names ON cars_data.Id = car_names.MakeId INNER JOIN model_list ON car_names.Model = model_list.Model WHERE cars_data.Weight < (SELECT AVG(Weight) FROM cars_data);",
    "SELECT model_list.Model FROM model_list INNER JOIN car_names ON model_list.ModelId = car_names.ModelId INNER JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < (SELECT AVG(Weight) FROM cars_data)",
    "SELECT car_makers.Maker FROM car_makers INNER JOIN model_list ON car_makers.Id = model_list.Maker INNER JOIN car_names ON model_list.ModelId = car_names.Model INNER JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 1970;",
    "SELECT car_makers.Maker FROM car_makers INNER JOIN model_list ON car_makers.Id = model_list.Maker INNER JOIN car_names ON model_list.ModelId = car_names.Model INNER JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 1970;",
    "SELECT car_names.MakeId, model_list.Model, MIN(cars_data.Year) AS EarliestYear FROM car_names JOIN model_list ON car_names.Model = model_list.ModelId JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY car_names.MakeId, model_list.Model HAVING MIN(cars_data.Year) = (SELECT MIN(Year) FROM cars_data)",
    "SELECT car_makers.Maker, MIN(cars_data.Year) AS EarliestYear FROM car_makers JOIN car_names ON car_makers.Id = car_names.MakeId JOIN cars_data ON car_names.Model = cars_data.Id GROUP BY car_makers.Maker ORDER BY EarliestYear LIMIT 1;  ###What is the average weight of cars produced by each continent? SELECT continents.Continent, AVG(cars_data.Weight) AS AverageWeight FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryName = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.ModelId = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY continents.Continent;   ###What is the total number of cylinders for each car maker? SELECT car_makers.Maker, SUM(cars_data.Cylinders) AS TotalC",
    "SELECT DISTINCT model_list.Model FROM model_list INNER JOIN cars_data ON model_list.ModelId = cars_data.Id WHERE cars_data.Year > 1980;",
    "SELECT model_list.Model FROM model_list INNER JOIN car_names ON model_list.ModelId = car_names.ModelId INNER JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year > 1980;",
    "SELECT continents.Continent, COUNT(car_makers.Id) AS MakerCount FROM continents LEFT JOIN countries ON continents.ContId = countries.Continent LEFT JOIN car_makers ON countries.CountryName = car_makers.Country GROUP BY continents.Continent;",
    "SELECT continents.Continent, COUNT(car_makers.Id) AS CarMakersCount FROM continents LEFT JOIN countries ON continents.ContId = countries.Continent LEFT JOIN car_makers ON countries.CountryName = car_makers.Country GROUP BY continents.Continent;",
    "SELECT countries.CountryName FROM countries INNER JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryName ORDER BY COUNT(car_makers.Id) DESC LIMIT 1;",
    "SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryName ORDER BY COUNT(car_makers.Id) DESC LIMIT 1;",
    "SELECT car_makers.FullName, COUNT(model_list.ModelId) AS ModelCount FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName;",
    "SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.ModelId) AS num_models FROM car_makers JOIN model_list ON car_makers.Maker = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName;  ###What is the average MPG (miles per gallon) for cars produced in each year? SELECT cars_data.Year, AVG(cars_data.MPG) AS avg_mpg FROM cars_data GROUP BY cars_data.Year;  ###What is the total weight of cars produced by each maker in each year? SELECT car_makers.Maker, cars_data.Year, SUM(cars_data.Weight) AS total_weight FROM car_makers JOIN car_names ON car_makers.Id = car_names.MakeId JOIN cars_data ON car_names.Model = cars_data.Id GROUP BY car_makers.Maker, cars_data.Year;  ###What is the average horsepower of cars produced by each maker in each year, for makers that produce cars with",
    "SELECT Accelerate FROM cars_data  INNER JOIN car_names ON cars_data.Id = car_names.MakeId  WHERE car_names.Model = 'Hornet Sportabout (sw)' AND car_names.Maker = 'AMC'",
    "SELECT Accelerate FROM cars_data  INNER JOIN car_names ON cars_data.Id = car_names.MakeId  INNER JOIN model_list ON car_names.Model = model_list.Model  INNER JOIN car_makers ON model_list.Maker = car_makers.Maker  WHERE car_makers.FullName = 'AMC' AND model_list.Model = 'Hornet Sportabout (sw)'",
    "SELECT COUNT(*) FROM car_makers WHERE Country = 'France';",
    "SELECT COUNT(DISTINCT Maker)  FROM car_makers  WHERE Country = 'France';",
    "SELECT COUNT(DISTINCT model_list.ModelId) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Maker WHERE car_makers.Country = 'USA';",
    "SELECT COUNT(model_list.ModelId) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Maker WHERE car_makers.Country = 'United States';",
    "SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4;",
    "SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4;",
    "SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974",
    "SELECT MIN(Weight) FROM cars_data WHERE Cylinders = 8 AND Year = 1974;",
    "SELECT car_makers.Maker, model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker;",
    "SELECT car_makers.Maker, model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker;",
    "SELECT countries.CountryId, countries.CountryName FROM countries INNER JOIN car_makers ON countries.CountryName = car_makers.Country GROUP BY countries.CountryId, countries.CountryName HAVING COUNT(DISTINCT car_makers.Maker) >= 1;",
    "SELECT countries.CountryId, countries.CountryName FROM countries INNER JOIN car_makers ON countries.CountryName = car_makers.Country;",
    "SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150;",
    "SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150;",
    "SELECT Year, AVG(Weight) AS avg_weight FROM cars_data GROUP BY Year;",
    "SELECT Year, AVG(Weight), AVG(Year) FROM cars_data GROUP BY Year;",
    "SELECT countries.CountryName FROM countries INNER JOIN car_makers ON countries.CountryId = car_makers.Country WHERE countries.Continent = 'Europe' GROUP BY countries.CountryName HAVING COUNT(DISTINCT car_makers.Maker) >= 3;",
    "SELECT countries.CountryName FROM countries INNER JOIN car_makers ON countries.CountryId = car_makers.Country WHERE countries.Continent = 'Europe' GROUP BY countries.CountryName HAVING COUNT(DISTINCT car_makers.Maker) >= 3;",
    "SELECT MAX(cars_data.Horsepower), car_makers.Maker FROM cars_data JOIN model_list ON cars_data.Id = model_list.ModelId JOIN car_makers ON model_list.Maker = car_makers.Maker WHERE cars_data.Cylinders = 3;",
    "SELECT MAX(Horsepower), Maker FROM cars_data JOIN model_list ON cars_data.Id = model_list.ModelId WHERE Cylinders = 3 GROUP BY Maker ORDER BY MAX(Horsepower) DESC LIMIT 1;",
    "SELECT Model, MPG FROM cars_data WHERE MPG = (SELECT MAX(MPG) FROM cars_data)",
    "SELECT model_list.Model FROM model_list JOIN cars_data ON model_list.ModelId = cars_data.Id WHERE cars_data.MPG = (SELECT MAX(MPG) FROM cars_data)",
    "SELECT AVG(Horsepower) FROM cars_data WHERE Year < 1980;",
    "SELECT AVG(Horsepower) FROM cars_data WHERE Year < 1980;",
    "SELECT AVG(cars_data.Edispl)  FROM cars_data  INNER JOIN car_names ON cars_data.Id = car_names.MakeId  WHERE car_names.Model = 'volvo'",
    "SELECT AVG(Edispl)  FROM cars_data  WHERE Id IN (   SELECT Id    FROM car_names    WHERE MakeId IN (     SELECT Id      FROM car_makers      WHERE Maker = 'Volvo'   ) )",
    "SELECT Cylinders, MAX(Accelerate)  FROM cars_data  GROUP BY Cylinders",
    "SELECT Cylinders, MAX(Accelerate)  FROM cars_data  GROUP BY Cylinders",
    "SELECT model_list.Model, COUNT(car_names.MakeId) AS NumVersions FROM model_list JOIN car_names ON model_list.ModelId = car_names.Model GROUP BY model_list.Model ORDER BY NumVersions DESC LIMIT 1;",
    "SELECT model_list.Model, COUNT(DISTINCT car_names.MakeId) AS num_versions FROM model_list JOIN car_names ON model_list.ModelId = car_names.Model GROUP BY model_list.Model ORDER BY num_versions DESC LIMIT 1;  ###What is the average MPG for cars made by each country? SELECT car_makers.Country, AVG(cars_data.MPG) AS avg_mpg FROM car_makers JOIN car_names ON car_makers.Id = car_names.MakeId JOIN cars_data ON car_names.Model = cars_data.Model GROUP BY car_makers.Country;  ###Which country produces the heaviest cars on average? SELECT car_makers.Country, AVG(cars_data.Weight) AS avg_weight FROM car_makers JOIN car_names ON car_makers.Id = car_names.MakeId JOIN cars_data ON car_names.Model = cars_data.Model GROUP BY car_makers.Country ORDER BY avg_weight DESC LIMIT 1;  ###Which continent has the highest",
    "SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;",
    "SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;",
    "SELECT SUM(Id) FROM cars_data WHERE Year = 1980;   (Note: This query assumes that the \"Id\" column in the \"cars_data\" table represents the number of cars produced.)",
    "SELECT SUM(Id) FROM cars_data WHERE Year = 1980;",
    "SELECT COUNT(model_list.ModelId)  FROM model_list  INNER JOIN car_makers ON model_list.Maker = car_makers.Maker  WHERE car_makers.FullName = 'American Motor Company';   ###What is the average weight of cars produced in 1975? SELECT AVG(Weight)  FROM cars_data  WHERE Year = 1975;   ###Which continent has the most countries in the countries table? SELECT Continent, COUNT(CountryId)  FROM countries  GROUP BY Continent  ORDER BY COUNT(CountryId) DESC  LIMIT 1;   ###What is the MPG of the car with the highest horsepower in the cars_data table? SELECT MPG  FROM cars_data  WHERE Horsepower = (SELECT MAX(Horsepower) FROM cars_data);   ###What is the full name of the car maker that produces the model named \"Accord\"? SELECT car_makers.FullName  FROM car_makers  INNER JOIN car_names ON car_makers.Id = car_names.MakeId",
    "SELECT COUNT(*) FROM model_list WHERE Maker = 'American Motor Company'",
    "SELECT car_makers.Id, car_makers.FullName FROM car_makers INNER JOIN model_list ON car_makers.Maker = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName HAVING COUNT(model_list.ModelId) > 3;",
    "SELECT car_makers.Id, car_makers.Maker FROM car_makers WHERE car_makers.Id IN (   SELECT car_makers.Id   FROM car_makers   INNER JOIN model_list ON car_makers.Maker = model_list.Maker   GROUP BY car_makers.Id   HAVING COUNT(model_list.ModelId) > 3 )",
    "SELECT model_list.Model FROM model_list INNER JOIN car_makers ON model_list.Maker = car_makers.Maker INNER JOIN cars_data ON car_makers.Id = cars_data.Id WHERE (car_makers.FullName = 'General Motors' OR cars_data.Weight > 3500) GROUP BY model_list.Model;",
    "SELECT model_list.Model FROM model_list INNER JOIN car_makers ON model_list.Maker = car_makers.Maker INNER JOIN cars_data ON car_makers.Id = cars_data.Id WHERE (car_makers.Maker = 'General Motors' OR cars_data.Weight > 3500)",
    "SELECT Year FROM cars_data WHERE Weight >= 3000 AND Weight <= 4000;",
    "SELECT DISTINCT Year FROM cars_data WHERE Weight < 4000 OR Weight > 3000;",
    "SELECT Horsepower FROM cars_data WHERE Accelerate = (SELECT MAX(Accelerate) FROM cars_data)",
    "SELECT Horsepower FROM cars_data WHERE Accelerate = (SELECT MAX(Accelerate) FROM cars_data)",
    "SELECT MIN(cylinders) FROM cars_data WHERE id IN (SELECT id FROM car_names WHERE model = 'volvo') AND accelerate = (SELECT MIN(accelerate) FROM cars_data WHERE id IN (SELECT id FROM car_names WHERE model = 'volvo'))",
    "SELECT MIN(Cylinders) FROM cars_data WHERE Id IN (SELECT Id FROM car_names WHERE Model = 'Volvo') AND Accelerate = (SELECT MIN(Accelerate) FROM cars_data WHERE Id IN (SELECT Id FROM car_names WHERE Model = 'Volvo'))",
    "SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data)",
    "SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data)",
    "SELECT COUNT(DISTINCT countries.CountryId) FROM countries INNER JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId HAVING COUNT(DISTINCT car_makers.Maker) > 2;",
    "SELECT COUNT(DISTINCT countries.CountryId) FROM countries INNER JOIN car_makers ON countries.CountryName = car_makers.Country GROUP BY countries.CountryId HAVING COUNT(DISTINCT car_makers.Maker) > 2;",
    "SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;",
    "SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;",
    "SELECT model_list.Model FROM model_list INNER JOIN cars_data ON model_list.ModelId = cars_data.Id WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1;",
    "SELECT model_list.Model, MAX(cars_data.Horsepower)  FROM model_list  JOIN car_names ON model_list.ModelId = car_names.Model  JOIN cars_data ON car_names.MakeId = cars_data.Id  WHERE cars_data.Cylinders = 4  GROUP BY model_list.Model  ORDER BY MAX(cars_data.Horsepower) DESC  LIMIT 1;",
    "SELECT car_names.MakeId, car_names.Make FROM cars_data JOIN car_names ON cars_data.Id = car_names.ModelId WHERE cars_data.Horsepower > (SELECT MIN(Horsepower) FROM cars_data) AND cars_data.Cylinders <= 3;",
    "SELECT car_names.MakeId, car_names.Make FROM cars_data INNER JOIN car_names ON cars_data.Id = car_names.Model WHERE cars_data.Cylinders < 4 AND cars_data.Horsepower > (SELECT MIN(Horsepower) FROM cars_data)",
    "SELECT MAX(MPG) FROM cars_data WHERE Cylinders = 8 AND Year < 1980;",
    "SELECT MAX(MPG) FROM cars_data WHERE (Cylinders = 8 OR Year < 1980)",
    "SELECT model_list.Model FROM model_list INNER JOIN car_names ON model_list.ModelId = car_names.Model INNER JOIN cars_data ON car_names.MakeId = cars_data.Id INNER JOIN car_makers ON car_names.MakeId = car_makers.Id WHERE cars_data.Weight < 3500 AND car_makers.Maker != 'Ford Motor Company'",
    "SELECT model_list.Model FROM model_list INNER JOIN car_makers ON model_list.Maker = car_makers.Maker INNER JOIN car_names ON car_makers.Id = car_names.MakeId INNER JOIN cars_data ON car_names.Model = cars_data.Id WHERE cars_data.Weight < 3500 AND car_makers.Maker <> 'Ford Motor Company'",
    "SELECT CountryName FROM countries WHERE CountryId NOT IN (SELECT DISTINCT Country FROM car_makers)",
    "SELECT countries.CountryName FROM countries LEFT JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.Id IS NULL;",
    "SELECT car_makers.Id, car_makers.Maker FROM car_makers INNER JOIN model_list ON car_makers.Maker = model_list.Maker GROUP BY car_makers.Id, car_makers.Maker HAVING COUNT(DISTINCT model_list.ModelId) >= 2 AND COUNT(DISTINCT car_makers.Country) > 3;",
    "SELECT car_makers.Id, car_makers.Maker  FROM car_makers  INNER JOIN model_list ON car_makers.Maker = model_list.Maker  INNER JOIN car_names ON model_list.ModelId = car_names.Model  GROUP BY car_makers.Id, car_makers.Maker  HAVING COUNT(DISTINCT model_list.ModelId) >= 2 AND COUNT(DISTINCT car_names.MakeId) > 3",
    "SELECT countries.CountryId, countries.CountryName FROM countries LEFT JOIN car_makers ON countries.CountryId = car_makers.Country LEFT JOIN model_list ON car_makers.Maker = model_list.Maker LEFT JOIN car_names ON model_list.ModelId = car_names.Model WHERE car_makers.Maker = 'fiat' OR countries.CountryId IN (   SELECT Country   FROM car_makers   GROUP BY Country   HAVING COUNT(DISTINCT Maker) > 3 )",
    "SELECT countries.CountryId, countries.CountryName FROM countries LEFT JOIN car_makers ON countries.CountryName = car_makers.Country LEFT JOIN model_list ON car_makers.Maker = model_list.Maker WHERE car_makers.Id IN (   SELECT car_makers.Id   FROM car_makers   WHERE car_makers.Country = countries.CountryName   GROUP BY car_makers.Country   HAVING COUNT(DISTINCT car_makers.Maker) > 3 ) OR model_list.Model = 'Fiat'",
    "SELECT Country FROM airlines WHERE Airline = 'JetBlue Airways'",
    "SELECT Country FROM airlines WHERE Airline = 'Jetblue Airways';",
    "SELECT Abbreviation FROM airlines WHERE Airline = 'JetBlue Airways'",
    "SELECT Abbreviation FROM airlines WHERE Airline = 'Jetblue Airways';",
    "SELECT Airline, Abbreviation FROM airlines WHERE Country = 'USA';  ###List all airport codes and names in \"Canada\". SELECT AirportCode, AirportName FROM airports WHERE Country = 'Canada';  ###List all flights that depart from \"New York\" and arrive at \"Los Angeles\". SELECT * FROM flights WHERE SourceAirport = 'New York' AND DestAirport = 'Los Angeles';  ###List all airlines that have flights departing from \"Paris\". SELECT DISTINCT Airline FROM flights WHERE SourceAirport IN (SELECT AirportCode FROM airports WHERE City = 'Paris');  ###List all airports that have flights departing from \"Delta\" airline. SELECT DISTINCT AirportName FROM airports WHERE AirportCode IN (SELECT SourceAirport FROM flights WHERE Airline = 'Delta');",
    "SELECT Airline, Abbreviation FROM airlines WHERE Country = 'USA'",
    "SELECT AirportCode, AirportName  FROM airports  WHERE City = 'Anthony';",
    "SELECT AirportCode, AirportName  FROM airports  WHERE City = 'Anthony'",
    "SELECT COUNT(*) FROM airlines;",
    "SELECT COUNT(*) FROM airlines;",
    "SELECT COUNT(*) FROM airports;",
    "SELECT COUNT(*) FROM airports;",
    "SELECT COUNT(*) FROM flights;",
    "SELECT COUNT(*) FROM flights;",
    "SELECT Airline FROM airlines WHERE Abbreviation = 'UAL';",
    "SELECT Airline FROM airlines WHERE Abbreviation = 'UAL';",
    "SELECT COUNT(*) FROM airlines WHERE Country = 'USA';",
    "SELECT COUNT(*) FROM airlines WHERE Country = 'USA';",
    "SELECT City, Country FROM airports WHERE AirportName = 'Alton'",
    "SELECT City, Country FROM airports WHERE AirportName = 'Alton';",
    "SELECT AirportName FROM airports WHERE AirportCode = 'AKO';"
]