[
    "SELECT COUNT(*) FROM singer;",
    "SELECT COUNT(*) FROM singer;",
    "SELECT name, country, age FROM singer ORDER BY age DESC;",
    "SELECT singer.name, singer.country, singer.age FROM singer INNER JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id ORDER BY singer.age DESC;",
    "SELECT AVG(age) AS average_age, MIN(age) AS min_age, MAX(age) AS max_age FROM singer WHERE country = 'France';",
    "SELECT AVG(age), MIN(age), MAX(age) FROM singer WHERE country = 'France';",
    "SELECT singer.name, song_release_year  FROM singer  INNER JOIN singer_in_concert  ON singer.singer_id = singer_in_concert.singer_id  ORDER BY age ASC  LIMIT 1;",
    "SELECT singer.name, song_release_year  FROM singer  INNER JOIN singer_in_concert  ON singer.singer_id = singer_in_concert.singer_id  WHERE singer.age = (SELECT MIN(age) FROM singer)",
    "SELECT DISTINCT country  FROM singer  WHERE age > 20;",
    "SELECT DISTINCT country  FROM singer  WHERE age > 20;",
    "SELECT country, COUNT(singer_id) AS num_singers FROM singer GROUP BY country;",
    "SELECT country, COUNT(*) AS num_singers FROM singer GROUP BY country;",
    "SELECT song_name  FROM singer  WHERE age > (SELECT AVG(age) FROM singer);",
    "SELECT song_name  FROM singer  WHERE age > (SELECT AVG(age) FROM singer);",
    "SELECT location, name  FROM stadium  WHERE capacity BETWEEN 5000 AND 10000;",
    "SELECT location, name FROM stadium WHERE capacity BETWEEN 5000 AND 10000;",
    "SELECT MAX(capacity), AVG(capacity) FROM stadium;",
    "SELECT AVG(capacity) AS avg_capacity, MAX(capacity) AS max_capacity FROM stadium;",
    "SELECT name, capacity FROM stadium WHERE average = (SELECT MAX(average) FROM stadium);",
    "SELECT name, capacity FROM stadium WHERE average = (SELECT MAX(average) FROM stadium);",
    "SELECT COUNT(*)  FROM concert  WHERE year IN (2014, 2015);",
    "SELECT COUNT(*)  FROM concert  WHERE year IN (2014, 2015);",
    "SELECT stadium.name, COUNT(*) AS num_concerts FROM stadium INNER JOIN concert ON stadium.stadium_id = concert.stadium_id GROUP BY stadium.name;",
    "SELECT stadium.name, COUNT(*) AS num_concerts  FROM stadium  INNER JOIN concert ON concert.stadium_id = stadium.stadium_id  GROUP BY stadium.name;",
    "SELECT stadium.name, stadium.capacity  FROM stadium  INNER JOIN concert ON stadium.stadium_id = concert.stadium_id  INNER JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id  WHERE concert.year >= 2014  GROUP BY stadium.name, stadium.capacity  ORDER BY COUNT(singer_in_concert.singer_id) DESC  LIMIT 1;",
    "SELECT name, capacity FROM stadium WHERE stadium_id IN (SELECT stadium_id FROM concert WHERE year > 2013 GROUP BY stadium_id ORDER BY COUNT(*) DESC LIMIT 1);",
    "SELECT year, COUNT(*) AS num_concerts FROM concert GROUP BY year ORDER BY num_concerts DESC LIMIT 1;",
    "SELECT year, COUNT(*) AS num_concerts FROM concert GROUP BY year ORDER BY num_concerts DESC LIMIT 1;",
    "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert);",
    "SELECT name  FROM stadium  WHERE stadium_id NOT IN (SELECT stadium_id                          FROM concert);",
    "SELECT country  FROM singer  WHERE age > 40 OR age < 30;",
    "SELECT name  FROM stadium  WHERE stadium_id NOT IN (SELECT stadium_id                          FROM concert                          WHERE year = 2014);",
    "SELECT name  FROM stadium  WHERE stadium_id NOT IN (SELECT stadium_id                          FROM concert                          WHERE year = 2014);",
    "SELECT concert.concert_name, concert.theme, COUNT(singer_in_concert.singer_id) AS num_singers FROM concert INNER JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id GROUP BY concert.concert_name, concert.theme;",
    "SELECT singer.name, concert.theme, COUNT(*) AS number_of_singers FROM concert_singer INNER JOIN singer ON concert_singer.singer_id = singer.singer_id INNER JOIN concert ON concert_singer.concert_id = concert.concert_id GROUP BY singer.name, concert.theme;",
    "SELECT s.name, COUNT(*) AS num_concerts FROM singer s INNER JOIN singer_in_concert sc ON s.singer_id = sc.singer_id GROUP BY s.name;",
    "SELECT s.name, COUNT(*) AS num_concerts FROM singer s INNER JOIN singer_in_concert sc ON s.singer_id = sc.singer_id GROUP BY s.name;",
    "SELECT singer.name  FROM concert_singer  INNER JOIN singer ON concert_singer.singer_id = singer.singer_id  INNER JOIN concert ON concert_singer.concert_id = concert.concert_id  WHERE concert.year = 2014;",
    "SELECT singer.name  FROM singer  INNER JOIN singer_in_concert  ON singer.singer_id = singer_in_concert.singer_id  INNER JOIN concert  ON singer_in_concert.concert_id = concert.concert_id  WHERE concert.year = 2014;",
    "SELECT singer.name, singer.country  FROM singer  INNER JOIN singer_in_concert  ON singer.singer_id = singer_in_concert.singer_id  WHERE singer.song_name LIKE '%Hey%';",
    "SELECT singer.name, singer.country  FROM singer  INNER JOIN concert_singer  ON singer.singer_id = concert_singer.singer_id  WHERE concert_singer.song_name LIKE '%Hey%';",
    "SELECT stadium.name, stadium.location FROM stadium INNER JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year IN (2014, 2015) GROUP BY stadium.name, stadium.location;",
    "SELECT s.name, s.location  FROM stadium s  INNER JOIN concert c  ON s.stadium_id = c.stadium_id  WHERE c.year IN (2014, 2015)  GROUP BY s.name, s.location  HAVING COUNT(*) = 2;",
    "SELECT COUNT(*)  FROM concert c  INNER JOIN stadium s  ON c.stadium_id = s.stadium_id  WHERE s.capacity = s.highest;",
    "SELECT COUNT(*) FROM concert c JOIN stadium s ON c.stadium_id = s.stadium_id WHERE s.capacity = (SELECT MAX(capacity) FROM stadium);",
    "SELECT COUNT(*) FROM pets WHERE weight > 10;",
    "SELECT COUNT(*) FROM pets_1 WHERE weight > 10;",
    "SELECT weight  FROM pets  WHERE pettype = 'dog'  ORDER BY pet_age ASC  LIMIT 1;",
    "SELECT weight  FROM pets  WHERE pettype = 'dog'  ORDER BY pet_age ASC  LIMIT 1;",
    "SELECT pettype, MAX(weight)  FROM pets GROUP BY pettype;",
    "SELECT pettype, MAX(weight) AS max_weight FROM pets GROUP BY pettype;",
    "SELECT COUNT(*) FROM students JOIN has_pet ON students.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE students.age > 20;",
    "SELECT COUNT(*) FROM student INNER JOIN has_pet ON student.stuid = has_pet.stuid INNER JOIN pets ON has_pet.petid = pets.petid WHERE student.age > 20;",
    "SELECT COUNT(*) FROM student INNER JOIN has_pet ON student.stuid = has_pet.stuid INNER JOIN pets ON has_pet.petid = pets.petid WHERE student.sex = 'F' AND pets.pettype = 'dog';",
    "SELECT COUNT(*) FROM student INNER JOIN has_pet ON student.stuid = has_pet.stuid INNER JOIN pets ON has_pet.petid = pets.petid WHERE student.sex = 'female' AND pets.pettype = 'dog'",
    "SELECT COUNT(DISTINCT pettype) FROM pets;",
    "SELECT COUNT(DISTINCT pettype) FROM pets;",
    "SELECT fname FROM student INNER JOIN has_pet ON student.stuid = has_pet.stuid INNER JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype IN ('cat', 'dog');",
    "SELECT fname  FROM student  INNER JOIN has_pet  ON student.stuid = has_pet.stuid  INNER JOIN pets  ON has_pet.petid = pets.petid  WHERE pets.pettype IN ('cat', 'dog');",
    "SELECT fname  FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat'  AND has_pet.petid IN (     SELECT petid      FROM pets      WHERE pettype = 'dog' )  GROUP BY fname  HAVING COUNT(*) = 2;",
    "SELECT fname FROM student INNER JOIN has_pet ON student.stuid = has_pet.stuid INNER JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat' AND EXISTS (     SELECT *     FROM has_pet AS h2     INNER JOIN pets AS p2 ON h2.petid = p2.petid     WHERE h2.stuid = student.stuid     AND p2.pettype = 'dog' )",
    "SELECT major, age  FROM student  WHERE stuid NOT IN (SELECT stuid                      FROM has_pet                      INNER JOIN pets                      ON has_pet.petid = pets.petid                      WHERE pettype = 'cat');",
    "SELECT student.major, student.age  FROM student  LEFT JOIN has_pet ON student.stuid = has_pet.stuid  LEFT JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype != 'cat'",
    "SELECT stuid FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet WHERE petid IN (SELECT petid FROM pets WHERE pettype = 'cat'))",
    "SELECT stuid FROM student WHERE stuid NOT IN (SELECT stuid                     FROM has_pet                     INNER JOIN pets                     ON has_pet.petid = pets.petid                     WHERE pettype = 'cat')",
    "SELECT fname, age  FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'dog'  AND student.stuid NOT IN (SELECT stuid                            FROM has_pet                            INNER JOIN pets ON has_pet.petid = pets.petid                            WHERE pets.pettype = 'cat')",
    "SELECT fname  FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'dog'  AND student.stuid NOT IN (SELECT stuid                            FROM has_pet                            INNER JOIN pets ON has_pet.petid = pets.petid                            WHERE pets.pettype = 'cat')",
    "SELECT pettype, weight  FROM pets  WHERE pet_age = (SELECT MIN(pet_age) FROM pets);",
    "SELECT pettype, weight  FROM pets  WHERE pet_age = (SELECT MIN(pet_age) FROM pets);",
    "SELECT petid, weight FROM pets WHERE pet_age > 1;",
    "SELECT petid, weight  FROM pets  WHERE pet_age > 1;",
    "SELECT pettype, AVG(pet_age) AS avg_age, MAX(pet_age) AS max_age FROM pets GROUP BY pettype;",
    "SELECT pettype, AVG(pet_age) AS avg_age, MAX(pet_age) AS max_age FROM pets GROUP BY pettype;",
    "SELECT pettype, AVG(weight) FROM pets GROUP BY pettype;",
    "SELECT pettype, AVG(weight) FROM pets GROUP BY pettype;",
    "SELECT fname, age FROM student INNER JOIN has_pet ON student.stuid = has_pet.stuid INNER JOIN pets ON has_pet.petid = pets.petid;",
    "SELECT fname, age  FROM student  INNER JOIN has_pet  ON student.stuid = has_pet.stuid  INNER JOIN pets  ON has_pet.petid = pets.petid;",
    "SELECT petid FROM student JOIN has_pet ON student.stuid = has_pet.stuid WHERE student.lname = 'Smith';",
    "SELECT petid  FROM pets_1  JOIN has_pet ON pets_1.stuid = has_pet.stuid  JOIN student ON has_pet.stuid = student.stuid  WHERE student.lname = 'Smith';",
    "SELECT stuid, COUNT(petid) FROM has_pet INNER JOIN pets_1 ON has_pet.stuid = pets_1.stuid GROUP BY stuid;",
    "SELECT stuid, COUNT(petid) AS pet_count FROM has_pet INNER JOIN students ON has_pet.stuid = students.stuid GROUP BY stuid;",
    "SELECT fname, sex  FROM student  WHERE stuid IN (SELECT stuid                  FROM has_pet                  GROUP BY stuid                  HAVING COUNT(petid) > 1)",
    "SELECT fname, sex  FROM student  WHERE stuid IN (SELECT stuid                  FROM has_pet                  GROUP BY stuid                  HAVING COUNT(*) > 1)",
    "SELECT lname  FROM student  INNER JOIN has_pet  ON student.stuid = has_pet.stuid  INNER JOIN pets  ON has_pet.petid = pets.petid  WHERE pets.pet_age = 3;",
    "SELECT lname  FROM student  INNER JOIN has_pet  ON student.stuid = has_pet.stuid  INNER JOIN pets  ON has_pet.petid = pets.petid  WHERE pets.pet_age = 3;",
    "SELECT AVG(age) FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet);",
    "SELECT AVG(age) FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet);",
    "SELECT COUNT(*) FROM continents;",
    "SELECT COUNT(*) FROM continents;",
    "SELECT contid, continent, COUNT(countryid) AS num_countries FROM continents LEFT JOIN countries ON continents.contid = countries.continent GROUP BY contid, continent;",
    ", origin  SELECT contid, continent, COUNT(countryname)  FROM continents  JOIN countries  ON continents.contid = countries.continent  GROUP BY contid, continent;",
    "SELECT COUNT(*) FROM countries;",
    "SELECT COUNT(*)  FROM countries;",
    "SELECT car_makers.fullname, car_makers.id, COUNT(model_list.modelid) AS num_models FROM car_makers INNER JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.fullname, car_makers.id;",
    "SELECT car_makers.fullname, car_makers.id, COUNT(model_list.model) FROM car_makers INNER JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.fullname, car_makers.id;",
    "SELECT MIN(horsepower) FROM cars_data c JOIN car_names n ON c.makeid = n.makeid JOIN model_list m ON n.model = m.model JOIN car_makers mk ON m.maker = mk.id;",
    "SELECT model FROM model_list  INNER JOIN car_names ON model_list.modelid = car_names.modelid  INNER JOIN cars_data ON car_names.makeid = cars_data.id  ORDER BY horsepower ASC  LIMIT 1;",
    "SELECT model FROM model_list  INNER JOIN car_names ON model_list.modelid = car_names.modelid  INNER JOIN cars_data ON car_names.makeid = cars_data.id  WHERE cars_data.weight < (SELECT AVG(weight) FROM cars_data);",
    "SELECT model FROM model_list JOIN car_makers ON model_list.maker = car_makers.id JOIN cars_data ON car_makers.id = cars_data.makeid WHERE cars_data.weight < (SELECT AVG(weight) FROM cars_data);",
    ", origin  SELECT fullname  FROM car_makers  INNER JOIN car_names  ON car_makers.id = car_names.makeid  INNER JOIN model_list  ON car_names.model = model_list.modelid  WHERE year = 1970;",
    "SELECT fullname FROM car_makers INNER JOIN model_list ON car_makers.id = model_list.maker INNER JOIN car_names ON model_list.modelid = car_names.makeid INNER JOIN cars_data ON car_names.model = cars_data.id WHERE cars_data.year = 1970;",
    ", origin |  SELECT make, year FROM car_names  INNER JOIN cars_data ON car_names.makeid = cars_data.id ORDER BY year ASC LIMIT 1;",
    ", origin  SELECT car_makers.maker, MIN(cars_data.year)  FROM car_makers  INNER JOIN model_list ON car_makers.id = model_list.maker  INNER JOIN car_names ON model_list.modelid = car_names.makeid  INNER JOIN cars_data ON car_names.makeid = cars_data.makeid  GROUP BY car_makers.maker;",
    "SELECT DISTINCT model FROM model_list  INNER JOIN car_names ON model_list.modelid = car_names.modelid  WHERE year > 1980;",
    "SELECT model FROM model_list JOIN car_makers ON model_list.maker = car_makers.id JOIN countries ON car_makers.country = countries.countryid JOIN car_names ON model_list.modelid = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.year > 1980 GROUP BY model;",
    ", origin  SELECT continents.continent, COUNT(DISTINCT car_makers.maker) AS count FROM car_makers INNER JOIN countries ON car_makers.country = countries.countryname INNER JOIN continents ON countries.continent = continents.contid GROUP BY continents.continent;",
    "SELECT cont.continent, COUNT(DISTINCT car_makers.maker) AS num_makers FROM continents cont INNER JOIN countries ctry ON cont.contid = ctry.continent INNER JOIN car_makers ON ctry.countryid = car_makers.country INNER JOIN model_list ON car_makers.id = model_list.maker INNER JOIN car_names ON model_list.modelid = car_names.model INNER JOIN cars_data ON car_names.makeid = cars_data.id GROUP BY cont.continent;",
    "SELECT countries.countryname FROM countries INNER JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryname ORDER BY COUNT(car_makers.id) DESC LIMIT 1;",
    "SELECT countries.countryname FROM countries INNER JOIN car_makers ON countries.countryid = car_makers.country INNER JOIN model_list ON car_makers.id = model_list.maker INNER JOIN car_names ON model_list.modelid = car_names.makeid INNER JOIN cars_data ON car_names.model = cars_data.id GROUP BY countries.countryname ORDER BY COUNT(*) DESC LIMIT 1;",
    "SELECT fullname, COUNT(model)  FROM car_makers  INNER JOIN model_list ON car_makers.id = model_list.maker  INNER JOIN car_names ON model_list.modelid = car_names.model  GROUP BY fullname;",
    "SELECT car_makers.id, car_makers.fullname, COUNT(model_list.modelid) AS num_models FROM car_makers INNER JOIN model_list ON car_makers.id = model_list.maker INNER JOIN countries ON car_makers.country = countries.countryid INNER JOIN continents ON countries.continent = continents.contid GROUP BY car_makers.id, car_makers.fullname;",
    "SELECT accelerate FROM car_names cn  INNER JOIN model_list ml ON cn.model = ml.modelid  INNER JOIN car_makers cm ON ml.maker = cm.id  INNER JOIN countries c ON cm.country = c.countryid  INNER JOIN continents co ON c.continent = co.contid  WHERE cn.make = 'amc hornet sportabout (sw)';",
    "SELECT accelerate FROM cars_data  INNER JOIN car_names ON cars_data.makeid = car_names.makeid  INNER JOIN model_list ON car_names.model = model_list.model  INNER JOIN car_makers ON model_list.maker = car_makers.id  INNER JOIN countries ON car_makers.country = countries.countryid  INNER JOIN continents ON countries.continent = continents.contid  WHERE car_makers.fullname = 'AMC Hornet Sportabout' AND car_names.make = 'SW';",
    "SELECT COUNT(DISTINCT car_makers.maker)  FROM car_makers  INNER JOIN countries ON car_makers.country = countries.countryname  INNER JOIN continents ON countries.continent = continents.contid  WHERE continents.continent = 'France';",
    "SELECT COUNT(*) FROM car_makers INNER JOIN countries ON car_makers.country = countries.countryname INNER JOIN continents ON countries.continent = continents.contid WHERE continents.continent = 'France';",
    "SELECT COUNT(*) FROM car_makers INNER JOIN model_list ON car_makers.id = model_list.maker INNER JOIN car_names ON model_list.modelid = car_names.makeid INNER JOIN cars_data ON car_names.model = cars_data.id INNER JOIN countries ON car_makers.country = countries.countryid INNER JOIN continents ON countries.continent = continents.contid WHERE continents.continent = 'USA';",
    "SELECT COUNT(model) FROM model_list INNER JOIN car_names ON model_list.modelid = car_names.modelid INNER JOIN car_makers ON car_names.makeid = car_makers.id INNER JOIN countries ON car_makers.country = countries.countryid INNER JOIN continents ON countries.continent = continents.contid WHERE continents.continent = 'United States';",
    "SELECT AVG(mpg) FROM cars_data WHERE cylinders = 4;",
    "SELECT AVG(mpg) FROM cars_data WHERE cylinders = 4;",
    "SELECT MIN(weight)  FROM cars_data  WHERE cylinders = 8 AND year = 1974;",
    "SELECT MIN(weight) FROM cars_data WHERE cylinders = 8 AND year = 1974;",
    "SELECT maker, model FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.modelid = car_names.model;",
    "SELECT maker, model FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.modelid = car_names.model;",
    "SELECT countries.countryname, countries.countryid FROM countries INNER JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryname, countries.countryid HAVING COUNT(car_makers.id) > 0;",
    "SELECT countries.countryname, countries.countryid FROM countries INNER JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryname, countries.countryid HAVING COUNT(car_makers.id) > 0;",
    "SELECT COUNT(*)  FROM car_makers  INNER JOIN model_list ON car_makers.id = model_list.maker  INNER JOIN car_names ON model_list.modelid = car_names.makeid  INNER JOIN cars_data ON car_names.model = cars_data.id  WHERE cars_data.horsepower > 150;",
    "SELECT COUNT(*)  FROM car_names  INNER JOIN cars_data ON car_names.makeid = cars_data.id  WHERE cars_data.horsepower > 150;",
    "SELECT AVG(weight) FROM cars_data GROUP BY year;",
    "SELECT AVG(weight), year FROM cars_data GROUP BY year;",
    "SELECT countries.countryname  FROM car_makers  INNER JOIN countries ON car_makers.country = countries.countryid  INNER JOIN continents ON countries.continent = continents.contid  WHERE continents.continent = 'Europe'  GROUP BY countries.countryname  HAVING COUNT(car_makers.id) >= 3;",
    "SELECT countries.countryname  FROM countries  INNER JOIN car_makers ON countries.countryid = car_makers.country  INNER JOIN model_list ON car_makers.id = model_list.maker  INNER JOIN car_names ON model_list.modelid = car_names.makeid  INNER JOIN cars_data ON car_names.model = cars_data.id  INNER JOIN continents ON countries.continent = continents.contid  WHERE continents.continent = 'Europe'  GROUP BY countries.countryname  HAVING COUNT(*) >= 3;",
    "SELECT MAX(horsepower), make FROM car_names  INNER JOIN model_list ON car_names.model = model_list.modelid  INNER JOIN car_makers ON model_list.maker = car_makers.id  INNER JOIN cars_data ON car_names.makeid = cars_data.id  WHERE cylinders = 3  GROUP BY make;",
    "SELECT MAX(horsepower) AS 'Largest Horsepower', make FROM car_names cn  INNER JOIN cars_data cd ON cn.makeid = cd.id  WHERE cylinders = 3  GROUP BY make;",
    "SELECT model FROM model_list JOIN car_names ON model_list.modelid = car_names.modelid JOIN cars_data ON car_names.makeid = cars_data.id ORDER BY mpg DESC LIMIT 1;",
    "SELECT model FROM model_list  INNER JOIN car_names ON model_list.modelid = car_names.modelid  INNER JOIN cars_data ON car_names.makeid = cars_data.id  ORDER BY mpg DESC  LIMIT 1;",
    "SELECT AVG(horsepower) FROM cars_data WHERE year < 1980;",
    "SELECT AVG(horsepower)  FROM cars_data  WHERE year < 1980;",
    "SELECT AVG(edispl) FROM cars_data  JOIN model_list ON cars_data.makeid = model_list.modelid  JOIN car_makers ON model_list.maker = car_makers.id  JOIN countries ON car_makers.country = countries.countryid  JOIN continents ON countries.continent = continents.contid  WHERE model_list.model = 'Volvo';",
    "SELECT AVG(edispl) FROM car_makers  INNER JOIN model_list ON car_makers.id = model_list.maker  INNER JOIN car_names ON model_list.modelid = car_names.makeid  INNER JOIN cars_data ON car_names.model = cars_data.make  WHERE car_makers.fullname = 'Volvo';",
    "SELECT cylinders, MAX(accelerate) FROM cars_data GROUP BY cylinders;",
    "SELECT MAX(accelerate) FROM cars_data;",
    "SELECT model, COUNT(make) AS num_makes FROM car_names GROUP BY model ORDER BY num_makes DESC LIMIT 1;",
    "SELECT model, COUNT(DISTINCT make) AS num_versions FROM model_list JOIN car_names ON model_list.modelid = car_names.modelid GROUP BY model ORDER BY num_versions DESC LIMIT 1;",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 4;",
    "SELECT COUNT(*)  FROM cars_data  WHERE cylinders > 4;",
    "SELECT COUNT(*)  FROM car_names  INNER JOIN model_list ON car_names.makeid = model_list.modelid  INNER JOIN car_makers ON model_list.maker = car_makers.id  INNER JOIN countries ON car_makers.country = countries.countryid  INNER JOIN continents ON countries.continent = continents.contid  WHERE cars_data.year = 1980;",
    ", origin  SELECT COUNT(*) FROM cars_data WHERE year = 1980;",
    "SELECT COUNT(*) FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.modelid = car_names.makeid WHERE car_makers.fullname = 'American Motor Company';",
    "SELECT COUNT(model) FROM model_list INNER JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.fullname = 'American Motor Company';",
    "SELECT fullname, id FROM car_makers WHERE id IN (SELECT maker               FROM model_list               GROUP BY maker               HAVING COUNT(model) > 3);",
    "SELECT car_makers.fullname, car_makers.id FROM car_makers INNER JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.fullname, car_makers.id HAVING COUNT(model_list.modelid) > 3;",
    "SELECT model_list.model  FROM car_makers  INNER JOIN model_list  ON car_makers.id = model_list.maker  INNER JOIN cars_data  ON model_list.model = cars_data.make  WHERE car_makers.fullname = 'General Motors'  AND cars_data.weight > 3500;",
    ", origin  SELECT model FROM model_list  INNER JOIN car_makers ON model_list.maker = car_makers.id  INNER JOIN countries ON car_makers.country = countries.countryid  WHERE car_makers.fullname = 'General Motors' OR cars_data.weight > 3500;",
    "SELECT year  FROM cars_data  WHERE weight BETWEEN 3000 AND 4000;",
    "SELECT DISTINCT year  FROM cars_data  WHERE weight < 4000 OR weight > 3000;",
    "SELECT horsepower FROM cars_data WHERE accelerate = (SELECT MAX(accelerate) FROM cars_data);",
    "SELECT horsepower FROM cars_data WHERE accelerate = (SELECT MAX(accelerate) FROM cars_data);",
    "SELECT cylinders FROM cars_data  INNER JOIN model_list ON cars_data.makeid = model_list.modelid  INNER JOIN car_makers ON model_list.maker = car_makers.id  WHERE car_makers.fullname = 'Volvo'  ORDER BY accelerate ASC  LIMIT 1;",
    "SELECT cylinders FROM cars_data c  INNER JOIN model_list m ON c.makeid = m.modelid  INNER JOIN car_names n ON m.maker = n.makeid  INNER JOIN car_makers mk ON n.maker = mk.id  INNER JOIN countries ct ON mk.country = ct.countryid  INNER JOIN continents cn ON ct.continent = cn.contid  WHERE cn.continent = 'volvo'  ORDER BY accelerate ASC  LIMIT 1;",
    "SELECT COUNT(*)  FROM cars_data  WHERE accelerate > (SELECT MAX(horsepower) FROM cars_data);",
    "SELECT COUNT(*)  FROM cars_data  WHERE accelerate > (SELECT MAX(horsepower) FROM cars_data);",
    "SELECT COUNT(*) FROM countries INNER JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryname HAVING COUNT(*) > 2;",
    "SELECT COUNT(*) FROM countries c JOIN car_makers cm ON c.countryid = cm.country JOIN model_list ml ON cm.id = ml.maker JOIN car_names cn ON ml.modelid = cn.model JOIN cars_data cd ON cn.makeid = cd.id GROUP BY c.countryname HAVING COUNT(*) > 2;",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 6;",
    "SELECT COUNT(*)  FROM cars_data  WHERE cylinders > 6;",
    "SELECT model FROM model_list INNER JOIN car_names ON model_list.modelid = car_names.modelid INNER JOIN cars_data ON car_names.makeid = cars_data.id WHERE cylinders = 4 ORDER BY horsepower DESC LIMIT 1;",
    "SELECT model FROM model_list INNER JOIN car_names ON model_list.modelid = car_names.modelid INNER JOIN cars_data ON car_names.makeid = cars_data.id WHERE cylinders = 4 ORDER BY horsepower DESC LIMIT 1;",
    "SELECT car_names.makeid, car_names.make  FROM cars_data  INNER JOIN car_names  ON cars_data.makeid = car_names.makeid  WHERE cars_data.horsepower > (SELECT MIN(horsepower) FROM cars_data)  AND cars_data.cylinders <= 3;",
    "SELECT car_makers.id, car_makers.fullname FROM car_makers INNER JOIN car_names ON car_makers.id = car_names.makeid INNER JOIN model_list ON car_names.model = model_list.modelid INNER JOIN cars_data ON model_list.maker = cars_data.id WHERE cars_data.horsepower < (SELECT MIN(horsepower) FROM cars_data) AND cars_data.cylinders < 4;",
    "SELECT MAX(mpg)  FROM cars_data  WHERE cylinders = 8 OR year < 1980;",
    "SELECT MAX(mpg)  FROM cars_data  WHERE cylinders = 8 OR year < 1980;",
    ", origin  SELECT model FROM model_list JOIN car_makers ON model_list.maker = car_makers.id JOIN countries ON car_makers.country = countries.countryid JOIN continents ON countries.continent = continents.contid JOIN cars_data ON model_list.modelid = cars_data.id WHERE cars_data.weight < 3500 AND car_makers.fullname != 'Ford Motor Company';",
    ", origin  SELECT model FROM model_list  INNER JOIN car_makers ON model_list.maker = car_makers.id  INNER JOIN countries ON car_makers.country = countries.countryid  WHERE car_makers.fullname != 'Ford Motor Company'  AND weight < 3500;",
    "SELECT countries.countryname  FROM countries  LEFT JOIN car_makers  ON countries.countryid = car_makers.country  WHERE car_makers.country IS NULL;",
    "SELECT countries.countryname  FROM countries  LEFT JOIN car_makers  ON countries.countryid = car_makers.country  WHERE car_makers.country IS NULL;",
    "SELECT car_makers.id, car_makers.maker  FROM car_makers  INNER JOIN model_list ON car_makers.id = model_list.maker  INNER JOIN car_names ON model_list.modelid = car_names.model  GROUP BY car_makers.id, car_makers.maker  HAVING COUNT(DISTINCT car_names.makeid) > 3  AND COUNT(DISTINCT model_list.modelid) > 2;",
    ", origin  SELECT car_makers.id, car_makers.maker FROM car_makers INNER JOIN model_list ON car_makers.id = model_list.maker INNER JOIN car_names ON model_list.modelid = car_names.model INNER JOIN cars_data ON car_names.makeid = cars_data.id GROUP BY car_makers.id, car_makers.maker HAVING COUNT(DISTINCT model_list.modelid) >= 2 AND COUNT(DISTINCT cars_data.id) > 3;",
    ", origin  SELECT countries.countryid, countries.countryname  FROM countries  INNER JOIN car_makers ON countries.countryid = car_makers.country  INNER JOIN model_list ON car_makers.id = model_list.maker  INNER JOIN car_names ON model_list.modelid = car_names.makeid  INNER JOIN cars_data ON car_names.model = cars_data.id  WHERE model_list.model = 'fiat'  GROUP BY countries.countryid, countries.countryname  HAVING COUNT(*) > 3;",
    "SELECT countries.countryid, countries.countryname  FROM countries  INNER JOIN car_makers ON countries.countryid = car_makers.country  INNER JOIN model_list ON car_makers.id = model_list.maker  INNER JOIN car_names ON model_list.modelid = car_names.model  WHERE car_makers.fullname = 'Fiat'  OR (SELECT COUNT(*)      FROM car_makers      WHERE car_makers.country = countries.countryid) > 3 GROUP BY countries.countryid, countries.countryname;",
    "SELECT country  FROM airlines  WHERE airline = 'JetBlue Airways';",
    "SELECT country FROM airlines WHERE airline = 'Jetblue Airways';",
    "SELECT abbreviation FROM airlines WHERE airline = 'JetBlue Airways';",
    "SELECT abbreviation  FROM airlines  WHERE airline = 'Jetblue Airways';",
    "SELECT airlines.airline, airlines.abbreviation  FROM airlines  WHERE airlines.country = 'USA';",
    "SELECT airlines.airline, airlines.abbreviation  FROM airlines  WHERE airlines.country = 'USA';",
    "SELECT airportcode, airportname  FROM airports  WHERE city = 'Anthony';",
    "SELECT airportcode, airportname  FROM airports  WHERE city = 'Anthony';",
    "SELECT COUNT(*)  FROM airlines;",
    "SELECT COUNT(*) FROM airlines;",
    "SELECT COUNT(*)  FROM airports;",
    "SELECT COUNT(*) FROM airports;",
    "SELECT COUNT(*) FROM flights;",
    "SELECT COUNT(*) FROM flights;",
    "SELECT airline  FROM airlines  WHERE abbreviation = 'UAL';",
    "SELECT airline  FROM airlines  WHERE abbreviation = 'UAL';",
    "SELECT COUNT(*)  FROM airlines  WHERE country = 'USA';",
    "SELECT COUNT(*) FROM airlines WHERE country = 'USA';",
    "SELECT city, country FROM airports WHERE airportname = 'Alton';",
    "SELECT airports.city, airports.country  FROM airports  WHERE airports.airportname = 'Alton'",
    "SELECT airportname  FROM airports  WHERE airportcode = 'AKO';",
    "SELECT COUNT(*)  FROM singer;",
    "SELECT COUNT(*)  FROM singer;",
    "SELECT name, country, age FROM singer ORDER BY age DESC;",
    "SELECT name, country, age  FROM singer  ORDER BY age DESC",
    "SELECT AVG(age) AS avg_age, MIN(age) AS min_age, MAX(age) AS max_age FROM singer WHERE country = 'France';",
    "SELECT AVG(age) AS average_age, MIN(age) AS min_age, MAX(age) AS max_age FROM singer WHERE country = 'France' AND is_male = 1;",
    "SELECT singer.name, singer.song_release_year  FROM singer  ORDER BY singer.age ASC  LIMIT 1;",
    "SELECT singer.name, song_release_year  FROM singer  INNER JOIN singer_in_concert  ON singer.singer_id = singer_in_concert.singer_id  WHERE singer.age = (SELECT MIN(age) FROM singer)",
    "SELECT DISTINCT country  FROM singer  WHERE age > 20;",
    "SELECT DISTINCT country  FROM singer  WHERE age > 20;",
    "SELECT country, COUNT(singer_id) AS num_singers FROM singer GROUP BY country;",
    "SELECT country, COUNT(singer_id) AS num_singers  FROM singer  GROUP BY country;",
    "SELECT singer.name, singer.song_name  FROM singer  INNER JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id  INNER JOIN concert ON singer_in_concert.concert_id = concert.concert_id  INNER JOIN stadium ON concert.stadium_id = stadium.stadium_id  WHERE singer.age > stadium.average;",
    "SELECT song_name  FROM singer  WHERE age > (SELECT AVG(age) FROM singer);",
    "SELECT location, name FROM stadium WHERE capacity BETWEEN 5000 AND 10000;",
    "SELECT location, name FROM stadium WHERE capacity BETWEEN 5000 AND 10000;",
    "SELECT MAX(capacity) AS max_capacity, AVG(capacity) AS avg_capacity FROM stadium;",
    "SELECT AVG(capacity) AS avg_capacity, MAX(capacity) AS max_capacity FROM stadium;",
    "SELECT name, capacity FROM stadium WHERE average = (SELECT MAX(average) FROM stadium);",
    "SELECT name, capacity FROM stadium WHERE average = (SELECT MAX(average) FROM stadium);",
    "SELECT COUNT(*)  FROM concert  WHERE year IN (2014, 2015);",
    "SELECT COUNT(*)  FROM concert  WHERE year IN (2014, 2015);",
    "SELECT stadium.name, COUNT(*) AS num_of_concerts  FROM stadium  JOIN concert ON stadium.stadium_id = concert.stadium_id  GROUP BY stadium.name;",
    "SELECT stadium.name, COUNT(concert.concert_id) AS num_of_concerts  FROM stadium  INNER JOIN concert ON stadium.stadium_id = concert.stadium_id  GROUP BY stadium.name;",
    "SELECT s.name, s.capacity  FROM stadium s  INNER JOIN concert c  ON s.stadium_id = c.stadium_id  WHERE c.year >= 2014  GROUP BY s.name, s.capacity  ORDER BY COUNT(*) DESC  LIMIT 1;",
    "SELECT stadium.name, stadium.capacity  FROM stadium  INNER JOIN concert  ON stadium.stadium_id = concert.stadium_id  WHERE concert.year > 2013  GROUP BY stadium.name, stadium.capacity  ORDER BY COUNT(*) DESC  LIMIT 1;",
    "SELECT year, COUNT(*) AS num_concerts  FROM concert  GROUP BY year  ORDER BY num_concerts DESC  LIMIT 1;",
    "SELECT year, COUNT(*) AS num_concerts FROM concert GROUP BY year ORDER BY num_concerts DESC LIMIT 1;",
    "SELECT stadium.name  FROM stadium  LEFT JOIN concert  ON stadium.stadium_id = concert.stadium_id  WHERE concert.concert_name IS NULL;",
    "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert);",
    "SELECT s1.country, s2.country  FROM singer s1  INNER JOIN singer s2  ON s1.country = s2.country  WHERE s1.age > 40  AND s2.age < 30;",
    "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id                         FROM concert                         WHERE year = 2014);",
    "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert WHERE year = 2014);",
    "SELECT concert.concert_name, concert.theme, COUNT(singer_in_concert.singer_id) AS num_singers FROM concert  INNER JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id GROUP BY concert.concert_name, concert.theme;",
    "SELECT singer.name, concert.theme, COUNT(singer_in_concert.singer_id) AS num_singers FROM concert INNER JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id INNER JOIN singer ON singer_in_concert.singer_id = singer.singer_id GROUP BY concert.concert_id, singer.name, concert.theme;",
    "SELECT s.name, COUNT(*) AS num_concerts  FROM singer s  INNER JOIN singer_in_concert sc  ON s.singer_id = sc.singer_id  GROUP BY s.name;",
    "SELECT singer.name, COUNT(concert.concert_id) AS number_of_concerts FROM singer INNER JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id INNER JOIN concert ON singer_in_concert.concert_id = concert.concert_id GROUP BY singer.name;",
    "SELECT singer.name  FROM concert  INNER JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id  INNER JOIN singer ON singer_in_concert.singer_id = singer.singer_id  WHERE concert.year = 2014;",
    "SELECT singer.name  FROM singer  INNER JOIN singer_in_concert  ON singer.singer_id = singer_in_concert.singer_id  INNER JOIN concert  ON singer_in_concert.concert_id = concert.concert_id  WHERE concert.year = 2014;",
    "SELECT singer.name, singer.country  FROM singer  INNER JOIN singer_in_concert  ON singer.singer_id = singer_in_concert.singer_id  WHERE singer.song_name LIKE '%Hey%';",
    "SELECT singer.name, singer.country  FROM singer  JOIN singer_in_concert  ON singer.singer_id = singer_in_concert.singer_id  WHERE singer.song_name LIKE '%Hey%';",
    "SELECT name, location  FROM stadium  WHERE stadium_id IN (SELECT stadium_id                       FROM concert                       WHERE year IN (2014, 2015))",
    "SELECT name, location  FROM stadium  WHERE stadium_id IN (SELECT stadium_id                       FROM concert                       WHERE year IN (2014, 2015)                       GROUP BY stadium_id                       HAVING COUNT(*) = 2);",
    "SELECT COUNT(*)  FROM concert c  JOIN stadium s  ON c.stadium_id = s.stadium_id  WHERE s.capacity = s.highest;",
    "SELECT COUNT(*) FROM concert JOIN stadium ON concert.stadium_id = stadium.stadium_id WHERE stadium.capacity = (SELECT MAX(capacity) FROM stadium);",
    "SELECT COUNT(*)  FROM pets_1  WHERE weight > 10;",
    "SELECT COUNT(*)  FROM pets_1 p  INNER JOIN has_pet h  ON p.petid = h.petid  WHERE p.weight > 10;",
    "SELECT weight  FROM pets  WHERE pettype = 'dog'  ORDER BY pet_age  LIMIT 1;",
    "SELECT weight  FROM pets  WHERE pettype = 'dog'  ORDER BY pet_age ASC  LIMIT 1;",
    "SELECT pettype, MAX(weight)  FROM pets  GROUP BY pettype;",
    "SELECT pettype, MAX(weight) AS max_weight FROM pets GROUP BY pettype;",
    "SELECT COUNT(*) FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE student.age > 20;",
    "SELECT COUNT(*) FROM student INNER JOIN has_pet ON student.stuid = has_pet.stuid INNER JOIN pets ON has_pet.petid = pets.petid WHERE student.age > 20;",
    "SELECT COUNT(*) FROM student INNER JOIN has_pet ON student.stuid = has_pet.stuid INNER JOIN pets ON has_pet.petid = pets.petid WHERE student.sex = 'F' AND pets.pettype = 'dog';",
    "SELECT COUNT(*) FROM student INNER JOIN has_pet ON student.stuid = has_pet.stuid INNER JOIN pets ON has_pet.petid = pets.petid WHERE student.sex = 'female' AND pets.pettype = 'dog';",
    "SELECT COUNT(DISTINCT pettype) FROM pets;",
    "SELECT COUNT(DISTINCT pettype) FROM pets;",
    "SELECT fname FROM student s  INNER JOIN has_pet h ON s.stuid = h.stuid INNER JOIN pets p ON h.petid = p.petid WHERE p.pettype IN ('cat', 'dog');",
    "SELECT fname  FROM student  INNER JOIN has_pet  ON student.stuid = has_pet.stuid  INNER JOIN pets  ON has_pet.petid = pets.petid  WHERE pettype IN ('cat','dog');",
    "SELECT fname  FROM student  INNER JOIN has_pet  ON student.stuid = has_pet.stuid  INNER JOIN pets  ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat'  AND has_pet.stuid IN (SELECT stuid                         FROM has_pet                         INNER JOIN pets                         ON has_pet.petid = pets.petid                         WHERE pets.pettype = 'dog')",
    "SELECT fname  FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat'  AND has_pet.stuid IN (SELECT stuid                         FROM has_pet                         INNER JOIN pets ON has_pet.petid = pets.petid                         WHERE pets.pettype = 'dog')",
    "SELECT major, age  FROM student  LEFT JOIN has_pet  ON student.stuid = has_pet.stuid  LEFT JOIN pets  ON has_pet.petid = pets.petid  WHERE pettype != 'cat' OR pettype IS NULL;",
    "SELECT major, age  FROM student  WHERE stuid NOT IN (SELECT stuid                      FROM has_pet                      INNER JOIN pets                      ON has_pet.petid = pets.petid                      WHERE pettype = 'cat')",
    "SELECT stuid FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet INNER JOIN pets ON has_pet.petid = pets.petid WHERE pettype = 'cat');",
    "SELECT stuid  FROM student  WHERE stuid NOT IN (SELECT stuid                      FROM has_pet                      INNER JOIN pets_1                      ON has_pet.petid = pets_1.petid                      WHERE pettype = 'cat')",
    "SELECT fname, age  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'dog'  AND NOT EXISTS (     SELECT *      FROM has_pet AS hp      JOIN pets AS p ON hp.petid = p.petid      WHERE hp.stuid = student.stuid      AND p.pettype = 'cat' )",
    "SELECT fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'dog' AND student.stuid NOT IN (SELECT stuid FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat')",
    "SELECT pettype, weight  FROM pets WHERE pet_age = (SELECT MIN(pet_age) FROM pets);",
    "SELECT pettype, weight  FROM pets  WHERE pet_age = (SELECT MIN(pet_age) FROM pets);",
    "SELECT petid, weight  FROM pets  WHERE pet_age > 1;",
    "SELECT petid, weight  FROM pets  WHERE pet_age > 1;",
    "SELECT pettype, AVG(pet_age) AS avg_age, MAX(pet_age) AS max_age FROM pets GROUP BY pettype;",
    "SELECT pettype, AVG(pet_age) as avg_age, MAX(pet_age) as max_age FROM pets GROUP BY pettype;",
    "SELECT pettype, AVG(weight) FROM pets GROUP BY pettype;",
    "SELECT pettype, AVG(weight) FROM pets GROUP BY pettype;",
    "SELECT fname, age  FROM student  INNER JOIN has_pet  ON student.stuid = has_pet.stuid  INNER JOIN pets  ON has_pet.petid = pets.petid;",
    "SELECT fname, age  FROM student  INNER JOIN has_pet  ON student.stuid = has_pet.stuid  INNER JOIN pets  ON has_pet.petid = pets.petid;",
    "SELECT petid FROM has_pet JOIN student ON has_pet.stuid = student.stuid WHERE student.lname = 'Smith';",
    "SELECT petid  FROM pets_1  INNER JOIN has_pet  ON pets_1.stuid = has_pet.stuid  INNER JOIN student  ON has_pet.stuid = student.stuid  WHERE student.lname = 'Smith';",
    "SELECT stuid, COUNT(petid) FROM has_pet INNER JOIN pets_1 ON has_pet.stuid = pets_1.stuid GROUP BY stuid;",
    "SELECT stuid, COUNT(petid) AS num_pets FROM pets_1 INNER JOIN has_pet ON pets_1.stuid = has_pet.stuid GROUP BY stuid;",
    "SELECT fname, sex  FROM student  WHERE stuid IN (SELECT stuid                  FROM has_pet                  GROUP BY stuid                  HAVING COUNT(petid) > 1);",
    "SELECT fname, sex FROM student WHERE stuid IN (SELECT stuid                  FROM has_pet                  GROUP BY stuid                  HAVING COUNT(petid) > 1)",
    "SELECT lname  FROM student  INNER JOIN has_pet  ON student.stuid = has_pet.stuid  INNER JOIN pets  ON has_pet.petid = pets.petid  WHERE pets.pet_age = 3;",
    "SELECT lname  FROM student  INNER JOIN has_pet  ON student.stuid = has_pet.stuid  INNER JOIN pets  ON has_pet.petid = pets.petid  WHERE pets.pet_age = 3;",
    "SELECT AVG(age) FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet);",
    "SELECT AVG(age) FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet);",
    "SELECT COUNT(*)  FROM continents;",
    "SELECT COUNT(*) FROM continents;",
    "|  SELECT contid, continent, COUNT(countryid) AS 'Number of Countries' FROM continents LEFT JOIN countries ON continents.contid = countries.continent GROUP BY contid, continent;",
    ", origin |  SELECT contid, continent, COUNT(countryname) FROM continents JOIN countries USING (contid) GROUP BY contid;",
    "SELECT COUNT(*) FROM countries;",
    "SELECT COUNT(*) FROM countries;",
    "SELECT car_makers.fullname, car_makers.id, COUNT(model_list.modelid) AS num_models FROM car_makers INNER JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.fullname, car_makers.id;",
    "SELECT car_makers.fullname, car_makers.id, COUNT(model_list.modelid) FROM car_makers INNER JOIN model_list ON car_makers.id = model_list.maker INNER JOIN car_names ON model_list.modelid = car_names.makeid INNER JOIN cars_data ON car_names.model = cars_data.id GROUP BY car_makers.fullname, car_makers.id;",
    "SELECT model FROM model_list JOIN car_names ON model_list.modelid = car_names.modelid JOIN cars_data ON car_names.makeid = cars_data.id ORDER BY horsepower ASC LIMIT 1;",
    "SELECT model FROM model_list JOIN car_names ON model_list.modelid = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id ORDER BY horsepower ASC LIMIT 1;",
    "SELECT model FROM model_list   INNER JOIN car_names ON model_list.modelid = car_names.modelid   INNER JOIN cars_data ON car_names.makeid = cars_data.id   WHERE cars_data.weight < (SELECT AVG(weight) FROM cars_data);",
    "SELECT model FROM model_list  JOIN car_names ON model_list.modelid = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE weight < (SELECT AVG(weight) FROM cars_data)",
    ", origin  SELECT fullname  FROM car_makers  JOIN model_list  ON car_makers.id = model_list.maker  JOIN car_names  ON model_list.modelid = car_names.modelid  JOIN cars_data  ON car_names.makeid = cars_data.id  WHERE year = 1970;",
    ", origin  SELECT fullname  FROM car_makers  INNER JOIN model_list  ON car_makers.id = model_list.maker  INNER JOIN car_names  ON model_list.modelid = car_names.makeid  INNER JOIN cars_data  ON car_names.model = cars_data.id  WHERE cars_data.year = 1970;",
    ", origin  SELECT make, year FROM car_names  INNER JOIN cars_data ON car_names.makeid = cars_data.id ORDER BY year ASC LIMIT 1;",
    ", origin  SELECT maker, MIN(year) AS earliest_year  FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.modelid = car_names.makeid JOIN cars_data ON car_names.makeid = cars_data.id GROUP BY maker;",
    ", origin  SELECT DISTINCT model_list.model  FROM model_list  INNER JOIN car_names ON car_names.makeid = model_list.maker  INNER JOIN cars_data ON cars_data.makeid = car_names.makeid  WHERE cars_data.year > 1980;",
    "SELECT model FROM model_list JOIN car_makers ON model_list.maker = car_makers.id JOIN countries ON car_makers.country = countries.countryid JOIN car_names ON model_list.modelid = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.year > 1980 GROUP BY model;",
    "SELECT continents.continent, COUNT(DISTINCT car_makers.maker) AS count  FROM continents  LEFT JOIN countries ON continents.contid = countries.continent  LEFT JOIN car_makers ON countries.countryid = car_makers.country  GROUP BY continents.continent;",
    "SELECT continents.continent, COUNT(DISTINCT car_makers.maker) FROM continents  INNER JOIN countries ON continents.contid = countries.continent INNER JOIN car_makers ON countries.countryid = car_makers.country INNER JOIN model_list ON car_makers.id = model_list.maker INNER JOIN car_names ON model_list.modelid = car_names.model INNER JOIN cars_data ON car_names.makeid = cars_data.id GROUP BY continents.continent;",
    "SELECT countries.countryname FROM countries INNER JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryname ORDER BY COUNT(car_makers.id) DESC LIMIT 1;",
    "SELECT countryname, COUNT(*) AS num_makers FROM countries c INNER JOIN car_makers cm ON c.countryid = cm.country GROUP BY countryname ORDER BY num_makers DESC LIMIT 1;",
    "SELECT fullname, COUNT(modelid)  FROM car_makers  INNER JOIN model_list ON car_makers.id = model_list.maker  GROUP BY fullname;",
    "SELECT car_makers.fullname, COUNT(model_list.modelid) AS num_model, car_makers.id  FROM car_makers  JOIN model_list ON car_makers.id = model_list.maker  GROUP BY car_makers.fullname, car_makers.id;",
    "SELECT accelerate FROM car_names  INNER JOIN model_list ON car_names.model = model_list.modelid  INNER JOIN car_makers ON model_list.maker = car_makers.id  INNER JOIN countries ON car_makers.country = countries.countryid  INNER JOIN continents ON countries.continent = continents.contid  WHERE car_names.make = 'amc hornet sportabout (sw)';",
    "SELECT accelerate FROM cars_data  JOIN car_names ON cars_data.makeid = car_names.makeid  JOIN model_list ON car_names.model = model_list.model  JOIN car_makers ON model_list.maker = car_makers.id  JOIN countries ON car_makers.country = countries.countryid  JOIN continents ON countries.continent = continents.contid  WHERE car_makers.fullname = 'AMC Hornet Sportabout' AND car_names.make = 'SW';",
    "SELECT COUNT(*) FROM car_makers INNER JOIN countries ON car_makers.country = countries.countryname INNER JOIN continents ON countries.continent = continents.contid WHERE continents.continent = 'France';",
    "SELECT COUNT(*)  FROM car_makers  INNER JOIN countries  ON car_makers.country = countries.countryname  WHERE countries.continent = 'France';",
    "SELECT COUNT(*) FROM car_makers cm INNER JOIN model_list ml ON cm.id = ml.maker INNER JOIN car_names cn ON ml.modelid = cn.makeid INNER JOIN cars_data cd ON cn.model = cd.id INNER JOIN countries c ON cm.country = c.countryid INNER JOIN continents con ON c.continent = con.contid WHERE con.continent = 'USA';",
    ", origin  SELECT COUNT(*)  FROM car_names cn  INNER JOIN model_list ml ON cn.makeid = ml.modelid  INNER JOIN car_makers cm ON ml.maker = cm.id  INNER JOIN countries c ON cm.country = c.countryid  INNER JOIN continents con ON c.continent = con.contid  WHERE con.continent = 'United States';",
    "SELECT AVG(mpg) FROM cars_data WHERE cylinders = 4;",
    "SELECT AVG(mpg)  FROM cars_data  WHERE cylinders = 4;",
    "SELECT MIN(weight) FROM cars_data WHERE cylinders = 8 AND year = 1974;",
    "SELECT MIN(weight) FROM cars_data WHERE cylinders = 8 AND year = 1974;",
    "SELECT maker, model FROM car_makers INNER JOIN model_list ON car_makers.id = model_list.maker INNER JOIN car_names ON model_list.modelid = car_names.modelid;",
    "SELECT maker, model FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.modelid = car_names.model;",
    "SELECT countries.countryname, countries.countryid  FROM countries  INNER JOIN car_makers  ON countries.countryid = car_makers.country  GROUP BY countries.countryname, countries.countryid  HAVING COUNT(car_makers.id) > 0;",
    "SELECT countries.countryname, countries.countryid  FROM countries  INNER JOIN car_makers ON countries.countryid = car_makers.country  GROUP BY countries.countryname, countries.countryid  HAVING COUNT(car_makers.id) > 0;",
    "SELECT COUNT(*) FROM cars_data WHERE horsepower > 150;",
    "SELECT COUNT(*) FROM cars_data WHERE horsepower > 150;",
    "SELECT AVG(weight) FROM cars_data GROUP BY year;",
    "SELECT AVG(weight), year FROM cars_data GROUP BY year;",
    "SELECT countries.countryname  FROM countries  INNER JOIN car_makers ON countries.countryid = car_makers.country  INNER JOIN model_list ON car_makers.id = model_list.maker  INNER JOIN car_names ON model_list.modelid = car_names.makeid  INNER JOIN cars_data ON car_names.model = cars_data.id  INNER JOIN continents ON countries.continent = continents.contid  WHERE continents.continent = 'Europe'  GROUP BY countries.countryname  HAVING COUNT(*) >= 3;",
    "SELECT countries.countryname  FROM countries  INNER JOIN car_makers  ON countries.countryid = car_makers.country  INNER JOIN model_list  ON car_makers.id = model_list.maker  INNER JOIN car_names  ON model_list.modelid = car_names.model  INNER JOIN cars_data  ON car_names.makeid = cars_data.id  INNER JOIN continents  ON countries.continent = continents.contid  WHERE continents.continent = 'Europe'  GROUP BY countries.countryname  HAVING COUNT(*) >= 3;",
    "SELECT MAX(horsepower), make FROM cars_data INNER JOIN car_names ON cars_data.makeid = car_names.makeid INNER JOIN model_list ON car_names.model = model_list.model WHERE cylinders = 3;",
    "SELECT MAX(horsepower) AS Largest_Horsepower, make FROM car_names  INNER JOIN model_list ON car_names.makeid = model_list.modelid  INNER JOIN car_makers ON model_list.maker = car_makers.id  INNER JOIN countries ON car_makers.country = countries.countryid  INNER JOIN continents ON countries.continent = continents.contid  WHERE cylinders = 3  GROUP BY make;",
    "SELECT model FROM model_list JOIN car_names ON model_list.modelid = car_names.modelid JOIN cars_data ON car_names.makeid = cars_data.id ORDER BY cars_data.mpg DESC LIMIT 1;",
    "SELECT model FROM model_list INNER JOIN car_names ON model_list.modelid = car_names.modelid INNER JOIN cars_data ON car_names.makeid = cars_data.id ORDER BY mpg DESC LIMIT 1;",
    "SELECT AVG(horsepower) FROM cars_data WHERE year < 1980;",
    "SELECT AVG(horsepower) FROM cars_data WHERE year < 1980;",
    "SELECT AVG(edispl) FROM car_makers INNER JOIN model_list ON car_makers.id = model_list.maker INNER JOIN car_names ON model_list.modelid = car_names.modelid INNER JOIN cars_data ON car_names.makeid = cars_data.id WHERE model_list.model = 'Volvo';",
    "SELECT AVG(edispl) FROM car_makers  JOIN model_list ON car_makers.id = model_list.maker  JOIN car_names ON model_list.modelid = car_names.makeid  JOIN cars_data ON car_names.model = cars_data.make  WHERE car_makers.fullname = 'Volvo';",
    "SELECT cylinders, MAX(accelerate)  FROM cars_data GROUP BY cylinders;",
    "SELECT MAX(accelerate) FROM cars_data;",
    "SELECT car_makers.maker, COUNT(cars_data.makeid) AS total_version FROM car_makers INNER JOIN countries ON car_makers.country = countries.countryname INNER JOIN model_list ON car_makers.id = model_list.maker INNER JOIN car_names ON model_list.modelid = car_names.model INNER JOIN cars_data ON car_names.makeid = cars_data.makeid GROUP BY car_makers.maker ORDER BY total_version DESC;",
    "SELECT model, COUNT(DISTINCT makeid) AS num_of_versions FROM model_list JOIN car_names ON model_list.modelid = car_names.model GROUP BY model ORDER BY num_of_versions DESC LIMIT 1;",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 4;",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 4;",
    "SELECT COUNT(*) FROM cars_data WHERE year = 1980;",
    "SELECT COUNT(*) FROM car_names INNER JOIN cars_data ON car_names.makeid = cars_data.id WHERE year = 1980;",
    ", origin  SELECT COUNT(*) FROM model_list INNER JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.fullname = 'American Motor Company';",
    "SELECT COUNT(*) FROM car_makers cm INNER JOIN model_list ml ON cm.id = ml.maker INNER JOIN car_names cn ON ml.modelid = cn.makeid WHERE cm.fullname = 'American Motor Company';",
    ", origin  SELECT fullname, id FROM car_makers WHERE id IN (SELECT maker FROM model_list GROUP BY maker HAVING COUNT(modelid) > 3);",
    "SELECT car_makers.fullname, car_makers.id FROM car_makers INNER JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.fullname, car_makers.id HAVING COUNT(model_list.model) > 3;",
    ", origin |  SELECT model FROM model_list INNER JOIN car_makers ON model_list.maker = car_makers.id INNER JOIN cars_data ON model_list.modelid = cars_data.id WHERE (car_makers.fullname = 'General Motors' OR cars_data.weight > 3500)",
    ", origin  SELECT model FROM model_list  JOIN car_makers ON model_list.maker = car_makers.id  JOIN countries ON car_makers.country = countries.countryid  WHERE (car_makers.fullname = 'General Motors' OR cars_data.weight > 3500);",
    "SELECT year  FROM cars_data  WHERE weight BETWEEN 3000 AND 4000;",
    "SELECT DISTINCT year  FROM cars_data  WHERE weight < 4000 OR weight > 3000;",
    "SELECT horsepower FROM cars_data WHERE accelerate = (SELECT MAX(accelerate) FROM cars_data);",
    "SELECT horsepower FROM cars_data WHERE accelerate = (SELECT MAX(accelerate) FROM cars_data);",
    "SELECT cylinders FROM cars_data  INNER JOIN car_names ON cars_data.makeid = car_names.makeid INNER JOIN model_list ON car_names.model = model_list.model WHERE model_list.maker = 'volvo' ORDER BY accelerate ASC LIMIT 1;",
    "SELECT cylinders  FROM cars_data  WHERE accelerate = (SELECT MIN(accelerate)                      FROM cars_data                      WHERE makeid IN (SELECT makeid                                       FROM car_names                                       WHERE model IN (SELECT model                                                       FROM model_list                                                       WHERE maker IN (SELECT id                                                                       FROM car_makers                                                                       WHERE fullname = 'Volvo'))))",
    "SELECT COUNT(*)  FROM cars_data WHERE accelerate > (SELECT MAX(horsepower) FROM cars_data);",
    "SELECT COUNT(*) FROM cars_data WHERE accelerate > (SELECT MAX(horsepower) FROM cars_data);",
    "SELECT COUNT(*) FROM countries  INNER JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryname HAVING COUNT(*) > 2;",
    "SELECT COUNT(*)  FROM countries c  INNER JOIN car_makers cm ON c.countryid = cm.country  INNER JOIN car_names cn ON cm.id = cn.makeid  GROUP BY c.countryname  HAVING COUNT(DISTINCT cm.maker) > 2;",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 6;",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 6;",
    "SELECT model FROM model_list  INNER JOIN car_names ON model_list.modelid = car_names.modelid INNER JOIN cars_data ON car_names.makeid = cars_data.id WHERE cylinders = 4 ORDER BY horsepower DESC LIMIT 1;",
    "SELECT model FROM model_list INNER JOIN car_names ON model_list.modelid = car_names.modelid INNER JOIN cars_data ON car_names.makeid = cars_data.id WHERE cylinders = 4 ORDER BY horsepower DESC LIMIT 1;",
    "SELECT car_makers.fullname, car_names.make FROM car_makers INNER JOIN countries ON car_makers.country = countries.countryid INNER JOIN car_names ON car_makers.id = car_names.makeid INNER JOIN cars_data ON car_names.makeid = cars_data.makeid WHERE cars_data.horsepower > (SELECT MIN(horsepower) FROM cars_data) AND cars_data.cylinders <= 3;",
    "SELECT car_makers.id, car_makers.fullname  FROM car_makers INNER JOIN car_names ON car_makers.id = car_names.makeid INNER JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.horsepower < (SELECT MIN(horsepower) FROM cars_data) AND cars_data.cylinders < 4;",
    "SELECT MAX(mpg)  FROM cars_data  WHERE cylinders = 8 OR year < 1980;",
    "SELECT MAX(mpg)  FROM cars_data  WHERE cylinders = 8 OR year < 1980;",
    ", origin  SELECT model  FROM model_list  INNER JOIN car_makers  ON model_list.maker = car_makers.id  INNER JOIN car_names  ON model_list.modelid = car_names.makeid  INNER JOIN cars_data  ON car_names.model = cars_data.id  WHERE car_makers.fullname != 'Ford Motor Company'  AND cars_data.weight < 3500;",
    ", origin  SELECT model FROM model_list  INNER JOIN car_makers ON model_list.maker = car_makers.id INNER JOIN car_names ON car_names.makeid = model_list.modelid INNER JOIN cars_data ON cars_data.id = car_names.model WHERE car_makers.fullname != 'Ford Motor Company' AND cars_data.weight < 3500;",
    "SELECT countries.countryname  FROM countries  LEFT JOIN car_makers  ON countries.countryname = car_makers.country  WHERE car_makers.country IS NULL;",
    "SELECT countries.countryname  FROM countries  LEFT JOIN car_makers  ON countries.countryid = car_makers.country  WHERE car_makers.country IS NULL;",
    "SELECT car_makers.id, car_makers.maker  FROM car_makers  INNER JOIN model_list  ON car_makers.id = model_list.maker  INNER JOIN car_names  ON model_list.modelid = car_names.makeid  GROUP BY car_makers.id, car_makers.maker  HAVING COUNT(DISTINCT model_list.modelid) >= 2  AND COUNT(DISTINCT car_makers.id) > 3;",
    ", origin  SELECT car_makers.id, car_makers.maker FROM car_makers INNER JOIN model_list ON car_makers.id = model_list.maker INNER JOIN car_names ON model_list.modelid = car_names.model INNER JOIN cars_data ON car_names.makeid = cars_data.id GROUP BY car_makers.id, car_makers.maker HAVING COUNT(model_list.modelid) >= 2 AND COUNT(cars_data.id) > 3;",
    ", origin  SELECT countries.countryid, countries.countryname  FROM countries INNER JOIN car_makers  ON countries.countryid = car_makers.country  INNER JOIN model_list  ON car_makers.id = model_list.maker  INNER JOIN car_names  ON model_list.modelid = car_names.makeid  INNER JOIN cars_data  ON car_names.model = cars_data.origin  WHERE model_list.model = 'fiat'  OR (SELECT COUNT(*)      FROM car_makers      WHERE car_makers.country = countries.countryid      GROUP BY car_makers.country      HAVING COUNT(*) > 3) > 0  GROUP BY countries.countryid;",
    ", origin  SELECT countries.countryid, countries.countryname  FROM countries  INNER JOIN car_makers ON countries.countryid = car_makers.country  INNER JOIN model_list ON car_makers.id = model_list.maker  INNER JOIN car_names ON model_list.modelid = car_names.model  INNER JOIN cars_data ON car_names.makeid = cars_data.id  WHERE car_makers.fullname = 'Fiat'  OR (SELECT COUNT(*)      FROM car_makers      WHERE countries.countryid = car_makers.country) > 3  GROUP BY countries.countryid, countries.countryname;",
    "SELECT country FROM airlines WHERE airline = 'JetBlue Airways';",
    "SELECT country  FROM airlines  WHERE airline = 'Jetblue Airways';",
    "SELECT abbreviation FROM airlines WHERE airline = 'JetBlue Airways';",
    "SELECT abbreviation FROM airlines WHERE airline = 'Jetblue Airways';",
    "SELECT airlines.airline, airlines.abbreviation FROM airlines WHERE airlines.country = 'USA';",
    "SELECT airlines.airline, airlines.abbreviation FROM airlines WHERE airlines.country = 'USA';",
    "SELECT airports.airportcode, airports.airportname  FROM airports  WHERE airports.city = 'Anthony';",
    "SELECT airportcode, airportname  FROM airports  WHERE city = 'Anthony';",
    "SELECT COUNT(*) FROM airlines;",
    "SELECT COUNT(*)  FROM airlines;",
    "SELECT COUNT(*) FROM airports;",
    "SELECT COUNT(*)  FROM airports;",
    "SELECT COUNT(*)  FROM flights;",
    "SELECT COUNT(*) FROM flights;",
    "SELECT airline  FROM airlines  WHERE abbreviation = 'UAL';",
    "SELECT airline  FROM airlines  WHERE abbreviation = 'UAL';",
    "SELECT COUNT(*) FROM airlines WHERE country = 'USA';",
    "SELECT COUNT(*) FROM airlines  WHERE country = 'USA';",
    "SELECT city, country  FROM airports  WHERE airportname = 'Alton'",
    "SELECT city, country FROM airports WHERE airportname = 'Alton';",
    "SELECT airportname  FROM airports  WHERE airportcode = 'AKO';",
    "SELECT COUNT(*)  FROM singer;",
    "SELECT COUNT(*) FROM singer;",
    "SELECT singer.name, singer.country, singer.age  FROM singer  JOIN singer_in_concert  ON singer.singer_id = singer_in_concert.singer_id  ORDER BY singer.age ASC",
    "SELECT s.name, s.country, s.age  FROM concert_singer s  ORDER BY s.age DESC",
    "SELECT AVG(age) AS Avg_Age, MIN(age) AS Min_Age, MAX(age) AS Max_Age FROM singer WHERE country='France';",
    "SELECT AVG(age) AS average_age, MIN(age) AS min_age, MAX(age) AS max_age FROM singer WHERE country = 'France' AND is_male = 1;",
    "SELECT name, song_release_year  FROM singer  ORDER BY age ASC  LIMIT 1;",
    "SELECT singer.name, song_release_year  FROM singer  INNER JOIN singer_in_concert      ON singer.singer_id = singer_in_concert.singer_id  WHERE singer.age = (SELECT MIN(age) FROM singer)",
    "SELECT DISTINCT country FROM singer WHERE age > 20;",
    "SELECT DISTINCT country  FROM singer  WHERE age > 20;",
    "SELECT country, COUNT(singer_id) AS number_of_singers FROM singer GROUP BY country;",
    "SELECT country, COUNT(singer_id) AS num_singers FROM singer GROUP BY country;",
    "SELECT song_name  FROM singer  WHERE age > (SELECT AVG(age) FROM singer);",
    "SELECT song_name  FROM singer  WHERE age > (SELECT AVG(age) FROM singer)",
    "SELECT location, name FROM stadium WHERE capacity BETWEEN 5000 AND 10000;",
    "SELECT location, name  FROM stadium  WHERE capacity BETWEEN 5000 AND 10000;",
    "|  SELECT MAX(capacity), AVG(capacity) FROM stadium;",
    "SELECT AVG(capacity) AS avg_capacity, MAX(capacity) AS max_capacity FROM stadium;",
    "SELECT name, capacity FROM stadium WHERE average = (SELECT MAX(average) FROM stadium)",
    "SELECT name, capacity  FROM stadium  ORDER BY average DESC  LIMIT 1;",
    "SELECT COUNT(*)  FROM concert  WHERE year IN (2014, 2015);",
    "SELECT COUNT(*)  FROM concert  WHERE year IN (2014, 2015);",
    "SELECT stadium.name, COUNT(*)  FROM stadium  INNER JOIN concert  ON stadium.stadium_id = concert.stadium_id  GROUP BY stadium.name",
    "SELECT stadium.name, COUNT(*) AS number_of_concerts FROM stadium INNER JOIN concert ON stadium.stadium_id = concert.stadium_id GROUP BY stadium.name;",
    "SELECT stadium.name, stadium.capacity FROM stadium JOIN concert ON concert.stadium_id = stadium.stadium_id JOIN singer_in_concert ON singer_in_concert.concert_id = concert.concert_id WHERE concert.year >= 2014 GROUP BY stadium.name, stadium.capacity ORDER BY COUNT(*) DESC LIMIT 1;",
    "SELECT name, capacity  FROM stadium  WHERE stadium_id IN (SELECT stadium_id                       FROM concert                       WHERE year > 2013                       GROUP BY stadium_id                       ORDER BY COUNT(*) DESC                       LIMIT 1)",
    "SELECT year, COUNT(*) AS Number_of_Concerts FROM concert GROUP BY year ORDER BY Number_of_Concerts DESC;",
    "SELECT year, COUNT(*) as num_concerts FROM concert GROUP BY year ORDER BY num_concerts DESC LIMIT 1;",
    "SELECT stadium.name FROM stadium WHERE stadium.stadium_id NOT IN (     SELECT concert.stadium_id     FROM concert );",
    "SELECT name  FROM stadium  WHERE stadium_id NOT IN  (SELECT stadium_id  FROM concert);",
    "SELECT s1.country, s2.country  FROM singer s1, singer s2 WHERE s1.age > 40 AND s2.age < 30;",
    "SELECT name  FROM stadium  WHERE stadium_id NOT IN (SELECT stadium_id                          FROM concert                          WHERE year = 2014);",
    "SELECT name  FROM stadium  WHERE stadium_id NOT IN (SELECT stadium_id                          FROM concert                          WHERE year = 2014);",
    "SELECT concert.concert_name, concert.theme, COUNT(singer_in_concert.singer_id) AS num_singers FROM concert  INNER JOIN singer_in_concert      ON concert.concert_id = singer_in_concert.concert_id GROUP BY concert.concert_name, concert.theme;",
    "SELECT c.concert_name, c.theme, COUNT(s.singer_id) FROM concert c INNER JOIN singer_in_concert sc ON c.concert_id = sc.concert_id INNER JOIN singer s ON sc.singer_id = s.singer_id GROUP BY c.concert_name, c.theme;",
    "SELECT singer.name, COUNT(*) AS num_concerts FROM singer INNER JOIN singer_in_concert ON singer_in_concert.singer_id = singer.singer_id GROUP BY singer.name;",
    "SELECT s.name, COUNT(sic.concert_id)  FROM singer s INNER JOIN singer_in_concert sic ON s.singer_id = sic.singer_id GROUP BY s.name;",
    "SELECT singer.name FROM singer  INNER JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id INNER JOIN concert ON singer_in_concert.concert_id = concert.concert_id WHERE concert.year = 2014;",
    "SELECT s.name FROM singer s JOIN singer_in_concert sc ON sc.singer_id = s.singer_id JOIN concert c ON c.concert_id = sc.concert_id WHERE c.year = 2014;",
    "SELECT singer.name, singer.country  FROM singer INNER JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id WHERE singer.song_name LIKE '%Hey%';",
    "SELECT singer.name, singer.country  FROM singer  INNER JOIN singer_in_concert  ON singer.singer_id = singer_in_concert.singer_id  INNER JOIN concert  ON singer_in_concert.concert_id = concert.concert_id  WHERE singer.song_name LIKE '%Hey%';",
    "SELECT     stadium.name, stadium.location FROM     stadium INNER JOIN     concert ON stadium.stadium_id = concert.stadium_id WHERE     concert.year IN (2014, 2015) GROUP BY     stadium.name, stadium.location;",
    "SELECT s.name, s.location FROM stadium s JOIN concert c   ON s.stadium_id = c.stadium_id JOIN singer_in_concert sc    ON c.concert_id = sc.concert_id WHERE c.year IN (2014, 2015) GROUP BY s.name, s.location HAVING COUNT(DISTINCT c.year) = 2;",
    "SELECT COUNT(*)  FROM concert  INNER JOIN stadium  ON concert.stadium_id = stadium.stadium_id WHERE stadium.capacity = ( SELECT MAX(capacity)  FROM stadium)",
    "SELECT COUNT(*)  FROM stadium s JOIN concert c ON s.stadium_id = c.stadium_id WHERE s.capacity = (SELECT MAX(capacity) FROM stadium);",
    "SELECT COUNT(*) FROM pets WHERE weight > 10;",
    "SELECT COUNT(*) FROM has_pet  INNER JOIN pets_1 ON has_pet.petid = pets_1.petid WHERE weight > 10;",
    "SELECT weight FROM pets WHERE pet_age = (SELECT MIN(pet_age) FROM pets);",
    "|  SELECT weight  FROM pets  WHERE pettype = 'dog'  ORDER BY pet_age  LIMIT 1;",
    "SELECT pettype, MAX(weight)  FROM pets  GROUP BY pettype;",
    "SELECT pettype, MAX(weight) AS max_weight FROM pets GROUP BY pettype;",
    "SELECT COUNT(*) FROM students JOIN has_pet ON students.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE students.age > 20;",
    "SELECT COUNT(*) FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE student.age > 20;",
    "SELECT COUNT(*)  FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid  WHERE student.sex = 'F' AND pets.pettype = 'dog';",
    "SELECT COUNT(*) FROM student s INNER JOIN has_pet p ON s.stuid = p.stuid INNER JOIN pets t ON p.petid = t.petid WHERE s.sex = 'female' AND t.pettype = 'dog';",
    "SELECT COUNT(DISTINCT pettype) FROM pets;",
    "SELECT COUNT(DISTINCT pettype) FROM pets;",
    "SELECT fname FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid  WHERE pettype IN ('cat', 'dog');",
    "SELECT fname FROM student, has_pet, pets WHERE student.stuid = has_pet.stuid AND pets.petid = has_pet.petid AND (pettype = 'cat' OR pettype = 'dog');",
    "SELECT fname FROM student INNER JOIN has_pet ON student.stuid = has_pet.stuid INNER JOIN pets ON has_pet.petid = pets.petid WHERE pettype = 'cat' AND pettype = 'dog';",
    "SELECT fname  FROM student  WHERE stuid IN (SELECT stuid                  FROM has_pet                  WHERE petid IN (SELECT petid                                  FROM pets                                  WHERE pettype IN ('cat','dog'))                 GROUP BY stuid                 HAVING COUNT(*) = 2);",
    "SELECT lname, fname, age, major  FROM student  WHERE stuid NOT IN      (SELECT stuid FROM has_pet      JOIN pets ON has_pet.petid = pets.petid      WHERE pettype = 'cat');",
    "SELECT student.major, student.age FROM student LEFT JOIN has_pet ON student.stuid = has_pet.stuid LEFT JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype != 'cat'",
    "SELECT stuid  FROM student  WHERE stuid NOT IN (SELECT stuid                      FROM has_pet                      WHERE petid IN (SELECT petid                                      FROM pets                                      WHERE pettype = 'cat'))",
    "SELECT stuid  FROM student  WHERE stuid NOT IN (SELECT stuid                      FROM has_pet                      INNER JOIN pets                      ON has_pet.petid = pets.petid                      WHERE pettype = 'cat');",
    "SELECT fname, age FROM student s INNER JOIN has_pet hp ON s.stuid = hp.stuid INNER JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'dog' AND NOT EXISTS (SELECT 1 FROM has_pet hp2 INNER JOIN pets p2 ON hp2.petid = p2.petid WHERE hp2.stuid = s.stuid AND p2.pettype = 'cat')",
    "|  SELECT fname FROM student INNER JOIN has_pet ON student.stuid=has_pet.stuid INNER JOIN pets ON has_pet.petid=pets.petid WHERE pets.pettype='dog' AND has_pet.petid NOT IN (SELECT petid FROM pets WHERE pettype='cat') GROUP BY fname;",
    "SELECT pettype, weight  FROM pets WHERE pet_age = (SELECT MIN(pet_age) FROM pets);",
    "SELECT pettype, weight FROM pets WHERE pet_age = (SELECT MIN(pet_age) FROM pets);",
    "SELECT petid, weight  FROM pets  WHERE pet_age > 1;",
    "SELECT petid, weight FROM pets WHERE pet_age > 1;",
    "SELECT pettype, AVG(pet_age) AS Average_Age, MAX(pet_age) AS Max_Age FROM pets GROUP BY pettype;",
    "SELECT pettype, AVG(pet_age) AS avg_age, MAX(pet_age) AS max_age FROM pets GROUP BY pettype;",
    "SELECT pettype, AVG(weight) as avg_weight FROM pets GROUP BY pettype;",
    "SELECT pettype, AVG(weight) FROM pets GROUP BY pettype;",
    "SELECT fname, age  FROM student  INNER JOIN has_pet  ON student.stuid = has_pet.stuid  INNER JOIN pets  ON has_pet.petid = pets.petid;",
    "SELECT fname, age  FROM student  INNER JOIN has_pet  ON student.stuid = has_pet.stuid  INNER JOIN pets  ON has_pet.petid = pets.petid;",
    "SELECT petid  FROM pets_1  INNER JOIN has_pet  ON pets_1.stuid = has_pet.stuid  INNER JOIN pets  ON has_pet.petid = pets.petid  WHERE lname = 'Smith';",
    "|  SELECT petid FROM has_pet INNER JOIN student ON has_pet.stuid = student.stuid WHERE lname = 'Smith';",
    "SELECT stuid, COUNT(petid) FROM has_pet JOIN pets_1 ON has_pet.petid = pets_1.petid GROUP BY stuid;",
    "SELECT stuid, COUNT(petid) AS num_pets FROM students JOIN has_pet USING (stuid) JOIN pets USING (petid) GROUP BY stuid;",
    "SELECT fname, sex  FROM student  WHERE stuid IN (SELECT stuid                  FROM has_pet                  GROUP BY stuid                  HAVING COUNT(petid) > 1)",
    "SELECT fname, sex FROM student WHERE stuid IN (SELECT stuid                  FROM has_pet                  GROUP BY stuid                  HAVING COUNT(petid) > 1);",
    "SELECT lname  FROM student  INNER JOIN has_pet  ON student.stuid = has_pet.stuid INNER JOIN pets ON has_pet.petid = pets.petid WHERE pets.pet_age = 3;",
    "SELECT lname  FROM student INNER JOIN has_pet ON student.stuid = has_pet.stuid INNER JOIN pets ON has_pet.petid = pets.petid WHERE pets.pet_age = 3;",
    "SELECT AVG(age) FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet)",
    "SELECT AVG(age) FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet);",
    "SELECT COUNT(*) FROM continents;",
    "SELECT COUNT(*) FROM continents;",
    ", origin |  SELECT contid, continent, COUNT(countryid) AS Number_of_countries FROM continents INNER JOIN countries ON continents.contid = countries.continent GROUP BY contid, continent;",
    "|  SELECT contid, continent, COUNT(countryname) AS 'Number of Countries' FROM continents JOIN countries ON continents.contid = countries.continent GROUP BY contid, continent;",
    "SELECT COUNT(*)  FROM countries;",
    "SELECT COUNT(*)  FROM countries;",
    "SELECT car_makers.fullname, car_makers.id, COUNT(model_list.modelid) FROM car_makers JOIN countries ON car_makers.country = countries.countryid JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.fullname, car_makers.id;",
    "SELECT car_makers.fullname, car_makers.id, COUNT(model_list.modelid) AS models_produced FROM car_makers INNER JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.fullname, car_makers.id;",
    "SELECT MIN(horsepower) FROM cars_data c JOIN car_names n ON c.makeid = n.makeid JOIN model_list m ON n.model = m.model JOIN car_makers cm ON m.maker = cm.id GROUP BY cm.fullname;",
    "SELECT model FROM model_list JOIN car_names ON model_list.modelid = car_names.modelid JOIN cars_data ON car_names.makeid = cars_data.id ORDER BY horsepower ASC LIMIT 1;",
    "SELECT model FROM model_list  INNER JOIN car_names ON model_list.modelid = car_names.modelid INNER JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.weight < (SELECT AVG(weight) FROM cars_data);",
    "SELECT model FROM model_list INNER JOIN car_names ON model_list.modelid = car_names.modelid INNER JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.weight <  (SELECT AVG(weight) FROM cars_data)",
    ", origin |  SELECT car_makers.fullname  FROM car_makers INNER JOIN car_names ON car_makers.id = car_names.makeid  INNER JOIN cars_data ON car_names.model = cars_data.model  WHERE cars_data.year = 1970;",
    "SELECT distinct fullname  FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.modelid = car_names.makeid JOIN cars_data ON car_names.model = cars_data.make WHERE cars_data.year = 1970;",
    ", origin , name |  SELECT make, year FROM car_names JOIN cars_data ON car_names.makeid = cars_data.id ORDER BY year ASC LIMIT 1;",
    "SELECT car_makers.maker, MIN(cars_data.year)  FROM car_makers  JOIN model_list ON car_makers.id = model_list.maker  JOIN car_names ON model_list.modelid = car_names.model  JOIN cars_data ON car_names.makeid = cars_data.id GROUP BY car_makers.maker",
    "SELECT DISTINCT car_names.make  FROM car_names  INNER JOIN model_list  ON car_names.model = model_list.modelid  INNER JOIN car_makers  ON model_list.maker = car_makers.id  INNER JOIN countries  ON car_makers.country = countries.countryid  INNER JOIN continents  ON countries.continent = continents.contid  WHERE year > 1980;",
    "SELECT model FROM model_list INNER JOIN car_names ON model_list.modelid = car_names.model INNER JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.year > 1980;",
    "SELECT continents.continent, COUNT(DISTINCT car_makers.maker) FROM continents JOIN countries ON continents.contid = countries.continent JOIN car_makers ON countries.countryid = car_makers.country JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.modelid = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id GROUP BY continents.continent;",
    "SELECT continents.continent, COUNT(car_makers.id) AS car_makers_count  FROM continents  INNER JOIN countries ON continents.contid = countries.continent  INNER JOIN car_makers ON car_makers.country = countries.countryid  INNER JOIN model_list ON model_list.maker = car_makers.id  INNER JOIN car_names ON car_names.makeid = model_list.modelid  INNER JOIN cars_data ON cars_data.id = car_names.makeid  GROUP BY continents.continent",
    "SELECT countryname  FROM countries  JOIN car_makers  ON countries.countryid = car_makers.country  GROUP BY countryname  ORDER BY COUNT(car_makers.id) DESC  LIMIT 1;",
    "SELECT countries.countryname FROM countries  INNER JOIN car_makers ON countries.countryid = car_makers.country INNER JOIN model_list ON car_makers.id = model_list.maker INNER JOIN car_names ON model_list.modelid = car_names.makeid INNER JOIN cars_data ON car_names.model = cars_data.id GROUP BY countries.countryname ORDER BY COUNT(cars_data.id) DESC LIMIT 1;",
    "SELECT maker, fullname, COUNT(model) FROM car_makers  INNER JOIN model_list  ON car_makers.id = model_list.maker  GROUP BY maker, fullname;",
    ", origin  SELECT cm.id, cm.maker, cm.fullname, COUNT(ml.modelid) as num_models FROM car_makers cm INNER JOIN model_list ml ON cm.id = ml.maker GROUP BY cm.id, cm.maker, cm.fullname;",
    "SELECT accelerate  FROM cars_data  INNER JOIN car_names ON cars_data.makeid = car_names.makeid  INNER JOIN model_list ON car_names.model = model_list.model  INNER JOIN car_makers ON model_list.maker = car_makers.id  INNER JOIN countries ON car_makers.country = countries.countryid  INNER JOIN continents ON countries.continent = continents.contid  WHERE car_names.make = 'amc hornet sportabout' AND cars_data.year = 'sw';",
    "SELECT accelerate FROM cars_data INNER JOIN car_names ON cars_data.makeid = car_names.makeid INNER JOIN model_list ON car_names.model = model_list.model INNER JOIN car_makers ON model_list.maker = car_makers.id INNER JOIN countries ON car_makers.country = countries.countryid INNER JOIN continents ON countries.continent = continents.contid WHERE car_names.make = 'AMC Hornet Sportabout (sw)'",
    "SELECT COUNT(DISTINCT maker)  FROM car_makers cm INNER JOIN countries c ON cm.country = c.countryname WHERE c.continent = 'France';",
    "SELECT COUNT(DISTINCT car_makers.maker) FROM car_makers JOIN countries ON car_makers.country = countries.countryname JOIN continents ON countries.continent = continents.contid WHERE continents.continent = 'France'",
    "SELECT COUNT(*)  FROM model_list ml  INNER JOIN car_names cn ON ml.modelid = cn.modelid INNER JOIN car_makers cm ON cn.makeid = cm.id INNER JOIN countries c ON cm.country = c.countryname INNER JOIN continents con ON c.continent = con.contid WHERE con.continent = 'USA'",
    "SELECT COUNT(*) FROM car_names cn INNER JOIN car_makers cm ON cn.makeid = cm.id INNER JOIN countries c ON cm.country = c.countryid INNER JOIN continents cc ON c.continent = cc.contid WHERE cc.continent = 'United States';",
    "SELECT AVG(mpg) FROM cars_data WHERE cylinders = 4;",
    "SELECT AVG(mpg) FROM car_names INNER JOIN cars_data ON car_names.makeid = cars_data.id WHERE cylinders = 4;",
    "SELECT MIN(weight) FROM cars_data WHERE cylinders = 8 AND year = 1974;",
    "SELECT MIN(weight) FROM car_names INNER JOIN model_list ON car_names.makeid = model_list.modelid INNER JOIN car_makers ON model_list.maker = car_makers.id WHERE cylinders = 8 AND year = 1974;",
    "SELECT maker, model FROM car_makers  INNER JOIN model_list ON car_makers.id = model_list.maker INNER JOIN car_names ON model_list.modelid = car_names.makeid;",
    "SELECT maker, model FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.modelid = car_names.makeid;",
    "SELECT countries.countryname, countries.countryid FROM countries  JOIN car_makers  ON countries.countryid = car_makers.country  GROUP BY countries.countryname, countries.countryid  HAVING COUNT(*) > 0;",
    "SELECT countries.countryname, countries.countryid FROM countries INNER JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryname, countries.countryid HAVING COUNT(car_makers.id) > 0;",
    "SELECT COUNT(*)  FROM car_makers cm  INNER JOIN model_list ml  ON cm.id = ml.maker  INNER JOIN car_names cn  ON ml.modelid = cn.model  INNER JOIN cars_data cd  ON cn.makeid = cd.id  WHERE cd.horsepower > 150;",
    "SELECT COUNT(*) FROM cars_data WHERE horsepower > 150;",
    "SELECT AVG(weight) FROM cars_data GROUP BY year;",
    "SELECT AVG(weight), year FROM cars_data GROUP BY year;",
    "SELECT countries.countryname  FROM countries  INNER JOIN car_makers ON countries.countryid = car_makers.country  INNER JOIN model_list ON car_makers.id = model_list.maker  INNER JOIN car_names ON model_list.modelid = car_names.makeid  WHERE countries.continent = 'Europe'  GROUP BY countries.countryname  HAVING COUNT(DISTINCT car_names.makeid) >= 3;",
    "SELECT countries.countryname  FROM continents  INNER JOIN countries ON continents.contid = countries.continent INNER JOIN car_makers ON countries.countryid = car_makers.country  WHERE continents.continent = 'Europe' GROUP BY countries.countryname  HAVING COUNT(car_makers.id) > 3;",
    "SELECT MAX(horsepower), make FROM car_names  INNER JOIN cars_data  ON car_names.makeid = cars_data.id  WHERE cylinders = 3 GROUP BY make;",
    "SELECT MAX(horsepower) AS largest_horsepower, make FROM car_names cn INNER JOIN model_list ml ON cn.makeid = ml.modelid INNER JOIN car_makers cm ON ml.maker = cm.id INNER JOIN cars_data cd ON cn.makeid = cd.id WHERE cylinders = 3 GROUP BY make;",
    ", origin |  SELECT MAX(mpg) FROM cars_data;",
    "SELECT model FROM model_list JOIN car_names ON model_list.modelid = car_names.modelid JOIN cars_data ON car_names.makeid = cars_data.id ORDER BY mpg DESC LIMIT 1;",
    "SELECT AVG(horsepower) FROM cars_data WHERE year < 1980;",
    "SELECT AVG(horsepower) FROM cars_data WHERE year < 1980;",
    "SELECT AVG(edispl) FROM cars_data c  INNER JOIN model_list m  ON c.makeid = m.modelid  INNER JOIN car_makers cm  ON m.maker = cm.id  INNER JOIN car_names cn  ON c.makeid = cn.makeid  WHERE cn.model = \"volvo\";",
    "SELECT AVG(edispl)  FROM car_names JOIN model_list ON car_names.makeid = model_list.modelid JOIN car_makers ON model_list.maker = car_makers.id WHERE car_names.make = 'Volvo';",
    "SELECT cylinders, MAX(accelerate)  FROM cars_data  GROUP BY cylinders;",
    "SELECT MAX(accelerate) FROM cars_data;",
    "SELECT car_makers.fullname, model_list.model, COUNT(DISTINCT cars_data.makeid) AS version_count  FROM car_makers  INNER JOIN model_list ON car_makers.id = model_list.maker  INNER JOIN cars_data ON model_list.modelid = cars_data.model  GROUP BY car_makers.fullname, model_list.model  ORDER BY version_count DESC;",
    "SELECT model, COUNT(DISTINCT makeid) AS Versions FROM car_names GROUP BY model ORDER BY Versions DESC LIMIT 1;",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 4;",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 4;",
    "SELECT COUNT(*) FROM cars_data WHERE year = 1980;",
    ", origin  SELECT COUNT(*)  FROM cars_data  WHERE year = 1980;",
    "SELECT COUNT(DISTINCT model_list.model)  FROM model_list  INNER JOIN car_makers  ON car_makers.id = model_list.maker  WHERE car_makers.fullname = 'American Motor Company';",
    "SELECT COUNT(model_list.modelid)  FROM model_list  INNER JOIN car_makers  ON model_list.maker = car_makers.id  INNER JOIN countries  ON car_makers.country = countries.countryid  INNER JOIN continents  ON countries.continent = continents.contid  WHERE car_makers.fullname = 'American Motor Company'",
    ", origin   SELECT fullname, id FROM car_makers INNER JOIN car_names ON car_makers.id = car_names.makeid INNER JOIN model_list ON car_names.model = model_list.model GROUP BY fullname, id HAVING COUNT(model_list.model) > 3;",
    "SELECT car_makers.fullname, car_makers.id  FROM car_makers  INNER JOIN model_list ON model_list.maker = car_makers.id  GROUP BY car_makers.fullname, car_makers.id  HAVING COUNT(model_list.modelid) > 3;",
    "|  SELECT model  FROM model_list  INNER JOIN car_makers  ON model_list.maker = car_makers.id  INNER JOIN cars_data  ON model_list.modelid = cars_data.makeid  WHERE car_makers.fullname IN ('General Motors')  AND cars_data.weight > 3500;",
    "SELECT model FROM model_list  WHERE maker IN ('General Motors', 'weight')  AND weight > 3500;",
    "SELECT year  FROM cars_data  WHERE weight BETWEEN 3000 AND 4000;",
    "SELECT DISTINCT year  FROM cars_data  WHERE weight < 4000 OR weight > 3000;",
    "SELECT horsepower  FROM cars_data ORDER BY accelerate DESC LIMIT 1;",
    "SELECT horsepower FROM cars_data WHERE accelerate = (SELECT MAX(accelerate) FROM cars_data);",
    "SELECT cylinders  FROM cars_data  WHERE makeid IN (SELECT makeid FROM car_names WHERE model = 'volvo')  ORDER BY accelerate ASC  LIMIT 1;",
    "SELECT cylinders  FROM cars_data  WHERE accelerate = (SELECT MIN(accelerate)                     FROM cars_data                     WHERE makeid IN (SELECT makeid                                      FROM car_names                                      WHERE model = 'volvo'))",
    "SELECT COUNT(*) FROM car_names cn INNER JOIN cars_data cd ON cn.makeid = cd.id WHERE cd.accelerate > (SELECT MAX(accelerate)                        FROM car_names cn2                        INNER JOIN cars_data cd2 ON cn2.makeid = cd2.id)",
    "SELECT COUNT(*)  FROM cars_data  WHERE accelerate > (SELECT MAX(horsepower) FROM cars_data)",
    "SELECT COUNT(*) FROM countries c JOIN car_makers cm ON c.countryid = cm.country GROUP BY c.countryname HAVING COUNT(*) > 2;",
    "SELECT COUNT(*)  FROM countries  INNER JOIN car_makers ON countries.countryid = car_makers.country  GROUP BY countries.countryname  HAVING COUNT(car_makers.id) > 2;",
    "SELECT COUNT(*)  FROM cars_data  WHERE cylinders > 6;",
    "SELECT COUNT(*)  FROM cars_data  WHERE cylinders > 6;",
    "SELECT model FROM model_list JOIN car_names ON model_list.modelid = car_names.modelid JOIN cars_data ON car_names.makeid = cars_data.id WHERE cylinders = 4 ORDER BY horsepower DESC LIMIT 1;",
    "SELECT model, MAX(horsepower)  FROM cars_data INNER JOIN model_list ON model_list.modelid = cars_data.model WHERE cylinders = 4 GROUP BY model;",
    "|  SELECT car_names.makeid, car_names.make  FROM car_names  INNER JOIN cars_data ON car_names.makeid = cars_data.makeid WHERE cars_data.horsepower > (SELECT MIN(horsepower) FROM cars_data) AND cars_data.cylinders < 3;",
    "SELECT car_makers.id, car_makers.fullname  FROM car_makers  INNER JOIN car_names ON car_names.makeid = car_makers.id INNER JOIN cars_data ON cars_data.makeid = car_names.makeid WHERE cars_data.cylinders < 4 AND cars_data.horsepower < cars_data.edispl;",
    "SELECT MAX(mpg)  FROM cars_data WHERE cylinders = 8 OR year < 1980;",
    "SELECT MAX(mpg)  FROM cars_data  WHERE cylinders = 8 OR year < 1980;",
    ", origin  SELECT model  FROM model_list  WHERE maker NOT IN (SELECT fullname                      FROM car_makers                      WHERE fullname = 'Ford Motor Company')  AND model IN (SELECT model                FROM car_names                WHERE weight < 3500);",
    ", origin  SELECT model  FROM model_list  INNER JOIN car_makers ON model_list.maker = car_makers.id  INNER JOIN countries ON car_makers.country = countries.countryid  WHERE countries.continent != 'Ford Motor Company'  AND weight < 3500;",
    ", origin  SELECT countries.countryname  FROM countries  LEFT JOIN car_makers  ON countries.countryid = car_makers.country  WHERE car_makers.country IS NULL;",
    ", origin |   SELECT countries.countryname  FROM countries  LEFT JOIN car_makers  ON countries.countryid=car_makers.country  WHERE car_makers.id IS NULL;",
    ", origin |  SELECT car_makers.id, car_makers.maker FROM car_makers WHERE car_makers.id IN (SELECT maker FROM model_list GROUP BY maker HAVING COUNT(modelid) > 2) AND car_makers.id IN (SELECT maker FROM model_list GROUP BY maker HAVING COUNT(DISTINCT maker) > 3);",
    "SELECT id, maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.modelid = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id GROUP BY id, maker HAVING COUNT(modelid) >= 2 AND COUNT(makeid) > 3;",
    "SELECT countries.countryid, countries.countryname FROM countries INNER JOIN car_makers ON car_makers.country = countries.countryname INNER JOIN model_list ON model_list.maker = car_makers.fullname INNER JOIN car_names ON car_names.makeid = model_list.modelid WHERE car_names.model = 'fiat' OR (     SELECT COUNT(DISTINCT car_makers.maker)     FROM car_makers     WHERE car_makers.country = countries.countryname     GROUP BY car_makers.country     HAVING COUNT(DISTINCT car_makers.maker) > 3 ) > 0 GROUP BY countries.countryid, countries.countryname",
    "SELECT countries.countryid, countries.countryname FROM countries INNER JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryid, countries.countryname HAVING COUNT(car_makers.id) > 3 OR car_makers.maker = 'fiat'",
    "SELECT country FROM airlines WHERE airline = 'JetBlue Airways';",
    "SELECT country FROM airlines WHERE airline = 'Jetblue Airways';",
    "SELECT abbreviation FROM airlines WHERE airline = 'JetBlue Airways';",
    "SELECT abbreviation FROM airlines WHERE airline = 'Jetblue Airways';",
    "SELECT airlines.airline, airlines.abbreviation  FROM airlines  WHERE country = 'USA';",
    "SELECT airlines.airline, airlines.abbreviation FROM airlines INNER JOIN airports ON airports.countryabbrev = airlines.country  WHERE airports.countryabbrev = 'USA'",
    "SELECT airports.airportcode, airports.airportname  FROM airports  WHERE airports.city = 'Anthony'",
    "SELECT airportcode, airportname  FROM airports  WHERE city = 'Anthony';",
    "SELECT COUNT(*) FROM airlines;",
    "SELECT COUNT(*) FROM airlines;",
    "SELECT COUNT(*) FROM airports;",
    "SELECT COUNT(*) FROM airports;",
    "SELECT COUNT(*) FROM flights;",
    "SELECT COUNT(*) FROM flights;",
    "SELECT airline FROM airlines WHERE abbreviation = 'UAL';",
    "SELECT airline  FROM airlines  WHERE abbreviation = 'UAL';",
    "SELECT COUNT(*) FROM airlines WHERE country = 'USA';",
    "SELECT COUNT(*) FROM airlines WHERE country = 'USA';",
    "SELECT a.city, a.country  FROM airports a INNER JOIN flights f ON a.airportcode = f.destairport WHERE f.airline = 'Alton'",
    "SELECT city, country FROM airports WHERE airportname = 'Alton';",
    "SELECT airportname FROM airports WHERE airportcode = 'AKO';",
    "SELECT COUNT(*) FROM singer;",
    "SELECT COUNT(*) AS Total_Number_of_Singers FROM Singer;",
    "SELECT name, country, age FROM singer ORDER BY age DESC;",
    "SELECT singer.name, singer.country, singer.age FROM singer INNER JOIN singer_in_concert ON singer_in_concert.singer_id = singer.singer_id ORDER BY singer.age DESC;",
    "SELECT AVG(age) AS average_age, MIN(age) AS minimum_age, MAX(age) AS maximum_age FROM singer WHERE country = 'France';",
    "SELECT AVG(age) as avg_age, MIN(age) as min_age, MAX(age) as max_age FROM singer WHERE country = 'France';",
    "SELECT name, song_release_year  FROM singer  ORDER BY age ASC  LIMIT 1;",
    "SELECT song_name, song_release_year  FROM singer  ORDER BY age  LIMIT 1;",
    "SELECT DISTINCT country FROM singer WHERE age > 20;",
    "SELECT DISTINCT country  FROM singer  WHERE age > 20;",
    "SELECT country, COUNT(*) AS [Number of Singers]  FROM singer  GROUP BY country;",
    "SELECT country, COUNT(singer_id) AS num_singers  FROM singer  GROUP BY country;",
    "SELECT singer.name, singer.song_name  FROM singer  INNER JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id  INNER JOIN concert ON singer_in_concert.concert_id = concert.concert_id  INNER JOIN stadium ON concert.stadium_id = stadium.stadium_id  WHERE singer.age > stadium.average;",
    "SELECT song_name  FROM singer  WHERE age > average;",
    "SELECT location, name FROM stadium WHERE capacity BETWEEN 5000 AND 10000;",
    "SELECT location, name FROM stadium WHERE capacity BETWEEN 5000 AND 10000;",
    "SELECT MAX(capacity), AVG(capacity) FROM stadium;",
    "SELECT AVG(capacity) AS average_capacity, MAX(capacity) AS maximum_capacity FROM stadium;",
    "SELECT name, capacity  FROM stadium  ORDER BY average DESC  LIMIT 1;",
    "SELECT  name, capacity FROM stadium WHERE average = (SELECT MAX(average) FROM stadium)",
    "SELECT COUNT(*)  FROM concert  WHERE year IN (2014, 2015);",
    "SELECT COUNT(*)  FROM concert  WHERE year IN (2014, 2015);",
    "SELECT stadium.name, COUNT(concert.concert_id) AS num_concerts FROM stadium INNER JOIN concert ON stadium.stadium_id = concert.stadium_id GROUP BY stadium.name;",
    "SELECT s.name, COUNT(c.concert_id) AS total_concerts FROM stadium s  INNER JOIN concert c  ON s.stadium_id = c.stadium_id GROUP BY s.name;",
    "SELECT      stadium.name,      stadium.capacity  FROM stadium  INNER JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year >= 2014 GROUP BY stadium.name, stadium.capacity ORDER BY COUNT(*) DESC LIMIT 1;",
    "SELECT     name, capacity FROM     stadium WHERE     highest = (SELECT MAX(highest) FROM stadium)     AND year > 2013",
    "SELECT year, COUNT(*) AS num_concerts FROM concert GROUP BY year ORDER BY num_concerts DESC LIMIT 1;",
    "SELECT year, COUNT(*) AS 'number_of_concerts' FROM concert GROUP BY year ORDER BY number_of_concerts DESC LIMIT 1;",
    "SELECT name  FROM stadium  LEFT JOIN concert  ON stadium.stadium_id = concert.stadium_id  WHERE concert.stadium_id IS NULL;",
    "SELECT name FROM stadium WHERE stadium_id NOT IN (     SELECT DISTINCT stadium_id     FROM concert );",
    "SELECT DISTINCT s1.country, s2.country  FROM singer s1  JOIN singer_in_concert sic1  ON s1.singer_id = sic1.singer_id  JOIN singer s2  ON s2.singer_id = sic1.singer_id  WHERE s1.age > 40  AND s2.age < 30;",
    "SELECT name  FROM stadium  WHERE stadium_id NOT IN (SELECT stadium_id                           FROM concert                           WHERE year = 2014)",
    "SELECT name  FROM stadium  WHERE stadium_id NOT IN (SELECT stadium_id                          FROM concert                          WHERE year = 2014);",
    "SELECT concert.concert_name, concert.theme, COUNT(singer_in_concert.singer_id)  FROM concert  INNER JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id  GROUP BY concert.concert_name, concert.theme;",
    "SELECT s.name, c.theme, COUNT(*)  FROM singer_in_concert sc  JOIN singer s ON sc.singer_id = s.singer_id  JOIN concert c ON sc.concert_id = c.concert_id  GROUP BY s.name, c.theme;",
    "SELECT singer.name, COUNT(*) AS 'number of concerts' FROM singer_in_concert INNER JOIN singer ON singer_in_concert.singer_id=singer.singer_id GROUP BY singer.name;",
    "SELECT s.name, COUNT(sic.concert_id) AS num_concerts FROM singer s JOIN singer_in_concert sic ON s.singer_id = sic.singer_id GROUP BY s.name;",
    "SELECT singer.name  FROM singer  INNER JOIN singer_in_concert  ON singer.singer_id = singer_in_concert.singer_id  INNER JOIN concert  ON concert.concert_id = singer_in_concert.concert_id  WHERE concert.year = 2014;",
    "SELECT s.name  FROM singer s  INNER JOIN singer_in_concert sc  ON s.singer_id = sc.singer_id  INNER JOIN concert c  ON sc.concert_id = c.concert_id  WHERE c.year = 2014;",
    "SELECT singer.name, singer.country  FROM singer  INNER JOIN singer_in_concert  ON singer.singer_id = singer_in_concert.singer_id WHERE singer.song_name LIKE '%Hey%'",
    "SELECT name, country  FROM singer  INNER JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id  INNER JOIN concert ON singer_in_concert.concert_id = concert.concert_id  WHERE song_name LIKE '%Hey%';",
    "SELECT s.name, s.location  FROM stadium s  INNER JOIN concert c ON c.stadium_id = s.stadium_id  WHERE c.year IN (2014, 2015) GROUP BY s.name, s.location;",
    "|  SELECT name, location  FROM stadium  WHERE EXISTS (SELECT *   FROM concert   WHERE stadium_id = stadium.stadium_id AND year = 2014)  AND EXISTS (SELECT *   FROM concert   WHERE stadium_id = stadium.stadium_id AND year = 2015);",
    "SELECT COUNT(*) FROM concert INNER JOIN stadium ON concert.stadium_id = stadium.stadium_id WHERE stadium.capacity = (SELECT MAX(capacity) FROM stadium);",
    "SELECT COUNT(*) FROM concert c JOIN stadium s ON c.stadium_id = s.stadium_id ORDER BY s.capacity DESC LIMIT 1;",
    "SELECT COUNT(*)  FROM pets  WHERE weight > 10;",
    "SELECT COUNT(*) FROM has_pet JOIN pets  ON has_pet.petid = pets.petid WHERE pets.weight > 10;",
    "|  SELECT weight FROM pets WHERE pet_age = (SELECT MIN(pet_age)                  FROM pets);",
    "SELECT weight  FROM pets  WHERE pettype = 'dog'  ORDER BY pet_age ASC  LIMIT 1;",
    "SELECT pettype, MAX(weight) FROM pets GROUP BY pettype;",
    "|  SELECT pettype, MAX(weight) FROM pets GROUP BY pettype;",
    "SELECT COUNT(*) FROM student INNER JOIN has_pet ON student.stuid = has_pet.stuid INNER JOIN pets ON has_pet.petid = pets.petid WHERE student.age > 20;",
    "SELECT COUNT(*)  FROM pets_1 p INNER JOIN has_pet h ON p.petid = h.petid INNER JOIN student s ON s.stuid = h.stuid WHERE s.age > 20;",
    "SELECT COUNT(*) FROM student S JOIN has_pet H ON S.stuid = H.stuid JOIN pets P ON H.petid = P.petid WHERE S.sex = 'F' AND P.pettype = 'dog';",
    "SELECT COUNT(*)  FROM student  JOIN has_pet  ON student.stuid = has_pet.stuid JOIN pets  ON has_pet.petid = pets.petid  WHERE sex = 'female'  AND pettype = 'dog'",
    "SELECT COUNT(DISTINCT pettype) FROM pets;",
    "SELECT pettype FROM pets GROUP BY pettype;",
    "SELECT fname FROM student s, has_pet hp, pets p WHERE s.stuid = hp.stuid AND hp.petid = p.petid AND (p.pettype = 'cat' OR p.pettype = 'dog')",
    "SELECT fname  FROM student  JOIN has_pet  ON student.stuid = has_pet.stuid  JOIN pets  ON has_pet.petid = pets.petid  WHERE pets.pettype IN ('cat', 'dog');",
    "SELECT fname  FROM student  JOIN has_pet ON has_pet.stuid = student.stuid  JOIN pet ON has_pet.petid = pet.petid  WHERE pet.pettype = 'cat'  AND pet.pettype = 'dog'",
    "SELECT fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat' INTERSECT SELECT fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'dog';",
    ", color  SELECT lname, fname, age, major  FROM student  WHERE stuid NOT IN (SELECT stuid                       FROM has_pet                      LEFT JOIN pets ON has_pet.petid = pets.petid                      WHERE pettype = 'cat')",
    "SELECT stuid , lname , fname , age , major  FROM student  WHERE NOT EXISTS  (SELECT *  FROM has_pet NATURAL JOIN pets  WHERE pettype = 'cat' AND student.stuid = has_pet.stuid);",
    "SELECT stuid FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet INNER JOIN pets ON has_pet.petid = pets.petid WHERE pettype = 'cat');",
    "SELECT stuid FROM student WHERE stuid NOT IN (SELECT stuid                     FROM has_pet                     INNER JOIN pets                     ON has_pet.petid = pets.petid                     WHERE pettype = 'cat')",
    ", vet |  SELECT fname, age FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'dog'  AND student.stuid NOT IN (     SELECT student.stuid     FROM student JOIN has_pet ON student.stuid = has_pet.stuid     JOIN pets ON has_pet.petid = pets.petid     WHERE pets.pettype = 'cat' )",
    "SELECT fname FROM student INNER JOIN has_pet ON student.stuid = has_pet.stuid INNER JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'dog' AND student.stuid NOT IN (     SELECT student.stuid     FROM student     INNER JOIN has_pet     ON student.stuid = has_pet.stuid     INNER JOIN pets     ON has_pet.petid = pets.petid     WHERE pets.pettype = 'cat' );",
    "SELECT pettype , weight FROM pets WHERE pet_age = (SELECT MIN(pet_age) FROM pets);",
    "SELECT pettype, weight  FROM pets_1 INNER JOIN has_pet ON pets_1.stuid = has_pet.stuid  INNER JOIN pets  ON has_pet.petid = pets.petid  WHERE pet_age = (SELECT MIN(pet_age) FROM pets)",
    "SELECT petid, weight  FROM pets  WHERE pet_age > 1;",
    "|  SELECT petid, weight  FROM pets  WHERE pet_age > 1;",
    "SELECT AVG(pets.pet_age) AS avgage, MAX(pets.pet_age) AS maxage, pets.pettype  FROM pets  INNER JOIN has_pet  ON pets.petid = has_pet.petid  INNER JOIN student  ON has_pet.stuid = student.stuid  GROUP BY pets.pettype;",
    "SELECT pettype, AVG(pet_age) as avg_age, MAX(pet_age) as max_age FROM pets GROUP BY pettype;",
    "|  SELECT pettype, AVG(weight) FROM pets GROUP BY pettype;",
    "|  SELECT pettype, AVG(weight) FROM pets GROUP BY pettype;",
    "|  SELECT fname, age  FROM student  JOIN has_pet      ON student.stuid = has_pet.stuid  JOIN pets      ON has_pet.petid = pets.petid;",
    "SELECT fname, age  FROM student  INNER JOIN has_pet  ON student.stuid = has_pet.stuid  INNER JOIN pets  ON has_pet.petid = pets.petid",
    "SELECT pets.petid  FROM students, has_pet, pets WHERE students.stuid = has_pet.stuid AND has_pet.petid = pets.petid AND students.lname = 'Smith';",
    "|  SELECT petid FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE lname = 'Smith';",
    "SELECT stuid, COUNT(pets.petid) AS pet_count FROM has_pet INNER JOIN pets ON pets.petid = has_pet.petid GROUP BY stuid;",
    "SELECT stuid, COUNT(petid) AS num_pets FROM has_pet INNER JOIN students ON students.stuid = has_pet.stuid GROUP BY stuid;",
    "SELECT fname, sex FROM student WHERE stuid IN (SELECT stuid                  FROM has_pet                  GROUP BY stuid                  HAVING COUNT(*) > 1)",
    "|  SELECT fname, sex FROM student WHERE stuid IN (SELECT stuid                  FROM has_pet                  GROUP BY stuid \t\t\t\t HAVING COUNT(*) > 1)",
    "SELECT lname  FROM student INNER JOIN has_pet ON has_pet.stuid = student.stuid INNER JOIN pets ON has_pet.petid = pets.petid WHERE pets.pet_age = 3;",
    "SELECT lname  FROM student  JOIN has_pet  ON student.stuid = has_pet.stuid  JOIN pets  ON has_pet.petid = pets.petid  WHERE pets.pet_age = 3;",
    "SELECT AVG(age) FROM student  WHERE stuid NOT IN (SELECT stuid FROM has_pet);",
    "SELECT AVG(age) FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet);",
    "SELECT COUNT(continent) FROM continents",
    "SELECT COUNT(DISTINCT continent) FROM continents;",
    "|  SELECT contid, continent, COUNT(countryname) FROM countries GROUP BY contid, continent;",
    ", origin  SELECT contid, continent, COUNT(countryid) FROM continents LEFT JOIN countries  ON continents.contid = countries.continent GROUP BY contid, continent;",
    "SELECT COUNT(*) FROM countries;",
    "SELECT COUNT(countryname) FROM countries;",
    "|  SELECT car_makers.fullname , car_makers.id , COUNT(model_list.modelid) as 'number of models'  FROM car_makers  INNER JOIN model_list ON car_makers.id = model_list.maker  GROUP BY car_makers.fullname , car_makers.id;",
    ", origin  SELECT car_makers.fullname, car_makers.id, COUNT(model_list.modelid) AS Models_produced  FROM car_makers  INNER JOIN model_list ON car_makers.id = model_list.maker  INNER JOIN car_names ON car_names.makeid = model_list.modelid  GROUP BY car_makers.fullname, car_makers.id;",
    "SELECT MIN(horsepower) FROM cars_data INNER JOIN car_names ON car_names.makeid = cars_data.id INNER JOIN model_list ON model_list.modelid = car_names.model;",
    "SELECT model FROM model_list JOIN car_names ON model_list.maker = car_names.makeid JOIN cars_data ON car_names.model = cars_data.modelid ORDER BY horsepower ASC LIMIT 1;",
    "SELECT model FROM model_list  INNER JOIN car_names ON model_list.modelid = car_names.modelid INNER JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.weight < (SELECT AVG(weight) FROM cars_data);",
    "SELECT model FROM model_list INNER JOIN car_names  ON model_list.modelid = car_names.modelid INNER JOIN cars_data ON cars_data.makeid = car_names.makeid GROUP BY model HAVING AVG(weight) > weight",
    ", origin  SELECT fullname FROM car_makers INNER JOIN car_names ON car_makers.id = car_names.makeid INNER JOIN model_list ON car_names.model = model_list.modelid WHERE model_list.maker = car_makers.id AND cars_data.year = 1970 GROUP BY fullname;",
    "SELECT DISTINCT fullname FROM car_makers cm INNER JOIN model_list ml ON cm.id=ml.maker INNER JOIN car_names cn ON cn.makeid=ml.modelid INNER JOIN cars_data cd ON cd.makeid=cn.makeid WHERE cd.year = 1970;",
    ", origin  SELECT make, MIN(year) FROM car_names  INNER JOIN cars_data  ON car_names.makeid = cars_data.id GROUP BY make;",
    "SELECT car_makers.maker, MIN(cars_data.year) FROM car_makers JOIN countries ON car_makers.country=countries.countryid JOIN model_list ON car_makers.id=model_list.maker JOIN car_names ON model_list.modelid=car_names.model JOIN cars_data ON car_names.makeid=cars_data.id GROUP BY car_makers.maker;",
    ", origin  SELECT DISTINCT model FROM model_list  JOIN car_makers ON car_makers.id = model_list.maker  JOIN cars_data ON cars_data.makeid = car_names.id  WHERE year > 1980",
    "SELECT model FROM model_list INNER JOIN car_names ON model_list.modelid = car_names.model  INNER JOIN cars_data ON cars_data.makeid = car_names.makeid WHERE cars_data.year > 1980;",
    ", origin |  SELECT continents.continent, COUNT(car_makers.maker) AS 'Number of Car Makers' FROM car_makers JOIN countries ON car_makers.country = countries.countryname JOIN continents ON countries.continent = continents.contid GROUP BY continents.continent;",
    "SELECT cont.continent, COUNT(DISTINCT car_makers.maker) FROM car_1.continents AS cont INNER JOIN car_1.countries AS country \tON cont.contid = country.continent INNER JOIN car_1.car_makers AS car_makers \tON car_makers.country = country.countryname INNER JOIN car_1.model_list AS models \tON car_makers.id = models.maker INNER JOIN car_1.car_names AS car \tON models.modelid = car.model INNER JOIN car_1.cars_data AS data \tON car.makeid = data.id GROUP BY cont.continent",
    "SELECT countries.countryname  FROM countries INNER JOIN car_makers  ON countries.countryid = car_makers.country GROUP BY countries.countryname ORDER BY COUNT(car_makers.id) DESC  LIMIT 1",
    ", origin  SELECT countries.countryname FROM continents INNER JOIN countries ON continents.contid = countries.continent INNER JOIN car_makers ON countries.countryid = car_makers.country INNER JOIN model_list ON car_makers.id = model_list.maker INNER JOIN car_names ON model_list.modelid = car_names.makeid INNER JOIN cars_data ON car_names.model = cars_data.make GROUP BY countries.countryname ORDER BY COUNT(*) DESC LIMIT 1;",
    "SELECT fullname, COUNT(*) AS 'count'  FROM car_makers cm  INNER JOIN model_list ml ON cm.id = ml.maker GROUP BY fullname;",
    "SELECT maker, COUNT(model) AS num_models, id, fullname FROM car_makers INNER JOIN model_list ON car_makers.id = model_list.maker GROUP BY maker, id, fullname;",
    "SELECT accelerate FROM car_names  JOIN cars_data ON car_names.makeid = cars_data.id WHERE make = 'AMC Hornet Sportabout (sw)'",
    "SELECT accelerate FROM car_names cn JOIN model_list ml ON cn.makeid = ml.modelid JOIN car_makers cm ON ml.maker = cm.fullname JOIN countries c ON cm.country = c.countryname JOIN continents ct ON c.continent = ct.contid JOIN cars_data cd ON cn.model = cd.make WHERE cn.make = 'amc hornet sportabout' AND cd.year = 'sw' ;",
    "SELECT COUNT(DISTINCT car_makers.maker) FROM car_makers JOIN countries ON car_makers.country = countries.countryname JOIN continents ON countries.continent = continents.contid WHERE continents.continent = 'france';",
    "SELECT COUNT(maker) FROM car_makers  INNER JOIN countries  ON car_makers.country = countries.countryname  WHERE countries.continent = 'France';",
    "SELECT COUNT(*) FROM car_makers INNER JOIN model_list ON car_makers.id = model_list.maker  INNER JOIN car_names ON car_names.makeid = model_list.model  INNER JOIN cars_data ON cars_data.id = car_names.model  INNER JOIN countries ON car_makers.country = countries.countryname  INNER JOIN continents ON countries.continent = continents.contid  WHERE continents.continent = 'USA';",
    ", origin  SELECT COUNT(DISTINCT model) FROM model_list INNER JOIN car_names ON model_list.maker = car_names.makeid INNER JOIN car_makers ON car_names.makeid = car_makers.id INNER JOIN countries ON car_makers.country = countries.countryid INNER JOIN continents ON countries.continent = continents.contid WHERE continent = 'United States';",
    "SELECT AVG(mpg) FROM cars_data WHERE cylinders = 4;",
    "SELECT AVG(mpg)  FROM cars_data WHERE cylinders = 4;",
    "SELECT MIN(weight) FROM cars_data WHERE cylinders = 8 AND year = 1974;",
    "SELECT MIN(weight)  FROM cars_data  WHERE cylinders = 8 AND year = 1974;",
    "SELECT maker, model  FROM car_makers  INNER JOIN model_list ON car_makers.id = model_list.maker  INNER JOIN car_names ON model_list.modelid = car_names.model;",
    "SELECT maker, model  FROM car_makers  INNER JOIN model_list ON car_makers.id = model_list.maker  INNER JOIN car_names ON model_list.modelid = car_names.model;",
    "SELECT countries.countryname, countries.countryid  FROM countries  JOIN car_makers ON countries.countryid = car_makers.country  GROUP BY countries.countryname, countries.countryid  HAVING COUNT(car_makers.id) > 0;",
    "_manufacture  SELECT countries.countryname, countries.countryid  FROM countries  INNER JOIN car_makers  ON countries.countryid = car_makers.country  GROUP BY countries.countryname, countries.countryid  HAVING COUNT(*) > 0;",
    "SELECT COUNT(*) FROM cars_data WHERE horsepower > 150;",
    "SELECT COUNT(*)  FROM car_makers INNER JOIN model_list ON car_makers.id = model_list.maker INNER JOIN car_names ON model_list.modelid = car_names.makeid INNER JOIN cars_data ON car_names.model = cars_data.id WHERE cars_data.horsepower > 150;",
    "SELECT AVG(weight)  FROM cars_data GROUP BY year;",
    "SELECT AVG(weight), year FROM cars_data GROUP BY year;",
    "SELECT countryname  FROM continents c  JOIN countries co  ON c.contid = co.continent  JOIN car_makers cm  ON cm.country = co.countryid  WHERE c.continent = 'Europe'  GROUP BY co.countryname  HAVING COUNT(cm.id) >= 3;",
    "SELECT countries.countryname  FROM countries  INNER JOIN car_makers  ON countries.countryid = car_makers.country  INNER JOIN model_list  ON car_makers.id = model_list.maker  INNER JOIN car_names  ON model_list.modelid = car_names.makeid  INNER JOIN continents  ON countries.continent = continents.contid  WHERE continents.continent = 'Europe'  GROUP BY countries.countryname  HAVING COUNT(*) >= 3;",
    "SELECT MAX(horsepower), make FROM cars_data JOIN car_names ON cars_data.makeid = car_names.makeid JOIN model_list ON car_names.model = model_list.model WHERE cylinders = 3 GROUP BY make;",
    "SELECT horsepower, make  FROM cars_data  INNER JOIN car_names  ON cars_data.makeid = car_names.makeid  WHERE cylinders = 3  ORDER BY horsepower DESC  LIMIT 1;",
    "SELECT model_list.model, MAX(cars_data.mpg) FROM cars_data  INNER JOIN model_list ON cars_data.makeid = model_list.makeid GROUP BY model_list.model",
    "SELECT     model_list.model FROM     model_list INNER JOIN     cars_data ON     model_list.modelid = cars_data.id WHERE     cars_data.mpg = (SELECT MAX(mpg) FROM cars_data)",
    ", origin  SELECT AVG(horsepower) FROM cars_data WHERE year < 1980;",
    "SELECT AVG(horsepower) FROM cars_data WHERE year < 1980;",
    "SELECT AVG(edispl) FROM cars_data  INNER JOIN model_list ON cars_data.model = model_list.modelid INNER JOIN car_makers ON model_list.maker = car_makers.id INNER JOIN car_names ON car_makers.id = car_names.makeid WHERE car_names.make = 'volvo'",
    "SELECT AVG(edispl)  FROM car_makers  JOIN countries ON car_makers.country = countries.countryname  JOIN model_list ON car_makers.id = model_list.maker  JOIN car_names ON model_list.modelid = car_names.makeid  JOIN cars_data ON car_names.makeid = cars_data.id  WHERE car_makers.fullname = 'Volvo';",
    "SELECT MAX(accelerate) FROM cars_data WHERE cylinders IN (SELECT cylinders FROM cars_data GROUP BY cylinders)",
    "SELECT MAX(accelerate) FROM cars_data;",
    "SELECT model_list.model, COUNT(car_names.makeid) AS 'Total Version' FROM car_names LEFT JOIN model_list ON car_names.model = model_list.modelid GROUP BY model_list.model ORDER BY COUNT(car_names.makeid) DESC;",
    ", origin  SELECT model, COUNT(DISTINCT makeid) FROM model_list JOIN car_names ON model_list.modelid = car_names.modelid GROUP BY model ORDER BY COUNT(DISTINCT makeid) DESC LIMIT 1;",
    "SELECT COUNT(*)  FROM cars_data  WHERE cylinders > 4;",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 4;",
    ", origin , make   SELECT COUNT(*) FROM car_makers cm  JOIN model_list ml ON cm.id = ml.maker  JOIN car_names cn ON cn.makeid = ml.model  JOIN cars_data cd ON cd.make = cn.make  WHERE cd.year=1980;",
    "SELECT COUNT(*) FROM car_names INNER JOIN car_data on car_data.makeid = car_names.makeid WHERE year = 1980;",
    "SELECT COUNT(model_list.modelid)  FROM car_makers  JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.model = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE car_makers.fullname = 'American Motor Company'",
    "SELECT COUNT(DISTINCT car_names.model) FROM car_names  JOIN model_list ON car_names.makeid = model_list.modelid JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.fullname = 'American Motor Company';",
    "SELECT cars_data.makeid, car_makers.fullname, car_makers.id  FROM cars_data  INNER JOIN model_list ON cars_data.makeid = model_list.makeid  INNER JOIN car_makers ON model_list.maker = car_makers.id  GROUP BY cars_data.makeid  HAVING COUNT(model_list.model) > 3;",
    "SELECT car_makers.fullname, car_makers.id FROM car_makers  INNER JOIN model_list  ON car_makers.id = model_list.maker GROUP BY car_makers.id, car_makers.fullname  HAVING COUNT(model_list.model) > 3;",
    "SELECT model_list.model  FROM model_list    INNER JOIN car_makers    ON model_list.maker = car_makers.id    INNER JOIN car_names    ON model_list.modelid = car_names.modelid    INNER JOIN cars_data    ON car_names.makeid = cars_data.id  WHERE car_makers.fullname = 'General Motors'    AND cars_data.weight > 3500;",
    "|  SELECT DISTINCT model_list.model FROM car_makers INNER JOIN model_list ON car_makers.id = model_list.maker INNER JOIN cars_data ON model_list.model = cars_data.make WHERE car_makers.fullname = 'General Motors' OR cars_data.weight > 3500;",
    "SELECT year  FROM cars_data  WHERE weight >=3000 AND weight <=4000;",
    "SELECT DISTINCT year  FROM cars_data  WHERE weight<4000  OR weight>3000;",
    "SELECT horsepower FROM cars_data WHERE accelerate = (SELECT MAX(accelerate) FROM cars_data);",
    "SELECT horsepower  FROM cars_data  ORDER BY accelerate DESC  LIMIT 1;",
    "SELECT cylinders  FROM cars_data  WHERE makeid = (SELECT makeid                  FROM car_names                  WHERE model = 'volvo')  ORDER BY accelerate ASC  LIMIT 1;",
    "SELECT cylinders  FROM cars_data INNER JOIN car_names ON car_names.makeid = cars_data.id  INNER JOIN model_list ON model_list.modelid = car_names.model INNER JOIN car_makers ON car_makers.id = model_list.maker  INNER JOIN countries ON countries.countryid = car_makers.country WHERE car_makers.fullname = 'Volvo' ORDER BY accelerate ASC LIMIT 1;",
    "SELECT COUNT(*) FROM cars_data WHERE accelerate > (SELECT MAX(horsepower) FROM cars_data);",
    "SELECT COUNT(*)  FROM cars_data WHERE accelerate > (SELECT MAX(horsepower) FROM cars_data);",
    "SELECT COUNT(*)  FROM countries  INNER JOIN car_makers ON countries.countryid = car_makers.country INNER JOIN model_list ON car_makers.id = model_list.maker INNER JOIN car_names ON model_list.modelid = car_names.makeid INNER JOIN cars_data ON car_names.model = cars_data.id GROUP BY countries.countryname HAVING COUNT(*) > 2;",
    "SELECT COUNT(*) FROM countries c INNER JOIN car_makers cm ON c.countryid = cm.country  INNER JOIN model_list ml ON cm.id = ml.maker INNER JOIN car_names cn ON cn.makeid = ml.model INNER JOIN cars_data cd ON cd.id = cn.makeid GROUP BY c.countryname HAVING COUNT(*) > 2;",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 6;",
    "SELECT COUNT(*) AS 'Number of Cars with Over 6 Cylinders' FROM cars_data  WHERE cylinders > 6;",
    "SELECT model FROM model_list  INNER JOIN car_names ON model_list.modelid = car_names.modelid INNER JOIN cars_data ON car_names.makeid = cars_data.id WHERE cylinders = 4 ORDER BY horsepower DESC LIMIT 1;",
    "SELECT model FROM model_list ml JOIN cars_data cd ON cd.makeid = ml.modelid WHERE cylinders = 4 ORDER BY horsepower DESC LIMIT 1;",
    ", origin |  SELECT car_makers.fullname, car_names.make FROM car_data JOIN car_names ON car_data.makeid = car_names.makeid JOIN car_makers ON car_names.maker = car_makers.id WHERE car_data.cylinders <= 3 AND car_data.horsepower > (SELECT MIN(horsepower) FROM car_data)",
    "SELECT DISTINCT car_makers.id , car_makers.fullname  FROM car_makers  INNER JOIN car_names  ON car_names.makeid = car_makers.id  INNER JOIN cars_data  ON cars_data.id = car_names.model  WHERE cars_data.horsepower < (SELECT MIN(cars_data.horsepower) FROM cars_data)  AND cars_data.cylinders < 4;",
    "|  SELECT MAX(mpg) FROM car_data WHERE cylinders = 8 AND year < 1980;",
    "SELECT MAX(cars_data.mpg)  FROM cars_data  INNER JOIN car_names ON cars_data.makeid = car_names.makeid  INNER JOIN model_list ON car_names.model = model_list.model  INNER JOIN car_makers ON model_list.maker = car_makers.id  INNER JOIN countries ON car_makers.country = countries.countryid  INNER JOIN continents ON countries.continent = continents.contid  WHERE cars_data.cylinders = 8 OR cars_data.year <= 1980",
    ", origin  SELECT model  FROM model_list  JOIN car_makers ON model_list.maker = car_makers.id  JOIN countries ON car_makers.country = countries.countryid  WHERE weight < 3500 AND fullname != 'Ford Motor Company';",
    ", origin   SELECT model  FROM model_list  JOIN car_names  ON model_list.modelid = car_names.modelid JOIN cars_data  ON car_names.makeid = cars_data.makeid WHERE cars_data.weight < 3500  AND model_list.maker NOT IN (SELECT maker FROM car_makers WHERE car_makers.fullname = 'Ford Motor Company')",
    ", origin   SELECT countries.countryname FROM countries  LEFT JOIN car_makers ON countries.countryid = car_makers.country WHERE car_makers.country IS NULL;",
    ", origin  SELECT countryname  FROM countries LEFT JOIN car_makers  ON countries.countryid = car_makers.country  WHERE car_makers.maker IS NULL;",
    "|  SELECT cm.id, cm.maker  FROM car_makers cm  INNER JOIN model_list ml ON (cm.id = ml.maker)  INNER JOIN car_names cn ON (ml.model = cn.model) INNER JOIN cars_data cd ON (cn.makeid = cd.id)  GROUP BY cm.id, cm.maker  HAVING COUNT(*) > 1  AND COUNT(DISTINCT cm.id) > 3;",
    "SELECT car_makers.id, car_makers.maker FROM car_makers  JOIN model_list ON car_makers.id = model_list.maker  JOIN car_names ON model_list.modelid = car_names.makeid  JOIN cars_data ON car_names.makeid = cars_data.id  GROUP BY car_makers.id, car_makers.maker  HAVING COUNT(cars_data.id) > 3 AND COUNT(DISTINCT model_list.modelid) > 2",
    ", origin , name |  SELECT countries.countryid, countries.countryname  FROM countries  INNER JOIN car_makers ON car_makers.country = countries.countryid INNER JOIN model_list ON model_list.maker = car_makers.id INNER JOIN car_names ON car_names.makeid = model_list.modelid INNER JOIN cars_data ON cars_data.name = car_names.makeid WHERE (car_makers.fullname like \"%Fiat%\" OR (SELECT COUNT(*) FROM car_makers                                              WHERE countries.countryid = car_makers.country) > 3) GROUP BY countries.countryid, countries.countryname",
    "|  SELECT countries.countryid, countries.countryname FROM car_makers INNER JOIN countries ON car_makers.country = countries.countryname INNER JOIN model_list ON car_makers.fullname = model_list.maker INNER JOIN car_names ON model_list.model = car_names.model INNER JOIN cars_data ON car_names.makeid = cars_data.id WHERE car_makers.maker = 'Fiat' GROUP BY countries.countryid, countries.countryname HAVING COUNT(*) > 3;",
    "SELECT country  FROM airlines WHERE airline = 'JetBlue Airways'",
    "|  SELECT country FROM airlines WHERE airline = 'Jetblue Airways';",
    "|  SELECT abbreviation  FROM airlines  WHERE airline = 'JetBlue Airways';",
    "SELECT abbreviation FROM airlines WHERE airline = 'Jetblue Airways';",
    "SELECT airlines.airline, airlines.abbreviation FROM airlines  INNER JOIN airports  ON airlines.countryabbrev = airports.countryabbrev WHERE airports.country = 'USA';",
    "SELECT airlines.airline, airlines.abbreviation  FROM airlines  WHERE airlines.country = 'USA';",
    "|  SELECT airportcode, airportname  FROM airports  WHERE city = 'Anthony'",
    "SELECT airportcode , airportname  FROM airports  WHERE city = 'Anthony';",
    "SELECT COUNT(*)  FROM airlines;",
    "SELECT COUNT(*)  FROM airlines;",
    "SELECT COUNT(*)  FROM airports;",
    "SELECT COUNT(*)  FROM airports;",
    "SELECT COUNT(*) FROM flights;",
    "SELECT COUNT(*)  FROM flights;",
    "SELECT airline  FROM airlines WHERE abbreviation = 'UAL';",
    "|  SELECT airline FROM airlines WHERE abbreviation = 'UAL';",
    "SELECT COUNT(*)  FROM airlines  WHERE country = 'USA';",
    "SELECT COUNT(*) FROM airlines WHERE country = 'USA';",
    "SELECT airports.city, airports.country FROM airports  WHERE airports.airportname = 'Alton Airport'",
    "SELECT airports.city, airports.country FROM airports INNER JOIN flights ON airports.airportcode = flights.destairport INNER JOIN airlines ON flights.airline = airlines.uid WHERE airlines.abbreviation = 'ALTON'",
    "SELECT airportname  FROM airports  WHERE airportcode = 'AKO';"
]