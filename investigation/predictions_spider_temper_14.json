[
    "SELECT COUNT(*) FROM singer",
    "SELECT COUNT(*) FROM singer.",
    "SELECT name, country, age FROM singer ORDER BY age DESC",
    "SELECT name, country, age  FROM singer  ORDER BY age DESC",
    "SELECT AVG(age) AS average_age, MIN(age) AS min_age, MAX(age) AS max_age  FROM singer  WHERE country = 'France'",
    "SELECT AVG(age), MIN(age), MAX(age) FROM singer WHERE country = 'France'",
    "SELECT name, song_release_year FROM singer WHERE age = (SELECT MIN(age) FROM singer);",
    "SELECT song_name, song_release_year FROM singer WHERE age=(SELECT min(age) FROM singer)",
    "SELECT DISTINCT country FROM singer  WHERE age > 20",
    "SELECT DISTINCT country FROM singer WHERE age > 20",
    "SELECT country, COUNT(*) AS num_singers  FROM singer  GROUP BY country",
    "SELECT country, COUNT(DISTINCT singer_id)  FROM singer  GROUP BY country;",
    "SELECT singer.song_name  FROM singer  WHERE singer.age > (SELECT AVG(age) FROM singer) ;",
    "``` SELECT DISTINCT s.song_name FROM singer AS s JOIN concert_singer AS cs ON s.singer_id = cs.singer_id WHERE s.age > (SELECT AVG(age) FROM singer) ``` ",
    "SELECT location, name FROM stadium WHERE capacity >= 5000 AND capacity <= 10000;",
    "SELECT    location, name  FROM    stadium  WHERE    capacity >= 5000 AND capacity<=10000",
    "SELECT MAX(capacity), AVG(capacity) FROM stadium",
    "SELECT AVG(capacity), MAX(capacity) FROM stadium",
    "SELECT name, capacity FROM stadium  WHERE average = (SELECT MAX(average) FROM stadium)",
    "SELECT name, capacity FROM stadium WHERE average = (SELECT MAX(average) FROM stadium)",
    "``` SELECT COUNT(*) FROM concert WHERE year IN (2014, 2015) ```",
    "SELECT COUNT(*) FROM concert WHERE year IN (2014, 2015)",
    "SELECT stadium.name, COUNT(concert.concert_id) AS concert_counts FROM stadium JOIN concert on concert.stadium_id=stadium.stadium_id GROUP BKY stadium.name",
    "SELECT stadium.name, COUNT(concert.concert_id) FROM stadium LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id GROUP BY stadium.name",
    "SELECT name, capacity  FROM stadium  WHERE stadium_id = (SELECT stadium_id                      FROM concert                      WHERE year >= 2014                      GROUP BY stadium_id                      ORDER BY COUNT(*) DESC                      LIMIT 1)",
    "SELECT name, capacity FROM stadium WHERE stadium_id=(SELECT stadium_id from  (SELECT stadium_id, COUNT(*) as num_concerts FROM concert WHERE year > 2013  GROUP BY stadium_id ORDER BY num_concerts DESC limit 1) as most_num_concerts)",
    "SELECT year FROM concert GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1",
    "SELECT year FROM concert  GROUP By year  ORDER BY count(*) DESC LIMIT 1",
    "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)",
    "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)",
    "SELECT DISTINCT s1.country  FROM singer AS s1  JOIN singer AS s2 ON s1.country = s2.country  WHERE s1.age > 40 AND s2.age < 30",
    "SELECT stadium.name FROM stadium  WHERE stadium.stadium_id NOT IN (     SELECT concert.stadium_id     FROM concert      WHERE YEAR(concert.year)=2014 )",
    "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert WHERE year = 2014)",
    "SELECT concert.concert_name, concert.theme, COUNT(singer_in_concert.singer_id)  FROM concert JOIN singer_in_concert ON concert.concert_id=singer_in_concert.concert_id GROUP BY concert.concert_name, concert.theme",
    "SELECT concert.concert_name, concert.theme, COUNT(singer_in_concert.singer_id) FROM concert JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id GROUP BY concert.concert_id",
    "SELECT s.name, COUNT(ic.singer_id) AS \"num_concerts\" FROM singer s JOIN singer_in_concert ic ON s.singer_id = ic.singer_id GROUP BY s.name;",
    "SELECT singer.name, COUNT(concert_singer.singer_id) as number_of_concerts FROM singer JOIN concert_singer ON singer.singer_id = concert_singer.singer_id GROUP BY singer.name",
    "SELECT singer.name FROM concert_singer.singer  INNER JOIN concert_singer.singer_in_concert ON  singer.singer_id = singer_in_concert.singer_id  INNER JOIN concert_singer.concert ON  concert_singer.concert_in_singer.concert_id = concert.concert_id WHERE year=2014;",
    "SELECT Singer.name FROM Singer     INNER JOIN Singer_in_concert ON Singer.singer_id = Singer_in_concert.singer_id     INNER JOIN Concert ON Concert.concert_id = Singer_in_concert.concert_id     WHERE Concert.year = 2014",
    "SELECT name, country FROM singer WHERE song_name LIKE '%Hey%'",
    "Select singer.name, singer.country  From singer join singer_in_concert on singer.singer_id = singer_in_concert.singer_id   Where singer.song_name like '%Hey%'",
    "SELECT s.name, s.location   \tFROM stadium AS s  \tINNER JOIN concert AS c ON s.stadium_id = c.stadium_Id \tWHERE year = 2014 AND s.name IN  \t       (SELECT s.name FROM stadium AS s  \t \t    INNER JOIN concert AS c ON s.stadium_id = c.stadium_id      \t    WHERE year = 2015)",
    "SELECT s.name, s.location FROM stadium s  WHERE  EXISTS (     SELECT c.stadium_id FROM concert c      WHERE c.stadium_id = s.stadium_id AND c.year = 2014 )       AND EXISTS (     SELECT c.stadium_id FROM concert c      WHERE c.stadium_id = s.stadium_id AND c.year = 2015     );",
    "SELECT COUNT(*)  FROM concert  WHERE stadium_id = (SELECT stadium_id FROM stadium ORDER BY capacity DESC LIMIT 1)",
    "SELECT count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity DESC_LIMIT 1)",
    "SELECT COUNT(*) FROM pets WHERE weight > 10.",
    "`SELECT COUNT(*) FROM pets WHERE weight > 10`",
    "SELECT MIN(weight) FROM pets WHERE pettype = 'dog' AND pet_age = (SELECT MIN(pet_age) FROM pets WHERE pettype = 'dog')",
    "SELECT weight FROM pets ORDER BY pet_age ASC LIMIT 1",
    "SELECT pettype, MAX(weight)  FROM pets  GROUP BY pettype",
    "SELECT pets.pettype, MAX(pets.weight), pets.pet_age  FROM pets  GROUP BY pets.pettypeUFFIXPIC.",
    "One way to write the SQL query for this question would be:  SELECT COUNT(DISTINCT has_pet.petid) FROM has_pet JOIN student ON has_pet.stuid = student.stuid WHERE student.age > 20  This counts the number of unique pet IDs in the has_pet table for any student record where the corresponding age in the student table is greater than 20.",
    "SELECT COUNT(DISTINCT has_pet.petid) FROM has_pet, student, pets WHERE has_pet.stuid = student.stuid AND      student.age > 20 AND     has_pet.petid = pets.petid",
    "select count(distinct petid) from pets p join has_pet hp on p.petid = hp.petid join student s on hp.stuid = s.stuid where p.pettype='dog' and s.sex='F'",
    "SELECT COUNT(distinct has_pet.petid)  FROM has_pet  \tLEFT JOIN pets ON has_pet.petid=pets.petid  \tLEFT JOIN student ON has_pet.stuid=student.stuid  WHERE pettype='dog' AND sex='FEMALE'",
    "SELECT COUNT(DISTINCT pettype) FROM pets.",
    "SELECT COUNT(DISTINCT pettype) FROM pets",
    "SELECT DISTINCT fname FROM student  LEFT JOIN has_pet on student.stuid = has_pet.stuid  JOIN pets on\thas_pet.petid = pets.petid  WHERE pettype in ('cat','dog')",
    "SELECT fname FROM student  INNER JOIN has_pet  ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype IN ('cat','dog')",
    "SELECT DISTINCT s.fname FROM student s JOIN has_pet hp1 ON s.stuid = hp1.stuid JOIN pets p1 ON hp1.petid = p1.petid  JOIN has_pet hp2 ON s.stuid = hp2.stuid JOIN pets p2 ON hp2.petid = p2.petid  WHERE p1.pettype = 'cat' AND p2.pettype = 'dog'",
    "SELECT student.fname FROM student INNER JOIN has_pet ON student.stuid = has_pet.stuid INNER JOIN pets ON pets.petid = has_pet.petid WHERE pets.pettype = 'cat' AND EXISTS (SELECT 1 FROM has_pet WHERE has_pet.stuid = student.stuid AND petid = (SELECT petid FROM pets WHERE pettype='dog'))",
    "SELECT major, age FROM student WHERE stuid not in (SELECT stuid FROM has_pet); ",
    "SELECT major, age FROM student WHERE NOT EXISTS (SELECT * FROM pets JOIN has_pet ON pets.petid = has_pet.petid AND has_pet.stuid = student.stuid WHERE pettype = \u2018cat\u2019)",
    "SELECT DISTINCT stuid  FROM student  WHERE stuid NOT IN      (SELECT stuid       FROM has_pet JOIN pets ON has_pet.petid = pets.petid       WHERE pets.pettype = 'cat')",
    "SELECT HAS_PET.STUID FROM HAS_PET WHERE HAS_PET.PETID NOT IN (     SELECT PETS.PETID      FROM PETS     WHERE LOWER(PETS.PETTYPE) = 'cat' )",
    "SELECT fname, age FROM Student  WHERE stuid IN (SELECT stuid FROM has_pet INNER JOIN pets ON Max(case when pettype = 'dog' then 1 else 0 end) AND Max(case when pettype = 'cat' then 1 else 0 end) = 1 where stuid = Student.stuid GROUP BY stuid)",
    "SELECT fname FROM student      WHERE stuid IN (SELECT stuid FROM has_pet                          JOIN pets ON has_pet.petid = pets.petid                     WHERE pettype = 'dog')       AND stuid NOT IN (SELECT stuid FROM has_pet                             JOIN pets ON has_pet.petid = pets.petid                        WHERE pettype = 'cat')       ORDER BY fname ASC",
    "SELECT pettype, weight FROM pets WHERE pet_age = (SELECT MIN(pet_age) FROM pets)",
    "SELECT pettype, weight FROM pets WHERE pet_age = (SELECT MIN(pet_age) FROM pets)",
    "SELECT petid, weight  FROM pets  WHERE pet_age > 1.0;",
    "SELECT petid, weight FROM pets WHERE pet_age > 1 ORDER BY petid ASC",
    "SELECT pettype, AVG(pet_age) as avg_age, MAX(pet_age) AS max_age FROM pets GROUP BY pettype",
    "SELECT pettype, AVG(pet_age), MAX(pet_age) FROM pets GROUP BY pettype;",
    "SELECT pettype, AVG(weight) FROM pets GROUP BY pettype",
    "SELECT pettype, AVG(weight) AS average_weight  FROM pets  GROUP BY pettype",
    "SELECT student.fname, student.age FROM student INNER JOIN has_pet ON student.stuid = has_pet.stuid INNER JOIN pets ON has_pet.petid = pets.petid",
    "SELECT fname, age  FROM student  WHERE stuid IN ( SELECT stuid from has_pet );",
    "SELECT p.petid FROM pets p  JOIN has_pet hp ON hp.petid = p.petid  JOIN student s ON s.stuid = hp.stuid  WHERE s.lname = 'Smith'",
    "SELECT petid FROM has_pet  JOIN student ON has_pet.stuid=student.stuid JOIN pets ON has_pet.petid=pets.petid WHERE student.lname = 'Smith'",
    "SELECT has_pet.stuid, COUNT(has_pet.petid) FROM has_pet GROUP BY has_pet.stuid",
    "SELECT max(countx) as count_pets FROM (select count(has_pet.petid) OVER (PARTITION BY has_pet.stuid ORDER BY NULL)           AS countx       FROM has_pet      ) HC_MAPREN_LEFTDEMI GROUP BY HC_MAPREN_LEFTDEMI.countx",
    "SELECT fname, sex FROM student WHERE stuid IN      (SELECT stuid       FROM has_pet       GROUP BY stuid       HAVING COUNT(petid) > 1);",
    "SELECT DISTINCT s.fname, s.sex  FROM student as s, has_pet as hp   WHERE hp.stuid=s.stuid  GROUP BY hp.stuid  HAVING COUNT(hp.petid)>1",
    "select student.lname from student, pets, has_pet where student.stuid = has_pet.stuid and has_pet.petid = pets.petid and pets.pettype = 'cat' and pets.pet_age = 3 order by pets.petid desc limit 1",
    "SELECT lname FROM student  WHERE stuid in (SELECT stuid            FROM has_pet,human           WHERE has_pet.petid=human.petid AND pet_age=3) ORDER BY pet_age DESC LIMIT 1;",
    "SELECT AVG(age) FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet);",
    "SELECT AVG(age) FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet)",
    "SELECT count(*) FROM continents;",
    "SELECT COUNT(*) FROM continents;",
    "SELECT c.contid, c.continent, COUNT(co.countryid) FROM continents c  INNER JOIN countries co ON c.contid = co.continent GROUP BY c.contid, c.continent",
    "select continents.contid, continents.continent, count(distinct countries.countryid)  from continents join countries on continents.contid = countries.continent   group by continents.contid, continents.continent",
    "SELECT COUNT(*) FROM countries",
    "SELECT COUNT(*) FROM countries",
    "SELECT a.id, a.fullname, count(b.modelid) AS numb_models FROM car_makers a, model_list b WHERE a.id = b.maker GROUP BY a.id, a.fullname",
    "SELECT cm.id, cm.fullname, COUNT(DISTINCT ml.modelid) as num_models FROM car_makers cm JOIN model_list ml ON cm.maker = ml.maker GROUP BY cm.id, cm.fullname;",
    "SELECT model FROM car_names INNER JOIN cars_data ON car_names.makeid=cars_data.id WHERE horsepower = (SELECT MIN(horsepower) FROM cars_data)",
    "SELECT model_list.model FROM model_list INNER JOIN cars_data ON model_list.modelid = cars_data.id ORDER BY horsepower LIMIT 1;",
    "SELECT car_names.model  FROM cars_data  INNER JOIN car_names ON cars_data.id = car_names.modelid  WHERE weight <      (SELECT AVG(weight)      FROM cars_data)",
    "SELECT model FROM car_names JOIN cars_data ON cars_data.id = car_names.makeid WHERE weight < (SELECT AVG(weight) FROM cars_data)",
    "SELECT DISTINCT cm.maker FROM car_makers cm JOIN cars_data cd ON cm.id = cd.id  WHERE year = 1970 AND cd.id IN (     SELECT makeid FROM car_names )",
    "SELECT DISTINCT(car_makers.maker)  FROM car_makers  INNER JOIN cars_data ON car_makers.id = cars_data.id  WHERE cars_data.year = 1970",
    "SELECT make, year FROM car_names JOIN cars_data ON car_names.makeid = cars_data.id WHERE year = (SELECT MIN(year) FROM cars_data)",
    "SELECT maker,MIN(year) FROM cars_data INNER JOIN car_makers ON cars_data.id = car_makers.id GROUP BY maker ORDER BY MIN(year) ASC LIMIT 1",
    "SELECT DISTINCT model FROM model_list m JOIN cars_data c ON m.modelid = c.id WHERE year > 1980",
    "SELECT DISTINCT model FROM car_names cn INNER JOIN cars_data cd ON cn.makeid = cd.id WHERE year > 1980",
    "SELECT c.continent, COUNT(DISTINCT cm.maker) FROM continents c JOIN countries co ON co.continent = c.contid JOIN car_makers cm ON co.countryid = cm.country GROUP BY c.continent",
    "Sorry, we need to correct the schema here to properly answer the question with SQL.  Corrected schema:  | continent_mgmt_6 | +------------------+        +------------------+          +---------------+ | Continent_t6     |        | City_t6          |          | Cars_maker_t6 | +------------------+        +------------------+          +---------------+ | continentName_t6 |        | cityName_t6      |          | id_t6         | | contid_t6        |--------| contid_t6        | //FK(1,1) | maker_t6      |                    |        | stateName_t6     |          | fullname_t6   |                    |        | population_t6    |          | address_t6    |                              | carMadeID_t6     |---\\      | country_t6    |                              | \u2026                |... \\     | counts_t6     |                                           -----------------  In car_maker table:   id_t6 primary key, increases with",
    "SELECT countries.countryname  FROM countries INNER JOIN car_makers ON countries.countryId = car_makers.country  GROUP BY countries.countryname  ORDER BY COUNT(maker) DESC  LIMIT 1",
    "SELECT c.countryname  FROM countries c, car_makers cm WHERE c.countryid = cm.country GROUP BY c.countryid ORDER BY COUNT(cm.id) DESC LIMIT 1",
    "SELECT car_makers.fullname, COUNT(model_list.modelid) as count_produced FROM car_makers, model_list WHERE car_makers.id = model_list.maker GROUP BY car_makers.fullname",
    "SELECT car_makers.id, car_makers.fullname, COUNT(DISTINCT model_list.model) as model_count FROM car_makers  JOIN model_list  ON car_makers.id = model_list.maker  GROUP BY car_makers.id;",
    "SELECT accelerate FROM cars_data  INNER JOIN car_names ON cars_data.id = car_names.makeid  WHERE car_names.model = 'hornet sportabout (sw)' AND car_names.make = 'amc'",
    "SELECT accelerate FROM cars_data INNER JOIN car_names ON cars_data.id = car_names.makeid INNER JOIN model_list ON car_names.model = model_list.model WHERE model_list.maker = 'amc hornet sportabout (sw)'",
    "SELECT COUNT(DISTINCT maker) FROM car_makers WHERE UPPER(country) = 'FRANCE'",
    "SELECT COUNT(*) FROM car_makers WHERE maker = 'care' AND country = 'France'",
    "SELECT COUNT(DISTINCT car_names.model) FROM car_makers  JOIN car_names ON car_makers.id = car_names.makeid  JOIN countries ON car_makers.country = countries.countryid  WHERE countries.countryname = 'usa'",
    "SELECT COUNT(DISTINCT modelid) from model_list JOIN car_makers ON model_list.maker=car_makers.id JOIN car_names ON model_list.modelid=car_names.model WHERE car_makers.country IN (SELECT countryname FROM countries WHERE continent IN (SELECT continent FROM continents WHERE continent='United States'))",
    "SELECT AVG(mpg) FROM cars_data WHERE cylinders = 4",
    "SELECT AVG(mpg) FROM cars_data WHERE cylinders = 4",
    "SELECT MIN(cars_data.weight) FROM cars_data WHERE cars_data.cylinders = 8 AND cars_data.year = 1974",
    "SELECT MIN(weight) FROM cars_data WHERE cylinders = 8 AND year = 1974",
    "SELECT maker, model  FROM model_list;\">",
    "SELECT maker, model FROM car_makers AS cm JOIN model_list AS ml     ON cm.id = ml.maker JOIN car_names AS cn     ON cn.makeid = cm.id AND cn.model = ml.model",
    "SELECT DISTINCT countries.countryid, countries.countryname  FROM countries  INNER JOIN car_makers ON countries.countryid = car_makers.countryid",
    "SELECT countryid, countryname FROM countries WHERE countryid IN (SELECT DISTINCT country FROM car_makers)",
    "SELECT COUNT(*) FROM cars_data WHERE horsepower > 150",
    "To get the number of cars with a horsepower greater than 150, I would use this SQL query:  ``` SELECT COUNT(*) FROM cars_data WHERE horsepower > 150 ```",
    "SELECT AVG(weight) FROM cars_data GROUP BY year",
    "select year, avg(weight) as average_weight, year/10*10 as decade from cars_data group by decade, year",
    "SELECT DISTINCT countryname FROM (SELECT COUNT(DISTINCT maker) AS cnt,\u00a0countries.countryname FROM car_1.car_makers RIGHT JOIN car_1.countries ON car_1.car_makers.country = car_1.countries.countryid GROUP BY countries.countryname) c WHERE c.cnt >= 3 AND c.countryname IN (SELECT countries.countryname FROM car_1.continents JOIN car_1.countries ON car_1.continents.contid=car_1.countries.continent WHERE car_1.continents.continent = 'europe')",
    "SELECT DISTINCT c.countryname FROM  countries c JOIN car_makers m ON m.country = c.countryid   WHERE c.continent = 'Europe' GROUP BY c.countryid HAVING COUNT (DISTINCT m.maker) >= 3",
    "SELECT max(horsepower), make FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cars_data.cylinders = 3 GROUP BY make.",
    "SELECT max(horsepower), maker FROM cars_data  INNER JOIN car_makers ON cars_data.id = car_makers.id WHERE cylinders = 3 GROUP BY maker",
    "SELECT *  FROM cars_data WHERE mpg = (SELECT MAX(mpg) FROM cars_data)",
    "SELECT model FROM model_list INNER JOIN (SELECT MAX(mpg) as max_mpg FROM cars_data) as max_mpg_table ON cars_data.mpg = max_mpg_table.max_mpg",
    "SELECT AVG(horsepower) FROM cars_data WHERE year < 1980;",
    "SELECT AVG(horsepower) from cars_data where year < 1980",
    "SELECT AVG(edispl) FROM cars_data, model_list WHERE cars_data.id = model_list.modelid AND model_list.maker = 'volvo'",
    "SELECT AVG(edispl) FROM cars_data WHERE makeid IN (SELECT id FROM car_makers WHERE maker = 'volvo')",
    "SELECT cylinders, MAX(accelerate) FROM cars_data GROUP BY cylinders",
    "SELECT MAX(accelerate) FROM cars_data GROUP BY cylinders",
    "SELECT maker FROM model_list GROUP BY maker ORDER BY COUNT(DISTINCT makeid) DESC LIMIT 1",
    "SELECT model, COUNT(DISTINCT version) AS num_versions FROM car_names GROUP BY model ORDER BY num_versions DESC LIMIT 1;",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 4",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 4",
    "SELECT COUNT(*) FROM cars_data WHERE year = 1980",
    "SELECT COUNT(*) FROM cars_data WHERE year=1980",
    "SELECT COUNT(*) FROM car_makers  INNER JOIN model_list ON car_makers.id = model_list.maker  WHERE car_makers.fullname LIKE '%American Motor Company%'",
    "SELECT COUNT(*)  FROM model_list  WHERE maker=(SELECT id FROM car_makers WHERE maker='American Motor Company')",
    "SELECT maker, fullname, id  FROM car_makers WHERE id IN (    SELECT maker     FROM model_list     GROUP BY maker    HAVING COUNT(DISTINCT(model)) > 3  ) ",
    "SELECT id, maker FROM car_makers WHERE id IN(SELECT maker FROM model_list GROUP BY maker HAVING COUNT(*) > 3)",
    "SELECT DISTINCT model  FROM model_list m JOIN car_makers cm ON m.maker = cm.maker  JOIN cars_data cd ON m.modelid = cd.id  WHERE cm.fullname = 'General Motors' OR cd.weight > 3500",
    "SELECT model FROM model_list WHERE maker = 'General Motors' OR weight > 3500",
    "SELECT distinct year FROM cars_data WHERE weight >= 3000 AND weight <= 4000",
    "SELECT DISTINCT year FROM cars_data WHERE weight < 4000 AND weight > 3000",
    "SELECT horsepower FROM cars_data WHERE accelerate = (SELECT MAX(accelerate) FROM cars_data)",
    "SELECT horsepower FROM cars_data ORDER BY accelerate DESC LIMIT 1.",
    "SELECT cylinders FROM cars_data WHERE model = 'volvo' ORDER BY accelerate LIMIT 1",
    "SELECT cylinders  FROM cars_data  WHERE accelerate = (SELECT MIN(accelerate) FROM cars_data WHERE make = 'volvo')\"; (number of cylinders will be the output)",
    "SELECT COUNT(*) FROM cars_data WHERE accelerate > (SELECT MAX(accelerate) FROM cars_data WHERE horsepower = (SELECT MAX(horsepower) FROM cars_data))",
    "SELECT COUNT(*)  FROM  cars_data  WHERE Accelerate > (SELECT Max(Accelerate)                      From cars_data                      WHERE horsepower = (SELECT Max(Horsepower) FROM cars_data))",
    "SELECT count(distinct countries.countryid) FROM car_makers  INNER JOIN countries ON countries.countryid=car_makers.country GROUP BY car_makers.country HAVING COUNT(DISTINCT car_makers.id) > 2",
    "SELECT COUNT(DISTINCT country) FROM car_makers cm  JOIN countries c ON cm.country = c.countryid GROUP BY cm.country HAVING COUNT(cm.id)>2",
    "```sql SELECT count(*) FROM cars_data WHERE cylinders > 6 ```",
    "SELECT count(*) FROM cars_data WHERE cylinders > 6",
    "SELECT model, MAX(horsepower) FROM cars_data WHERE cylinders = 4 GROUP BY model LIMIT 1",
    "SELECT model_list.model, MAX(cars_data.horsepower) AS max_horsepower FROM model_list JOIN car_makers ON model_list.maker = car_makers.id JOIN cars_data ON car_makers.id = cars_data.id WHERE cars_data.cylinders = 4 GROUP BY model_list.model",
    "SELECT cars_data.makeid, car_makers.maker, car_makers.fullname FROM cars_data JOIN (     SELECT makeid,            MIN(horsepower) as min_horsepower     FROM cars_data     WHERE horsepower > (                           SELECT MIN(horsepower)                           FROM cars_data                         ) ) top_w_reviews_horses_power ON top_w_above_avg_horses_power.min_horsepower = cars_data.horsepower AND top_w_above_avg_horses_power.makeid = cars_data.makeid JOIN car_names ON cars_data.makeid = car_names.makeid AND cars_data.model = car_names.model JOIN (   SELECT horsepower, cylinders FROM cars_data WHERE cylinders <= 3 ) car_cylinders_dispalacements ON cars_data.horsepower IS NOT NULL  AND cars_data.cylinders IS NOT NULL  AND cars_data.horsepower > car_cylinders_dispalacemnts.horsepower  AND car_cyl",
    "SELECT makeid, maker from car_makers where id IN (   SELECT DISTINCT makeid   FROM cars_data   WHERE horsepower > (     SELECT MIN(horsepower)     FROM cars_data)   AND cylinders < 4)",
    "SELECT MAX(mpg) FROM cars_data WHERE cylinders = 8 AND year < 1980",
    "SELECT MAX(mpg) FROM cars_data WHERE cylinders = 8 OR year < 1980;",
    "SELECT model from model_list WHERE maker <> 'Ford Motor Company' AND weight < 3500",
    "SELECT DISTINCT maker, model FROM model_list  WHERE maker <> 'Ford' AND modelid IN (  SELECT id FROM cars_data WHERE weight < 3500)",
    "SELECT c.countryname FROM countries c LEFT JOIN car_makers cm ON c.countryid = cm.country WHERE cm.country IS NULL",
    "SELECT DISTINCT countries.countryname FROM countries LEFT JOIN car_makers ON countries.countryid = car_makers.country WHERE car_makers.maker IS NULL",
    "SELECT makeid, maker FROM     (SELECT makeid, COUNT(model) AS num_models FROM car_names GROUP BY makeid) num_models      JOIN     (SELECT id, maker FROM car_makers) cm  ON num_models.makeid=cm.id where num_models.num_models>1                                 AND cm.id in                                        (SELECT id FROM car_makers GROUP BY id HAVING COUNT(DISTINCT makeid)>3)                                                                                                                                                                                       ",
    "SELECT makeid, car_makers.id, maker FROM car_names  JOIN car_makers ON car_makers.id = car_names.makeid  WHERE makeid IN      (SELECT makeid      FROM car_names      JOIN car_makers ON car_makers.id=  car_names.makeid      GROUP BY makeid HAVING COUNT(model) >=2)  AND makeid IN      (SELECT makeid      FROM cars_data      JOIN car_names ON cars_data.id= car_names.makeid      WHERE COUNT(cars_data.id) > 3)",
    "SELECT countries.countryid, countries.countryname FROM( SELECT distinct cm.country, count(Distinct cm.maker) total_cm FROM car_1.car_makers cm   join car_1.model_list AS m   on m.maker = cm.maker   join car_1.car_names c   join car_1.countries ca on cm.country=ca.countryname Where (m.model = 'fiat' OR ca.countryname IN (SELECT c.sort AS values FROM unnest(ARRAY['fiat']) AS c(sort))  ) group by cm.country)    AS CM_Counts    JOIN car_1.countries    ON CM_Counts.country = car_1.countries.countryname    WHERE total_cm > 3\tSETQUERYPLANCACHECAPACITY 1000 OPTIMIZECORESFIRSTUSEAGE\tON CORE_0. EXECUTEQUERYCORE_0_SELECTEDPLAN_FIFO_OPERATION_LIFI689244938184281923903578712181_LOAD\tSELECT cached_core_input IF_IP THEN hash_each",
    "SELECT countryid, countryname FROM countries WHERE countryid IN (SELECT countryid FROM car_makers C1 WHERE 3 < (SELECT COUNT(mkr.id) FROM car_makers mkr WHERE mkr.country = C1.country)) OR countryid in (SELECT country FROM car_makers WHERE maker = 'fiat')",
    "SELECT country FROM airlines WHERE airline = 'JetBlue Airways'",
    "SELECT country     FROM airlines     WHERE airline = 'Jetblue Airways'",
    "select abbreviation from airlines where airline = 'JetBlue Airways'",
    "SELECT abbreviation from airlines where airline='Jetblue Airways'",
    "SELECT airline, abbreviation FROM airlines WHERE country='USA'",
    "SELECT airline, abbreviation FROM airlines WHERE country = 'USA'",
    "SELECT airportcode, airportname FROM airports WHERE city = 'Anthony'",
    "SELECT airportcode, airportname  FROM airports  WHERE city = 'Anthony'",
    "SELECT COUNT(DISTINCT airline) FROM airlines",
    "SELECT COUNT(*) FROM airlines;",
    "SELECT COUNT(*) FROM airports",
    "SELECT COUNT(*) FROM airports",
    "SELECT COUNT(*) FROM flights;",
    "SELECT COUNT(*) FROM flights",
    "SELECT airline FROM airlines WHERE abbreviation = 'UAL'",
    "SELECT airline FROM airlines WHERE abbreviation='UAL'",
    "SELECT COUNT(*) FROM airlines WHERE country = 'USA'",
    "SELECT COUNT(*) FROM airlines WHERE country = 'USA'",
    "SELECT city, country FROM airports WHERE airportname = 'Alton airport'",
    "SELECT city, country FROM airports WHERE airportname = 'Alton airport'",
    "SELECT airportname FROM airports WHERE airportcode = 'AKO'"
]