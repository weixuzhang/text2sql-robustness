[
    "SELECT COUNT(*) FROM singer",
    "SELECT COUNT(*) FROM singer",
    "SELECT name, country, age FROM singer ORDER BY age DESC;",
    "SELECT name, country, age FROM singer ORDER BY age DESC",
    "SELECT AVG(age), MIN(age), MAX(age) FROM singer WHERE country = 'France'",
    "SELECT AVG(age), MIN(age), MAX(age) FROM singer WHERE country = 'France'",
    "SELECT singer.name, singer.song_release_year  FROM singer  WHERE singer.age = (SELECT MIN(age) FROM singer)",
    "SELECT name, song_release_year FROM singer WHERE age = (SELECT MIN(age) FROM singer)",
    "SELECT DISTINCT country FROM singer WHERE age > 20",
    "SELECT DISTINCT country FROM singer WHERE age > 20",
    "SELECT singer.country, COUNT(singer.singer_id) AS num_singers FROM singer GROUP BY singer.country",
    "SELECT country, COUNT(*)  FROM singer  GROUP BY country",
    "SELECT song_name  FROM singer  WHERE age > (SELECT AVG(age) FROM singer)",
    "SELECT DISTINCT song_name FROM singer  WHERE age > (SELECT AVG(age) FROM singer)",
    "SELECT location, name  FROM stadium  WHERE capacity BETWEEN 5000 AND 10000",
    "SELECT location, name FROM stadium WHERE capacity >= 5000 AND capacity <= 10000",
    "SELECT MAX(capacity), AVG(capacity) FROM stadium;",
    "SELECT AVG(capacity), MAX(capacity) FROM stadium",
    "SELECT name, capacity FROM stadium WHERE average = (SELECT MAX(average) FROM stadium)",
    "SELECT name, capacity FROM stadium WHERE average = (SELECT MAX(average) FROM stadium)",
    "SELECT COUNT(*) FROM concert WHERE year=2014 OR year=2015",
    "SELECT COUNT(*) FROM concert WHERE YEAR IN (2014, 2015)",
    "SELECT stadium.name, COUNT(concert.concert_id) AS \"Number of Concerts\" FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id GROUP BY stadium.name;",
    "SELECT stadium.name, COUNT(*)  FROM stadium  JOIN concert ON stadium.stadium_id = concert.stadium_id  GROUP BY stadium.name",
    "SELECT name, capacity  FROM stadium WHERE stadium_id = (   SELECT stadium_id    FROM concert    WHERE year >= 2014   GROUP BY stadium_id    ORDER BY COUNT(*) DESC    LIMIT 1 )",
    "SELECT name, capacity FROM stadium WHERE stadium_id = (SELECT stadium_id FROM concert WHERE year > 2013 GROUP BY stadium_id ORDER BY COUNT(*) DESC LIMIT 1)",
    "SELECT year FROM concert GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1",
    "SELECT year FROM concert GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1;",
    "SELECT stadium.name FROM stadium LEFT JOIN concert ON concert.stadium_id = stadium.stadium_id WHERE concert.concert_name IS NULL",
    "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)",
    "SELECT DISTINCT singer.country  FROM singer_in_concert  INNER JOIN singer AS s1 ON singer_in_concert.singer_id = s1.singer_id  INNER JOIN singer AS s2 ON singer_in_concert.singer_id = s2.singer_id WHERE s1.age > 40 AND s2.age < 30",
    "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert WHERE year = 2014)",
    "SELECT name FROM stadium WHERE stadium.stadium_id NOT IN (SELECT stadium_id FROM concert WHERE year = 2014)",
    "SELECT concert_name as name, theme, COUNT(singer_id) AS number_of_singers FROM concert LEFT JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id GROUP BY concert.concert_id",
    "SELECT concert_name, theme, COUNT(singer_id) AS number_of_singers FROM concert INNER JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id GROUP BY concert.concert_id",
    "SELECT singer.name, COUNT(concert.id) as num_of_concerts FROM singer JOIN singer_in_concert ON singer.id = singer_in_concert.singer_id JOIN concert ON concert.id = singer_in_concert.concert_id GROUP BY singer.id",
    "SELECT singer.name, COUNT(singer_in_concert.concert_id) FROM singer  JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id  GROUP BY singer.name",
    "SELECT DISTINCT singer.name  FROM singer  INNER JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id  INNER JOIN concert ON concert.concert_id = singer_in_concert.concert_id  WHERE concert.year = 2014",
    "SELECT DISTINCT singer.name FROM singer JOIN singer_in_concert ON singer_in_concert.singer_id = singer.singer_id JOIN concert ON concert.concert_id = singer_in_concert.concert_id WHERE concert.year = 2014",
    "select name, country from singer where song_name like '%Hey%'",
    "SELECT singer.name, singer.country FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id WHERE song_name LIKE '%Hey%'.",
    "SELECT DISTINCT stadium.name, stadium.location FROM concert JOIN stadium ON stadium.stadium_id = concert.stadium_id WHERE concert.year = 2014 AND concert.stadium_id IN (     SELECT stadium_id      FROM concert     WHERE year = 2015 )",
    "SELECT s.name, s.location FROM stadium AS s WHERE   EXISTS (     SELECT 1 FROM concert AS c1, concert AS c2     WHERE       c1.stadium_id = s.stadium_id       AND c1.year = 2014       AND c2.stadium_id = s.stadium_id       AND c2.year = 2015   )",
    "SELECT COUNT(*) FROM concert WHERE stadium_id = (   SELECT stadium_id   FROM stadium   ORDER BY capacity DESC   LIMIT 1 );",
    "SELECT COUNT(concert_id) FROM concert WHERE stadium_id = (SELECT stadium_id FROM stadium ORDER BY capacity DESC LIMIT 1)",
    "SELECT COUNT(*) FROM pets WHERE weight > 10",
    "SELECT COUNT(*) FROM pets WHERE weight > 10",
    "SELECT weight FROM pets WHERE pettype = 'dog' ORDER BY pet_age ASC LIMIT 1",
    "SELECT weight FROM pets ORDER BY pet_age ASC LIMIT 1",
    "SELECT pettype, MAX(weight) FROM pets GROUP BY pettype",
    "SELECT pettype, MAX(weight) AS maximum_weight, MAX(pettype) AS maximum_type FROM pets GROUP BY pettype",
    "SELECT COUNT(pets.petid)  FROM pets  JOIN has_pet ON pets.petid = has_pet.petid  JOIN student ON has_pet.stuid = student.stuid  WHERE student.age > 20",
    "SELECT COUNT(DISTINCT has_pet.petid) FROM student INNER JOIN has_pet ON student.stuid = has_pet.stuid INNER JOIN pets ON has_pet.petid = pets.petid WHERE student.age > 20",
    "SELECT COUNT(petid) FROM pets p JOIN has_pet hp ON p.petid = hp.petid JOIN student s ON hp.stuid = s.stuid WHERE pettype = 'dog' AND s.sex = 'F'",
    "SELECT COUNT(*) FROM has_pet JOIN pets ON has_pet.petid = pets.petid JOIN student ON has_pet.stuid = student.stuid WHERE pets.pettype='dog' AND student.sex='female'",
    "SELECT COUNT(DISTINCT pettype) FROM pets",
    "SELECT COUNT(DISTINCT pettype) FROM pets",
    "SELECT DISTINCT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype IN ('cat', 'dog')",
    "SELECT DISTINCT fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pettype = 'cat' OR pettype = 'dog'",
    "SELECT DISTINCT student.fname FROM student INNER JOIN has_pet ON student.stuid = has_pet.stuid INNER JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat'   AND student.stuid IN (SELECT has_pet.stuid FROM has_pet INNER JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'dog')",
    "SELECT DISTINCT s.fname FROM student s INNER JOIN has_pet hp1 ON s.stuid = hp1.stuid INNER JOIN has_pet hp2 ON s.stuid = hp2.stuid INNER JOIN pets p1 ON hp1.petid = p1.petid AND p1.pettype = 'cat' INNER JOIN pets p2 ON hp2.petid = p2.petid AND p2.pettype = 'dog'",
    "SELECT major, age FROM student WHERE stuid NOT IN (   SELECT stuid   FROM has_pet   JOIN pets ON has_pet.petid = pets.petid   WHERE pettype = 'cat' )",
    "SELECT student.major, student.age FROM student WHERE student.stuid NOT IN (   SELECT has_pet.stuid FROM has_pet JOIN pets ON has_pet.petid=pets.petid WHERE pets.pettype='cat'  )",
    "SELECT student.stuid  FROM student  WHERE student.stuid NOT IN (SELECT has_pet.stuid FROM has_pet JOIN pets ON has_pet.petid=pets.petid WHERE pets.pettype='cat')",
    "SELECT DISTINCT student.stuid FROM student WHERE student.stuid NOT IN      (SELECT stuid FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat')",
    "SELECT fname, age FROM student WHERE stuid IN (SELECT stuid FROM has_pet WHERE petid IN (SELECT petid FROM pets WHERE pettype = 'dog')) AND stuid NOT IN (SELECT stuid FROM has_pet WHERE petid IN (SELECT petid FROM pets WHERE pettype = 'cat'))  ORDER BY stuid LIMIT 1",
    "SELECT fname FROM student WHERE stuid IN      (SELECT stuid FROM has_pet WHERE petid IN          (SELECT petid FROM pets WHERE pettype='dog')         AND stuid NOT IN          (SELECT stuid FROM has_pet WHERE petid IN              (SELECT petid FROM pets WHERE pettype='cat')         )     )",
    "SELECT pettype, weight FROM pets WHERE pet_age = (SELECT MIN(pet_age) FROM pets)",
    "SELECT pettype, weight FROM pets WHERE pet_age = (SELECT MIN(pet_age) FROM pets)",
    "SELECT petid, weight FROM pets WHERE pet_age > 1.",
    "SELECT petid, weight FROM pets WHERE pet_age > 1",
    "SELECT pettype, AVG(pet_age) AS average_age, MAX(pet_age) AS max_age FROM pets GROUP BY pettype;",
    "SELECT pettype, AVG(pet_age), MAX(pet_age) FROM pets GROUP BY pettype",
    "SELECT pettype, AVG(weight) FROM pets GROUP BY pettype;",
    "SELECT pettype, AVG(weight) FROM pets GROUP BY pettype",
    "SELECT student.fname, student.age  FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid",
    "SELECT DISTINCT student.fname, student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid",
    "SELECT petid FROM has_pet JOIN student ON has_pet.stuid=student.stuid WHERE lname = 'Smith'",
    "SELECT petid FROM has_pet WHERE stuid IN (SELECT stuid FROM student WHERE lname = 'Smith')",
    "SELECT has_pet.stuid, COUNT(*) as num_of_pets FROM has_pet  JOIN pets ON has_pet.petid = pets.petid GROUP BY has_pet.stuid;",
    "SELECT has_pet.stuid, COUNT(has_pet.petid)  FROM has_pet  GROUP BY has_pet.stuid",
    "SELECT fname, sex FROM student WHERE stuid IN (SELECT stuid FROM has_pet GROUP BY stuid HAVING COUNT(*) > 1)",
    "SELECT student.fname, student.sex  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  GROUP BY student.stuid  HAVING COUNT(has_pet.petid) > 1",
    "SELECT lname FROM student WHERE stuid IN (SELECT stuid FROM pets_1 INNER JOIN pets ON pets_1.petid=pets.petid WHERE pettype='cat' AND pet_age=3) ORDER BY stuid DESC LIMIT 1",
    "SELECT lname FROM student WHERE stuid = (SELECT stuid FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE pettype = 'cat' AND pet_age = 3);",
    "SELECT AVG(age) FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet)",
    "SELECT AVG(age) FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet)",
    "SELECT COUNT(*) FROM continents;",
    "SELECT COUNT(*) FROM continents",
    "SELECT c.contid, c.continent, COUNT(cou.countryid) AS number_of_countries FROM continents AS c JOIN countries AS cou ON c.contid = cou.continent GROUP BY c.contid, c.continent",
    "SELECT continents.contid, continents.continent, COUNT(countries.countryid) FROM continents INNER JOIN countries ON continents.continent = countries.continent GROUP BY continents.contid, continents.continent",
    "SELECT COUNT(*) FROM countries",
    "SELECT COUNT(DISTINCT countryid) FROM countries",
    "SELECT cm.fullname AS maker_fullname, cm.id AS maker_id, COUNT(DISTINCT ml.modelid) AS num_models FROM car_makers AS cm JOIN model_list AS ml ON cm.id = ml.maker GROUP BY cm.fullname, cm.id",
    "SELECT car_makers.id, car_makers.fullname, COUNT(model_list.modelid)  FROM car_makers  INNER JOIN model_list ON car_makers.maker = model_list.maker  GROUP BY car_makers.id, car_makers.fullname",
    "SELECT model_list.model FROM model_list INNER JOIN cars_data ON model_list.modelid = cars_data.id ORDER BY cars_data.horsepower ASC LIMIT 1",
    "SELECT model FROM model_list  JOIN cars_data ON model_list.modelid = cars_data.id  WHERE horsepower = (SELECT MIN(horsepower) FROM cars_data)",
    "SELECT model FROM model_list WHERE weight < (SELECT AVG(weight) FROM cars_data)",
    "SELECT model FROM model_list JOIN cars_data ON model_list.id = cars_data.id WHERE weight < (SELECT AVG(weight) FROM cars_data)",
    "SELECT DISTINCT cm.maker FROM car_makers cm INNER JOIN cars_data cd ON cm.id = cd.id WHERE cd.year = 1970 AND cm.id IN (     SELECT makeid FROM car_names )",
    "SELECT DISTINCT maker FROM car_makers INNER JOIN model_list ON car_makers.id = model_list.maker INNER JOIN car_names ON model_list.modelid = car_names.model INNER JOIN cars_data ON car_names.makeid = cars_data.id WHERE year=1970",
    "SELECT make, year  FROM car_names  JOIN cars_data ON car_names.makeid = cars_data.id  WHERE year = (SELECT MIN(year) FROM cars_data)",
    "SELECT car_makers.maker, MIN(cars_data.year) FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid JOIN car_makers ON car_names.model = car_makers.id GROUP BY car_makers.maker ORDER BY MIN(cars_data.year) LIMIT 1;",
    "SELECT DISTINCT model FROM model_list JOIN cars_data ON model_list.modelid = cars_data.id WHERE year > 1980",
    "SELECT DISTINCT model FROM car_names JOIN cars_data ON cars_data.id = car_names.makeid WHERE year > 1980",
    "SELECT distinct continents.continent, count(car_makers.maker) FROM continents INNER JOIN countries ON countries.continent = continents.contid INNER JOIN car_makers ON car_makers.country = countries.countryid GROUP BY continents.continent",
    "SELECT continents.continent, COUNT(DISTINCT car_makers.maker) FROM continents, countries, car_makers WHERE continents.contid = countries.continent AND countries.countryid = car_makers.country GROUP BY continents.continent",
    "SELECT countries.countryname  FROM      (SELECT MAX(counter) MaxNum FROM          (SELECT COUNT(car_makers.id) counter          FROM car_makers          JOIN countries          ON car_makers.country = countries.countryid          GROUP BY car_makers.country) temp_table     ) MaxCoun JOIN      (SELECT COUNT(car_makers.id) counter, countries.countryname      FROM car_makers      JOIN countries      ON car_makers.country = countries.countryid      GROUP BY car_makers.country) tab ON MaxCoun.MaxNum = tab.counter",
    "SELECT countryname FROM countries WHERE countryid = (     SELECT country     FROM car_makers     GROUP BY country     ORDER BY COUNT(maker) DESC     LIMIT 1 )",
    "SELECT car_makers.fullname AS maker, COUNT(DISTINCT model_list.modelid) AS count_models  FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.fullname",
    "SELECT car_makers.id, car_makers.fullname, COUNT(model_list.modelid) as num_models  FROM car_makers  INNER JOIN model_list  ON car_makers.maker = model_list.maker  GROUP BY car_makers.id, car_makers.fullname",
    "SELECT accelerate FROM car_names  JOIN cars_data ON car_names.makeid = cars_data.id JOIN model_list ON car_names.model = model_list.model  JOIN car_makers ON model_list.maker = car_makers.fullname  WHERE car_names.make = 'amc hornet sportabout (sw)'",
    "SELECT accelerate FROM cars_data WHERE makeid = (SELECT makeid FROM car_names WHERE model = 'hornet sportabout (sw)' AND maker = 'amc')",
    "SELECT COUNT(*) FROM car_makers WHERE country = 'france'",
    "select count(distinct id) from car_makers where maker = 'care' and country = 'France'",
    "SELECT COUNT(DISTINCT modelid) FROM model_list WHERE maker IN (SELECT id FROM car_makers WHERE country='usa')",
    "SELECT COUNT(DISTINCT car_names.model) FROM car_names JOIN car_makers ON car_names.makeid = car_makers.id AND car_makers.country = 'United States' JOIN model_list ON car_names.model = model_list.model;",
    "SELECT AVG(mpg) FROM cars_data WHERE cylinders = 4.",
    "SELECT AVG(mpg) FROM cars_data WHERE cylinders = 4;",
    "SELECT Min(weight) FROM cars_data WHERE cylinders = 8 AND year = 1974",
    "select min(weight) from cars_data where cylinders = 8 and year = 1974",
    "SELECT maker, model FROM model_list",
    "select maker, model from car_makers inner join model_list on car_makers.id = model_list.maker_id inner join car_names on model_list.modelid = car_names.model_id.",
    "SELECT DISTINCT countries.countryid, countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country ORDER BY countries.countryname ASC",
    "SELECT DISTINCT c.countryid, c.countryname  FROM countries c  INNER JOIN car_makers cm ON c.countryid = cm.country",
    "SELECT COUNT(*) FROM cars_data WHERE horsepower > 150",
    "SELECT COUNT(*) FROM cars_data WHERE horsepower > 150.0",
    "SELECT AVG(weight) FROM cars_data GROUP BY year",
    "SELECT year, AVG(weight), AVG(year) FROM cars_data GROUP BY year",
    "SELECT countries.countryname FROM countries INNER JOIN car_makers ON countries.countryid = car_makers.country INNER JOIN (SELECT continent FROM continents WHERE continent='Europe') AS x ON countries.continent = x.continent GROUP BY countries.countryid HAVING COUNT(DISTINCT car_makers.maker) >= 3",
    "SELECT DISTINCT countries.countryname FROM countries INNER JOIN car_makers ON countries.countryid = car_makers.country WHERE countries.continent = 'European' GROUP BY countries.countryname HAVING COUNT(DISTINCT car_makers.maker) >= 3",
    "SELECT MAX(horsepower), make  FROM cars_data  WHERE cylinders = 3  GROUP BY make",
    "SELECT MAX(horsepower), maker FROM cars_data  INNER JOIN model_list ON cars_data.maker = model_list.maker AND cars_data.id = model_list.modelid  WHERE cylinders=3 GROUP BY maker.",
    "SELECT model FROM model_list JOIN cars_data ON model_list.modelid = cars_data.model WHERE mpg = (SELECT MAX(mpg) FROM cars_data)",
    "SELECT model FROM model_list WHERE modelid = (SELECT id FROM cars_data ORDER BY mpg DESC LIMIT 1)",
    "SELECT AVG(horsepower) FROM cars_data WHERE year < 1980.",
    "SELECT AVG(horsepower) FROM cars_data WHERE year < 1980",
    "SELECT AVG(edispl)  FROM car_names  JOIN cars_data ON car_names.makeid = cars_data.id  WHERE car_names.model = 'volvo'",
    "SELECT AVG(edispl) FROM car_names JOIN cars_data ON car_names.makeid = cars_data.id WHERE car_names.make = 'volvo'",
    "SELECT cylinders, MAX(accelerate)  FROM cars_data  GROUP BY cylinders",
    "select max(accelerate) from cars_data group by cylinders",
    "SELECT car_makers.maker FROM car_makers JOIN car_names ON car_makers.id = car_names.makeid GROUP BY car_makers.maker ORDER BY COUNT(car_names.model) DESC LIMIT 1",
    "SELECT model, COUNT(DISTINCT makeid) AS num_versions FROM model_list JOIN car_names ON model_list.modelid = car_names.model GROUP BY model ORDER BY num_versions DESC LIMIT 1;",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 4",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 4",
    "SELECT COUNT(*) FROM cars_data WHERE year = 1980",
    "SELECT COUNT(*) from cars_data where year=1980",
    "SELECT COUNT(DISTINCT model) FROM model_list  JOIN car_makers ON model_list.maker = car_makers.maker  WHERE car_makers.fullname = 'American Motor Company'",
    "SELECT COUNT(DISTINCT modelid) FROM model_list WHERE maker = 'American Motor Company'",
    "SELECT DISTINCT car_makers.id, car_makers.fullname  FROM car_makers  JOIN model_list ON car_makers.id = model_list.maker  GROUP BY car_makers.id, car_makers.fullname  HAVING COUNT(DISTINCT model_list.modelid) > 3",
    "SELECT id, maker FROM car_makers WHERE id IN (SELECT maker FROM model_list GROUP BY maker HAVING COUNT(*) > 3)",
    "SELECT DISTINCT model FROM model_list WHERE maker IN (SELECT maker FROM car_makers WHERE fullname = 'General Motors') OR model_list.modelid IN (SELECT makeid FROM cars_data WHERE weight > 3500)",
    "SELECT DISTINCT model  FROM model_list WHERE maker = 'General Motors' OR weight > 3500",
    "SELECT DISTINCT year FROM cars_data WHERE weight >= 3000 AND weight <= 4000 ORDER BY year ASC",
    "SELECT DISTINCT year  FROM cars_data  WHERE weight < 4000 AND year IN (SELECT year FROM cars_data WHERE weight > 3000)",
    "SELECT horsepower FROM cars_data ORDER BY accelerate DESC LIMIT 1;",
    "SELECT horsepower FROM cars_data ORDER BY accelerate DESC LIMIT 1",
    "select cylinders from cars_data where model = 'volvo' order by accelerate limit 1.",
    "SELECT MIN(cylinders) FROM cars_data WHERE makeid = (SELECT id FROM car_names WHERE model = 'volvo') ORDER BY accelerate LIMIT 1",
    "SELECT COUNT(*) FROM cars_data WHERE accelerate > (SELECT MAX(accelerate) FROM cars_data WHERE horsepower = (SELECT MAX(horsepower) FROM cars_data))",
    "SELECT COUNT(*) FROM cars_data WHERE accelerate > (SELECT MAX(accelerate) FROM cars_data                     WHERE horsepower = (SELECT MAX(horsepower) FROM cars_data))",
    "SELECT COUNT(DISTINCT countries.countryname) FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryid HAVING COUNT(DISTINCT car_makers.maker) > 2",
    "SELECT COUNT(DISTINCT c.countryid) FROM car_makers cm JOIN countries c ON cm.country = c.countryid GROUP BY c.countryid HAVING COUNT(DISTINCT cm.id) > 2",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 6",
    "SELECT COUNT(*) FROM car_data WHERE cylinders > 6.",
    "SELECT model FROM model_list NATURAL JOIN car_names NATURAL JOIN cars_data WHERE cylinders = 4 ORDER BY horsepower DESC LIMIT 1;",
    "SELECT model FROM car_names INNER JOIN cars_data ON car_names.id = cars_data.id WHERE cylinders = 4 ORDER BY horsepower DESC LIMIT 1",
    "SELECT car_makers.id as makeid, car_makers.maker as make_name FROM car_makers JOIN car_names ON car_names.makeid = car_makers.id JOIN cars_data ON cars_data.id = car_names.modelid WHERE cars_data.horsepower > (SELECT MIN(cars_data.horsepower) FROM cars_data) AND cars_data.cylinders <= 3;",
    "SELECT makeid, maker FROM car_names WHERE horsepower > (SELECT MIN(horsepower) FROM cars_data) AND cylinders < 4",
    "SELECT MAX(mpg) FROM cars_data WHERE year < 1980 AND cylinders = 8",
    "SELECT MAX(mpg) FROM cars_data WHERE cylinders = 8 OR year < 1980",
    "SELECT model  FROM car_names cn, cars_data cd, car_makers cm  WHERE cn.makeid = cm.id  AND cn.model = cd.id  AND weight < 3500  AND maker != 'Ford Motor Company'",
    "SELECT model FROM car_names, cars_data, car_makers WHERE car_names.makeid = car_makers.id    AND car_makers.country != 'USA'    AND cars_data.weight < 3500    AND cars_data.id = car_names.modelid",
    "SELECT countryname  FROM countries  WHERE countryid NOT IN      (SELECT country       FROM car_makers)",
    "SELECT DISTINCT countryname FROM countries  WHERE countryname NOT IN (SELECT DISTINCT country FROM car_makers)",
    "SELECT DISTINCT car_makers.id, car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id HAVING COUNT(DISTINCT model_list.modelid) >= 2 AND COUNT(DISTINCT car_makers.maker) > 3",
    "SELECT makeid as ids, maker FROM car_names INNER JOIN (SELECT id, maker FROM car_makers INNER JOIN (SELECT maker, count(DISTINCT model) as num_models FROM model_list GROUP BY maker HAVING num_models >= 2) as producers ON car_makers.maker = producers.maker WHERE id IN (SELECT makeid FROM car_names GROUP BY makeid HAVING count(*) > 3)) as makers ON makers.id = car_names.makeid GROUP BY makeid, maker",
    "SELECT countryid, countryname FROM countries WHERE countryid IN (   SELECT country    FROM car_makers    GROUP BY country    HAVING COUNT(DISTINCT maker) > 3) OR countryid IN (   SELECT country    FROM car_makers    WHERE maker = 'fiat'    GROUP BY country)",
    "SELECT countryid, countryname FROM countries WHERE countryid IN (SELECT country FROM car_makers GROUP BY country HAVING COUNT(DISTINCT maker) > 3) OR countryid IN (SELECT country FROM car_makers WHERE maker = 'fiat' GROUP BY country)",
    "SELECT country FROM airlines WHERE airline = 'JetBlue Airways'",
    "SELECT country FROM airlines WHERE airline = 'Jetblue Airways'",
    "SELECT abbreviation FROM airlines WHERE airline='JetBlue Airways'",
    "SELECT abbreviation FROM airlines WHERE airline = 'Jetblue Airways'",
    "SELECT airline, abbreviation FROM airlines WHERE country = 'USA'",
    "SELECT airline, abbreviation FROM airlines WHERE country='USA'",
    "SELECT airportcode, airportname FROM airports WHERE city = 'Anthony'",
    "SELECT airportcode, airportname FROM airports WHERE city = 'Anthony'",
    "SELECT COUNT(DISTINCT airline) FROM airlines",
    "SELECT COUNT(*) FROM airlines",
    "SELECT COUNT(*) FROM airports",
    "SELECT COUNT(*) FROM airports",
    "SELECT COUNT(*) FROM flights",
    "SELECT COUNT(*) FROM flights",
    "SELECT airline FROM airlines WHERE abbreviation = 'UAL'",
    "SELECT airline FROM airlines WHERE abbreviation = 'UAL'",
    "SELECT COUNT(*) FROM airlines WHERE country = 'USA'",
    "SELECT COUNT(*) FROM airlines WHERE country = 'USA'",
    "SELECT city, country FROM airports WHERE airportname LIKE '%Alton%';",
    "SELECT city, country FROM airports WHERE airportname = 'Alton airport'",
    "SELECT airportname FROM airports WHERE airportcode = 'AKO'"
]