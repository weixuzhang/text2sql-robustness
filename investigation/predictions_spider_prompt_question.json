[
    "SELECT COUNT(*) FROM singers;",
    "SELECT COUNT(*) FROM singers;",
    "SELECT name, country, age FROM singers ORDER BY age DESC;",
    "SELECT name, country, age FROM singer ORDER BY age DESC",
    "SELECT AVG(age), MIN(age), MAX(age) FROM singers WHERE country = 'France'",
    "SELECT AVG(age), MIN(age), MAX(age) FROM singers WHERE nationality = 'French'",
    "SELECT name, release_year FROM songs WHERE singer_age = (SELECT MIN(singer_age) FROM songs)",
    "SELECT name, release_year FROM songs WHERE singer_id = (SELECT id FROM singers ORDER BY birthdate DESC LIMIT 1)",
    "SELECT DISTINCT country FROM singers WHERE age > 20;",
    "SELECT DISTINCT country FROM singers WHERE age > 20;",
    "SELECT Country, COUNT(*) AS Num_Singers FROM Singers GROUP BY Country;",
    "SELECT country, COUNT(singer_id) AS num_singers FROM singers GROUP BY country;",
    "SELECT song_name  FROM songs  WHERE singer_age > (SELECT AVG(singer_age) FROM songs)",
    "SELECT song_name  FROM songs  WHERE singer_age > (SELECT AVG(singer_age) FROM songs)",
    "SELECT location, name FROM stadiums WHERE capacity BETWEEN 5000 AND 10000;",
    "SELECT name, location FROM stations WHERE capacity BETWEEN 5000 AND 10000;",
    "SELECT MAX(capacity), AVG(capacity) FROM stadiums;",
    "SELECT AVG(capacity), MAX(capacity) FROM stadiums;",
    "SELECT name, capacity FROM stadiums WHERE average_attendance = (SELECT MAX(average_attendance) FROM stadiums)",
    "SELECT name, capacity FROM stadiums WHERE average_attendance = (SELECT MAX(average_attendance) FROM stadiums)",
    "SELECT COUNT(*) FROM concerts WHERE year = 2014 OR year = 2015;",
    "SELECT COUNT(*) FROM concerts WHERE year = 2014 OR year = 2015;",
    "SELECT stadium_name, COUNT(*) as num_concerts FROM concerts GROUP BY stadium_name;",
    "SELECT stadium_name, COUNT(*)  FROM concerts  GROUP BY stadium_name;",
    "SELECT name, capacity FROM stadium WHERE id IN (   SELECT stadium_id   FROM concert   WHERE year >= 2014   GROUP BY stadium_id   ORDER BY COUNT(*) DESC   LIMIT 1 );",
    "SELECT name, capacity  FROM stadiums  WHERE id = (     SELECT venue_id      FROM events      WHERE event_type = 'concert' AND date > '2013-01-01'      GROUP BY venue_id      ORDER BY COUNT(*) DESC      LIMIT 1 )",
    "SELECT year  FROM concerts  GROUP BY year  ORDER BY COUNT(*) DESC  LIMIT 1;",
    "SELECT year FROM concerts GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1;",
    "SELECT name  FROM stadiums  WHERE id NOT IN (SELECT stadium_id FROM concerts)",
    "SELECT name FROM stadiums WHERE id NOT IN (SELECT stadium_id FROM concerts)",
    "SELECT DISTINCT c.country_name FROM singers s1 JOIN singers s2 ON s1.country_id = s2.country_id JOIN countries c ON s1.country_id = c.country_id WHERE s1.age > 40 AND s2.age < 30;",
    "SELECT name  FROM stadiums  WHERE name NOT IN (SELECT stadium_name FROM concerts WHERE year = 2014)",
    "SELECT name  FROM stadiums  WHERE id NOT IN (SELECT stadium_id FROM concerts WHERE year = 2014)",
    "SELECT Concerts.name, Concerts.theme, COUNT(Singers.id) AS num_singers FROM Concerts JOIN Performances ON Concerts.id = Performances.concert_id JOIN Singers ON Performances.singer_id = Singers.id GROUP BY Concerts.id;",
    "SELECT name, theme, COUNT(singer_id) AS number_of_singers FROM concerts JOIN concert_singers ON concerts.id = concert_singers.concert_id GROUP BY concerts.id, name, theme",
    "SELECT Singer.name, COUNT(Concert.id) AS num_concerts FROM Singer LEFT JOIN Concert ON Singer.id = Concert.singer_id GROUP BY Singer.id;",
    "SELECT Singer.name, COUNT(Concert.id) AS num_concerts FROM Singer JOIN Concert ON Singer.id = Concert.singer_id GROUP BY Singer.id",
    "SELECT DISTINCT Singer.name  FROM Concert  JOIN Singer ON Concert.singer_id = Singer.id  WHERE YEAR(Concert.date) = 2014;",
    "SELECT DISTINCT singer_name  FROM concerts  WHERE concert_year = 2014;",
    "SELECT name, nation  FROM singer  WHERE song_name LIKE '%Hey%';",
    "SELECT singers.name, singers.country  FROM singers  JOIN songs ON singers.id = songs.singer_id  WHERE songs.title LIKE '%Hey%'",
    "SELECT DISTINCT s.name, s.location FROM stadiums s INNER JOIN concerts c ON s.id = c.stadium_id WHERE YEAR(c.date) = 2014 AND s.id IN (   SELECT stadium_id   FROM concerts   WHERE YEAR(date) = 2015 )",
    "SELECT DISTINCT s.name, s.location FROM stadiums s INNER JOIN concerts c1 ON s.id = c1.stadium_id INNER JOIN concerts c2 ON s.id = c2.stadium_id WHERE YEAR(c1.date) = 2014 AND YEAR(c2.date) = 2015;",
    "SELECT COUNT(*)  FROM concerts  WHERE stadium_capacity = (SELECT MAX(stadium_capacity) FROM stadiums);",
    "SELECT COUNT(*) FROM concerts WHERE stadium_capacity = (SELECT MAX(stadium_capacity) FROM stadiums)",
    "SELECT COUNT(*) FROM pets WHERE weight > 10;",
    "SELECT COUNT(*) FROM pets WHERE weight > 10;",
    "SELECT MIN(weight) FROM dogs WHERE age = (SELECT MIN(age) FROM dogs)",
    "SELECT MIN(weight) FROM dogs",
    "SELECT MAX(weight), type FROM pets GROUP BY type;",
    "SELECT type, MAX(weight) AS max_weight FROM pets GROUP BY type;",
    "SELECT COUNT(pet_id)  FROM pets  WHERE owner_id IN (SELECT student_id FROM students WHERE age > 20)",
    "SELECT COUNT(*) FROM pets WHERE student_id IN (   SELECT id FROM students   WHERE age > 20 )",
    "SELECT COUNT(*) FROM pets JOIN students ON pets.student_id = students.id WHERE pets.type = 'dog' AND students.sex = 'F'",
    "SELECT COUNT(*) FROM pets WHERE species='dog' AND owner_gender='female' AND owner_occupation='student'",
    "SELECT COUNT(DISTINCT type) FROM pets;",
    "SELECT COUNT(DISTINCT type) FROM pets;",
    "SELECT DISTINCT first_name FROM students WHERE pet IN ('cat', 'dog');",
    "SELECT DISTINCT first_name FROM students JOIN pets ON students.id = pets.student_id WHERE pets.pet_type IN ('cat', 'dog')",
    "SELECT first_name FROM students WHERE id IN (SELECT student_id FROM pets WHERE pet_type = 'cat') AND id IN (SELECT student_id FROM pets WHERE pet_type = 'dog')",
    "SELECT first_name FROM students WHERE id IN (SELECT student_id FROM pets WHERE pet_type = 'cat') AND id IN (SELECT student_id FROM pets WHERE pet_type = 'dog')",
    "SELECT major, age FROM students WHERE pet <> 'cat'",
    "SELECT major, age FROM students WHERE pet <> 'cat'",
    "SELECT id FROM students WHERE pet <> 'cat' OR pet IS NULL;",
    "SELECT id FROM students WHERE id NOT IN (SELECT student_id FROM pets WHERE type = 'cat')",
    "SELECT first_name, age FROM students WHERE pet = 'dog' AND first_name NOT IN (SELECT first_name FROM students WHERE pet = 'cat')",
    "SELECT first_name FROM students WHERE has_dog = true AND has_cat = false",
    "SELECT type, weight  FROM pets  WHERE age = (SELECT MIN(age) FROM pets)",
    "SELECT type, weight FROM pets WHERE age = (SELECT MIN(age) FROM pets) LIMIT 1;",
    "SELECT id, weight FROM pets WHERE age > 1;",
    "SELECT id, weight FROM pets WHERE age > 1;",
    "SELECT type, AVG(age), MAX(age) FROM pets GROUP BY type;",
    "SELECT pet_type, AVG(age) AS avg_age, MAX(age) AS max_age FROM pets GROUP BY pet_type;",
    "SELECT pet_type, AVG(weight) FROM pets GROUP BY pet_type;",
    "SELECT type, AVG(weight) FROM pets GROUP BY type;",
    "SELECT first_name, age FROM students WHERE pet IS NOT NULL;",
    "SELECT first_name, age FROM students WHERE has_pet = true;",
    "SELECT pet.id  FROM pet  JOIN student ON pet.student_id = student.id  WHERE student.last_name = 'Smith'",
    "SELECT pet.id  FROM pet  JOIN student ON pet.student_id = student.id  WHERE student.last_name = 'Smith'",
    "SELECT student.id, COUNT(pet.id) AS num_pets FROM student INNER JOIN pet ON student.id = pet.student_id GROUP BY student.id;",
    "SELECT student_id, COUNT(pet_id) AS num_pets FROM students JOIN pets ON students.student_id = pets.student_id GROUP BY student_id HAVING COUNT(pet_id) > 0;",
    "SELECT first_name, gender FROM student WHERE student_id IN (SELECT student_id FROM pet GROUP BY student_id HAVING COUNT(*) > 1);",
    "SELECT first_name, gender FROM students WHERE student_id IN (SELECT student_id FROM pets GROUP BY student_id HAVING COUNT(*) > 1);",
    "SELECT last_name FROM students WHERE pet_type = 'cat' AND pet_age = 3;",
    "SELECT last_name FROM students WHERE pet_type = 'cat' AND pet_age = 3;",
    "SELECT AVG(age) FROM students WHERE pet IS NULL;",
    "SELECT AVG(age) FROM students WHERE pet_owner = 'No';",
    "SELECT COUNT(*) FROM continents;",
    "SELECT COUNT(*) FROM continents;",
    "SELECT      continent.continent_id,      continent.continent_name,      COUNT(country.country_id) AS num_countries FROM      continent      JOIN country ON continent.continent_id = country.continent_id GROUP BY      continent.continent_id,      continent.continent_name",
    "SELECT continent.id, continent.name, COUNT(country.id) AS num_countries FROM continent JOIN country ON continent.id = country.continent_id GROUP BY continent.id, continent.name;",
    "SELECT COUNT(*) FROM countries;",
    "SELECT COUNT(*) FROM countries;",
    "SELECT maker.full_name, maker.id, COUNT(model.id) AS number FROM maker JOIN model ON maker.id = model.maker_id GROUP BY maker.id;",
    "SELECT car_maker.id, car_maker.full_name, COUNT(car_model.id) AS num_models FROM car_maker LEFT JOIN car_model ON car_maker.id = car_model.car_maker_id GROUP BY car_maker.id, car_maker.full_name",
    "SELECT model FROM cars WHERE horsepower = (SELECT MIN(horsepower) FROM cars)",
    "SELECT model FROM cars ORDER BY horsepower ASC LIMIT 1;",
    "SELECT model FROM cars WHERE weight < (SELECT AVG(weight) FROM cars)",
    "SELECT model FROM cars WHERE weight < (SELECT AVG(weight) FROM cars)",
    "SELECT DISTINCT Maker FROM Car WHERE Year = 1970;",
    "SELECT DISTINCT car_maker_name FROM cars WHERE car_production_year = 1970;",
    "SELECT make, production_time FROM cars WHERE production_time = (SELECT MIN(production_time) FROM cars)",
    "SELECT maker, year FROM cars WHERE year = (SELECT MIN(year) FROM cars)",
    "SELECT DISTINCT car_model FROM cars WHERE production_year > 1980;",
    "SELECT DISTINCT model FROM cards WHERE year > 1980;",
    "SELECT    continent,    COUNT(DISTINCT car_maker) AS count  FROM    car_makers  GROUP BY    continent",
    "SELECT c.name AS continent_name, COUNT(DISTINCT cm.car_maker_id) AS num_car_makers FROM continents c LEFT JOIN countries co ON c.id = co.continent_id LEFT JOIN car_makers cm ON co.id = cm.country_id GROUP BY c.name",
    "SELECT country_name FROM car_makers GROUP BY country_name ORDER BY COUNT(*) DESC LIMIT 1;",
    "SELECT name  FROM countries  WHERE id = (     SELECT country_id      FROM car_makers      GROUP BY country_id      ORDER BY COUNT(*) DESC      LIMIT 1 )",
    "SELECT COUNT(car_model), maker_full_name FROM car_models JOIN makers ON car_models.maker_id = makers.maker_id GROUP BY makers.maker_id, maker_full_name",
    "SELECT Maker.MakerID, Maker.FullName, COUNT(Car.Model) AS NumberOfModels FROM Maker INNER JOIN Car ON Maker.MakerID = Car.MakerID GROUP BY Maker.MakerID, Maker.FullName",
    "SELECT accelerate FROM cars WHERE name = 'amc hornet sportabout (sw)';",
    "SELECT acceleration FROM cars WHERE name = 'amc hornet sportabout (sw)'",
    "SELECT COUNT(*) FROM car_makers WHERE country = 'France';",
    "SELECT COUNT(DISTINCT Maker) FROM Product WHERE Type = 'Care' AND Country = 'France'",
    "SELECT COUNT(*) FROM car_models WHERE country = 'USA';",
    "SELECT COUNT(model) FROM cars WHERE country = 'United States';",
    "SELECT AVG(mpg) FROM cars WHERE cylinders = 4;",
    "SELECT AVG(miles_per_gallon) FROM cars WHERE cylinders = 4;",
    "SELECT MIN(weight) FROM cars WHERE cylinders = 8 AND year = 1974;",
    "SELECT MIN(weight) FROM cars WHERE cylinders = 8 AND year = 1974;",
    "SELECT maker, model FROM table_name;",
    "SELECT maker, model FROM table_name;",
    "SELECT DISTINCT Country.id, Country.name FROM Country INNER JOIN CarMaker ON Country.id = CarMaker.country_id;",
    "SELECT DISTINCT countries.name, countries.id FROM countries INNER JOIN car_makers ON countries.id = car_makers.country_id;",
    "SELECT COUNT(*) FROM cars WHERE horsepower > 150;",
    "SELECT COUNT(*) FROM cars WHERE horsepower > 150;",
    "SELECT AVG(weight) FROM cars GROUP BY year;",
    "SELECT year, AVG(weight) AS avg_weight, AVG(year) AS avg_year FROM table_name GROUP BY year;",
    "SELECT country FROM manufacturers WHERE continent = 'Europe' GROUP BY country HAVING COUNT(DISTINCT car_manufacturer) >= 3;",
    "SELECT DISTINCT c.name FROM countries c JOIN manufacturers m ON c.code = m.country_code WHERE c.continent = 'Europe' GROUP BY c.name HAVING COUNT(DISTINCT m.name) >= 3;",
    "SELECT MAX(horsepower), make  FROM car_models  WHERE cylinders = 3;",
    "SELECT MAX(horsepower), make  FROM models  WHERE cylinders = 3;",
    "SELECT model FROM cars ORDER BY miles_per_gallon DESC LIMIT 1;",
    "SELECT car_model FROM cars ORDER BY mpg DESC LIMIT 1;",
    "SELECT AVG(horsepower) FROM cars WHERE year < 1980;",
    "SELECT AVG(horsepower) FROM cars WHERE year < 1980",
    "SELECT AVG(edispl) FROM cars WHERE model = 'volvo'",
    "SELECT AVG(edispl) FROM volvos",
    "SELECT cylinders, MAX(accelerate) FROM table_name GROUP BY cylinders;",
    "SELECT MAX(accelerate) FROM cylinders;",
    "SELECT model FROM cars GROUP BY model ORDER BY COUNT(make) DESC LIMIT 1;",
    "SELECT model FROM cars GROUP BY model ORDER BY COUNT(DISTINCT version) DESC LIMIT 1;",
    "SELECT COUNT(*) FROM cars WHERE cylinders > 4;",
    "SELECT COUNT(*) FROM cars WHERE cylinders > 4;",
    "SELECT COUNT(*) FROM cars WHERE year = 1980;",
    "SELECT cars_made FROM production_data WHERE year = 1980;",
    "SELECT COUNT(DISTINCT car_model) FROM car_table WHERE maker_full_name = 'American Motor Company'",
    "SELECT COUNT(*) FROM car_models WHERE car_maker = 'American Motor Company';",
    "SELECT CONCAT_WS(' ', maker.first_name, maker.last_name) AS full_name, maker.id FROM maker JOIN car ON maker.id = car.maker_id GROUP BY maker.id HAVING COUNT(DISTINCT car.model) > 3;",
    "SELECT Maker.makerid, Maker.makername FROM Maker INNER JOIN Model ON Maker.makerid = Model.makerid GROUP BY Maker.makerid, Maker.makername HAVING COUNT(Model.modelid) > 3;",
    "SELECT DISTINCT Model FROM Cars WHERE Maker = 'General Motors' OR Weight > 3500;",
    "SELECT * FROM models WHERE (car_maker = 'General Motors' OR weight > 3500)",
    "SELECT DISTINCT year FROM cars WHERE weight >= 3000 AND weight <= 4000;",
    "SELECT DISTINCT year FROM cars WHERE weight < 4000 AND year IN (SELECT year FROM cars WHERE weight > 3000)",
    "SELECT horsepower  FROM cars  WHERE acceleration = (SELECT MAX(acceleration) FROM cars)",
    "SELECT horsepower  FROM cars  WHERE acceleration = (SELECT MAX(acceleration) FROM cars)",
    "SELECT MIN(accelerate), cylinders  FROM cars  WHERE model = 'volvo'",
    "SELECT MIN(accelerate), cylinders FROM volvo WHERE model = 'model_name'",
    "SELECT COUNT(*) FROM cars WHERE accelerate > (SELECT MAX(horsepower) FROM cars)",
    "SELECT COUNT(*) FROM cars WHERE accelerate > (SELECT MAX(horsepower) FROM cars)",
    "SELECT COUNT(DISTINCT Country)  FROM CarMakers  GROUP BY Country  HAVING COUNT(DISTINCT Maker) > 2;",
    "SELECT COUNT(DISTINCT Country)  FROM CarMakers  GROUP BY Country  HAVING COUNT(DISTINCT Maker) > 2;",
    "SELECT COUNT(*) FROM cars WHERE cylinders > 6;",
    "SELECT COUNT(*) FROM cars WHERE cylinders > 6;",
    "SELECT model FROM cars WHERE cylinders = 4 ORDER BY horsepower DESC LIMIT 1;",
    "SELECT model FROM cars WHERE cylinders = 4 ORDER BY horsepower DESC LIMIT 1;",
    "SELECT makeid, makename FROM cars WHERE horsepower > (SELECT MIN(horsepower) FROM cars) AND cylinders <= 3;",
    "SELECT make_id, make_name FROM cars WHERE horsepower > (SELECT MIN(horsepower) FROM cars) AND cylinders < 4;",
    "SELECT MAX(mpg) FROM cars WHERE cylinders = 8 AND year < 1980",
    "SELECT MAX(mpg) FROM cars WHERE cylinders = 8 OR year < 1980",
    "SELECT * FROM models WHERE weight < 3500 AND manufacturer != 'Ford Motor Company'",
    "SELECT model FROM cars WHERE weight < 3500 AND manufacturer != 'Ford Motor Company'",
    "SELECT name  FROM countries  WHERE id NOT IN (SELECT DISTINCT country_id FROM car_makers)",
    "SELECT name  FROM countries  WHERE id NOT IN (SELECT DISTINCT country_id FROM car_makers)",
    "SELECT id, maker FROM car_makers WHERE id IN (   SELECT maker_id   FROM car_models   GROUP BY maker_id   HAVING COUNT(*) >= 2 ) AND id IN (   SELECT maker_id   FROM car_models   GROUP BY maker_id   HAVING COUNT(DISTINCT maker_id) > 3 );",
    "SELECT id, maker FROM car_makers WHERE id IN (   SELECT maker_id   FROM car_models   GROUP BY maker_id   HAVING COUNT(*) >= 2 AND COUNT(*) > 3 )",
    "SELECT id, name  FROM countries  WHERE id IN (SELECT country_id FROM car_makers GROUP BY country_id HAVING COUNT(*) > 3)  OR id IN (SELECT country_id FROM car_models WHERE name = 'fiat');",
    "SELECT id, name FROM countries  WHERE id IN (SELECT country_id FROM car_makers GROUP BY country_id HAVING COUNT(*) > 3)  OR id IN (SELECT country_id FROM car_models WHERE name = 'fiat');",
    "SELECT country FROM airlines WHERE name = 'JetBlue Airways';",
    "SELECT country  FROM airlines  WHERE name = 'Jetblue Airways'",
    "SELECT abbreviation FROM airlines WHERE name = 'JetBlue Airways'",
    "SELECT abbreviation FROM airlines WHERE name = 'Jetblue Airways';",
    "SELECT name, abbreviation FROM airlines WHERE country = 'USA'",
    "SELECT name, abbreviation FROM airlines WHERE country = 'USA'",
    "SELECT code, name FROM airports WHERE city = 'Anthony'",
    "SELECT code, name FROM airports WHERE city = 'Anthony'",
    "SELECT COUNT(*) FROM airlines;",
    "SELECT COUNT(*) FROM airlines;",
    "SELECT COUNT(*) FROM airports;",
    "SELECT COUNT(*) FROM airports;",
    "SELECT COUNT(*) FROM flights;",
    "SELECT COUNT(*) FROM flights;",
    "SELECT name FROM airlines WHERE abbreviation = 'UAL'",
    "SELECT * FROM airlines WHERE abbreviation = 'UAL'",
    "SELECT COUNT(*) FROM airlines WHERE country = 'USA'",
    "SELECT COUNT(*) FROM airlines WHERE country = 'USA';",
    "SELECT city, country FROM airports WHERE name = 'Alton airport'",
    "SELECT city, country FROM airports WHERE name = 'Alton';",
    "SELECT name FROM airports WHERE iata_code = 'AKO'"
]