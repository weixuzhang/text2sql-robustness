[
    "SELECT name, cntry, age FROM singer ORDER BY age DESC",
    "SELECT name, cntry, age FROM singer ORDER BY age DESC",
    "SELECT AVG(age), MIN(age), MAX(age) FROM singer WHERE cntry = 'France'",
    "SELECT AVG(age), MIN(age), MAX(age) FROM singer WHERE cntry = 'French'",
    "SELECT DISTINCT cntry FROM singer WHERE age > 20",
    "SELECT DISTINCT cntry FROM singer WHERE age > 20",
    "SELECT cntry, COUNT(*) AS num_singers FROM singer GROUP BY cntry",
    "SELECT cntry, COUNT(*) FROM singer GROUP BY cntry",
    "SELECT loc, name FROM stadium WHERE cap BETWEEN 5000 AND 10000",
    "SELECT loc, name FROM stadium WHERE cap BETWEEN 5000 AND 10000",
    "SELECT MAX(cap), AVG(cap) FROM stadium",
    "SELECT AVG(cap), MAX(cap) FROM stadium",
    "SELECT name, cap FROM stadium WHERE average = (SELECT MAX(average) FROM stadium)",
    "SELECT name, cap FROM stadium WHERE average = (SELECT MAX(average) FROM stadium)",
    "SELECT stadium.name, COUNT(concert.concert_id) AS num_concerts FROM stadium LEFT JOIN concert ON stadium.stdm_id = concert.stadium_id GROUP BY stadium.name",
    "SELECT stadium.name, COUNT(concert.concert_id) AS num_concerts FROM stadium LEFT JOIN concert ON stadium.stdm_id = concert.stadium_id GROUP BY stadium.stdm_id",
    "SELECT name, cap FROM stadium WHERE stdm_id = (SELECT stadium_id FROM concert WHERE year >= 2014 GROUP BY stadium_id ORDER BY COUNT(*) DESC LIMIT 1)",
    "SELECT name, cap FROM stadium WHERE stdm_id = (SELECT stadium_id FROM concert WHERE year > 2013 GROUP BY stadium_id ORDER BY COUNT(*) DESC LIMIT 1)",
    "SELECT name FROM stadium WHERE stdm_id NOT IN (SELECT stadium_id FROM concert)",
    "SELECT name FROM stadium WHERE stdm_id NOT IN (SELECT stadium_id FROM concert)",
    "SELECT DISTINCT s1.cntry FROM singer s1, singer s2, singer_in_concert sc1, singer_in_concert sc2, concert c WHERE s1.age > 40 AND s2.age < 30 AND s1.singer_id = sc1.singer_id AND s2.singer_id = sc2.singer_id AND sc1.concert_id = sc2.concert_id AND c.concert_id = sc1.concert_id",
    "SELECT name FROM stadium WHERE stdm_id NOT IN (SELECT stadium_id FROM concert WHERE year = 2014)",
    "SELECT name FROM stadium WHERE stdm_id NOT IN (SELECT stadium_id FROM concert WHERE year = 2014)",
    "SELECT name, cntry FROM singer WHERE song_name LIKE '%Hey%'",
    "SELECT name, cntry FROM singer WHERE singer_id IN (SELECT singer_id FROM singer_in_concert WHERE concert_id IN (SELECT concert_id FROM concert WHERE song_name LIKE '%Hey%'))",
    "SELECT DISTINCT stadium.name, stadium.loc  FROM concert  JOIN stadium ON concert.stadium_id = stadium.stdm_id  WHERE concert.year = 2014 AND EXISTS  (SELECT * FROM concert WHERE concert.year = 2015 AND concert.stadium_id = stadium.stdm_id)",
    "SELECT DISTINCT s.name, s.loc  FROM stadium s  JOIN concert c1 ON s.stdm_id = c1.stadium_id  JOIN concert c2 ON s.stdm_id = c2.stadium_id  WHERE c1.year = 2014 AND c2.year = 2015",
    "SELECT COUNT(*) FROM concert WHERE stadium_id = (SELECT stdm_id FROM stadium ORDER BY cap DESC LIMIT 1)",
    "SELECT COUNT(*) FROM concert WHERE stadium_id = (SELECT stdm_id FROM stadium ORDER BY cap DESC LIMIT 1)",
    "SELECT name, cntry, age FROM singer ORDER BY age DESC",
    "SELECT name, cntry, age FROM singer ORDER BY age DESC",
    "SELECT AVG(age), MIN(age), MAX(age) FROM singer WHERE cntry = 'France'",
    "SELECT AVG(age), MIN(age), MAX(age) FROM singer WHERE cntry = 'France'",
    "SELECT name, song_rls_year FROM singer WHERE age = (SELECT MIN(age) FROM singer)",
    "SELECT song_name, song_rls_year FROM singer WHERE age = (SELECT MIN(age) FROM singer)",
    "SELECT DISTINCT cntry FROM singer WHERE age > 20",
    "SELECT DISTINCT cntry FROM singer WHERE age > 20",
    "SELECT cntry, COUNT(*) AS num_singers FROM singer GROUP BY cntry",
    "SELECT cntry, COUNT(*) FROM singer GROUP BY cntry",
    "SELECT location, name FROM stadium WHERE cap BETWEEN 5000 AND 10000.",
    "SELECT location, name FROM stadium WHERE cap BETWEEN 5000 AND 10000",
    "SELECT MAX(cap), AVG(cap) FROM stadium",
    "SELECT AVG(cap), MAX(cap) FROM stadium",
    "SELECT name, cap FROM stadium WHERE avg = (SELECT MAX(avg) FROM stadium)",
    "SELECT name, cap FROM stadium WHERE avg = (SELECT MAX(avg) FROM stadium)",
    "SELECT stadium.name, COUNT(concert.concert_id) AS num_concerts FROM stadium LEFT JOIN concert ON stadium.stdm_id = concert.stdm_id GROUP BY stadium.name",
    "SELECT stadium.name, COUNT(concert.concert_id) AS num_concerts FROM stadium LEFT JOIN concert ON stadium.stdm_id = concert.stdm_id GROUP BY stadium.name",
    "SELECT name, cap FROM stadium WHERE stdm_id = (SELECT stdm_id FROM concert WHERE year >= 2014 GROUP BY stdm_id ORDER BY COUNT(*) DESC LIMIT 1)",
    "SELECT name, cap FROM stadium WHERE stdm_id = (SELECT stdm_id FROM concert WHERE year > 2013 GROUP BY stdm_id ORDER BY COUNT(*) DESC LIMIT 1)",
    "SELECT name FROM stadium WHERE stdm_id NOT IN (SELECT stdm_id FROM concert)",
    "SELECT name FROM stadium WHERE stdm_id NOT IN (SELECT stdm_id FROM concert)",
    "SELECT DISTINCT s1.cntry FROM singer s1, singer s2, singer_in_concert sc1, singer_in_concert sc2 WHERE s1.age > 40 AND s2.age < 30 AND s1.singer_id = sc1.singer_id AND s2.singer_id = sc2.singer_id AND sc1.concert_id = sc2.concert_id",
    "SELECT name FROM stadium WHERE stdm_id NOT IN (SELECT stdm_id FROM concert WHERE year = 2014)",
    "SELECT name FROM stadium WHERE stdm_id NOT IN (SELECT stdm_id FROM concert WHERE year = 2014)",
    "SELECT name, cntry FROM singer WHERE song_name LIKE '%Hey%'",
    "SELECT name, cntry FROM singer WHERE singer_id IN (SELECT singer_id FROM singer_in_concert WHERE concert_id IN (SELECT concert_id FROM concert WHERE song_name LIKE '%Hey%'))",
    "SELECT DISTINCT s.name, s.location FROM stadium s JOIN concert c ON s.stdm_id = c.stdm_id WHERE c.year = 2014 AND s.stdm_id IN (     SELECT c2.stdm_id     FROM concert c2     WHERE c2.year = 2015 )",
    "SELECT DISTINCT s.name, s.location FROM stadium s INNER JOIN concert c1 ON s.stdm_id = c1.stdm_id INNER JOIN concert c2 ON s.stdm_id = c2.stdm_id WHERE c1.year = 2014 AND c2.year = 2015;",
    "SELECT COUNT(*) FROM concert WHERE stdm_id = (SELECT stdm_id FROM stadium ORDER BY cap DESC LIMIT 1)",
    "SELECT COUNT(*) FROM concert WHERE stdm_id = (SELECT stdm_id FROM stadium ORDER BY cap DESC LIMIT 1)",
    "SELECT name, cntry, age FROM singer ORDER BY age DESC",
    "SELECT name, cntry, age FROM singer ORDER BY age DESC",
    "SELECT AVG(age), MIN(age), MAX(age) FROM singer WHERE cntry = 'France'",
    "SELECT AVG(age), MIN(age), MAX(age) FROM singer WHERE cntry = 'French'",
    "SELECT name, song_rls_year FROM singer ORDER BY age ASC LIMIT 1",
    "SELECT song_name, song_rls_year FROM singer WHERE age = (SELECT MIN(age) FROM singer)",
    "SELECT DISTINCT cntry FROM singer WHERE age > 20",
    "SELECT DISTINCT cntry FROM singer WHERE age > 20",
    "SELECT cntry, COUNT(*) AS num_singers FROM singer GROUP BY cntry",
    "SELECT cntry, COUNT(*) FROM singer GROUP BY cntry",
    "SELECT loc, name FROM stadium WHERE cap BETWEEN 5000 AND 10000.",
    "SELECT loc, name FROM stadium WHERE cap BETWEEN 5000 AND 10000",
    "SELECT MAX(cap), AVG(cap) FROM stadium",
    "SELECT AVG(cap), MAX(cap) FROM stadium",
    "SELECT name, cap FROM stadium WHERE avg = (SELECT MAX(avg) FROM stadium)",
    "SELECT name, cap FROM stadium WHERE avg = (SELECT MAX(avg) FROM stadium)",
    "SELECT name, cap FROM stadium WHERE stadium_id = (SELECT stadium_id FROM concert WHERE year >= 2014 GROUP BY stadium_id ORDER BY COUNT(*) DESC LIMIT 1)",
    "SELECT name, cap FROM stadium WHERE stadium_id = (SELECT stadium_id FROM concert WHERE year > 2013 GROUP BY stadium_id ORDER BY COUNT(*) DESC LIMIT 1)",
    "SELECT DISTINCT s1.cntry FROM singer s1, singer s2, singer_in_concert sc1, singer_in_concert sc2, concert c WHERE s1.age > 40 AND s2.age < 30 AND s1.singer_id = sc1.singer_id AND s2.singer_id = sc2.singer_id AND sc1.concert_id = sc2.concert_id AND c.concert_id = sc1.concert_id",
    "SELECT name, cntry FROM singer WHERE song_name LIKE '%Hey%'",
    "SELECT name, cntry FROM singer WHERE singer_id IN (SELECT singer_id FROM singer_in_concert WHERE concert_id IN (SELECT concert_id FROM concert WHERE song_name LIKE '%Hey%'))",
    "SELECT DISTINCT s.name, s.loc  FROM stadium s  JOIN concert c ON s.stadium_id = c.stadium_id  WHERE c.year = 2014 AND s.stadium_id IN      (SELECT stadium_id FROM concert WHERE year = 2015)",
    "SELECT DISTINCT s.name, s.loc  FROM stadium s  JOIN concert c1 ON s.stadium_id = c1.stadium_id  JOIN concert c2 ON s.stadium_id = c2.stadium_id  WHERE c1.year = 2014 AND c2.year = 2015",
    "SELECT COUNT(*) FROM concert WHERE stadium_id = (SELECT stadium_id FROM stadium ORDER BY cap DESC LIMIT 1)",
    "SELECT COUNT(*) FROM concert WHERE stadium_id = (SELECT stadium_id FROM stadium ORDER BY cap DESC LIMIT 1)",
    "SELECT location, name FROM stadium WHERE cap BETWEEN 5000 AND 10000.",
    "SELECT location, name FROM stadium WHERE cap BETWEEN 5000 AND 10000",
    "SELECT MAX(cap), AVG(cap) FROM stadium",
    "SELECT AVG(cap), MAX(cap) FROM stadium",
    "SELECT name, cap FROM stadium WHERE avg = (SELECT MAX(avg) FROM stadium)",
    "SELECT name, cap FROM stadium WHERE avg = (SELECT MAX(avg) FROM stadium)",
    "SELECT stadium.name, COUNT(concert.concert_id) AS num_concerts FROM stadium LEFT JOIN concert ON stadium.stdm_id = concert.stadium_id GROUP BY stadium.name",
    "SELECT stadium.name, COUNT(concert.concert_id) AS num_concerts FROM stadium LEFT JOIN concert ON stadium.stdm_id = concert.stadium_id GROUP BY stadium.stdm_id, stadium.name",
    "SELECT name, cap FROM stadium WHERE stdm_id = (SELECT stadium_id FROM concert WHERE year >= 2014 GROUP BY stadium_id ORDER BY COUNT(*) DESC LIMIT 1)",
    "SELECT name, cap FROM stadium WHERE stdm_id = (SELECT stadium_id FROM concert WHERE year > 2013 GROUP BY stadium_id ORDER BY COUNT(*) DESC LIMIT 1)",
    "SELECT name FROM stadium WHERE stdm_id NOT IN (SELECT stadium_id FROM concert)",
    "SELECT name FROM stadium WHERE stdm_id NOT IN (SELECT stadium_id FROM concert)",
    "SELECT name FROM stadium WHERE stdm_id NOT IN (SELECT stadium_id FROM concert WHERE year = 2014)",
    "SELECT name FROM stadium WHERE stdm_id NOT IN (SELECT stadium_id FROM concert WHERE year = 2014)",
    "SELECT DISTINCT s.name, s.location  FROM stadium s  JOIN concert c ON s.stdm_id = c.stadium_id  WHERE c.year = 2014 AND EXISTS (SELECT * FROM concert WHERE stadium_id = s.stdm_id AND year = 2015)",
    "SELECT DISTINCT s.name, s.location FROM stadium s INNER JOIN concert c1 ON s.stdm_id = c1.stadium_id AND c1.year = 2014 INNER JOIN concert c2 ON s.stdm_id = c2.stadium_id AND c2.year = 2015",
    "SELECT COUNT(*) FROM concert WHERE stadium_id = (SELECT stdm_id FROM stadium ORDER BY cap DESC LIMIT 1)",
    "SELECT COUNT(*) FROM concert WHERE stadium_id = (SELECT stdm_id FROM stadium ORDER BY cap DESC LIMIT 1)",
    "SELECT name, song_rls_year FROM singer WHERE age = (SELECT MIN(age) FROM singer)",
    "SELECT song_name, song_rls_year FROM singer WHERE age = (SELECT MIN(age) FROM singer)",
    "SELECT COUNT(*) FROM pets WHERE wt > 10",
    "SELECT COUNT(*) FROM pets WHERE wt > 10",
    "SELECT wt FROM pets ORDER BY pet_age ASC LIMIT 1",
    "SELECT wt FROM pets ORDER BY pet_age ASC LIMIT 1",
    "SELECT pettype, MAX(wt) AS max_weight FROM pets GROUP BY pettype",
    "SELECT pettype, MAX(wt) AS max_weight, MAX(pettype) AS type FROM pets GROUP BY pettype",
    "SELECT pettype, wt FROM pets ORDER BY pet_age ASC LIMIT 1",
    "SELECT pettype, wt FROM pets WHERE pet_age = (SELECT MIN(pet_age) FROM pets)",
    "SELECT petid, wt FROM pets WHERE pet_age > 1",
    "SELECT petid, wt FROM pets WHERE pet_age > 1",
    "SELECT pettype, AVG(wt) FROM pets GROUP BY pettype",
    "SELECT pettype, AVG(wt) FROM pets GROUP BY pettype",
    "SELECT COUNT(*) FROM pets WHERE wt > 10",
    "SELECT COUNT(*) FROM pets WHERE wt > 10",
    "SELECT wt FROM pets ORDER BY pet_age ASC LIMIT 1",
    "SELECT wt FROM pets ORDER BY pet_age ASC LIMIT 1",
    "SELECT pettype, MAX(wt) AS max_weight FROM pets GROUP BY pettype",
    "SELECT pettype, MAX(wt) AS max_weight, MAX(pettype) AS type FROM pets GROUP BY pettype",
    "SELECT pettype, wt FROM pets WHERE pet_age = (SELECT MIN(pet_age) FROM pets)",
    "SELECT pettype, wt FROM pets WHERE pet_age = (SELECT MIN(pet_age) FROM pets)",
    "SELECT petid, wt FROM pets WHERE pet_age > 1",
    "SELECT petid, wt FROM pets WHERE pet_age > 1",
    "SELECT pettype, AVG(wt) FROM pets GROUP BY pettype",
    "SELECT pettype, AVG(wt) FROM pets GROUP BY pettype",
    "SELECT model FROM cars_data WHERE hp = (SELECT MIN(hp) FROM cars_data)",
    "SELECT model FROM model_list JOIN cars_data ON model_list.mdl_id = cars_data.id WHERE hp = (SELECT MIN(hp) FROM cars_data)",
    "SELECT model FROM model_list WHERE wt < (SELECT AVG(wt) FROM cars_data)",
    "SELECT model FROM model_list WHERE mdl_id IN (SELECT makeid FROM cars_data WHERE wt < (SELECT AVG(wt) FROM cars_data))",
    "SELECT continents.continent, COUNT(DISTINCT car_makers.maker) AS car_makers_count FROM continents JOIN countries ON continents.contid = countries.continent JOIN car_makers ON countries.cntry_id = car_makers.country GROUP BY continents.continent",
    "SELECT continents.continent, COUNT(car_makers.id)  FROM continents  JOIN countries ON continents.contid = countries.continent  JOIN car_makers ON countries.cntry_id = car_makers.country  GROUP BY continents.continent",
    "SELECT countries.cntry_name  FROM countries  JOIN car_makers ON countries.cntry_id = car_makers.country  GROUP BY countries.cntry_name  ORDER BY COUNT(car_makers.id) DESC  LIMIT 1",
    "SELECT cntry_name FROM countries WHERE cntry_id = (SELECT country FROM car_makers GROUP BY country ORDER BY COUNT(*) DESC LIMIT 1)",
    "SELECT COUNT(*) FROM car_makers WHERE country = 'france'",
    "SELECT COUNT(DISTINCT id) FROM car_makers WHERE maker = 'care' AND country = 'France'",
    "SELECT COUNT(DISTINCT model) FROM model_list JOIN car_makers ON model_list.maker = car_makers.maker AND car_makers.country = 'usa'",
    "SELECT COUNT(DISTINCT model) FROM model_list JOIN car_makers ON model_list.maker = car_makers.maker AND car_makers.country = 'United States' JOIN car_names ON model_list.mdl_id = car_names.makeid JOIN cars_data ON car_names.model = cars_data.id",
    "SELECT MIN(wt) FROM cars_data WHERE cylinders = 8 AND year = 1974",
    "SELECT MIN(wt) FROM cars_data WHERE cylinders = 8 AND year = 1974",
    "SELECT DISTINCT countries.cntry_id, countries.cntry_name FROM countries INNER JOIN car_makers ON countries.cntry_id = car_makers.country",
    "SELECT DISTINCT countries.cntry_id, countries.cntry_name FROM countries INNER JOIN car_makers ON countries.cntry_id = car_makers.country",
    "SELECT COUNT(*) FROM cars_data WHERE hp > 150",
    "SELECT COUNT(*) FROM cars_data WHERE hp > 150",
    "SELECT AVG(wt) FROM cars_data GROUP BY year",
    "SELECT year, AVG(wt) AS avg_weight, AVG(year) AS avg_year FROM cars_data GROUP BY year",
    "SELECT DISTINCT countries.cntry_name FROM countries JOIN car_makers ON countries.cntry_id = car_makers.country WHERE countries.continent = 'europe' GROUP BY countries.cntry_name HAVING COUNT(DISTINCT car_makers.maker) >= 3",
    "SELECT DISTINCT countries.cntry_name FROM countries JOIN car_makers ON countries.cntry_id = car_makers.country WHERE countries.continent = 'Europe' GROUP BY countries.cntry_name HAVING COUNT(DISTINCT car_makers.maker) >= 3",
    "SELECT MAX(hp), make FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid JOIN model_list ON car_names.model = model_list.model WHERE cylinders = 3 GROUP BY make",
    "SELECT MAX(hp), maker FROM cars_data  JOIN model_list ON cars_data.maker = model_list.maker AND cars_data.id = model_list.mdl_id  WHERE cylinders = 3 GROUP BY maker",
    "SELECT AVG(hp) FROM cars_data WHERE year < 1980",
    "SELECT AVG(hp) FROM cars_data WHERE year < 1980",
    "SELECT DISTINCT model FROM model_list WHERE maker IN (SELECT maker FROM car_makers WHERE fullname = 'General Motors') OR mdl_id IN (SELECT makeid FROM car_names JOIN cars_data ON car_names.makeid = cars_data.id WHERE wt > 3500)",
    "SELECT DISTINCT model FROM model_list WHERE maker = 'General Motors' OR wt > 3500",
    "SELECT DISTINCT year FROM cars_data WHERE wt >= 3000 AND wt <= 4000",
    "SELECT DISTINCT year FROM cars_data WHERE wt < 4000 AND wt > 3000",
    "SELECT hp FROM cars_data ORDER BY accelerate DESC LIMIT 1",
    "SELECT hp FROM cars_data WHERE accelerate = (SELECT MAX(accelerate) FROM cars_data)",
    "SELECT COUNT(*) FROM cars_data WHERE accelerate > (SELECT MAX(accelerate) FROM cars_data WHERE hp = (SELECT MAX(hp) FROM cars_data))",
    "SELECT COUNT(*) FROM cars_data WHERE accelerate > (SELECT MAX(accelerate) FROM cars_data WHERE hp = (SELECT MAX(hp) FROM cars_data))",
    "SELECT COUNT(DISTINCT countries.cntry_id) FROM countries JOIN car_makers ON countries.cntry_id = car_makers.country GROUP BY countries.cntry_id HAVING COUNT(DISTINCT car_makers.id) > 2",
    "SELECT COUNT(DISTINCT countries.cntry_id) FROM countries JOIN car_makers ON countries.cntry_id = car_makers.country GROUP BY countries.cntry_id HAVING COUNT(DISTINCT car_makers.id) > 2",
    "SELECT model FROM model_list  JOIN cars_data ON model_list.mdl_id = cars_data.id  WHERE cars_data.cylinders = 4  ORDER BY cars_data.hp DESC  LIMIT 1",
    "SELECT model FROM model_list WHERE mdl_id IN (SELECT makeid FROM cars_data WHERE cylinders = 4 AND hp = (SELECT MAX(hp) FROM cars_data WHERE cylinders = 4))",
    "SELECT DISTINCT car_makers.id, car_makers.maker  FROM car_makers  JOIN car_names ON car_makers.id = car_names.makeid  JOIN cars_data ON car_names.model = cars_data.id  WHERE cars_data.hp > (SELECT MIN(hp) FROM cars_data) AND cars_data.cylinders <= 3",
    "SELECT makeid, maker FROM car_names  WHERE cylinders < 4 AND hp > (SELECT MIN(hp) FROM cars_data)",
    "SELECT model FROM model_list  WHERE maker NOT LIKE 'Ford Motor Company'  AND mdl_id IN (SELECT id FROM cars_data WHERE wt < 3500)",
    "SELECT model FROM model_list  WHERE maker != 'Ford Motor Company' AND wt < 3500",
    "SELECT cntry_name FROM countries WHERE cntry_id NOT IN (SELECT DISTINCT country FROM car_makers)",
    "SELECT cntry_name FROM countries WHERE cntry_id NOT IN (SELECT DISTINCT country FROM car_makers)",
    "SELECT countries.cntry_id, countries.cntry_name FROM countries JOIN car_makers ON countries.cntry_id = car_makers.country WHERE car_makers.maker = 'fiat' OR countries.cntry_id IN (     SELECT country     FROM car_makers     GROUP BY country     HAVING COUNT(DISTINCT maker) > 3 )",
    "SELECT cntry_id, cntry_name FROM countries WHERE cntry_id IN (SELECT country FROM car_makers GROUP BY country HAVING COUNT(DISTINCT maker) > 3) OR cntry_id IN (SELECT DISTINCT country FROM car_makers WHERE maker = 'fiat')",
    "SELECT DISTINCT car_makers.maker FROM car_makers JOIN cars_data ON car_makers.id = cars_data.id WHERE cars_data.year = 1970",
    "SELECT DISTINCT car_makers.maker FROM car_makers  JOIN cars_data ON car_makers.id = cars_data.id  WHERE cars_data.year = 1970",
    "SELECT DISTINCT model FROM car_names JOIN cars_data ON car_names.makeid = cars_data.id WHERE year > 1980",
    "SELECT DISTINCT mdl FROM model_list JOIN cars_data ON model_list.mdl = cars_data.model WHERE year > 1980",
    "SELECT maker, mdl FROM model_list",
    "SELECT maker, mdl FROM car_makers JOIN model_list ON car_makers.maker = model_list.maker;",
    "SELECT DISTINCT mdl FROM model_list WHERE maker IN (SELECT maker FROM car_makers WHERE fullname = 'General Motors') OR mdl IN (SELECT model FROM car_names JOIN cars_data ON car_names.makeid = cars_data.id WHERE weight > 3500)",
    "SELECT DISTINCT mdl FROM model_list WHERE maker = 'General Motors' OR weight > 3500",
    "SELECT mdl FROM cars_data  INNER JOIN model_list ON cars_data.id = model_list.modelid  INNER JOIN car_makers ON model_list.maker = car_makers.maker  WHERE weight < 3500 AND car_makers.fullname != 'Ford Motor Company'",
    "SELECT DISTINCT mdl FROM model_list  JOIN cars_data ON model_list.maker = cars_data.id AND cars_data.weight < 3500 JOIN car_makers ON model_list.maker = car_makers.id AND car_makers.country != 'USA'",
    "SELECT id, maker FROM car_makers WHERE id IN (SELECT maker FROM model_list GROUP BY maker HAVING COUNT(DISTINCT modelid) >= 2) AND id IN (SELECT maker FROM car_names GROUP BY makeid HAVING COUNT(DISTINCT makeid) > 3)",
    "SELECT id, maker FROM car_makers WHERE id IN (SELECT maker FROM model_list GROUP BY maker HAVING COUNT(DISTINCT mdl) >= 2) AND id IN (SELECT makeid FROM car_names GROUP BY makeid HAVING COUNT(DISTINCT model) > 3)",
    "SELECT countries.countryid, countries.countryname  FROM countries  LEFT JOIN car_makers ON countries.countryid = car_makers.country  LEFT JOIN car_names ON car_makers.id = car_names.makeid  WHERE car_makers.maker = 'fiat' OR countries.countryid IN  (SELECT country FROM car_makers GROUP BY country HAVING COUNT(DISTINCT maker) > 3)",
    "SELECT countryid, countryname FROM countries WHERE countryid IN (SELECT country FROM car_makers GROUP BY country HAVING COUNT(DISTINCT maker) > 3) OR countryid IN (SELECT DISTINCT country FROM car_makers WHERE maker = 'fiat')",
    "SELECT continents.contid, continents.cont, COUNT(countries.cntry_id) AS num_countries FROM continents JOIN countries ON continents.contid = countries.cont GROUP BY continents.contid, continents.cont",
    "SELECT continents.contid, continents.cont, COUNT(countries.cntry_id) AS num_countries FROM continents LEFT JOIN countries ON continents.cont = countries.cont GROUP BY continents.contid, continents.cont",
    "SELECT model_list.mdl  FROM model_list  JOIN cars_data ON model_list.mdl_id = cars_data.id  WHERE cars_data.hp = (SELECT MIN(hp) FROM cars_data)",
    "SELECT model_list.mdl FROM cars_data JOIN model_list ON cars_data.id = model_list.mdl_id WHERE cars_data.hp = (SELECT MIN(hp) FROM cars_data)",
    "SELECT model_list.mdl FROM model_list JOIN cars_data ON model_list.mdl_id = cars_data.id WHERE cars_data.wt < (SELECT AVG(wt) FROM cars_data)",
    "SELECT model_list.mdl FROM model_list JOIN cars_data ON model_list.maker = cars_data.makeid AND model_list.mdl = cars_data.mdl WHERE cars_data.wt < (SELECT AVG(wt) FROM cars_data)",
    "SELECT DISTINCT car_makers.maker FROM car_makers INNER JOIN cars_data ON car_makers.id = cars_data.id WHERE cars_data.year = 1970",
    "SELECT DISTINCT car_makers.maker FROM car_makers JOIN cars_data ON car_makers.id = cars_data.id WHERE cars_data.year = 1970",
    "SELECT DISTINCT mdl FROM model_list JOIN cars_data ON model_list.mdl_id = cars_data.id WHERE year > 1980",
    "SELECT DISTINCT mdl FROM model_list JOIN cars_data ON model_list.mdl_id = cars_data.id WHERE year > 1980",
    "SELECT continents.cont, COUNT(DISTINCT car_makers.maker) AS count FROM continents JOIN countries ON continents.contid = countries.cont JOIN car_makers ON countries.cntry_id = car_makers.cntry GROUP BY continents.cont",
    "SELECT continents.cont, COUNT(DISTINCT car_makers.maker)  FROM continents  JOIN countries ON continents.contid = countries.cont  JOIN car_makers ON countries.cntry_id = car_makers.cntry  GROUP BY continents.cont",
    "SELECT countries.cntry_name  FROM countries  JOIN car_makers ON countries.cntry_id = car_makers.cntry  GROUP BY countries.cntry_name  ORDER BY COUNT(car_makers.maker) DESC  LIMIT 1",
    "SELECT countries.cntry_name  FROM countries  JOIN car_makers ON countries.cntry_id = car_makers.cntry  GROUP BY countries.cntry_name  ORDER BY COUNT(DISTINCT car_makers.maker) DESC  LIMIT 1",
    "SELECT aclt FROM cars_data  JOIN car_names ON cars_data.id = car_names.makeid  WHERE car_names.make = 'amc hornet sportabout (sw)'",
    "SELECT aclt FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE car_names.mdl = 'hornet sportabout (sw)' AND car_names.make = 'amc'",
    "SELECT COUNT(DISTINCT maker) FROM car_makers WHERE cntry = 'france'",
    "SELECT COUNT(DISTINCT id) FROM car_makers WHERE maker = 'care' AND cntry = 'France'",
    "SELECT COUNT(DISTINCT model_list.mdl_id) FROM model_list JOIN car_makers ON model_list.maker = car_makers.maker WHERE car_makers.cntry = 'usa'",
    "SELECT COUNT(DISTINCT mdl_id) FROM model_list JOIN car_makers ON model_list.maker = car_makers.maker AND car_makers.cntry = 'United States'",
    "SELECT MIN(wt) FROM cars_data WHERE cylinders = 8 AND year = 1974",
    "SELECT MIN(wt) FROM cars_data WHERE cylinders = 8 AND year = 1974",
    "SELECT maker, mdl FROM car_makers JOIN model_list ON car_makers.maker = model_list.maker JOIN car_names ON car_names.makeid = car_makers.id AND car_names.mdl = model_list.mdl_id",
    "SELECT maker, mdl FROM car_makers JOIN model_list ON car_makers.maker = model_list.maker;",
    "SELECT DISTINCT countries.cntry_id, countries.cntry_name FROM countries INNER JOIN car_makers ON countries.cntry_id = car_makers.cntry ORDER BY countries.cntry_name ASC",
    "SELECT DISTINCT countries.cntry_id, countries.cntry_name FROM countries INNER JOIN car_makers ON countries.cntry_id = car_makers.cntry;",
    "SELECT COUNT(*) FROM cars_data WHERE hp > 150",
    "SELECT COUNT(*) FROM cars_data WHERE hp > 150",
    "SELECT AVG(wt) FROM cars_data GROUP BY year",
    "SELECT AVG(wt), year FROM cars_data GROUP BY year",
    "SELECT DISTINCT countries.cntry_name FROM countries JOIN car_makers ON countries.cntry_id = car_makers.cntry WHERE countries.cont = 'europe' GROUP BY countries.cntry_name HAVING COUNT(DISTINCT car_makers.maker) >= 3",
    "SELECT DISTINCT countries.cntry_name FROM countries JOIN car_makers ON countries.cntry_id = car_makers.cntry WHERE countries.cont = 'Europe' GROUP BY countries.cntry_name HAVING COUNT(DISTINCT car_makers.maker) >= 3",
    "SELECT MAX(hp), make FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE cylinders = 3 GROUP BY make",
    "SELECT MAX(hp), maker FROM cars_data  JOIN car_makers ON cars_data.id = car_makers.id  WHERE cylinders = 3  GROUP BY maker  ORDER BY MAX(hp) DESC  LIMIT 1",
    "SELECT mdl, mpg FROM cars_data WHERE mpg = (SELECT MAX(mpg) FROM cars_data)",
    "SELECT mdl FROM model_list JOIN cars_data ON model_list.mdl_id = cars_data.id ORDER BY mpg DESC LIMIT 1",
    "SELECT AVG(hp) FROM cars_data WHERE year < 1980",
    "SELECT AVG(hp) FROM cars_data WHERE year < 1980",
    "SELECT AVG(edispl) FROM cars_data  WHERE id IN (SELECT id FROM car_names WHERE mdl = 'volvo')",
    "SELECT AVG(edispl) FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE car_names.make = 'volvo'",
    "SELECT cylinders, MAX(aclt) FROM cars_data GROUP BY cylinders",
    "SELECT MAX(aclt) FROM cars_data GROUP BY cylinders",
    "SELECT maker, COUNT(DISTINCT makeid) AS num_models FROM car_makers JOIN car_names ON car_makers.id = car_names.makeid GROUP BY maker ORDER BY num_models DESC LIMIT 1;",
    "SELECT maker, mdl, COUNT(DISTINCT mdl_id) AS num_versions FROM model_list GROUP BY maker, mdl ORDER BY num_versions DESC LIMIT 1;",
    "SELECT DISTINCT model_list.mdl FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN cars_data ON model_list.mdl_id = cars_data.id WHERE (car_makers.fullname = 'General Motors' OR cars_data.wt > 3500)",
    "SELECT DISTINCT mdl FROM model_list WHERE maker = 'General Motors' OR wt > 3500",
    "SELECT DISTINCT year FROM cars_data WHERE wt >= 3000 AND wt <= 4000",
    "SELECT DISTINCT year FROM cars_data WHERE wt < 4000 AND wt > 3000",
    "SELECT hp FROM cars_data ORDER BY aclt DESC LIMIT 1",
    "SELECT hp FROM cars_data ORDER BY aclt DESC LIMIT 1",
    "SELECT cylinders FROM cars_data WHERE model_list.maker = 'volvo' ORDER BY aclt ASC LIMIT 1",
    "SELECT cylinders FROM cars_data WHERE makeid IN (SELECT id FROM car_names WHERE mdl = 'volvo') ORDER BY aclt ASC LIMIT 1",
    "SELECT COUNT(*) FROM cars_data WHERE aclt > (SELECT MAX(aclt) FROM cars_data WHERE hp = (SELECT MAX(hp) FROM cars_data))",
    "SELECT COUNT(*) FROM cars_data WHERE aclt > (SELECT MAX(aclt) FROM cars_data WHERE hp = (SELECT MAX(hp) FROM cars_data))",
    "SELECT COUNT(DISTINCT cntry) FROM car_makers GROUP BY cntry HAVING COUNT(DISTINCT maker) > 2",
    "SELECT COUNT(DISTINCT countries.cntry_id) FROM countries JOIN car_makers ON countries.cntry_id = car_makers.cntry GROUP BY countries.cntry_id HAVING COUNT(DISTINCT car_makers.maker) > 2",
    "SELECT mdl, MAX(hp) FROM cars_data WHERE cylinders = 4 GROUP BY mdl ORDER BY MAX(hp) DESC LIMIT 1",
    "SELECT mdl, MAX(hp) FROM car_names JOIN cars_data ON car_names.makeid = cars_data.id WHERE cylinders = 4 GROUP BY mdl",
    "SELECT DISTINCT makeid, maker FROM car_names WHERE hp > (SELECT MIN(hp) FROM cars_data) AND cylinders <= 3",
    "SELECT makeid, maker FROM car_names  WHERE cylinders < 4 AND hp > (SELECT MIN(hp) FROM cars_data)",
    "SELECT mdl  FROM car_names  JOIN cars_data ON car_names.makeid = cars_data.id  JOIN model_list ON car_names.mdl = model_list.mdl  JOIN car_makers ON model_list.maker = car_makers.maker  WHERE wt < 3500 AND car_makers.fullname != 'Ford Motor Company'",
    "SELECT DISTINCT mdl  FROM car_names  JOIN cars_data ON car_names.makeid = cars_data.id  JOIN model_list ON car_names.mdl = model_list.mdl  JOIN car_makers ON model_list.maker = car_makers.maker  JOIN countries ON car_makers.cntry = countries.cntry_id  WHERE wt < 3500 AND countries.cntry_name != 'Ford Motor Company'",
    "SELECT DISTINCT countries.cntry_name  FROM countries  LEFT JOIN car_makers ON countries.cntry_id = car_makers.cntry  WHERE car_makers.cntry IS NULL",
    "SELECT DISTINCT countries.cntry_name  FROM countries  LEFT JOIN car_makers ON countries.cntry_id = car_makers.cntry  WHERE car_makers.cntry IS NULL",
    "SELECT id, maker FROM car_makers WHERE id IN (SELECT maker FROM model_list GROUP BY maker HAVING COUNT(DISTINCT mdl_id) >= 2) AND maker IN (SELECT maker FROM model_list GROUP BY maker HAVING COUNT(DISTINCT cntry) > 3)",
    "SELECT id, maker FROM car_makers WHERE id IN (SELECT makeid FROM car_names GROUP BY makeid HAVING COUNT(DISTINCT mdl) >= 2) AND id IN (SELECT makeid FROM car_names GROUP BY makeid HAVING COUNT(*) > 3)",
    "SELECT countries.cntry_id, countries.cntry_name  FROM countries  JOIN car_makers ON countries.cntry_id = car_makers.cntry  JOIN car_names ON car_makers.id = car_names.makeid  WHERE car_makers.maker = 'fiat' OR countries.cntry_id IN  (SELECT cntry FROM car_makers GROUP BY cntry HAVING COUNT(DISTINCT maker) > 3)",
    "SELECT cntry_id, cntry_name FROM countries WHERE cntry_id IN (SELECT cntry FROM car_makers GROUP BY cntry HAVING COUNT(DISTINCT maker) > 3) OR cntry_id IN (SELECT cntry FROM car_makers WHERE maker = 'fiat')",
    "SELECT continent.contid, continent.cont, COUNT(countries.cntry_id) AS num_countries FROM continent JOIN countries ON continent.contid = countries.continent GROUP BY continent.contid, continent.cont",
    "SELECT continent.contid, continent.cont, COUNT(countries.cntry_id) AS num_countries FROM continents continent JOIN countries ON continent.cont = countries.continent GROUP BY continent.contid, continent.cont",
    "SELECT model_list.mdl  FROM model_list  JOIN cars_data ON model_list.mdl_id = cars_data.id  WHERE cars_data.hp = (SELECT MIN(hp) FROM cars_data)",
    "SELECT model_list.mdl FROM cars_data JOIN model_list ON cars_data.id = model_list.mdl_id WHERE cars_data.hp = (SELECT MIN(hp) FROM cars_data)",
    "SELECT mdl FROM model_list WHERE mdl_id IN (SELECT makeid FROM cars_data WHERE weight < (SELECT AVG(weight) FROM cars_data))",
    "SELECT model_list.mdl FROM model_list JOIN cars_data ON model_list.maker = cars_data.makeid AND model_list.mdl = cars_data.mdl WHERE cars_data.weight < (SELECT AVG(weight) FROM cars_data)",
    "SELECT DISTINCT car_makers.maker FROM car_makers INNER JOIN cars_data ON car_makers.id = cars_data.id WHERE cars_data.year = 1970",
    "SELECT DISTINCT car_makers.maker FROM car_makers JOIN cars_data ON car_makers.id = cars_data.id WHERE cars_data.year = 1970",
    "SELECT DISTINCT mdl FROM model_list JOIN cars_data ON model_list.mdl_id = cars_data.id WHERE year > 1980",
    "SELECT DISTINCT mdl FROM model_list JOIN cars_data ON model_list.maker = cars_data.maker AND model_list.mdl_id = cars_data.id WHERE year > 1980",
    "SELECT c.cont, COUNT(DISTINCT cm.maker) AS count FROM continents c JOIN countries co ON c.contid = co.continent JOIN car_makers cm ON co.cntry_id = cm.cntry GROUP BY c.cont",
    "SELECT continents.cont, COUNT(DISTINCT car_makers.maker)  FROM continents  JOIN countries ON continents.contid = countries.continent  JOIN car_makers ON countries.cntry_id = car_makers.cntry  GROUP BY continents.cont",
    "SELECT countries.cntry_name  FROM countries  JOIN car_makers ON countries.cntry_id = car_makers.cntry  GROUP BY countries.cntry_name  ORDER BY COUNT(car_makers.maker) DESC  LIMIT 1",
    "SELECT cntry_name FROM countries WHERE cntry_id = (SELECT cntry FROM car_makers GROUP BY cntry ORDER BY COUNT(DISTINCT maker) DESC LIMIT 1)",
    "SELECT aclt FROM cars_data  JOIN car_names ON cars_data.id = car_names.makeid  WHERE car_names.make = 'amc hornet sportabout (sw)'",
    "SELECT aclt FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid AND car_names.mdl = 'hornet sportabout (sw)' AND car_names.make = 'amc'",
    "SELECT COUNT(DISTINCT maker) FROM car_makers WHERE cntry = 'france'",
    "SELECT COUNT(DISTINCT id) FROM car_makers WHERE maker = 'care' AND cntry = 'France'",
    "SELECT COUNT(DISTINCT model_list.mdl_id) FROM model_list JOIN car_makers ON model_list.maker = car_makers.maker WHERE car_makers.cntry = 'usa'",
    "SELECT COUNT(DISTINCT mdl_id) FROM model_list JOIN car_makers ON model_list.maker = car_makers.maker AND car_makers.cntry = 'United States'",
    "SELECT maker, mdl FROM car_makers JOIN model_list ON car_makers.maker = model_list.maker JOIN car_names ON model_list.mdl_id = car_names.makeid",
    "SELECT maker, mdl FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON car_names.makeid = car_makers.id AND car_names.mdl = model_list.mdl_id",
    "SELECT DISTINCT countries.cntry_id, countries.cntry_name FROM countries INNER JOIN car_makers ON countries.cntry_id = car_makers.cntry ORDER BY countries.cntry_name ASC",
    "SELECT cntry_id, cntry_name FROM countries WHERE cntry_id IN (SELECT DISTINCT cntry FROM car_makers)",
    "SELECT COUNT(*) FROM cars_data WHERE hp > 150",
    "SELECT COUNT(*) FROM cars_data WHERE hp > 150",
    "SELECT DISTINCT countries.cntry_name FROM countries JOIN car_makers ON countries.cntry_id = car_makers.cntry WHERE countries.cont = 'europe' GROUP BY countries.cntry_name HAVING COUNT(DISTINCT car_makers.maker) >= 3",
    "SELECT DISTINCT countries.cntry_name  FROM countries  JOIN car_makers ON countries.cntry_id = car_makers.cntry  WHERE countries.continent = 'Europe'  GROUP BY countries.cntry_name  HAVING COUNT(DISTINCT car_makers.maker) >= 3",
    "SELECT MAX(hp), make FROM cars_data WHERE cylinders = 3 GROUP BY make",
    "SELECT MAX(hp), maker FROM cars_data  JOIN model_list ON cars_data.maker = model_list.maker AND cars_data.mdl = model_list.mdl WHERE cylinders = 3 GROUP BY maker",
    "SELECT mdl, mpg FROM cars_data WHERE mpg = (SELECT MAX(mpg) FROM cars_data)",
    "SELECT mdl FROM model_list JOIN cars_data ON model_list.mdl_id = cars_data.id ORDER BY mpg DESC LIMIT 1",
    "SELECT AVG(hp) FROM cars_data WHERE year < 1980",
    "SELECT AVG(hp) FROM cars_data WHERE year < 1980",
    "SELECT AVG(edispl) FROM cars_data  WHERE id IN (SELECT id FROM car_names WHERE mdl = 'volvo')",
    "SELECT AVG(edispl) FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE car_names.make = 'volvo'",
    "SELECT cylinders, MAX(aclt) FROM cars_data GROUP BY cylinders",
    "SELECT MAX(aclt) FROM cars_data GROUP BY cylinders",
    "SELECT maker, mdl, COUNT(makeid) AS num_cars FROM model_list JOIN car_names ON model_list.mdl_id = car_names.mdl GROUP BY maker, mdl ORDER BY num_cars DESC LIMIT 1;",
    "SELECT maker, mdl, COUNT(DISTINCT mdl_id) AS num_versions FROM model_list GROUP BY maker, mdl ORDER BY num_versions DESC LIMIT 1;",
    "SELECT DISTINCT model_list.mdl FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN cars_data ON model_list.mdl_id = cars_data.mdl WHERE (car_makers.fullname = 'General Motors' OR cars_data.weight > 3500)",
    "SELECT DISTINCT mdl FROM model_list WHERE maker = 'General Motors' OR weight > 3500",
    "SELECT hp FROM cars_data ORDER BY aclt DESC LIMIT 1",
    "SELECT hp FROM cars_data ORDER BY aclt DESC LIMIT 1",
    "SELECT cylinders FROM cars_data WHERE model_list.maker = 'volvo' ORDER BY aclt ASC LIMIT 1",
    "SELECT cylinders FROM cars_data WHERE makeid IN (SELECT id FROM car_names WHERE mdl = 'volvo') ORDER BY aclt ASC LIMIT 1",
    "SELECT COUNT(*) FROM cars_data WHERE aclt > (SELECT MAX(aclt) FROM cars_data WHERE hp = (SELECT MAX(hp) FROM cars_data))",
    "SELECT COUNT(*) FROM cars_data WHERE aclt > (SELECT MAX(aclt) FROM cars_data WHERE hp = (SELECT MAX(hp) FROM cars_data))",
    "SELECT COUNT(DISTINCT cntry_id) FROM countries JOIN car_makers ON countries.cntry_id = car_makers.cntry GROUP BY cntry_id HAVING COUNT(DISTINCT maker) > 2",
    "SELECT COUNT(DISTINCT cntry_id) FROM countries JOIN car_makers ON countries.cntry_id = car_makers.cntry GROUP BY cntry_id HAVING COUNT(DISTINCT maker) > 2",
    "SELECT mdl, MAX(hp) FROM cars_data WHERE cylinders = 4 GROUP BY mdl ORDER BY MAX(hp) DESC LIMIT 1",
    "SELECT mdl, MAX(hp) FROM car_names JOIN cars_data ON car_names.makeid = cars_data.id WHERE cylinders = 4 GROUP BY mdl",
    "SELECT DISTINCT makeid, maker FROM car_names WHERE hp > (SELECT MIN(hp) FROM cars_data) AND cylinders <= 3",
    "SELECT makeid, maker FROM car_names  WHERE cylinders < 4 AND makeid NOT IN  (SELECT makeid FROM cars_data WHERE hp = (SELECT MIN(hp) FROM cars_data))",
    "SELECT mdl  FROM car_names  JOIN cars_data ON car_names.makeid = cars_data.id  JOIN model_list ON car_names.mdl = model_list.mdl  JOIN car_makers ON model_list.maker = car_makers.maker  WHERE weight < 3500 AND car_makers.maker != 'Ford Motor Company'",
    "SELECT DISTINCT mdl  FROM car_names  JOIN cars_data ON car_names.makeid = cars_data.id  JOIN model_list ON car_names.mdl = model_list.mdl  JOIN car_makers ON model_list.maker = car_makers.maker  WHERE weight < 3500 AND car_makers.cntry != 'USA'",
    "SELECT cntry_name FROM countries WHERE cntry_id NOT IN (SELECT DISTINCT cntry FROM car_makers)",
    "SELECT cntry_name FROM countries WHERE cntry_id NOT IN (SELECT DISTINCT cntry FROM car_makers)",
    "SELECT id, maker FROM car_makers WHERE id IN (SELECT maker FROM model_list GROUP BY maker HAVING COUNT(DISTINCT mdl_id) >= 2) AND maker IN (SELECT maker FROM model_list GROUP BY maker HAVING COUNT(DISTINCT maker) > 3)",
    "SELECT id, maker FROM car_makers WHERE id IN (SELECT makeid FROM car_names GROUP BY makeid HAVING COUNT(DISTINCT mdl) >= 2) AND id IN (SELECT makeid FROM car_names GROUP BY makeid HAVING COUNT(*) > 3)",
    "SELECT countries.cntry_id, countries.cntry_name  FROM countries  WHERE countries.cntry_id IN      (SELECT car_makers.cntry       FROM car_makers       WHERE car_makers.maker <> 'fiat'       GROUP BY car_makers.cntry       HAVING COUNT(DISTINCT car_makers.maker) > 3)  OR countries.cntry_id IN      (SELECT car_makers.cntry       FROM car_makers       WHERE car_makers.maker = 'fiat')",
    "SELECT cntry_id, cntry_name FROM countries WHERE cntry_id IN (SELECT cntry FROM car_makers GROUP BY cntry HAVING COUNT(DISTINCT maker) > 3) OR cntry_id IN (SELECT DISTINCT cntry FROM car_makers WHERE maker = 'fiat')",
    "SELECT countries.cntry_name FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.cntry_name ORDER BY COUNT(DISTINCT car_makers.maker) DESC LIMIT 1;",
    "SELECT cntry_name FROM countries WHERE countryid = (SELECT country FROM car_makers GROUP BY country ORDER BY COUNT(DISTINCT maker) DESC LIMIT 1)",
    "SELECT COUNT(*) FROM car_makers WHERE country = (SELECT countryid FROM countries WHERE cntry_name = 'france')",
    "SELECT COUNT(DISTINCT id) FROM car_makers WHERE maker = 'care' AND country = (SELECT countryid FROM countries WHERE cntry_name = 'France')",
    "SELECT COUNT(DISTINCT model) FROM model_list JOIN car_makers ON model_list.maker = car_makers.maker AND car_makers.country = 'usa'",
    "SELECT COUNT(DISTINCT model) FROM model_list JOIN car_makers ON model_list.maker = car_makers.maker JOIN countries ON car_makers.country = countries.cntry_name WHERE countries.cntry_name = 'United States'",
    "SELECT DISTINCT countries.countryid, countries.cntry_name FROM countries INNER JOIN car_makers ON countries.countryid = car_makers.country;",
    "SELECT DISTINCT countries.countryid, countries.cntry_name FROM countries INNER JOIN car_makers ON countries.countryid = car_makers.country;",
    "SELECT DISTINCT c.cntry_name FROM countries c JOIN car_makers cm ON c.countryid = cm.country WHERE c.continent = 'europe' GROUP BY c.cntry_name HAVING COUNT(DISTINCT cm.maker) >= 3",
    "SELECT DISTINCT cntry_name FROM countries JOIN car_makers ON countries.countryid = car_makers.country WHERE continent = 'Europe' GROUP BY cntry_name HAVING COUNT(DISTINCT maker) >= 3",
    "SELECT cntry_name FROM countries WHERE countryid NOT IN (SELECT DISTINCT country FROM car_makers)",
    "SELECT cntry_name FROM countries WHERE countryid NOT IN (SELECT DISTINCT country FROM car_makers)",
    "SELECT countries.countryid, countries.cntry_name FROM countries JOIN car_makers ON countries.countryid = car_makers.country JOIN car_names ON car_makers.id = car_names.makeid WHERE car_makers.maker = 'fiat' OR countries.countryid IN (     SELECT country     FROM car_makers     GROUP BY country     HAVING COUNT(DISTINCT maker) > 3 )",
    "SELECT countryid, cntry_name FROM countries WHERE countryid IN (SELECT country FROM car_makers GROUP BY country HAVING COUNT(DISTINCT maker) > 3) OR countryid IN (SELECT DISTINCT country FROM car_makers WHERE maker = 'fiat')",
    "SELECT cntry FROM airlines WHERE air = 'JetBlue Airways'",
    "SELECT cntry FROM airlines WHERE air = 'Jetblue Airways'",
    "SELECT abbr FROM airlines WHERE air = 'JetBlue Airways'",
    "SELECT abbr FROM airlines WHERE air = 'Jetblue Airways'",
    "SELECT name, abbr FROM airlines WHERE cntry = 'USA'",
    "SELECT air, abbr FROM airlines WHERE cntry = 'USA'",
    "SELECT apt_code, apt_name FROM airports WHERE city = 'Anthony'",
    "SELECT apt_code, apt_name FROM airports WHERE city = 'Anthony'",
    "SELECT air FROM airlines WHERE abbr = 'UAL'",
    "SELECT air FROM airlines WHERE abbr = 'UAL'",
    "SELECT COUNT(*) FROM airlines WHERE cntry = 'USA'",
    "SELECT COUNT(*) FROM airlines WHERE cntry = 'USA'",
    "SELECT city, cntry FROM airports WHERE apt_name = 'Alton airport'",
    "SELECT city, cntry FROM airports WHERE apt_name = 'Alton airport'",
    "SELECT apt_name FROM airports WHERE apt_code = 'AKO'",
    "SELECT apt_name FROM airports WHERE apt_code = 'AKO'",
    "SELECT apt_name FROM airports WHERE city = 'Aberdeen'",
    "SELECT apt_name FROM airports WHERE city = 'Aberdeen'",
    "SELECT COUNT(*) FROM flights WHERE srcapt = 'APG'",
    "SELECT COUNT(*) FROM flights WHERE srcapt = 'APG'",
    "SELECT COUNT(*) FROM flights WHERE destapt = 'ATO'",
    "SELECT COUNT(*) FROM flights WHERE destapt = 'ATO'",
    "SELECT COUNT(*) FROM flights JOIN airports ON flights.srcapt = airports.apt_code WHERE airports.city = 'Aberdeen'",
    "SELECT COUNT(*) FROM flights WHERE srcapt = 'Aberdeen'",
    "SELECT COUNT(*) FROM flights JOIN airports ON flights.destapt = airports.apt_code WHERE airports.city = 'Aberdeen'",
    "SELECT COUNT(*) FROM flights WHERE destapt = 'Aberdeen'",
    "SELECT COUNT(*) FROM flights f JOIN airports a1 ON f.srcapt = a1.apt_code JOIN airports a2 ON f.destapt = a2.apt_code WHERE a1.city = 'Aberdeen' AND a2.city = 'Ashley'",
    "SELECT COUNT(*) FROM flights WHERE srcapt = 'Aberdeen' AND destapt = 'Ashley'",
    "SELECT COUNT(*) FROM flights WHERE air = 'JetBlue Airways'",
    "SELECT COUNT(*) FROM flights WHERE air = 'Jetblue Airways'",
    "SELECT COUNT(*) FROM flights f JOIN airlines a ON f.air = a.air WHERE a.air = 'United Airlines' AND f.destapt = 'ASY'",
    "SELECT COUNT(*) FROM flights f JOIN airlines a ON f.air = a.air WHERE a.air = 'United Airlines' AND f.destapt = 'ASY Airport'",
    "SELECT COUNT(*) FROM flights f JOIN airlines a ON f.air = a.abbr JOIN airports ap ON f.srcapt = ap.apt_code WHERE a.air = 'United Airlines' AND ap.apt_code = 'AHD'",
    "SELECT COUNT(*) FROM flights f JOIN airports a ON f.srcapt = a.apt_code JOIN airlines al ON f.air = al.abbr WHERE al.air = 'United Airlines' AND a.apt_code = 'AHD'",
    "SELECT COUNT(*) FROM flights f JOIN airlines a ON f.air = a.air WHERE a.air = 'United Airlines' AND f.destapt = 'Aberdeen'",
    "SELECT COUNT(*) FROM flights f JOIN airlines a ON f.air = a.air WHERE a.air = 'United Airlines' AND f.destapt = 'Aberdeen'",
    "SELECT srcapt AS city, COUNT(*) AS num_arriving_flights FROM flights GROUP BY srcapt ORDER BY num_arriving_flights DESC LIMIT 1;",
    "SELECT city FROM airports WHERE apt_code = (SELECT destapt FROM flights GROUP BY destapt ORDER BY COUNT(*) DESC LIMIT 1)",
    "SELECT srcapt AS city, COUNT(*) AS num_departing_flights FROM flights GROUP BY srcapt ORDER BY num_departing_flights DESC LIMIT 1;",
    "SELECT srcapt AS city, COUNT(*) AS frequency FROM flights GROUP BY srcapt ORDER BY frequency DESC LIMIT 1",
    "SELECT srcapt FROM flights GROUP BY srcapt ORDER BY COUNT(*) DESC LIMIT 1",
    "SELECT srcapt FROM flights GROUP BY srcapt ORDER BY COUNT(*) DESC LIMIT 1",
    "SELECT srcapt FROM flights GROUP BY srcapt ORDER BY COUNT(*) ASC LIMIT 1",
    "SELECT srcapt FROM flights GROUP BY srcapt ORDER BY COUNT(*) ASC LIMIT 1",
    "SELECT air FROM flights GROUP BY air ORDER BY COUNT(*) DESC LIMIT 1",
    "SELECT air FROM flights GROUP BY air ORDER BY COUNT(*) DESC LIMIT 1;",
    "SELECT abbr, cntry FROM airlines WHERE uid = (SELECT air FROM flights GROUP BY air ORDER BY COUNT(*) ASC LIMIT 1)",
    "SELECT abbr, cntry FROM airlines WHERE uid = (SELECT air FROM flights GROUP BY air ORDER BY COUNT(*) ASC LIMIT 1)",
    "SELECT DISTINCT airlines.air  FROM airlines  JOIN flights ON airlines.air = flights.air  WHERE flights.srcapt = 'AHD'",
    "SELECT DISTINCT airlines.air FROM flights JOIN airlines ON flights.air = airlines.uid WHERE flights.srcapt = 'AHD'",
    "SELECT DISTINCT airlines.air  FROM airlines  JOIN flights ON airlines.air = flights.air  WHERE flights.destapt = 'AHD'",
    "SELECT DISTINCT airlines.air FROM flights JOIN airlines ON flights.air = airlines.uid WHERE flights.destapt = 'AHD'",
    "SELECT DISTINCT airlines.air  FROM airlines  JOIN flights AS f1 ON airlines.air = f1.air  JOIN flights AS f2 ON airlines.air = f2.air  WHERE f1.srcapt = 'APG' AND f2.srcapt = 'CVO'",
    "SELECT DISTINCT airlines.air FROM flights JOIN airports AS apg_airport ON flights.srcapt = apg_airport.apt_code JOIN airports AS cvo_airport ON flights.srcapt = cvo_airport.apt_code JOIN airlines ON flights.air = airlines.air WHERE apg_airport.city = 'APG' AND cvo_airport.city = 'CVO'",
    "SELECT DISTINCT airlines.air FROM airlines JOIN flights ON airlines.air = flights.air WHERE flights.srcapt = 'CVO' AND airlines.air NOT IN (     SELECT DISTINCT airlines.air     FROM airlines     JOIN flights ON airlines.air = flights.air     WHERE flights.srcapt = 'APG' )",
    "SELECT DISTINCT airlines.air FROM airlines JOIN flights ON airlines.air = flights.air WHERE flights.srcapt = 'CVO' AND flights.air NOT IN (     SELECT DISTINCT airlines.air     FROM airlines     JOIN flights ON airlines.air = flights.air     WHERE flights.srcapt = 'APG' )",
    "SELECT DISTINCT air FROM flights GROUP BY air HAVING COUNT(*) >= 10",
    "SELECT air FROM flights GROUP BY air HAVING COUNT(*) >= 10",
    "SELECT air FROM airlines WHERE air IN (SELECT air FROM flights GROUP BY air HAVING COUNT(*) < 200)",
    "SELECT air FROM airlines WHERE air IN (SELECT air FROM flights GROUP BY air HAVING COUNT(*) < 200)",
    "SELECT flightno FROM flights WHERE air = 'United Airlines'",
    "SELECT flightno FROM flights WHERE air = 'United Airlines'",
    "SELECT flightno FROM flights WHERE srcapt = 'APG'",
    "SELECT flightno FROM flights WHERE srcapt = 'APG'",
    "SELECT flightno FROM flights WHERE destapt = 'APG'",
    "SELECT flightno FROM flights WHERE destapt = 'APG'",
    "SELECT flightno FROM flights JOIN airports ON flights.srcapt = airports.apt_code WHERE airports.city = 'Aberdeen'",
    "SELECT flightno FROM flights JOIN airports ON flights.srcapt = airports.apt_code WHERE airports.city = 'Aberdeen'",
    "SELECT flightno FROM flights JOIN airports ON flights.destapt = airports.apt_code WHERE airports.city = 'Aberdeen'",
    "SELECT flightno FROM flights JOIN airports ON flights.destapt = airports.apt_code WHERE airports.city = 'Aberdeen'",
    "SELECT COUNT(*) FROM flights JOIN airports ON flights.destapt = airports.apt_code WHERE airports.city = 'Aberdeen' OR airports.city = 'Abilene'",
    "SELECT COUNT(*) FROM flights WHERE destapt = 'Aberdeen' OR destapt = 'Abilene'",
    "SELECT apt_name FROM airports WHERE apt_code NOT IN (SELECT srcapt FROM flights UNION SELECT destapt FROM flights)",
    "SELECT apt_name FROM airports WHERE apt_code NOT IN (SELECT srcapt FROM flights UNION SELECT destapt FROM flights)",
    "SELECT country FROM airlines WHERE air = 'JetBlue Airways'",
    "SELECT country FROM airlines WHERE air = 'Jetblue Airways'",
    "SELECT abbreviation FROM airlines WHERE air = 'JetBlue Airways'",
    "SELECT abbreviation FROM airlines WHERE air = 'Jetblue Airways'",
    "SELECT name, abbreviation FROM airlines WHERE country = 'USA'",
    "SELECT air, abbreviation FROM airlines WHERE country = 'USA'",
    "SELECT apt_code, apt_name FROM airports WHERE city = 'Anthony'",
    "SELECT apt_code, apt_name FROM airports WHERE city = 'Anthony'",
    "SELECT air FROM airlines WHERE abbreviation = 'UAL'",
    "SELECT air FROM airlines WHERE abbreviation = 'UAL'",
    "SELECT city, cntry FROM airports WHERE apt_name = 'Alton airport'",
    "SELECT city, cntry FROM airports WHERE apt_name = 'Alton airport'",
    "SELECT apt_name FROM airports WHERE apt_code = 'AKO'",
    "SELECT apt_name FROM airports WHERE apt_code = 'AKO'",
    "SELECT apt_name FROM airports WHERE city = 'Aberdeen'",
    "SELECT apt_name FROM airports WHERE city = 'Aberdeen'",
    "SELECT COUNT(*) FROM flights WHERE srcapt = 'APG'",
    "SELECT COUNT(*) FROM flights WHERE srcapt = 'APG'",
    "SELECT COUNT(*) FROM flights WHERE destapt = 'ATO'",
    "SELECT COUNT(*) FROM flights WHERE destapt = 'ATO'",
    "SELECT COUNT(*) FROM flights JOIN airports ON flights.srcapt = airports.apt_code WHERE airports.city = 'Aberdeen'",
    "SELECT COUNT(*) FROM flights WHERE srcapt = 'Aberdeen'",
    "SELECT COUNT(*) FROM flights JOIN airports ON flights.destapt = airports.apt_code WHERE airports.city = 'Aberdeen'",
    "SELECT COUNT(*) FROM flights WHERE destapt = 'Aberdeen'",
    "SELECT COUNT(*) FROM flights f JOIN airports a1 ON f.srcapt = a1.apt_code JOIN airports a2 ON f.destapt = a2.apt_code WHERE a1.city = 'Aberdeen' AND a2.city = 'Ashley'",
    "SELECT COUNT(*) FROM flights WHERE srcapt = 'Aberdeen' AND destapt = 'Ashley'",
    "SELECT COUNT(*) FROM flights WHERE air = 'JetBlue Airways'",
    "SELECT COUNT(*) FROM flights WHERE air = 'Jetblue Airways'",
    "SELECT COUNT(*) FROM flights f JOIN airlines a ON f.air = a.air WHERE a.air = 'United Airlines' AND f.destapt = 'ASY'",
    "SELECT COUNT(*) FROM flights f JOIN airlines a ON f.air = a.air WHERE a.airline = 'United Airlines' AND f.destapt = 'ASY'",
    "SELECT COUNT(*) FROM flights f JOIN airlines a ON f.air = a.air WHERE a.air = 'United Airlines' AND f.srcapt = 'AHD'",
    "SELECT COUNT(*) FROM flights f JOIN airlines a ON f.air = a.air WHERE a.airline = 'United Airlines' AND f.srcapt = 'AHD'",
    "SELECT COUNT(*) FROM flights f JOIN airlines a ON f.air = a.air WHERE a.air = 'United Airlines' AND f.destapt = 'Aberdeen'",
    "SELECT COUNT(*) FROM flights f JOIN airlines a ON f.air = a.air WHERE a.air = 'United Airlines' AND f.destapt = 'Aberdeen'",
    "SELECT city FROM airports WHERE apt_code = (SELECT srcapt FROM flights GROUP BY srcapt ORDER BY COUNT(*) DESC LIMIT 1)",
    "SELECT city FROM airports WHERE apt_code = (SELECT destapt FROM flights GROUP BY destapt ORDER BY COUNT(*) DESC LIMIT 1)",
    "SELECT srcapt AS city, COUNT(*) AS num_departing_flights FROM flights GROUP BY srcapt ORDER BY num_departing_flights DESC LIMIT 1;",
    "SELECT srcapt AS city, COUNT(*) AS frequency FROM flights GROUP BY srcapt ORDER BY frequency DESC LIMIT 1",
    "SELECT srcapt FROM flights GROUP BY srcapt ORDER BY COUNT(*) DESC LIMIT 1",
    "SELECT srcapt FROM flights GROUP BY srcapt ORDER BY COUNT(*) DESC LIMIT 1",
    "SELECT srcapt FROM flights GROUP BY srcapt ORDER BY COUNT(*) ASC LIMIT 1",
    "SELECT srcapt FROM flights GROUP BY srcapt ORDER BY COUNT(*) ASC LIMIT 1",
    "SELECT air FROM flights GROUP BY air ORDER BY COUNT(*) DESC LIMIT 1",
    "SELECT air FROM flights GROUP BY air ORDER BY COUNT(*) DESC LIMIT 1;",
    "SELECT abbreviation, country FROM airlines WHERE uid = (SELECT air FROM flights GROUP BY air ORDER BY COUNT(*) ASC LIMIT 1)",
    "SELECT abbreviation, country FROM airlines WHERE air = (SELECT air FROM flights GROUP BY air ORDER BY COUNT(*) LIMIT 1)",
    "SELECT DISTINCT airlines.air  FROM airlines  INNER JOIN flights ON airlines.air = flights.air  WHERE flights.srcapt = 'AHD'",
    "SELECT DISTINCT airlines.air FROM flights JOIN airlines ON flights.air = airlines.uid WHERE flights.srcapt = 'AHD'",
    "SELECT DISTINCT airlines.air FROM airlines JOIN flights ON airlines.air = flights.air WHERE flights.destapt = 'AHD'",
    "SELECT DISTINCT airlines.air FROM airlines JOIN flights ON airlines.air = flights.air WHERE flights.destapt = 'AHD'",
    "SELECT DISTINCT airlines.air FROM airlines JOIN flights AS f1 ON airlines.air = f1.air JOIN flights AS f2 ON airlines.air = f2.air WHERE f1.srcapt = 'APG' AND f2.srcapt = 'CVO'",
    "SELECT DISTINCT airlines.air FROM airlines JOIN flights AS f1 ON airlines.air = f1.air JOIN flights AS f2 ON airlines.air = f2.air JOIN airports AS a1 ON f1.srcapt = a1.apt_code JOIN airports AS a2 ON f2.srcapt = a2.apt_code WHERE a1.apt_code = 'APG' AND a2.apt_code = 'CVO'",
    "SELECT DISTINCT airlines.air FROM airlines JOIN flights ON airlines.air = flights.air WHERE flights.srcapt = 'CVO' AND airlines.air NOT IN (     SELECT DISTINCT airlines.air     FROM airlines     JOIN flights ON airlines.air = flights.air     WHERE flights.srcapt = 'APG' )",
    "SELECT DISTINCT airlines.air FROM airlines JOIN flights ON airlines.air = flights.air WHERE flights.srcapt = 'CVO' AND flights.air NOT IN (     SELECT DISTINCT airlines.air     FROM airlines     JOIN flights ON airlines.air = flights.air     WHERE flights.srcapt = 'APG' )",
    "SELECT air FROM airlines WHERE air IN (SELECT air FROM flights GROUP BY air HAVING COUNT(*) >= 10)",
    "SELECT air FROM flights GROUP BY air HAVING COUNT(*) >= 10",
    "SELECT air FROM airlines WHERE air IN (SELECT air FROM flights GROUP BY air HAVING COUNT(*) < 200)",
    "SELECT air FROM airlines WHERE uid IN (SELECT air FROM flights GROUP BY air HAVING COUNT(*) < 200)",
    "SELECT flightno FROM flights WHERE air = 'United Airlines'",
    "SELECT flightno FROM flights WHERE air = 'United Airlines'",
    "SELECT flightno FROM flights WHERE srcapt = 'APG'",
    "SELECT flightno FROM flights WHERE srcapt = 'APG'",
    "SELECT flightno FROM flights WHERE destapt = 'APG'",
    "SELECT flightno FROM flights JOIN airports ON flights.destapt = airports.apt_code WHERE airports.apt_name = 'APG'",
    "SELECT flightno FROM flights JOIN airports ON flights.srcapt = airports.apt_code WHERE airports.city = 'Aberdeen'",
    "SELECT flightno FROM flights JOIN airports ON flights.srcapt = airports.apt_code WHERE airports.city = 'Aberdeen'",
    "SELECT flightno FROM flights JOIN airports ON flights.destapt = airports.apt_code WHERE airports.city = 'Aberdeen'",
    "SELECT flightno FROM flights JOIN airports ON flights.destapt = airports.apt_code WHERE airports.city = 'Aberdeen'",
    "SELECT COUNT(*) FROM flights JOIN airports ON flights.destapt = airports.apt_code WHERE airports.city = 'Aberdeen' OR airports.city = 'Abilene'",
    "SELECT COUNT(*) FROM flights WHERE destapt = 'Aberdeen' OR destapt = 'Abilene'",
    "SELECT apt_name FROM airports WHERE apt_code NOT IN (SELECT srcapt FROM flights UNION SELECT destapt FROM flights)",
    "SELECT apt_name FROM airports WHERE apt_code NOT IN (SELECT srcapt FROM flights UNION SELECT destapt FROM flights)",
    "SELECT cntry FROM airlines WHERE airline = 'JetBlue Airways'",
    "SELECT cntry FROM airlines WHERE airline = 'Jetblue Airways'",
    "SELECT airline, abbreviation FROM airlines WHERE cntry = 'USA'",
    "SELECT airline, abbreviation FROM airlines WHERE cntry = 'USA'",
    "SELECT apt_code, apt_name FROM airports WHERE city = 'Anthony'",
    "SELECT apt_code, apt_name FROM airports WHERE city = 'Anthony'",
    "SELECT COUNT(*) FROM airlines WHERE cntry = 'USA'",
    "SELECT COUNT(*) FROM airlines WHERE cntry = 'USA'",
    "SELECT city, cntry FROM airports WHERE apt_name = 'Alton airport'",
    "SELECT city, cntry FROM airports WHERE apt_name = 'Alton airport'",
    "SELECT apt_name FROM airports WHERE apt_code = 'AKO'",
    "SELECT apt_name FROM airports WHERE apt_code = 'AKO'",
    "SELECT apt_name FROM airports WHERE city = 'Aberdeen'",
    "SELECT apt_name FROM airports WHERE city = 'Aberdeen'",
    "SELECT COUNT(*) FROM flights WHERE destapt = 'ATO'",
    "SELECT COUNT(*) FROM flights WHERE destapt = 'ATO'",
    "SELECT COUNT(*) FROM flights JOIN airports ON flights.sourceairport = airports.apt_code WHERE airports.city = 'Aberdeen'",
    "SELECT COUNT(*) FROM flights WHERE sourceairport = 'Aberdeen'",
    "SELECT COUNT(*) FROM flights JOIN airports ON flights.destapt = airports.apt_code WHERE airports.city = 'Aberdeen'",
    "SELECT COUNT(*) FROM flights WHERE destapt = 'Aberdeen'",
    "SELECT COUNT(*) FROM flights f JOIN airports a1 ON f.sourceairport = a1.apt_code JOIN airports a2 ON f.destapt = a2.apt_code WHERE a1.city = 'Aberdeen' AND a2.city = 'Ashley'",
    "SELECT COUNT(*) FROM flights WHERE sourceairport = 'Aberdeen' AND destapt = 'Ashley'",
    "SELECT COUNT(*) FROM flights WHERE air = 'JetBlue Airways'",
    "SELECT COUNT(*) FROM flights WHERE air = 'Jetblue Airways'",
    "SELECT COUNT(*) FROM flights f JOIN airlines a ON f.air = a.uid JOIN airports ap ON f.destapt = ap.apt_code WHERE a.airline = 'United Airlines' AND ap.apt_code = 'ASY'",
    "SELECT COUNT(*) FROM flights f JOIN airlines a ON f.air = a.uid JOIN airports ap ON f.destapt = ap.apt_code WHERE a.airline = 'United Airlines' AND ap.apt_code = 'ASY'",
    "SELECT COUNT(*) FROM flights f JOIN airlines a ON f.air = a.uid JOIN airports ap ON f.sourceairport = ap.apt_code WHERE a.airline = 'United Airlines' AND ap.apt_code = 'AHD'",
    "SELECT COUNT(*) FROM flights f JOIN airlines a ON f.air = a.uid JOIN airports ap ON f.sourceairport = ap.apt_code WHERE a.airline = 'United Airlines' AND ap.apt_code = 'AHD'",
    "SELECT COUNT(*) FROM flights f JOIN airlines a ON f.air = a.uid JOIN airports ap ON f.destapt = ap.apt_code WHERE a.airline = 'United Airlines' AND ap.city = 'Aberdeen'",
    "SELECT COUNT(*) FROM flights f JOIN airlines a ON f.air = a.uid JOIN airports ap ON f.destapt = ap.apt_code WHERE a.airline = 'United Airlines' AND ap.city = 'Aberdeen'",
    "SELECT sourceairport AS city, COUNT(*) AS num_arriving_flights FROM flights GROUP BY sourceairport ORDER BY num_arriving_flights DESC LIMIT 1;",
    "SELECT city FROM airports  WHERE apt_code = (SELECT destapt FROM flights                    GROUP BY destapt                    ORDER BY COUNT(*) DESC                    LIMIT 1)",
    "SELECT sourceairport, COUNT(*) AS num_departing_flights FROM flights GROUP BY sourceairport ORDER BY num_departing_flights DESC LIMIT 1;",
    "SELECT sourceairport AS city, COUNT(*) AS frequency FROM flights GROUP BY sourceairport ORDER BY frequency DESC LIMIT 1",
    "SELECT sourceairport FROM flights GROUP BY sourceairport ORDER BY COUNT(*) DESC LIMIT 1",
    "SELECT sourceairport FROM flights GROUP BY sourceairport ORDER BY COUNT(*) DESC LIMIT 1",
    "SELECT sourceairport FROM flights GROUP BY sourceairport ORDER BY COUNT(*) ASC LIMIT 1",
    "SELECT sourceairport FROM flights GROUP BY sourceairport ORDER BY COUNT(*) ASC LIMIT 1",
    "SELECT airline FROM airlines  WHERE uid = (SELECT air FROM flights               GROUP BY air               ORDER BY COUNT(*) DESC               LIMIT 1)",
    "SELECT airline FROM airlines  WHERE uid = (SELECT air FROM flights               GROUP BY air               ORDER BY COUNT(*) DESC               LIMIT 1)",
    "SELECT abbreviation, cntry FROM airlines WHERE uid = (SELECT air FROM flights GROUP BY air ORDER BY COUNT(*) ASC LIMIT 1)",
    "SELECT abbreviation, cntry FROM airlines WHERE uid = (SELECT air FROM flights GROUP BY air ORDER BY COUNT(*) ASC LIMIT 1)",
    "SELECT DISTINCT airlines.airline  FROM airlines  JOIN flights ON airlines.uid = flights.air  WHERE flights.sourceairport = 'AHD'",
    "SELECT DISTINCT airlines.airline  FROM flights  JOIN airlines ON flights.air = airlines.uid  WHERE flights.sourceairport = 'AHD'",
    "SELECT DISTINCT airlines.airline  FROM airlines  JOIN flights ON airlines.uid = flights.air  WHERE flights.destapt = 'AHD'",
    "SELECT airline FROM flights JOIN airports ON flights.destapt = airports.apt_code JOIN airlines ON flights.air = airlines.uid WHERE airports.apt_code = 'AHD'",
    "SELECT DISTINCT airlines.airline  FROM flights  JOIN airlines ON flights.air = airlines.uid  WHERE flights.sourceairport = 'APG'  AND EXISTS (SELECT * FROM flights WHERE flights.air = airlines.uid AND flights.sourceairport = 'CVO')",
    "SELECT DISTINCT airlines.airline  FROM flights  JOIN airports AS apg_airport ON flights.sourceairport = apg_airport.apt_code  JOIN airports AS cvo_airport ON flights.sourceairport = cvo_airport.apt_code  JOIN airlines ON flights.air = airlines.uid  WHERE apg_airport.city = 'APG' AND cvo_airport.city = 'CVO'",
    "SELECT DISTINCT airlines.airline  FROM airlines  JOIN flights ON airlines.uid = flights.air  WHERE flights.sourceairport = 'CVO'  AND airlines.airline NOT IN  (SELECT DISTINCT airlines.airline  FROM airlines  JOIN flights ON airlines.uid = flights.air  WHERE flights.sourceairport = 'APG')",
    "SELECT DISTINCT airlines.airline  FROM flights  JOIN airports AS CVO_airport ON flights.sourceairport = CVO_airport.apt_code  JOIN airports AS APG_airport ON flights.sourceairport = APG_airport.apt_code  JOIN airlines ON flights.air = airlines.uid  WHERE CVO_airport.city = 'CVO' AND APG_airport.city != 'APG'",
    "SELECT airline FROM airlines INNER JOIN flights ON airlines.uid = flights.air WHERE COUNT(flights.flightno) >= 10 GROUP BY airline",
    "SELECT airline FROM airlines INNER JOIN flights ON airlines.uid = flights.air WHERE COUNT(flightno) >= 10 GROUP BY airline",
    "SELECT airline FROM airlines WHERE uid IN (SELECT air FROM flights GROUP BY air HAVING COUNT(*) < 200)",
    "SELECT airline FROM airlines WHERE uid IN (SELECT air FROM flights GROUP BY air HAVING COUNT(*) < 200)",
    "SELECT flightno FROM flights WHERE air = 'United Airlines'",
    "SELECT flightno FROM flights JOIN airlines ON flights.air = airlines.uid WHERE airlines.airline = 'United Airlines'",
    "SELECT flightno FROM flights WHERE destapt = 'APG'",
    "SELECT flightno FROM flights WHERE destapt = 'APG'",
    "SELECT flightno FROM flights WHERE sourceairport = 'Aberdeen'",
    "SELECT flightno FROM flights WHERE sourceairport = 'Aberdeen'",
    "SELECT flightno FROM flights JOIN airports ON flights.destapt = airports.apt_code WHERE airports.city = 'Aberdeen'",
    "SELECT flightno FROM flights JOIN airports ON flights.destapt = airports.apt_code WHERE airports.city = 'Aberdeen'",
    "SELECT COUNT(*) FROM flights JOIN airports ON flights.destapt = airports.apt_code WHERE airports.city = 'Aberdeen' OR airports.city = 'Abilene'",
    "SELECT COUNT(*) FROM flights WHERE destapt = 'Aberdeen' OR destapt = 'Abilene'",
    "SELECT apt_name FROM airports WHERE apt_code NOT IN (SELECT sourceairport FROM flights UNION SELECT destapt FROM flights)",
    "SELECT apt_name FROM airports WHERE apt_code NOT IN (SELECT sourceairport FROM flights UNION SELECT destapt FROM flights)",
    "SELECT cntry FROM airlines WHERE air = 'JetBlue Airways'",
    "SELECT cntry FROM airlines WHERE air = 'Jetblue Airways'",
    "SELECT abbr FROM airlines WHERE air = 'JetBlue Airways'",
    "SELECT abbr FROM airlines WHERE air = 'Jetblue Airways'",
    "SELECT air, abbr FROM airlines WHERE cntry = 'USA'",
    "SELECT air, abbr FROM airlines WHERE cntry = 'USA'",
    "SELECT airportcode, apt_name FROM airports WHERE city = 'Anthony'",
    "SELECT airportcode, apt_name FROM airports WHERE city = 'Anthony'",
    "SELECT air FROM airlines WHERE abbr = 'UAL'",
    "SELECT air FROM airlines WHERE abbr = 'UAL'",
    "SELECT COUNT(*) FROM airlines WHERE cntry = 'USA'",
    "SELECT COUNT(*) FROM airlines WHERE cntry = 'USA'",
    "SELECT city, cntry FROM airports WHERE airportcode = 'Alton'",
    "SELECT city, cntry FROM airports WHERE apt_name = 'Alton airport'",
    "SELECT apt_name FROM airports WHERE airportcode = 'AKO'",
    "SELECT apt_name FROM airports WHERE airportcode = 'AKO'",
    "SELECT apt_name FROM airports WHERE city = 'Aberdeen'",
    "SELECT apt_name FROM airports WHERE city = 'Aberdeen'",
    "SELECT COUNT(*) FROM flights WHERE destapt = 'ATO'",
    "SELECT COUNT(*) FROM flights WHERE destapt = 'ATO'",
    "SELECT COUNT(*) FROM flights JOIN airports ON flights.destapt = airports.airportcode WHERE airports.city = 'Aberdeen'",
    "SELECT COUNT(*) FROM flights WHERE destapt = 'Aberdeen'",
    "SELECT COUNT(*) FROM flights f JOIN airports a1 ON f.sourceairport = a1.airportcode JOIN airports a2 ON f.destapt = a2.airportcode WHERE a1.city = 'Aberdeen' AND a2.city = 'Ashley'",
    "SELECT COUNT(*) FROM flights WHERE sourceairport = 'Aberdeen' AND destapt = 'Ashley'",
    "SELECT COUNT(*) FROM flights WHERE air = 'JetBlue Airways'",
    "SELECT COUNT(*) FROM flights WHERE air = 'Jetblue Airways'",
    "SELECT COUNT(*) FROM flights f JOIN airlines a ON f.air = a.air WHERE a.air = 'United Airlines' AND f.destapt = 'ASY'",
    "SELECT COUNT(*) FROM flights f JOIN airlines a ON f.air = a.air WHERE a.air = 'United Airlines' AND f.destapt = 'ASY'",
    "SELECT COUNT(*) FROM flights f JOIN airlines a ON f.air = a.abbr JOIN airports ap ON f.sourceairport = ap.airportcode WHERE a.air = 'United Airlines' AND ap.airportcode = 'AHD'",
    "SELECT COUNT(*) FROM flights f JOIN airlines a ON f.air = a.air WHERE a.air = 'United Airlines' AND f.sourceairport = 'AHD'",
    "SELECT COUNT(*) FROM flights f JOIN airlines a ON f.air = a.air WHERE a.air = 'United Airlines' AND f.destapt = 'Aberdeen'",
    "SELECT COUNT(*) FROM flights f JOIN airlines a ON f.air = a.air WHERE a.air = 'United Airlines' AND f.destapt = 'Aberdeen'",
    "SELECT sourceairport, COUNT(*) AS num_arriving_flights FROM flights GROUP BY sourceairport ORDER BY num_arriving_flights DESC LIMIT 1;",
    "SELECT city FROM airports WHERE airportcode = (SELECT destapt FROM flights GROUP BY destapt ORDER BY COUNT(*) DESC LIMIT 1)",
    "SELECT sourceairport FROM flights GROUP BY sourceairport ORDER BY COUNT(*) DESC LIMIT 1",
    "SELECT sourceairport FROM flights GROUP BY sourceairport ORDER BY COUNT(*) DESC LIMIT 1",
    "SELECT sourceairport FROM flights GROUP BY sourceairport ORDER BY COUNT(*) ASC LIMIT 1",
    "SELECT sourceairport FROM flights GROUP BY sourceairport ORDER BY COUNT(*) ASC LIMIT 1",
    "SELECT air FROM flights GROUP BY air ORDER BY COUNT(*) DESC LIMIT 1;",
    "SELECT air FROM flights GROUP BY air ORDER BY COUNT(*) DESC LIMIT 1;",
    "SELECT abbr, cntry FROM airlines WHERE uid = (SELECT air FROM flights GROUP BY air ORDER BY COUNT(*) ASC LIMIT 1)",
    "SELECT abbr, cntry FROM airlines WHERE air = (SELECT air FROM flights GROUP BY air ORDER BY COUNT(*) LIMIT 1)",
    "SELECT DISTINCT airlines.air  FROM airlines  JOIN flights ON airlines.air = flights.air  WHERE flights.sourceairport = 'AHD'",
    "SELECT DISTINCT air FROM flights JOIN airlines ON flights.air = airlines.air WHERE flights.sourceairport = 'AHD'",
    "SELECT DISTINCT airlines.air  FROM airlines  JOIN flights ON airlines.air = flights.air  WHERE flights.destapt = 'AHD'",
    "SELECT DISTINCT airlines.air FROM airlines JOIN flights ON airlines.air = flights.air WHERE flights.destapt = 'AHD'",
    "SELECT DISTINCT airlines.air  FROM airlines  JOIN flights AS f1 ON airlines.air = f1.air  JOIN flights AS f2 ON airlines.air = f2.air  WHERE f1.sourceairport = 'APG' AND f2.sourceairport = 'CVO'",
    "SELECT DISTINCT airlines.air FROM airlines JOIN flights AS f1 ON airlines.air = f1.air JOIN flights AS f2 ON airlines.air = f2.air JOIN airports AS a1 ON f1.sourceairport = a1.airportcode JOIN airports AS a2 ON f2.sourceairport = a2.airportcode WHERE a1.airportcode = 'APG' AND a2.airportcode = 'CVO'",
    "SELECT DISTINCT airlines.air FROM airlines JOIN flights ON airlines.air = flights.air WHERE flights.sourceairport = 'CVO' AND airlines.air NOT IN (     SELECT DISTINCT airlines.air     FROM airlines     JOIN flights ON airlines.air = flights.air     WHERE flights.sourceairport = 'APG' )",
    "SELECT DISTINCT airlines.air FROM airlines JOIN flights ON airlines.air = flights.air WHERE flights.sourceairport = 'CVO' AND flights.air NOT IN (     SELECT DISTINCT airlines.air     FROM airlines     JOIN flights ON airlines.air = flights.air     WHERE flights.sourceairport = 'APG' )",
    "SELECT air FROM airlines INNER JOIN flights ON airlines.air = flights.air GROUP BY air HAVING COUNT(*) >= 10",
    "SELECT air FROM flights GROUP BY air HAVING COUNT(*) >= 10",
    "SELECT air FROM airlines WHERE air IN (SELECT air FROM flights GROUP BY air HAVING COUNT(*) < 200)",
    "SELECT air FROM airlines WHERE uid IN (SELECT air FROM flights GROUP BY air HAVING COUNT(*) < 200)",
    "SELECT flightno FROM flights WHERE air = 'United Airlines'",
    "SELECT flightno FROM flights WHERE air = 'United Airlines'",
    "SELECT flightno FROM flights WHERE destapt = 'APG'",
    "SELECT flightno FROM flights WHERE destapt = 'APG'",
    "SELECT flightno FROM flights JOIN airports ON flights.destapt = airports.airportcode WHERE airports.city = 'Aberdeen'",
    "SELECT flightno FROM flights JOIN airports ON flights.destapt = airports.airportcode WHERE airports.city = 'Aberdeen'",
    "SELECT COUNT(*) FROM flights JOIN airports ON flights.destapt = airports.airportcode WHERE airports.city = 'Aberdeen' OR airports.city = 'Abilene'",
    "SELECT COUNT(*) FROM flights WHERE destapt = 'Aberdeen' OR destapt = 'Abilene'",
    "SELECT apt_name FROM airports WHERE airportcode NOT IN (SELECT sourceairport FROM flights UNION SELECT destapt FROM flights)",
    "SELECT airportcode FROM airports WHERE airportcode NOT IN (SELECT sourceairport FROM flights UNION SELECT destapt FROM flights)",
    "SELECT cntry FROM airlines WHERE air = 'JetBlue Airways'",
    "SELECT cntry FROM airlines WHERE air = 'Jetblue Airways'",
    "SELECT abbr FROM airlines WHERE air = 'JetBlue Airways'",
    "SELECT abbr FROM airlines WHERE air = 'Jetblue Airways'",
    "SELECT air, abbr FROM airlines WHERE cntry = 'USA'",
    "SELECT air, abbr FROM airlines WHERE cntry = 'USA'",
    "SELECT airportcode, apt_name FROM airports WHERE city = 'Anthony'",
    "SELECT airportcode, apt_name FROM airports WHERE city = 'Anthony'",
    "SELECT air FROM airlines WHERE abbr = 'UAL'",
    "SELECT air FROM airlines WHERE abbr = 'UAL'",
    "SELECT COUNT(*) FROM airlines WHERE cntry = 'USA'",
    "SELECT COUNT(*) FROM airlines WHERE cntry = 'USA'",
    "SELECT city, cntry FROM airports WHERE airportcode = 'Alton'",
    "SELECT city, cntry FROM airports WHERE airportcode = 'Alton'",
    "SELECT apt_name FROM airports WHERE airportcode = 'AKO'",
    "SELECT apt_name FROM airports WHERE airportcode = 'AKO'",
    "SELECT apt_name FROM airports WHERE city = 'Aberdeen'",
    "SELECT apt_name FROM airports WHERE city = 'Aberdeen'",
    "SELECT COUNT(*) FROM flights WHERE srcapt = 'APG'",
    "SELECT COUNT(*) FROM flights WHERE srcapt = 'APG'",
    "SELECT COUNT(*) FROM flights WHERE destapt = 'ATO'",
    "SELECT COUNT(*) FROM flights WHERE destapt = 'ATO'",
    "SELECT COUNT(*) FROM flights JOIN airports ON flights.srcapt = airports.airportcode WHERE airports.city = 'Aberdeen'",
    "SELECT COUNT(*) FROM flights WHERE srcapt = 'Aberdeen'",
    "SELECT COUNT(*) FROM flights JOIN airports ON flights.destapt = airports.airportcode WHERE airports.city = 'Aberdeen'",
    "SELECT COUNT(*) FROM flights WHERE destapt = 'Aberdeen'",
    "SELECT COUNT(*) FROM flights f JOIN airports a1 ON f.srcapt = a1.airportcode JOIN airports a2 ON f.destapt = a2.airportcode WHERE a1.city = 'Aberdeen' AND a2.city = 'Ashley'",
    "SELECT COUNT(*) FROM flights WHERE srcapt = 'Aberdeen' AND destapt = 'Ashley'",
    "SELECT COUNT(*) FROM flights WHERE air = 'JetBlue Airways'",
    "SELECT COUNT(*) FROM flights WHERE air = 'Jetblue Airways'",
    "SELECT COUNT(*) FROM flights f JOIN airlines a ON f.air = a.air WHERE a.air = 'United Airlines' AND f.destapt = 'ASY'",
    "SELECT COUNT(*) FROM flights f JOIN airlines a ON f.air = a.air WHERE a.air = 'United Airlines' AND f.destapt = 'ASY'",
    "SELECT COUNT(*) FROM flights f JOIN airlines a ON f.air = a.abbr JOIN airports ap ON f.srcapt = ap.airportcode WHERE a.air = 'United Airlines' AND ap.airportcode = 'AHD'",
    "SELECT COUNT(*) FROM flights f JOIN airlines a ON f.air = a.air WHERE a.air = 'United Airlines' AND f.srcapt = 'AHD'",
    "SELECT COUNT(*) FROM flights f JOIN airlines a ON f.air = a.air WHERE a.air = 'United Airlines' AND f.destapt = 'Aberdeen'",
    "SELECT COUNT(*) FROM flights f JOIN airlines a ON f.air = a.air WHERE a.air = 'United Airlines' AND f.destapt = 'Aberdeen'",
    "SELECT city FROM airports WHERE airportcode = (SELECT srcapt FROM flights GROUP BY srcapt ORDER BY COUNT(*) DESC LIMIT 1)",
    "SELECT city FROM airports WHERE airportcode = (SELECT destapt FROM flights GROUP BY destapt ORDER BY COUNT(*) DESC LIMIT 1)",
    "SELECT srcapt AS city, COUNT(*) AS num_departing_flights FROM flights GROUP BY srcapt ORDER BY num_departing_flights DESC LIMIT 1;",
    "SELECT srcapt AS city, COUNT(*) AS frequency FROM flights GROUP BY srcapt ORDER BY frequency DESC LIMIT 1",
    "SELECT srcapt FROM flights GROUP BY srcapt ORDER BY COUNT(*) DESC LIMIT 1",
    "SELECT srcapt FROM flights GROUP BY srcapt ORDER BY COUNT(*) DESC LIMIT 1",
    "SELECT srcapt FROM flights GROUP BY srcapt ORDER BY COUNT(*) ASC LIMIT 1",
    "SELECT srcapt FROM flights GROUP BY srcapt ORDER BY COUNT(*) ASC LIMIT 1",
    "SELECT air FROM flights GROUP BY air ORDER BY COUNT(*) DESC LIMIT 1;",
    "SELECT air FROM flights GROUP BY air ORDER BY COUNT(*) DESC LIMIT 1;",
    "SELECT abbr, cntry FROM airlines WHERE uid = (SELECT air FROM flights GROUP BY air ORDER BY COUNT(*) ASC LIMIT 1)",
    "SELECT abbr, cntry FROM airlines WHERE air = (SELECT air FROM flights GROUP BY air ORDER BY COUNT(*) LIMIT 1)",
    "SELECT DISTINCT airlines.air  FROM airlines  INNER JOIN flights ON airlines.air = flights.air  WHERE flights.srcapt = 'AHD'",
    "SELECT DISTINCT air FROM flights JOIN airports ON flights.srcapt = airports.airportcode WHERE airports.airportcode = 'AHD'",
    "SELECT DISTINCT airlines.air  FROM airlines  JOIN flights ON airlines.air = flights.air  WHERE flights.destapt = 'AHD'",
    "SELECT DISTINCT airlines.air  FROM airlines  JOIN flights ON airlines.air = flights.air  WHERE flights.destapt = 'AHD'",
    "SELECT DISTINCT airlines.air FROM airlines JOIN flights AS f1 ON airlines.air = f1.air JOIN flights AS f2 ON airlines.air = f2.air WHERE f1.srcapt = 'APG' AND f2.srcapt = 'CVO' AND f1.destapt <> f2.destapt",
    "SELECT DISTINCT airlines.air FROM airlines JOIN flights AS f1 ON airlines.air = f1.air JOIN flights AS f2 ON airlines.air = f2.air JOIN airports AS a1 ON f1.srcapt = a1.airportcode JOIN airports AS a2 ON f2.srcapt = a2.airportcode WHERE a1.airportcode = 'APG' AND a2.airportcode = 'CVO'",
    "SELECT DISTINCT airlines.air FROM airlines JOIN flights ON airlines.air = flights.air WHERE flights.srcapt = 'CVO' AND airlines.air NOT IN (     SELECT DISTINCT airlines.air     FROM airlines     JOIN flights ON airlines.air = flights.air     WHERE flights.srcapt = 'APG' )",
    "SELECT DISTINCT airlines.air FROM airlines JOIN flights ON airlines.air = flights.air WHERE flights.srcapt = 'CVO' AND flights.air NOT IN (     SELECT DISTINCT airlines.air     FROM airlines     JOIN flights ON airlines.air = flights.air     WHERE flights.srcapt = 'APG' )",
    "SELECT air FROM airlines INNER JOIN flights ON airlines.air = flights.air GROUP BY air HAVING COUNT(*) >= 10",
    "SELECT air FROM flights GROUP BY air HAVING COUNT(*) >= 10",
    "SELECT air FROM airlines WHERE air IN (SELECT air FROM flights GROUP BY air HAVING COUNT(*) < 200)",
    "SELECT air FROM airlines WHERE uid IN (SELECT air FROM flights GROUP BY air HAVING COUNT(*) < 200)",
    "SELECT flightno FROM flights WHERE air = 'United Airlines'",
    "SELECT flightno FROM flights WHERE air = 'United Airlines'",
    "SELECT flightno FROM flights WHERE srcapt = 'APG'",
    "SELECT flightno FROM flights WHERE srcapt = 'APG'",
    "SELECT flightno FROM flights WHERE destapt = 'APG'",
    "SELECT flightno FROM flights WHERE destapt = 'APG'",
    "SELECT flightno FROM flights JOIN airports ON flights.srcapt = airports.airportcode WHERE airports.city = 'Aberdeen'",
    "SELECT flightno FROM flights JOIN airports ON flights.srcapt = airports.airportcode WHERE airports.city = 'Aberdeen'",
    "SELECT flightno FROM flights JOIN airports ON flights.destapt = airports.airportcode WHERE airports.city = 'Aberdeen'",
    "SELECT flightno FROM flights JOIN airports ON flights.destapt = airports.airportcode WHERE airports.city = 'Aberdeen'",
    "SELECT COUNT(*) FROM flights JOIN airports ON flights.destapt = airports.airportcode WHERE airports.city = 'Aberdeen' OR airports.city = 'Abilene'",
    "SELECT COUNT(*) FROM flights WHERE destapt = 'Aberdeen' OR destapt = 'Abilene'",
    "SELECT apt_name FROM airports WHERE airportcode NOT IN (SELECT srcapt FROM flights UNION SELECT destapt FROM flights)",
    "SELECT airportcode FROM airports WHERE airportcode NOT IN (SELECT srcapt FROM flights UNION SELECT destapt FROM flights)",
    "SELECT loc, COUNT(*) AS num_shops FROM shop GROUP BY loc",
    "SELECT loc, COUNT(*) AS num_shops FROM shop GROUP BY loc",
    "SELECT mgr_name, dist FROM shop WHERE num_prod = (SELECT MAX(num_prod) FROM shop)",
    "SELECT mgr_name, dist FROM shop WHERE num_prod = (SELECT MAX(num_prod) FROM shop)",
    "SELECT MIN(num_prod), MAX(num_prod) FROM shop",
    "SELECT MIN(num_prod), MAX(num_prod) FROM shop",
    "SELECT name, loc, dist FROM shop ORDER BY num_prod DESC",
    "SELECT name, loc, dist FROM shop ORDER BY num_prod DESC",
    "SELECT name FROM shop WHERE num_prod > (SELECT AVG(num_prod) FROM shop)",
    "SELECT name FROM shop WHERE num_prod > (SELECT AVG(num_prod) FROM shop)",
    "SELECT employee.name FROM employee JOIN evaluation ON employee.ee_id = evaluation.employee_id GROUP BY employee.ee_id ORDER BY COUNT(*) DESC LIMIT 1",
    "SELECT employee.name FROM employee JOIN evaluation ON employee.ee_id = evaluation.employee_id GROUP BY employee.ee_id ORDER BY COUNT(*) DESC LIMIT 1",
    "SELECT employee.name FROM employee JOIN evaluation ON employee.ee_id = evaluation.employee_id ORDER BY evaluation.bonus DESC LIMIT 1",
    "SELECT employee.name FROM employee JOIN evaluation ON employee.ee_id = evaluation.employee_id ORDER BY evaluation.bonus DESC LIMIT 1",
    "SELECT name FROM employee WHERE ee_id NOT IN (SELECT employee_id FROM evaluation)",
    "SELECT name FROM employee WHERE ee_id NOT IN (SELECT employee_id FROM evaluation)",
    "SELECT DISTINCT dist FROM shop WHERE num_prod < 3000 AND dist IN (SELECT dist FROM shop WHERE num_prod > 10000)",
    "SELECT DISTINCT s1.dist FROM shop s1, shop s2 WHERE s1.dist = s2.dist AND s1.num_prod < 3000 AND s2.num_prod > 10000",
    "SELECT COUNT(DISTINCT loc) FROM shop",
    "SELECT COUNT(DISTINCT loc) FROM shop",
    "SELECT loc, COUNT(*) AS num_shops FROM shop GROUP BY loc",
    "SELECT loc, COUNT(*) AS num_shops FROM shop GROUP BY loc",
    "SELECT manager_name, district FROM shop WHERE num_prod = (SELECT MAX(num_prod) FROM shop)",
    "SELECT manager_name, district FROM shop WHERE num_prod = (SELECT MAX(num_prod) FROM shop)",
    "SELECT MIN(num_prod), MAX(num_prod) FROM shop",
    "SELECT MIN(num_prod), MAX(num_prod) FROM shop",
    "SELECT name, loc, district FROM shop ORDER BY num_prod DESC",
    "SELECT name, loc, district FROM shop ORDER BY num_prod DESC",
    "SELECT name FROM shop WHERE num_prod > (SELECT AVG(num_prod) FROM shop)",
    "SELECT name FROM shop WHERE num_prod > (SELECT AVG(num_prod) FROM shop)",
    "SELECT employee.name  FROM employee  JOIN evaluation ON employee.employee_id = evaluation.ee_id  GROUP BY evaluation.ee_id  ORDER BY COUNT(*) DESC  LIMIT 1",
    "SELECT employee.name FROM employee JOIN (SELECT ee_id, COUNT(*) as award_count FROM evaluation GROUP BY ee_id ORDER BY award_count DESC LIMIT 1) AS award_counts ON employee.employee_id = award_counts.ee_id",
    "SELECT employee.name FROM employee JOIN evaluation ON employee.employee_id = evaluation.ee_id ORDER BY evaluation.bonus DESC LIMIT 1",
    "SELECT employee.name FROM employee JOIN evaluation ON employee.employee_id = evaluation.ee_id ORDER BY evaluation.bonus DESC LIMIT 1",
    "SELECT employee.name FROM employee WHERE employee.employee_id NOT IN (SELECT evaluation.ee_id FROM evaluation)",
    "SELECT name FROM employee WHERE employee_id NOT IN (SELECT ee_id FROM evaluation)",
    "SELECT DISTINCT district FROM shop WHERE num_prod < 3000 AND district IN (SELECT district FROM shop WHERE num_prod > 10000)",
    "SELECT DISTINCT district FROM shop WHERE num_prod < 3000 AND district IN (SELECT district FROM shop WHERE num_prod > 10000)",
    "SELECT COUNT(DISTINCT loc) FROM shop",
    "SELECT COUNT(DISTINCT loc) FROM shop",
    "SELECT manager_name, dist FROM shop WHERE number_products = (SELECT MAX(number_products) FROM shop)",
    "SELECT manager_name, dist FROM shop WHERE number_products = (SELECT MAX(number_products) FROM shop)",
    "SELECT name, location, dist FROM shop ORDER BY number_products DESC",
    "SELECT name, location, dist FROM shop ORDER BY number_products DESC",
    "SELECT employee.name FROM employee JOIN evaluation ON employee.ee_id = evaluation.employee_id GROUP BY employee.ee_id ORDER BY COUNT(*) DESC LIMIT 1",
    "SELECT employee.name FROM employee JOIN (SELECT employee_id, COUNT(*) as num_awards FROM evaluation GROUP BY employee_id ORDER BY num_awards DESC LIMIT 1) as max_awards ON employee.ee_id = max_awards.employee_id",
    "SELECT employee.name FROM employee JOIN evaluation ON employee.ee_id = evaluation.employee_id ORDER BY evaluation.bonus DESC LIMIT 1",
    "SELECT employee.name FROM employee JOIN evaluation ON employee.ee_id = evaluation.employee_id ORDER BY evaluation.bonus DESC LIMIT 1",
    "SELECT name FROM employee WHERE ee_id NOT IN (SELECT employee_id FROM evaluation)",
    "SELECT name FROM employee WHERE ee_id NOT IN (SELECT employee_id FROM evaluation)",
    "SELECT DISTINCT s1.dist FROM shop s1, shop s2 WHERE s1.dist = s2.dist AND s1.number_products < 3000 AND s2.number_products > 10000",
    "SELECT DISTINCT s.dist FROM shop s WHERE s.number_products < 3000 AND s.dist IN (SELECT s2.dist FROM shop s2 WHERE s2.number_products > 10000)",
    "SELECT loc, COUNT(*) AS num_shops FROM shop GROUP BY loc",
    "SELECT loc, COUNT(*) AS num_shops FROM shop GROUP BY loc",
    "SELECT name, loc, district FROM shop ORDER BY number_products DESC",
    "SELECT name, loc, district FROM shop ORDER BY number_products DESC",
    "SELECT COUNT(DISTINCT loc) FROM shop",
    "SELECT COUNT(DISTINCT loc) FROM shop",
    "SELECT COUNT(*) FROM documents WHERE template_id IN (SELECT tpl_id FROM templates WHERE template_type_code = 'PPT')",
    "SELECT COUNT(*) FROM documents d JOIN templates t ON d.template_id = t.tpl_id WHERE t.template_type_code = 'PPT'",
    "SELECT tpl_id, template_type_code  FROM templates  WHERE tpl_id = (SELECT template_id                  FROM documents                  GROUP BY template_id                  ORDER BY COUNT(*) DESC                  LIMIT 1)",
    "SELECT templates.tpl_id, templates.template_type_code FROM templates JOIN documents ON templates.tpl_id = documents.template_id GROUP BY templates.tpl_id, templates.template_type_code ORDER BY COUNT(*) DESC LIMIT 1;",
    "SELECT tpl_id FROM templates WHERE tpl_id NOT IN (SELECT template_id FROM documents)",
    "SELECT tpl_id FROM templates WHERE tpl_id NOT IN (SELECT template_id FROM documents)",
    "SELECT tpl_id, ver_no, template_type_code FROM templates",
    "SELECT tpl_id, ver_no, template_type_code FROM templates",
    "SELECT tpl_id FROM templates WHERE template_type_code IN ('PP', 'PPT')",
    "SELECT tpl_id FROM templates WHERE template_type_code IN ('PP', 'PPT')",
    "SELECT ver_no, template_type_code FROM templates WHERE ver_no > 5",
    "SELECT ver_no, template_type_code FROM templates WHERE ver_no > 5",
    "SELECT MIN(ver_no), template_type_code FROM templates",
    "SELECT template_type_code, MIN(ver_no) AS lowest_version_number FROM templates GROUP BY template_type_code",
    "SELECT templates.template_type_code  FROM templates  JOIN documents ON templates.tpl_id = documents.template_id  WHERE documents.document_name = 'Data base'",
    "SELECT templates.template_type_code  FROM templates  JOIN documents ON templates.tpl_id = documents.template_id  WHERE documents.document_name = 'Data base'",
    "SELECT document_name FROM documents JOIN templates ON documents.template_id = templates.tpl_id WHERE templates.template_type_code = 'BK'",
    "SELECT documents.document_name  FROM documents  JOIN templates ON documents.template_id = templates.tpl_id  WHERE templates.template_type_code = 'BK'",
    "SELECT ref_template_types.template_type_code, COUNT(documents.document_id) AS num_documents FROM ref_template_types LEFT JOIN templates ON ref_template_types.template_type_code = templates.template_type_code LEFT JOIN documents ON templates.tpl_id = documents.template_id GROUP BY ref_template_types.template_type_code",
    "SELECT ref_template_types.template_type_code, COUNT(documents.document_id) AS num_documents FROM ref_template_types JOIN templates ON ref_template_types.template_type_code = templates.template_type_code JOIN documents ON templates.tpl_id = documents.template_id GROUP BY ref_template_types.template_type_code",
    "SELECT template_type_code, COUNT(*) AS num_docs FROM templates GROUP BY template_type_code ORDER BY num_docs DESC LIMIT 1;",
    "SELECT template_type_code FROM templates GROUP BY template_type_code ORDER BY COUNT(*) DESC LIMIT 1;",
    "SELECT template_type_code  FROM ref_template_types  WHERE template_type_code NOT IN      (SELECT template_type_code       FROM templates)",
    "SELECT template_type_code FROM ref_template_types WHERE template_type_code NOT IN (SELECT template_type_code FROM templates)",
    "SELECT DISTINCT ref_template_types.template_type_description  FROM ref_template_types  JOIN templates ON ref_template_types.template_type_code = templates.template_type_code  JOIN documents ON templates.tpl_id = documents.template_id",
    "SELECT DISTINCT ref_template_types.template_type_description  FROM templates  JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code  JOIN documents ON templates.tpl_id = documents.template_id",
    "SELECT tpl_id FROM templates WHERE template_type_code = (SELECT template_type_code FROM ref_template_types WHERE template_type_description = 'Presentation')",
    "SELECT tpl_id FROM templates WHERE template_type_code = (SELECT template_type_code FROM ref_template_types WHERE template_type_description = 'Presentation')",
    "SELECT COUNT(*) FROM paragraphs WHERE doc_id = (SELECT document_id FROM documents WHERE document_name = 'Summer Show')",
    "SELECT COUNT(*) FROM paragraphs WHERE doc_id = (SELECT document_id FROM documents WHERE document_name = 'Summer Show')",
    "SELECT * FROM paragraphs WHERE paragraph_text = 'Korea'",
    "SELECT * FROM paragraphs WHERE paragraph_text LIKE '%Korea%'",
    "SELECT paragraph_id, paragraph_text FROM paragraphs JOIN documents ON paragraphs.doc_id = documents.document_id JOIN templates ON documents.template_id = templates.tpl_id WHERE documents.document_name = 'Welcome to NY'",
    "SELECT paragraph_id, paragraph_text FROM paragraphs JOIN documents ON paragraphs.doc_id = documents.document_id JOIN templates ON documents.template_id = templates.tpl_id WHERE documents.document_name = 'Welcome to NY'",
    "SELECT paragraph_text FROM paragraphs WHERE doc_id = (SELECT document_id FROM documents WHERE document_name = 'Customer reviews')",
    "SELECT paragraph_text FROM paragraphs JOIN documents ON paragraphs.doc_id = documents.document_id WHERE documents.document_name = 'Customer reviews'",
    "SELECT doc.document_id, COUNT(par.paragraph_id) AS num_paragraphs FROM documents AS doc LEFT JOIN paragraphs AS par ON doc.document_id = par.doc_id GROUP BY doc.document_id ORDER BY doc.document_id ASC",
    "SELECT doc_id, COUNT(*) AS num_paragraphs FROM paragraphs GROUP BY doc_id ORDER BY doc_id ASC",
    "SELECT documents.document_id, documents.document_name, COUNT(paragraphs.paragraph_id) AS num_paragraphs FROM documents JOIN paragraphs ON documents.document_id = paragraphs.doc_id GROUP BY documents.document_id, documents.document_name",
    "SELECT documents.document_id, documents.document_name, COUNT(paragraphs.paragraph_id) AS num_paragraphs FROM documents JOIN paragraphs ON documents.document_id = paragraphs.doc_id GROUP BY documents.document_id, documents.document_name",
    "SELECT DISTINCT doc_id FROM paragraphs GROUP BY doc_id HAVING COUNT(*) >= 2",
    "SELECT doc_id FROM paragraphs GROUP BY doc_id HAVING COUNT(*) >= 2",
    "SELECT document_id, document_name FROM documents WHERE document_id = (     SELECT doc_id     FROM paragraphs     GROUP BY doc_id     ORDER BY COUNT(*) DESC     LIMIT 1 )",
    "SELECT document_id, document_name  FROM documents  WHERE document_id = (SELECT doc_id                       FROM paragraphs                       GROUP BY doc_id                       ORDER BY COUNT(*) DESC                       LIMIT 1)",
    "SELECT document_id FROM paragraphs GROUP BY document_id ORDER BY COUNT(*) ASC LIMIT 1",
    "SELECT document_id FROM documents WHERE document_id IN (SELECT doc_id FROM paragraphs GROUP BY doc_id HAVING COUNT(*) = (SELECT MIN(cnt) FROM (SELECT COUNT(*) AS cnt FROM paragraphs GROUP BY doc_id) AS counts))",
    "SELECT document_id FROM documents WHERE document_id IN (SELECT doc_id FROM paragraphs GROUP BY doc_id HAVING COUNT(*) BETWEEN 1 AND 2)",
    "SELECT DISTINCT documents.document_id FROM documents JOIN paragraphs ON documents.document_id = paragraphs.doc_id GROUP BY documents.document_id HAVING COUNT(DISTINCT paragraphs.paragraph_id) BETWEEN 1 AND 2",
    "SELECT document_id  FROM paragraphs  WHERE paragraph_text = 'Brazil' AND doc_id IN      (SELECT doc_id FROM paragraphs WHERE paragraph_text = 'Ireland')",
    "SELECT DISTINCT doc_id FROM paragraphs WHERE paragraph_text LIKE '%Brazil%' AND doc_id IN (SELECT doc_id FROM paragraphs WHERE paragraph_text LIKE '%Ireland%')",
    "SELECT doc_id, doc_name, document_description FROM documents",
    "SELECT doc_id, doc_name, document_description FROM documents",
    "SELECT doc_name, template_id FROM documents JOIN templates ON documents.tpl_id = templates.template_id WHERE document_description LIKE '%w%'",
    "SELECT documents.doc_name, documents.tpl_id FROM documents JOIN templates ON documents.tpl_id = templates.template_id WHERE documents.document_description LIKE '%w%'",
    "SELECT doc_id, tpl_id, document_description FROM documents WHERE doc_name = 'Robbin CV'",
    "SELECT doc_id, tpl_id, document_description FROM documents WHERE doc_name = 'Robbin CV'",
    "SELECT COUNT(DISTINCT template_type_code) FROM templates",
    "SELECT COUNT(DISTINCT template_type_code) FROM templates",
    "SELECT COUNT(*) FROM documents WHERE tpl_id IN (SELECT template_id FROM templates WHERE template_type_code = 'PPT')",
    "SELECT COUNT(*) FROM documents d JOIN templates t ON d.tpl_id = t.template_id WHERE t.template_type_code = 'PPT'",
    "SELECT templates.template_id, COUNT(documents.doc_id) AS num_documents FROM templates LEFT JOIN documents ON templates.template_id = documents.tpl_id GROUP BY templates.template_id",
    "SELECT templates.template_id, COUNT(documents.doc_id) AS usage_count FROM templates JOIN documents ON templates.template_id = documents.tpl_id GROUP BY templates.template_id",
    "SELECT templates.template_id, templates.template_type_code FROM templates JOIN documents ON templates.template_id = documents.tpl_id GROUP BY templates.template_id, templates.template_type_code ORDER BY COUNT(*) DESC LIMIT 1;",
    "SELECT tpl_id, template_type_code FROM documents JOIN templates ON documents.tpl_id = templates.template_id GROUP BY tpl_id ORDER BY COUNT(*) DESC LIMIT 1;",
    "SELECT tpl_id FROM documents GROUP BY tpl_id HAVING COUNT(DISTINCT doc_id) > 1",
    "SELECT tpl_id FROM documents GROUP BY tpl_id HAVING COUNT(*) > 1",
    "SELECT template_id FROM templates WHERE template_id NOT IN (SELECT tpl_id FROM documents)",
    "SELECT template_id FROM templates WHERE template_id NOT IN (SELECT tpl_id FROM documents)",
    "SELECT templates.template_type_code  FROM templates  JOIN documents ON templates.template_id = documents.tpl_id  WHERE documents.doc_name = 'Data base'",
    "SELECT templates.template_type_code  FROM templates  JOIN documents ON templates.template_id = documents.tpl_id  WHERE documents.doc_name = 'Data base'",
    "SELECT doc_name FROM documents d JOIN templates t ON d.tpl_id = t.template_id WHERE t.template_type_code = 'BK'",
    "SELECT documents.doc_name  FROM documents  JOIN templates ON documents.tpl_id = templates.template_id  WHERE templates.template_type_code = 'BK'",
    "SELECT ref_template_types.tpl_type_code, COUNT(documents.doc_id) AS num_documents FROM ref_template_types LEFT JOIN templates ON ref_template_types.tpl_type_code = templates.template_type_code LEFT JOIN documents ON templates.template_id = documents.tpl_id GROUP BY ref_template_types.tpl_type_code",
    "SELECT ref_template_types.tpl_type_code, COUNT(documents.doc_id) AS num_documents FROM ref_template_types JOIN templates ON ref_template_types.tpl_type_code = templates.template_type_code JOIN documents ON templates.template_id = documents.tpl_id GROUP BY ref_template_types.tpl_type_code",
    "SELECT template_type_code FROM templates GROUP BY template_type_code ORDER BY COUNT(*) DESC LIMIT 1;",
    "SELECT template_type_code FROM templates GROUP BY template_type_code ORDER BY COUNT(*) DESC LIMIT 1;",
    "SELECT tpl_type_code  FROM ref_template_types  WHERE tpl_type_code NOT IN (SELECT template_type_code FROM templates)",
    "SELECT tpl_type_code FROM ref_template_types WHERE tpl_type_code NOT IN (SELECT template_type_code FROM templates)",
    "SELECT tpl_type_code, template_type_description FROM ref_template_types",
    "SELECT tpl_type_code, template_type_description FROM ref_template_types",
    "SELECT template_type_description FROM ref_template_types WHERE tpl_type_code = 'AD'",
    "SELECT template_type_description FROM ref_template_types WHERE tpl_type_code = 'AD'",
    "SELECT tpl_type_code FROM ref_template_types WHERE template_type_description = 'Book'",
    "SELECT tpl_type_code FROM ref_template_types WHERE template_type_description = 'Book'",
    "SELECT DISTINCT template_type_description FROM ref_template_types WHERE tpl_type_code IN (SELECT template_type_code FROM templates WHERE template_id IN (SELECT tpl_id FROM documents))",
    "SELECT DISTINCT template_type_description FROM ref_template_types JOIN templates ON ref_template_types.tpl_type_code = templates.template_type_code JOIN documents ON templates.template_id = documents.tpl_id",
    "SELECT template_id FROM templates WHERE template_type_code = (SELECT tpl_type_code FROM ref_template_types WHERE template_type_description = 'Presentation')",
    "SELECT template_id FROM templates WHERE template_type_code = (SELECT tpl_type_code FROM ref_template_types WHERE template_type_description = 'Presentation')",
    "SELECT COUNT(*) FROM paragraphs WHERE doc_id = (SELECT doc_id FROM documents WHERE doc_name = 'Summer Show')",
    "SELECT COUNT(*) FROM paragraphs WHERE doc_id = (SELECT doc_id FROM documents WHERE doc_name = 'Summer Show')",
    "SELECT * FROM paragraphs WHERE para_txt LIKE '%Korea%'",
    "SELECT * FROM paragraphs WHERE para_txt LIKE '%Korea%'",
    "SELECT para_id, para_txt FROM paragraphs p JOIN documents d ON p.doc_id = d.doc_id JOIN templates t ON d.tpl_id = t.template_id WHERE d.doc_name = 'Welcome to NY'",
    "SELECT para_id, para_txt FROM paragraphs JOIN documents ON paragraphs.doc_id = documents.doc_id WHERE documents.doc_name = 'Welcome to NY'",
    "SELECT para_txt FROM paragraphs WHERE doc_id = (SELECT doc_id FROM documents WHERE doc_name = 'Customer reviews')",
    "SELECT para_txt FROM paragraphs JOIN documents ON paragraphs.doc_id = documents.doc_id WHERE documents.doc_name = 'Customer reviews'",
    "SELECT doc_id, COUNT(*) AS num_paragraphs FROM paragraphs GROUP BY doc_id ORDER BY doc_id ASC",
    "SELECT doc_id, COUNT(*) AS num_paragraphs FROM paragraphs GROUP BY doc_id ORDER BY doc_id ASC",
    "SELECT documents.doc_id, documents.doc_name, COUNT(paragraphs.para_id) AS num_paragraphs FROM documents JOIN paragraphs ON documents.doc_id = paragraphs.doc_id GROUP BY documents.doc_id, documents.doc_name",
    "SELECT documents.doc_id, documents.doc_name, COUNT(paragraphs.para_id) AS num_paragraphs FROM documents JOIN paragraphs ON documents.doc_id = paragraphs.doc_id GROUP BY documents.doc_id, documents.doc_name",
    "SELECT DISTINCT doc_id FROM paragraphs GROUP BY doc_id HAVING COUNT(*) >= 2",
    "SELECT doc_id FROM paragraphs GROUP BY doc_id HAVING COUNT(*) >= 2",
    "SELECT doc_id, doc_name FROM documents WHERE doc_id = (     SELECT doc_id     FROM paragraphs     GROUP BY doc_id     ORDER BY COUNT(*) DESC     LIMIT 1 )",
    "SELECT doc_id, doc_name  FROM documents  WHERE doc_id = (SELECT doc_id                  FROM paragraphs                  GROUP BY doc_id                  ORDER BY COUNT(*) DESC                  LIMIT 1)",
    "SELECT doc_id FROM paragraphs GROUP BY doc_id ORDER BY COUNT(*) ASC LIMIT 1",
    "SELECT doc_id FROM paragraphs GROUP BY doc_id ORDER BY COUNT(*) ASC LIMIT 1",
    "SELECT doc_id FROM documents WHERE doc_id IN (SELECT doc_id FROM paragraphs GROUP BY doc_id HAVING COUNT(*) BETWEEN 1 AND 2)",
    "SELECT doc_id FROM documents WHERE doc_id IN (SELECT doc_id FROM paragraphs GROUP BY doc_id HAVING COUNT(*) BETWEEN 1 AND 2)",
    "SELECT doc_id FROM paragraphs WHERE para_txt LIKE '%Brazil%' AND doc_id IN (SELECT doc_id FROM paragraphs WHERE para_txt LIKE '%Ireland%')",
    "SELECT DISTINCT doc_id FROM paragraphs WHERE para_txt LIKE '%Brazil%' AND doc_id IN (SELECT doc_id FROM paragraphs WHERE para_txt LIKE '%Ireland%')",
    "SELECT doc_id, doc_name, doc_desc FROM documents",
    "SELECT doc_id, doc_name, doc_desc FROM documents",
    "SELECT doc_name, tpl_id FROM documents WHERE doc_desc LIKE '%w%'",
    "SELECT doc_name, tpl_id FROM documents WHERE doc_desc LIKE '%w%'",
    "SELECT doc_id, tpl_id, doc_desc FROM documents WHERE doc_name = 'Robbin CV'",
    "SELECT doc_id, tpl_id, doc_desc FROM documents WHERE doc_name = 'Robbin CV'",
    "SELECT COUNT(DISTINCT tpl_tpye_code) FROM templates",
    "SELECT COUNT(DISTINCT tpl_tpye_code) FROM templates",
    "SELECT COUNT(*) FROM documents WHERE tpl_id IN (SELECT template_id FROM templates WHERE tpl_tpye_code = 'PPT')",
    "SELECT COUNT(*) FROM documents d JOIN templates t ON d.tpl_id = t.template_id WHERE t.tpl_tpye_code = 'PPT'",
    "SELECT templates.template_id, COUNT(documents.doc_id) AS num_documents FROM templates JOIN documents ON templates.template_id = documents.tpl_id GROUP BY templates.template_id",
    "SELECT tpl_id, COUNT(*) as usage_count FROM documents GROUP BY tpl_id",
    "SELECT templates.template_id, templates.tpl_type_code FROM templates GROUP BY templates.tpl_type_code ORDER BY COUNT(documents.doc_id) DESC LIMIT 1;",
    "SELECT tpl_id, tpl_tpye_code FROM documents GROUP BY tpl_id ORDER BY COUNT(*) DESC LIMIT 1;",
    "SELECT tpl_id FROM documents GROUP BY tpl_id HAVING COUNT(DISTINCT doc_id) > 1",
    "SELECT tpl_id FROM documents GROUP BY tpl_id HAVING COUNT(*) > 1",
    "SELECT template_id FROM templates WHERE template_id NOT IN (SELECT tpl_id FROM documents)",
    "SELECT template_id FROM templates WHERE template_id NOT IN (SELECT tpl_id FROM documents)",
    "SELECT template_id, ver_no, tpl_tpye_code FROM templates",
    "SELECT template_id, ver_no, tpl_tpye_code FROM templates",
    "SELECT DISTINCT tpl_type_code FROM templates",
    "SELECT tpl_type_code FROM ref_template_types",
    "SELECT template_id FROM templates WHERE tpl_tpye_code IN ('PP', 'PPT')",
    "SELECT template_id FROM templates WHERE tpl_tpye_code IN ('PP', 'PPT')",
    "SELECT COUNT(*) FROM templates WHERE tpl_tpye_code = 'CV'",
    "SELECT COUNT(*) FROM templates WHERE tpl_tpye_code = 'CV'",
    "SELECT ver_no, tpl_tpye_code FROM templates WHERE ver_no > 5",
    "SELECT ver_no, tpl_tpye_code FROM templates WHERE ver_no > 5",
    "SELECT tpl_type_code, COUNT(*) AS num_templates FROM ref_template_types JOIN templates ON ref_template_types.tpl_type_code = templates.tpl_tpye_code GROUP BY tpl_type_code",
    "SELECT tpl_type_code, COUNT(*) AS num_templates FROM ref_template_types JOIN templates ON ref_template_types.tpl_type_code = templates.tpl_tpye_code GROUP BY tpl_type_code",
    "SELECT tpl_type_code, COUNT(*) AS num_templates FROM templates GROUP BY tpl_type_code ORDER BY num_templates DESC LIMIT 1;",
    "SELECT tpl_type_code FROM templates GROUP BY tpl_type_code ORDER BY COUNT(*) DESC LIMIT 1;",
    "SELECT tpl_type_code FROM ref_template_types  WHERE tpl_type_code IN (SELECT tpl_tpye_code FROM templates GROUP BY tpl_tpye_code HAVING COUNT(*) < 3)",
    "SELECT tpl_type_code FROM ref_template_types WHERE tpl_type_code IN (SELECT tpl_tpye_code FROM templates GROUP BY tpl_tpye_code HAVING COUNT(*) < 3)",
    "SELECT tpl_type_code, MIN(ver_no) FROM templates GROUP BY tpl_type_code",
    "SELECT tpl_type_code, MIN(ver_no) AS lowest_version_number FROM templates GROUP BY tpl_type_code",
    "SELECT t.tpl_tpye_code  FROM templates t  JOIN documents d ON t.template_id = d.tpl_id  WHERE d.doc_name = 'Data base'",
    "SELECT tpl_tpye_code FROM templates JOIN documents ON templates.template_id = documents.tpl_id WHERE documents.doc_name = 'Data base'",
    "SELECT doc_name FROM documents JOIN templates ON documents.tpl_id = templates.template_id WHERE templates.tpl_tpye_code = 'BK'",
    "SELECT DISTINCT documents.doc_name  FROM documents  JOIN templates ON documents.tpl_id = templates.template_id  WHERE templates.tpl_tpye_code = 'BK'",
    "SELECT ref_template_types.tpl_type_code, COUNT(documents.doc_id) AS num_documents FROM ref_template_types LEFT JOIN templates ON ref_template_types.tpl_type_code = templates.tpl_tpye_code LEFT JOIN documents ON templates.template_id = documents.tpl_id GROUP BY ref_template_types.tpl_type_code",
    "SELECT ref_template_types.tpl_type_code, COUNT(documents.doc_id) AS num_documents FROM ref_template_types JOIN templates ON ref_template_types.tpl_type_code = templates.tpl_tpye_code JOIN documents ON templates.template_id = documents.tpl_id GROUP BY ref_template_types.tpl_type_code",
    "SELECT tpl_type_code FROM ref_template_types WHERE tpl_type_code = (     SELECT tpl_tpye_code     FROM templates     GROUP BY tpl_tpye_code     ORDER BY COUNT(*) DESC     LIMIT 1 )",
    "SELECT tpl_tpye_code FROM templates GROUP BY tpl_tpye_code ORDER BY COUNT(*) DESC LIMIT 1;",
    "SELECT tpl_type_code  FROM ref_template_types  WHERE tpl_type_code NOT IN (SELECT tpl_tpye_code FROM templates)",
    "SELECT tpl_type_code FROM ref_template_types WHERE tpl_type_code NOT IN (SELECT tpl_tpye_code FROM templates)",
    "SELECT tpl_type_code, template_type_description FROM ref_template_types",
    "SELECT tpl_type_code, template_type_description FROM ref_template_types",
    "SELECT template_type_description FROM ref_template_types WHERE tpl_type_code = 'AD'",
    "SELECT template_type_description FROM ref_template_types WHERE tpl_type_code = 'AD'",
    "SELECT tpl_type_code FROM ref_template_types WHERE template_type_description = 'Book'",
    "SELECT tpl_type_code FROM ref_template_types WHERE template_type_description = 'Book'",
    "SELECT DISTINCT template_type_description FROM ref_template_types WHERE tpl_type_code IN (SELECT tpl_tpye_code FROM templates WHERE template_id IN (SELECT tpl_id FROM documents))",
    "SELECT DISTINCT ref_template_types.template_type_description  FROM ref_template_types  JOIN templates ON ref_template_types.tpl_type_code = templates.tpl_tpye_code  JOIN documents ON templates.template_id = documents.tpl_id",
    "SELECT template_id FROM templates WHERE tpl_tpye_code = (SELECT tpl_type_code FROM ref_template_types WHERE template_type_description = 'Presentation')",
    "SELECT template_id FROM templates WHERE tpl_tpye_code = (SELECT tpl_type_code FROM ref_template_types WHERE template_type_description = 'Presentation')",
    "SELECT COUNT(*) FROM paragraphs WHERE doc_id = (SELECT doc_id FROM documents WHERE doc_name = 'Summer Show')",
    "SELECT COUNT(*) FROM paragraphs WHERE doc_id = (SELECT doc_id FROM documents WHERE doc_name = 'Summer Show')",
    "SELECT para_id, paragraph_text FROM paragraphs JOIN documents ON paragraphs.doc_id = documents.doc_id WHERE documents.doc_name = 'Welcome to NY'",
    "SELECT para_id, paragraph_text FROM paragraphs JOIN documents ON paragraphs.doc_id = documents.doc_id WHERE documents.doc_name = 'Welcome to NY'",
    "SELECT paragraph_text FROM paragraphs WHERE doc_id = (SELECT doc_id FROM documents WHERE doc_name = 'Customer reviews')",
    "SELECT paragraph_text FROM paragraphs WHERE doc_id = (SELECT doc_id FROM documents WHERE doc_name = 'Customer reviews')",
    "SELECT doc_id, COUNT(*) AS num_paragraphs FROM paragraphs GROUP BY doc_id ORDER BY doc_id ASC",
    "SELECT doc_id, COUNT(*) AS num_paragraphs FROM paragraphs GROUP BY doc_id ORDER BY doc_id ASC",
    "SELECT documents.doc_id, documents.doc_name, COUNT(paragraphs.para_id) AS num_paragraphs FROM documents JOIN paragraphs ON documents.doc_id = paragraphs.doc_id GROUP BY documents.doc_id, documents.doc_name",
    "SELECT documents.doc_id, documents.doc_name, COUNT(paragraphs.para_id) AS num_paragraphs FROM documents JOIN paragraphs ON documents.doc_id = paragraphs.doc_id GROUP BY documents.doc_id, documents.doc_name",
    "SELECT doc_id FROM paragraphs GROUP BY doc_id HAVING COUNT(*) >= 2",
    "SELECT doc_id FROM paragraphs GROUP BY doc_id HAVING COUNT(*) >= 2",
    "SELECT doc_id, doc_name FROM documents WHERE doc_id = (     SELECT doc_id     FROM paragraphs     GROUP BY doc_id     ORDER BY COUNT(*) DESC     LIMIT 1 )",
    "SELECT doc_id, doc_name  FROM documents  WHERE doc_id = (SELECT doc_id                  FROM paragraphs                  GROUP BY doc_id                  ORDER BY COUNT(*) DESC                  LIMIT 1)",
    "SELECT doc_id FROM paragraphs GROUP BY doc_id ORDER BY COUNT(*) ASC LIMIT 1",
    "SELECT doc_id FROM paragraphs GROUP BY doc_id ORDER BY COUNT(*) ASC LIMIT 1",
    "SELECT doc_id FROM documents WHERE doc_id IN (SELECT doc_id FROM paragraphs GROUP BY doc_id HAVING COUNT(*) BETWEEN 1 AND 2)",
    "SELECT doc_id FROM documents WHERE doc_id IN (SELECT doc_id FROM paragraphs GROUP BY doc_id HAVING COUNT(*) BETWEEN 1 AND 2)",
    "SELECT doc_id FROM paragraphs WHERE paragraph_text LIKE '%Brazil%' AND doc_id IN (SELECT doc_id FROM paragraphs WHERE paragraph_text LIKE '%Ireland%')",
    "SELECT DISTINCT doc_id FROM paragraphs WHERE paragraph_text LIKE '%Brazil%' AND doc_id IN (SELECT doc_id FROM paragraphs WHERE paragraph_text LIKE '%Ireland%')",
    "SELECT doc_id, document_name, document_description FROM documents",
    "SELECT doc_id, document_name, document_description FROM documents",
    "SELECT doc_id, template_id, document_description FROM documents WHERE document_name = 'Robbin CV'",
    "SELECT doc_id, template_id, document_description FROM documents WHERE document_name = 'Robbin CV'",
    "SELECT COUNT(*) FROM paragraphs WHERE document_id = (SELECT doc_id FROM documents WHERE document_name = 'Summer Show')",
    "SELECT COUNT(*) FROM paragraphs WHERE document_id = (SELECT doc_id FROM documents WHERE document_name = 'Summer Show')",
    "SELECT paragraph_id, paragraph_text FROM paragraphs JOIN documents ON paragraphs.document_id = documents.doc_id JOIN templates ON documents.template_id = templates.template_id WHERE documents.document_name = 'Welcome to NY'",
    "SELECT paragraph_id, paragraph_text FROM paragraphs  JOIN documents ON paragraphs.document_id = documents.doc_id  JOIN templates ON documents.template_id = templates.template_id  WHERE documents.document_name = 'Welcome to NY'",
    "SELECT paragraph_text FROM paragraphs WHERE document_id = (SELECT doc_id FROM documents WHERE document_name = 'Customer reviews')",
    "SELECT paragraph_text FROM paragraphs JOIN documents ON paragraphs.document_id = documents.doc_id WHERE documents.document_name = 'Customer reviews'",
    "SELECT documents.doc_id, documents.document_name, COUNT(paragraphs.paragraph_id) AS num_paragraphs FROM documents JOIN paragraphs ON documents.doc_id = paragraphs.document_id GROUP BY documents.doc_id, documents.document_name",
    "SELECT documents.doc_id, documents.document_name, COUNT(paragraphs.paragraph_id) AS num_paragraphs FROM documents JOIN paragraphs ON documents.doc_id = paragraphs.document_id GROUP BY documents.doc_id, documents.document_name",
    "SELECT doc_id, document_name FROM documents WHERE doc_id = (     SELECT document_id     FROM paragraphs     GROUP BY document_id     ORDER BY COUNT(*) DESC     LIMIT 1 )",
    "SELECT doc_id, document_name  FROM documents  WHERE doc_id = (SELECT document_id                  FROM paragraphs                  GROUP BY document_id                  ORDER BY COUNT(*) DESC                  LIMIT 1)",
    "SELECT doc_id, doc_name, document_description FROM documents",
    "SELECT doc_id, doc_name, document_description FROM documents",
    "SELECT doc_name, template_id FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE document_description LIKE '%w%'",
    "SELECT templates.template_id, templates.tpl_tpye_code FROM templates JOIN documents ON templates.template_id = documents.template_id WHERE documents.document_description LIKE '%w%'",
    "SELECT doc_id, template_id, document_description FROM documents WHERE doc_name = 'Robbin CV'",
    "SELECT doc_id, template_id, document_description FROM documents WHERE doc_name = 'Robbin CV'",
    "SELECT COUNT(*) FROM documents WHERE template_id IN (SELECT template_id FROM templates WHERE tpl_tpye_code = 'PPT')",
    "SELECT COUNT(*) FROM documents d JOIN templates t ON d.template_id = t.template_id WHERE t.tpl_tpye_code = 'PPT'",
    "SELECT template_id, tpl_type_code FROM templates WHERE template_id = (SELECT template_id FROM documents GROUP BY template_id ORDER BY COUNT(*) DESC LIMIT 1)",
    "SELECT template_id, tpl_type_code FROM templates WHERE template_id = (     SELECT template_id     FROM documents     GROUP BY template_id     ORDER BY COUNT(*) DESC     LIMIT 1 )",
    "SELECT template_id, ver_no, tpl_tpye_code FROM templates",
    "SELECT template_id, ver_no, tpl_tpye_code FROM templates",
    "SELECT DISTINCT tpl_type_code FROM templates",
    "SELECT tpl_type_code, template_type_description FROM ref_template_types",
    "SELECT template_id FROM templates WHERE tpl_tpye_code IN ('PP', 'PPT')",
    "SELECT template_id FROM templates WHERE tpl_tpye_code IN ('PP', 'PPT')",
    "SELECT COUNT(*) FROM templates WHERE tpl_tpye_code = 'CV'",
    "SELECT COUNT(*) FROM templates WHERE tpl_tpye_code = 'CV'",
    "SELECT ver_no, tpl_tpye_code FROM templates WHERE ver_no > 5",
    "SELECT ver_no, tpl_tpye_code FROM templates WHERE ver_no > 5",
    "SELECT tpl_type_code, COUNT(*) AS num_templates FROM ref_template_types JOIN templates ON ref_template_types.tpl_type_code = templates.tpl_tpye_code GROUP BY tpl_type_code",
    "SELECT tpl_type_code, COUNT(*) AS num_templates FROM ref_template_types JOIN templates ON ref_template_types.tpl_type_code = templates.tpl_tpye_code GROUP BY tpl_type_code",
    "SELECT tpl_type_code, COUNT(*) AS num_templates FROM templates GROUP BY tpl_type_code ORDER BY num_templates DESC LIMIT 1;",
    "SELECT tpl_type_code FROM templates GROUP BY tpl_type_code ORDER BY COUNT(*) DESC LIMIT 1;",
    "SELECT tpl_type_code FROM ref_template_types  WHERE tpl_type_code IN (SELECT tpl_tpye_code FROM templates                          GROUP BY tpl_tpye_code                          HAVING COUNT(*) < 3)",
    "SELECT tpl_type_code FROM ref_template_types WHERE tpl_type_code IN (SELECT tpl_tpye_code FROM templates GROUP BY tpl_tpye_code HAVING COUNT(*) < 3)",
    "SELECT tpl_type_code, MIN(ver_no) FROM templates GROUP BY tpl_type_code",
    "SELECT tpl_type_code, MIN(ver_no) AS lowest_version_number FROM templates GROUP BY tpl_type_code",
    "SELECT templates.tpl_type_code  FROM templates  JOIN documents ON templates.template_id = documents.template_id  WHERE documents.doc_name = 'Data base'",
    "SELECT tpl_tpye_code FROM templates JOIN documents ON templates.template_id = documents.template_id WHERE documents.doc_name = 'Data base'",
    "SELECT doc_name FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE templates.tpl_tpye_code = 'BK'",
    "SELECT documents.doc_name  FROM documents  JOIN templates ON documents.template_id = templates.template_id  WHERE templates.tpl_tpye_code = 'BK'",
    "SELECT ref_template_types.tpl_type_code, COUNT(documents.doc_id) AS num_documents FROM ref_template_types JOIN templates ON ref_template_types.tpl_type_code = templates.tpl_tpye_code JOIN documents ON templates.template_id = documents.template_id GROUP BY ref_template_types.tpl_type_code",
    "SELECT tpl_type_code, COUNT(*) AS num_documents FROM templates JOIN ref_template_types ON templates.tpl_tpye_code = ref_template_types.tpl_type_code GROUP BY tpl_type_code",
    "SELECT tpl_type_code FROM templates GROUP BY tpl_type_code ORDER BY COUNT(*) DESC LIMIT 1;",
    "SELECT tpl_type_code FROM ref_template_types WHERE tpl_type_code = (     SELECT tpl_tpye_code     FROM templates     GROUP BY tpl_tpye_code     ORDER BY COUNT(*) DESC     LIMIT 1 )",
    "SELECT tpl_type_code  FROM ref_template_types  WHERE tpl_type_code NOT IN (SELECT tpl_tpye_code FROM templates)",
    "SELECT tpl_type_code  FROM ref_template_types  WHERE tpl_type_code NOT IN (SELECT tpl_tpye_code FROM templates)",
    "SELECT tpl_type_code, template_type_description FROM ref_template_types",
    "SELECT tpl_type_code, template_type_description FROM ref_template_types",
    "SELECT template_type_description FROM ref_template_types WHERE tpl_type_code = 'AD'",
    "SELECT template_type_description FROM ref_template_types WHERE tpl_type_code = 'AD'",
    "SELECT tpl_type_code FROM ref_template_types WHERE template_type_description = 'Book'",
    "SELECT tpl_type_code FROM ref_template_types WHERE template_type_description = 'Book'",
    "SELECT DISTINCT template_type_description FROM ref_template_types WHERE tpl_type_code IN (SELECT tpl_tpye_code FROM templates WHERE template_id IN (SELECT template_id FROM documents))",
    "SELECT DISTINCT ref_template_types.template_type_description  FROM templates  JOIN ref_template_types ON templates.tpl_tpye_code = ref_template_types.tpl_type_code  JOIN documents ON templates.template_id = documents.template_id",
    "SELECT template_id FROM templates WHERE tpl_tpye_code = (SELECT tpl_type_code FROM ref_template_types WHERE template_type_description = 'Presentation')",
    "SELECT template_id FROM templates WHERE tpl_tpye_code = (SELECT tpl_type_code FROM ref_template_types WHERE template_type_description = 'Presentation')",
    "SELECT COUNT(*) FROM paragraphs WHERE document_id = (SELECT doc_id FROM documents WHERE doc_name = 'Summer Show')",
    "SELECT COUNT(*) FROM paragraphs WHERE document_id = (SELECT doc_id FROM documents WHERE doc_name = 'Summer Show')",
    "SELECT * FROM paragraphs WHERE para_txt LIKE '%Korea%'",
    "SELECT * FROM paragraphs WHERE para_txt LIKE '%Korea%'",
    "SELECT para_id, para_txt FROM paragraphs JOIN documents ON paragraphs.document_id = documents.doc_id WHERE documents.doc_name = 'Welcome to NY'",
    "SELECT para_id, para_txt FROM paragraphs JOIN documents ON paragraphs.document_id = documents.doc_id JOIN templates ON documents.template_id = templates.template_id WHERE documents.doc_name = 'Welcome to NY'",
    "SELECT para_txt FROM paragraphs WHERE document_id = (SELECT doc_id FROM documents WHERE doc_name = 'Customer reviews')",
    "SELECT para_txt FROM paragraphs WHERE document_id = (SELECT doc_id FROM documents WHERE doc_name = 'Customer reviews')",
    "SELECT documents.doc_id, documents.doc_name, COUNT(paragraphs.para_id) AS num_paragraphs FROM documents JOIN paragraphs ON documents.doc_id = paragraphs.document_id GROUP BY documents.doc_id, documents.doc_name",
    "SELECT documents.doc_id, documents.doc_name, COUNT(paragraphs.para_id) AS num_paragraphs FROM documents JOIN paragraphs ON documents.doc_id = paragraphs.document_id GROUP BY documents.doc_id, documents.doc_name",
    "SELECT doc_id, doc_name FROM documents WHERE doc_id = (     SELECT document_id     FROM paragraphs     GROUP BY document_id     ORDER BY COUNT(*) DESC     LIMIT 1 )",
    "SELECT documents.doc_id, documents.doc_name FROM documents JOIN (     SELECT document_id, COUNT(*) AS num_paragraphs     FROM paragraphs     GROUP BY document_id     ORDER BY num_paragraphs DESC     LIMIT 1 ) AS max_paragraphs ON documents.doc_id = max_paragraphs.document_id",
    "SELECT document_id  FROM paragraphs  WHERE para_txt LIKE '%Brazil%' AND para_txt LIKE '%Ireland%'",
    "SELECT DISTINCT documents.doc_id  FROM documents  JOIN paragraphs ON documents.doc_id = paragraphs.document_id  WHERE paragraphs.para_txt LIKE '%Brazil%' AND paragraphs.para_txt LIKE '%Ireland%'",
    "SELECT teacher.name, course.crs FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course_arrange.crs_id = course.crs_id",
    "SELECT teacher.name, course.crs FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course_arrange.crs_id = course.crs_id",
    "SELECT teacher.name, course.crs FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course_arrange.crs_id = course.crs_id ORDER BY teacher.name ASC",
    "SELECT teacher.name, course.crs FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course_arrange.crs_id = course.crs_id ORDER BY teacher.name ASC",
    "SELECT teacher.name FROM course  JOIN course_arrange ON course.crs_id = course_arrange.crs_id  JOIN teacher ON course_arrange.teacher_id = teacher.teacher_id  WHERE course.crs = 'math'",
    "SELECT DISTINCT teacher.name FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course_arrange.crs_id = course.crs_id WHERE course.crs = 'math'",
    "SELECT teacher.name, course.crs FROM teacher JOIN course_arrange ON teacher.tchr_id = course_arrange.tchr_id JOIN course ON course_arrange.crs_id = course.crs_id",
    "SELECT teacher.name, course.crs FROM teacher JOIN course_arrange ON teacher.tchr_id = course_arrange.tchr_id JOIN course ON course_arrange.crs_id = course.crs_id",
    "SELECT teacher.name, course.crs FROM teacher JOIN course_arrange ON teacher.tchr_id = course_arrange.tchr_id JOIN course ON course_arrange.crs_id = course.crs_id ORDER BY teacher.name ASC",
    "SELECT teacher.name, course.crs FROM teacher JOIN course_arrange ON teacher.tchr_id = course_arrange.tchr_id JOIN course ON course_arrange.crs_id = course.crs_id ORDER BY teacher.name ASC",
    "SELECT teacher.name FROM course_arrange JOIN teacher ON course_arrange.tchr_id = teacher.tchr_id WHERE course_arrange.crs_id = (SELECT crs_id FROM course WHERE crs = 'math')",
    "SELECT DISTINCT teacher.name FROM teacher JOIN course_arrange ON teacher.tchr_id = course_arrange.tchr_id JOIN course ON course_arrange.crs_id = course.crs_id WHERE course.crs = 'math'",
    "SELECT teacher.name, COUNT(course_arrange.crs_id) AS num_courses_taught FROM teacher JOIN course_arrange ON teacher.tchr_id = course_arrange.tchr_id GROUP BY teacher.name",
    "SELECT teacher.name, COUNT(course_arrange.crs_id) AS num_courses_taught FROM teacher JOIN course_arrange ON teacher.tchr_id = course_arrange.tchr_id GROUP BY teacher.name",
    "SELECT DISTINCT teacher.name FROM teacher JOIN course_arrange ON teacher.tchr_id = course_arrange.tchr_id GROUP BY teacher.tchr_id HAVING COUNT(DISTINCT course_arrange.crs_id) >= 2",
    "SELECT DISTINCT teacher.name FROM teacher JOIN course_arrange ON teacher.tchr_id = course_arrange.tchr_id GROUP BY course_arrange.tchr_id HAVING COUNT(DISTINCT course_arrange.crs_id) >= 2",
    "SELECT name FROM teacher WHERE tchr_id NOT IN (SELECT tchr_id FROM course_arrange)",
    "SELECT DISTINCT teacher.name FROM teacher LEFT JOIN course_arrange ON teacher.tchr_id = course_arrange.tchr_id WHERE course_arrange.tchr_id IS NULL",
    "SELECT teacher.name, course.crs FROM teacher JOIN course_arrange ON teacher.tchr_id = course_arrange.tchr_id JOIN course ON course_arrange.crs_id = course.course_id",
    "SELECT teacher.name, course.crs FROM teacher JOIN course_arrange ON teacher.tchr_id = course_arrange.tchr_id JOIN course ON course_arrange.crs_id = course.course_id",
    "SELECT teacher.name, course.crs FROM teacher JOIN course_arrange ON teacher.tchr_id = course_arrange.tchr_id JOIN course ON course_arrange.crs_id = course.course_id ORDER BY teacher.name ASC",
    "SELECT teacher.name, course.crs FROM teacher JOIN course_arrange ON teacher.tchr_id = course_arrange.tchr_id JOIN course ON course_arrange.crs_id = course.course_id ORDER BY teacher.name ASC",
    "SELECT teacher.name FROM course  JOIN course_arrange ON course.course_id = course_arrange.crs_id  JOIN teacher ON course_arrange.tchr_id = teacher.tchr_id  WHERE course.crs = 'math'",
    "SELECT DISTINCT teacher.name FROM teacher JOIN course_arrange ON teacher.tchr_id = course_arrange.tchr_id JOIN course ON course_arrange.crs_id = course.course_id WHERE course.crs = 'math'",
    "SELECT teacher.name, COUNT(course_arrange.crs_id) AS num_courses_taught FROM teacher JOIN course_arrange ON teacher.tchr_id = course_arrange.tchr_id GROUP BY teacher.name",
    "SELECT teacher.name, COUNT(course_arrange.crs_id) AS num_courses_taught FROM teacher JOIN course_arrange ON teacher.tchr_id = course_arrange.tchr_id GROUP BY teacher.name",
    "SELECT DISTINCT teacher.name FROM teacher JOIN course_arrange ON teacher.tchr_id = course_arrange.tchr_id GROUP BY teacher.tchr_id HAVING COUNT(DISTINCT course_arrange.crs_id) >= 2",
    "SELECT DISTINCT teacher.name FROM teacher JOIN course_arrange ON teacher.tchr_id = course_arrange.tchr_id GROUP BY teacher.tchr_id HAVING COUNT(DISTINCT course_arrange.crs_id) >= 2",
    "SELECT name FROM teacher WHERE tchr_id NOT IN (SELECT tchr_id FROM course_arrange)",
    "SELECT DISTINCT teacher.name FROM teacher LEFT JOIN course_arrange ON teacher.tchr_id = course_arrange.tchr_id WHERE course_arrange.crs_id IS NULL",
    "SELECT teacher.name, course.crs FROM teacher JOIN course_arrange ON teacher.tchr_id = course_arrange.teacher_id JOIN course ON course_arrange.course_id = course.crs_id",
    "SELECT teacher.name, course.crs FROM teacher JOIN course_arrange ON teacher.tchr_id = course_arrange.teacher_id JOIN course ON course_arrange.course_id = course.crs_id",
    "SELECT teacher.name, course.crs FROM teacher JOIN course_arrange ON teacher.tchr_id = course_arrange.teacher_id JOIN course ON course_arrange.course_id = course.crs_id ORDER BY teacher.name ASC",
    "SELECT teacher.name, course.crs FROM teacher JOIN course_arrange ON teacher.tchr_id = course_arrange.teacher_id JOIN course ON course_arrange.course_id = course.crs_id ORDER BY teacher.name ASC",
    "SELECT teacher.name FROM course_arrange JOIN teacher ON course_arrange.teacher_id = teacher.tchr_id WHERE course_arrange.course_id = 'math'",
    "SELECT DISTINCT teacher.name FROM teacher JOIN course_arrange ON teacher.tchr_id = course_arrange.teacher_id JOIN course ON course_arrange.course_id = course.crs_id WHERE course.crs = 'math'",
    "SELECT teacher.name, COUNT(course_arrange.course_id) AS num_courses_taught FROM teacher JOIN course_arrange ON teacher.tchr_id = course_arrange.teacher_id GROUP BY teacher.name",
    "SELECT teacher.name, COUNT(course_arrange.course_id) AS num_courses_taught FROM teacher JOIN course_arrange ON teacher.tchr_id = course_arrange.teacher_id GROUP BY teacher.name",
    "SELECT DISTINCT t.name FROM teacher t JOIN course_arrange ca ON t.tchr_id = ca.teacher_id GROUP BY ca.teacher_id HAVING COUNT(DISTINCT ca.course_id) >= 2",
    "SELECT DISTINCT teacher.name FROM teacher JOIN course_arrange ON teacher.tchr_id = course_arrange.teacher_id GROUP BY course_arrange.teacher_id HAVING COUNT(DISTINCT course_arrange.course_id) >= 2",
    "SELECT name FROM teacher WHERE tchr_id NOT IN (SELECT teacher_id FROM course_arrange)",
    "SELECT DISTINCT teacher.name FROM teacher LEFT JOIN course_arrange ON teacher.tchr_id = course_arrange.teacher_id WHERE course_arrange.course_id IS NULL",
    "SELECT teacher.name, course.course FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.tchr_id JOIN course ON course_arrange.course_id = course.course_id",
    "SELECT teacher.name, course.course FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.tchr_id JOIN course ON course_arrange.course_id = course.course_id",
    "SELECT teacher.name, course.course FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.tchr_id JOIN course ON course_arrange.course_id = course.course_id ORDER BY teacher.name ASC",
    "SELECT teacher.name, course.course FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.tchr_id JOIN course ON course_arrange.course_id = course.course_id ORDER BY teacher.name ASC",
    "SELECT teacher.name FROM course_arrange JOIN teacher ON course_arrange.tchr_id = teacher.teacher_id WHERE course_arrange.course_id = (SELECT course_id FROM course WHERE course = 'math')",
    "SELECT DISTINCT teacher.name FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.tchr_id JOIN course ON course.course_id = course_arrange.course_id WHERE course.course = 'math'",
    "SELECT teacher.name, COUNT(course_arrange.course_id) AS num_courses_taught FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.tchr_id GROUP BY teacher.name",
    "SELECT teacher.name, COUNT(course_arrange.course_id) AS num_courses_taught FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.tchr_id GROUP BY teacher.name",
    "SELECT DISTINCT teacher.name FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.tchr_id GROUP BY course_arrange.tchr_id HAVING COUNT(DISTINCT course_arrange.course_id) >= 2",
    "SELECT DISTINCT teacher.name FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.tchr_id GROUP BY course_arrange.tchr_id HAVING COUNT(DISTINCT course_arrange.course_id) >= 2",
    "SELECT name FROM teacher WHERE teacher_id NOT IN (SELECT tchr_id FROM course_arrange)",
    "SELECT DISTINCT teacher.name FROM teacher LEFT JOIN course_arrange ON teacher.teacher_id = course_arrange.tchr_id WHERE course_arrange.course_id IS NULL",
    "SELECT name FROM visitor WHERE lvl_mem > 4 ORDER BY lvl_mem DESC",
    "SELECT AVG(age) FROM visitor WHERE lvl_mem <= 4",
    "SELECT name, lvl_mem FROM visitor WHERE lvl_mem > 4 ORDER BY age ASC",
    "SELECT museum_id, name FROM museum ORDER BY num_stf DESC LIMIT 1;",
    "SELECT AVG(num_stf) FROM museum WHERE open_year < 2009",
    "SELECT open_year, num_stf FROM museum WHERE name = 'Plaza Museum'",
    "SELECT name FROM museum WHERE num_stf > (SELECT MIN(num_stf) FROM museum WHERE open_year > 2010)",
    "SELECT visitor.id, visitor.name, visitor.lvl_mem FROM visitor JOIN visit ON visitor.id = visit.visitor_id GROUP BY visitor.id, visitor.name, visitor.lvl_mem ORDER BY SUM(visit.total_spent) DESC LIMIT 1;",
    "SELECT visitor.name, visitor.age FROM visitor JOIN visit ON visitor.id = visit.visitor_id WHERE visit.num_tkt = (SELECT MAX(num_tkt) FROM visit)",
    "SELECT AVG(num_tkt), MAX(num_tkt) FROM visit",
    "SELECT SUM(total_spent) FROM visit WHERE visitor_id IN (SELECT id FROM visitor WHERE lvl_mem = 1)",
    "SELECT name FROM visitor WHERE lvl_mem > 4 ORDER BY lvl_mem DESC",
    "SELECT AVG(age) FROM visitor WHERE lvl_mem <= 4",
    "SELECT name, lvl_mem FROM visitor WHERE lvl_mem > 4 ORDER BY age ASC",
    "SELECT mus_id, name FROM museum ORDER BY num_of_staff DESC LIMIT 1;",
    "SELECT visitor.id, visitor.name, visitor.lvl_mem FROM visitor JOIN visit ON visitor.id = visit.visitor_id GROUP BY visitor.id, visitor.name, visitor.lvl_mem ORDER BY SUM(visit.tot_spent) DESC LIMIT 1;",
    "SELECT museum.mus_id, museum.name  FROM museum  JOIN visit ON museum.mus_id = visit.mus_id  GROUP BY museum.mus_id, museum.name  ORDER BY COUNT(*) DESC  LIMIT 1;",
    "SELECT name FROM museum WHERE mus_id NOT IN (SELECT mus_id FROM visit)",
    "SELECT SUM(tot_spent) FROM visit WHERE visitor_id IN (SELECT id FROM visitor WHERE lvl_mem = 1)",
    "SELECT DISTINCT v.name  FROM visitor v  JOIN visit v1 ON v.id = v1.visitor_id  JOIN visit v2 ON v.id = v2.visitor_id  JOIN museum m1 ON v1.mus_id = m1.mus_id  JOIN museum m2 ON v2.mus_id = m2.mus_id  WHERE m1.open_year < 2009 AND m2.open_year > 2011",
    "SELECT COUNT(*) FROM visitor WHERE id NOT IN (SELECT visitor_id FROM visit JOIN museum ON visit.mus_id = museum.mus_id WHERE museum.open_year > 2010)",
    "SELECT name FROM visitor WHERE lvl_mem > 4 ORDER BY lvl_mem DESC",
    "SELECT AVG(age) FROM visitor WHERE lvl_mem <= 4",
    "SELECT name, lvl_mem FROM visitor WHERE lvl_mem > 4 ORDER BY age ASC",
    "SELECT museum_id, name FROM museum ORDER BY num_stf DESC LIMIT 1",
    "SELECT AVG(num_stf) FROM museum WHERE open_year < 2009",
    "SELECT open_year, num_stf FROM museum WHERE name = 'Plaza Museum'",
    "SELECT name FROM museum WHERE num_stf > (SELECT MIN(num_stf) FROM museum WHERE open_year > 2010)",
    "SELECT visitor.id, visitor.name, visitor.lvl_mem FROM visitor JOIN visit ON visitor.id = visit.visitor_id GROUP BY visitor.id, visitor.name, visitor.lvl_mem ORDER BY SUM(visit.total_spent) DESC LIMIT 1;",
    "SELECT museum.museum_id, museum.name  FROM museum_visit_2.museum  JOIN museum_visit_2.visit ON museum.museum_id = visit.mus_id  GROUP BY museum.museum_id, museum.name  ORDER BY COUNT(*) DESC  LIMIT 1;",
    "SELECT name FROM museum WHERE museum_id NOT IN (SELECT mus_id FROM visit)",
    "SELECT SUM(total_spent) FROM visit WHERE visitor_id IN (SELECT id FROM visitor WHERE lvl_mem = 1)",
    "SELECT DISTINCT v.name  FROM visitor v  JOIN visit v1 ON v.id = v1.visitor_id  JOIN visit v2 ON v.id = v2.visitor_id  JOIN museum m1 ON v1.mus_id = m1.museum_id  JOIN museum m2 ON v2.mus_id = m2.museum_id  WHERE m1.open_year < 2009 AND m2.open_year > 2011",
    "SELECT COUNT(*) FROM visitor WHERE id NOT IN (SELECT visitor_id FROM visit WHERE mus_id IN (SELECT museum_id FROM museum WHERE open_year > 2010))",
    "SELECT museum.museum_id, museum.name  FROM museum  JOIN visit ON museum.museum_id = visit.mus_id  GROUP BY museum.museum_id, museum.name  ORDER BY COUNT(*) DESC  LIMIT 1",
    "SELECT name FROM museum WHERE museum_id NOT IN (SELECT mus_id FROM visit)",
    "SELECT DISTINCT v.name  FROM visitor v  JOIN visit v1 ON v.id = v1.visitor_id  JOIN visit v2 ON v.id = v2.visitor_id  JOIN museum m1 ON v1.mus_id = m1.museum_id  JOIN museum m2 ON v2.mus_id = m2.museum_id  WHERE m1.open_year < 2009 AND m2.open_year > 2011",
    "SELECT COUNT(*) FROM visitor WHERE id NOT IN (SELECT visitor_id FROM visit WHERE mus_id IN (SELECT museum_id FROM museum WHERE open_year > 2010))",
    "SELECT mus_id, name FROM museum ORDER BY num_stf DESC LIMIT 1;",
    "SELECT AVG(num_stf) FROM museum WHERE open_year < 2009",
    "SELECT open_year, num_stf FROM museum WHERE name = 'Plaza Museum'",
    "SELECT name FROM museum WHERE num_stf > (SELECT MIN(num_stf) FROM museum WHERE open_year > 2010)",
    "SELECT museum.mus_id, museum.name  FROM museum_visit_5.museum  JOIN museum_visit_5.visit ON museum.mus_id = visit.museum_id  GROUP BY museum.mus_id, museum.name  ORDER BY COUNT(*) DESC  LIMIT 1;",
    "SELECT name FROM museum WHERE mus_id NOT IN (SELECT museum_id FROM visit)",
    "SELECT DISTINCT v.name FROM visitor v JOIN visit v1 ON v.id = v1.visitor_id JOIN visit v2 ON v.id = v2.visitor_id JOIN museum m1 ON v1.museum_id = m1.mus_id JOIN museum m2 ON v2.museum_id = m2.mus_id WHERE m1.open_year < 2009 AND m2.open_year > 2011",
    "SELECT COUNT(*) FROM visitor WHERE id NOT IN (SELECT visitor_id FROM visit JOIN museum ON visit.museum_id = museum.mus_id WHERE museum.open_year > 2010)",
    "SELECT first_name, dob FROM players WHERE cntry_code = 'USA'",
    "SELECT first_name, dob FROM players WHERE cntry_code = 'USA'",
    "SELECT COUNT(DISTINCT cntry_code) FROM players",
    "SELECT COUNT(DISTINCT cntry_code) FROM players",
    "SELECT players.cntry_code, players.first_name FROM players JOIN matches AS m1 ON players.player_id = m1.winner_id AND m1.tourney_name = 'WTA Championships' JOIN matches AS m2 ON players.player_id = m2.winner_id AND m2.tourney_name = 'Australian Open'",
    "SELECT players.first_name, players.cntry_code FROM players JOIN matches AS m1 ON players.player_id = m1.winner_id AND m1.tourney_name = 'WTA Championships' JOIN matches AS m2 ON players.player_id = m2.winner_id AND m2.tourney_name = 'Australian Open'",
    "SELECT first_name, cntry_code FROM players WHERE dob = (SELECT MIN(dob) FROM players)",
    "SELECT first_name, cntry_code FROM players WHERE dob = (SELECT MAX(dob) FROM players)",
    "SELECT first_name, last_name FROM players ORDER BY dob",
    "SELECT CONCAT(first_name, ' ', last_name) AS full_name FROM players ORDER BY dob",
    "SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY dob",
    "SELECT CONCAT(first_name, ' ', last_name) AS full_name FROM players WHERE hand = 'L' ORDER BY dob ASC",
    "SELECT players.first_name, players.cntry_code FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id ORDER BY COUNT(rankings.tours) DESC LIMIT 1;",
    "SELECT first_name, cntry_code FROM players WHERE player_id = (SELECT player_id FROM rankings GROUP BY player_id ORDER BY COUNT(tours) DESC LIMIT 1) LIMIT 1",
    "SELECT cntry_code, COUNT(*) AS num_players FROM players GROUP BY cntry_code",
    "SELECT cntry_code, COUNT(*) FROM players GROUP BY cntry_code",
    "SELECT cntry_code FROM players GROUP BY cntry_code ORDER BY COUNT(*) DESC LIMIT 1",
    "SELECT cntry_code FROM players GROUP BY cntry_code ORDER BY COUNT(*) DESC LIMIT 1",
    "SELECT cntry_code FROM players GROUP BY cntry_code HAVING COUNT(*) > 50",
    "SELECT cntry_code FROM players GROUP BY cntry_code HAVING COUNT(*) > 50",
    "SELECT players.first_name, players.cntry_code, players.dob FROM players JOIN matches ON players.player_id = matches.winner_id WHERE matches.winner_rank_points = (SELECT MAX(winner_rank_points) FROM matches)",
    "SELECT p.first_name, p.cntry_code, p.dob FROM players p JOIN matches m ON p.player_id = m.winner_id JOIN rankings r ON p.player_id = r.player_id WHERE r.ranking_points = (SELECT MAX(ranking_points) FROM rankings) LIMIT 1",
    "SELECT first_name, birth_date FROM players WHERE cntry_code = 'USA'",
    "SELECT first_name, birth_date FROM players WHERE cntry_code = 'USA'",
    "SELECT COUNT(DISTINCT cntry_code) FROM players",
    "SELECT COUNT(DISTINCT cntry_code) FROM players",
    "SELECT players.cntry_code, players.first_name FROM players JOIN matches AS m1 ON players.player_id = m1.winner_id AND m1.tourney_name = 'WTA Championships' JOIN matches AS m2 ON players.player_id = m2.winner_id AND m2.tourney_name = 'Australian Open'",
    "SELECT players.first_name, players.cntry_code FROM players JOIN matches AS m1 ON players.player_id = m1.winner_id AND m1.tourney_name = 'WTA Championships' JOIN matches AS m2 ON players.player_id = m2.winner_id AND m2.tourney_name = 'Australian Open' WHERE m1.year = m2.year",
    "SELECT first_name, cntry_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players)",
    "SELECT first_name, cntry_code FROM players WHERE birth_date = (SELECT MAX(birth_date) FROM players)",
    "SELECT first_name, cntry_code FROM players WHERE player_id = (SELECT player_id FROM rankings GROUP BY player_id ORDER BY COUNT(*) DESC LIMIT 1)",
    "SELECT first_name, cntry_code FROM players WHERE player_id = (SELECT player_id FROM rankings GROUP BY player_id ORDER BY COUNT(*) DESC LIMIT 1) LIMIT 1",
    "SELECT winner_name, winner_rank_pts FROM matches WHERE winner_rank_pts = (SELECT MAX(winner_rank_pts) FROM matches)",
    "SELECT winner_name, winner_rank_pts FROM  (SELECT winner_name, winner_rank_pts, COUNT(*) as num_wins FROM matches GROUP BY winner_name ORDER BY num_wins DESC LIMIT 1) as winner_info JOIN players ON winner_info.winner_name = players.first_name || ' ' || players.last_name",
    "SELECT winner_name FROM matches WHERE tourney_name = 'Australian Open' AND winner_rank_pts = (SELECT MAX(winner_rank_pts) FROM matches WHERE tourney_name = 'Australian Open')",
    "SELECT winner_name FROM matches WHERE tourney_name = 'Australian Open' AND winner_rank_pts = (SELECT MAX(winner_rank_pts) FROM matches WHERE tourney_name = 'Australian Open')",
    "SELECT cntry_code, COUNT(*) AS num_players FROM players GROUP BY cntry_code",
    "SELECT cntry_code, COUNT(*) FROM players GROUP BY cntry_code",
    "SELECT cntry_code FROM players GROUP BY cntry_code ORDER BY COUNT(*) DESC LIMIT 1",
    "SELECT cntry_code FROM players GROUP BY cntry_code ORDER BY COUNT(*) DESC LIMIT 1",
    "SELECT cntry_code FROM players GROUP BY cntry_code HAVING COUNT(*) > 50",
    "SELECT cntry_code FROM players GROUP BY cntry_code HAVING COUNT(*) > 50",
    "SELECT first_name, cntry_code, birth_date FROM players WHERE player_id = (SELECT winner_id FROM matches ORDER BY winner_rank_pts DESC LIMIT 1)",
    "SELECT p.first_name, p.cntry_code, p.birth_date FROM players p JOIN matches m ON p.player_id = m.winner_id JOIN rankings r ON p.player_id = r.player_id WHERE r.ranking_points = (SELECT MAX(ranking_points) FROM rankings) LIMIT 1",
    "SELECT first_name, dob FROM players WHERE country_code = 'USA'",
    "SELECT first_name, dob FROM players WHERE country_code = 'USA'",
    "SELECT first_name, country_code FROM players WHERE dob = (SELECT MIN(dob) FROM players)",
    "SELECT first_name, country_code FROM players WHERE dob = (SELECT MAX(dob) FROM players)",
    "SELECT first_name, last_name FROM players ORDER BY dob",
    "SELECT CONCAT(first_name, ' ', last_name) AS full_name FROM players ORDER BY dob",
    "SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY dob",
    "SELECT CONCAT(first_name, ' ', last_name) AS full_name FROM players WHERE hand = 'L' ORDER BY dob ASC",
    "SELECT players.first_name, SUM(rankings.ranking_pts) AS total_ranking_points FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id, players.first_name",
    "SELECT players.first_name, SUM(rankings.ranking_pts) as total_ranking_points FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.first_name",
    "SELECT players.first_name, players.country_code, players.dob FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id WHERE rankings.ranking_pts = (SELECT MAX(ranking_pts) FROM rankings) LIMIT 1",
    "SELECT p.first_name, p.country_code, p.dob FROM players p JOIN matches m ON p.player_id = m.winner_id JOIN rankings r ON p.player_id = r.player_id WHERE r.ranking_pts = (SELECT MAX(ranking_pts) FROM rankings) LIMIT 1",
    "SELECT first_name, birth_date FROM players WHERE cntry_code = 'USA'",
    "SELECT first_name, birth_date FROM players WHERE cntry_code = 'USA'",
    "SELECT COUNT(DISTINCT cntry_code) FROM players",
    "SELECT COUNT(DISTINCT cntry_code) FROM players",
    "SELECT cntry_code, first_name FROM players WHERE player_id IN (     SELECT winner_id FROM matches WHERE tourney_name = 'WTA Championships'     INTERSECT     SELECT winner_id FROM matches WHERE tourney_name = 'Australian Open' )",
    "SELECT players.first_name, players.cntry_code FROM players JOIN matches AS m1 ON players.player_id = m1.winner_id AND m1.tourney_name = 'WTA Championships' JOIN matches AS m2 ON players.player_id = m2.winner_id AND m2.tourney_name = 'Australian Open' WHERE players.player_id IN (     SELECT winner_id     FROM matches     WHERE tourney_name = 'WTA Championships' ) GROUP BY players.player_id HAVING COUNT(DISTINCT m1.tourney_name) = 1 AND COUNT(DISTINCT m2.tourney_name) = 1",
    "SELECT first_name, cntry_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players)",
    "SELECT first_name, cntry_code FROM players WHERE birth_date = (SELECT MAX(birth_date) FROM players)",
    "SELECT first_name, cntry_code FROM players WHERE player_id = (SELECT player_id FROM rankings GROUP BY player_id ORDER BY COUNT(tours) DESC LIMIT 1)",
    "SELECT first_name, cntry_code FROM players WHERE player_id = (SELECT player_id FROM rankings GROUP BY player_id ORDER BY COUNT(tours) DESC LIMIT 1) LIMIT 1",
    "SELECT cntry_code, COUNT(*) AS num_players FROM players GROUP BY cntry_code",
    "SELECT cntry_code, COUNT(*) FROM players GROUP BY cntry_code",
    "SELECT cntry_code FROM players GROUP BY cntry_code ORDER BY COUNT(*) DESC LIMIT 1",
    "SELECT cntry_code FROM players GROUP BY cntry_code ORDER BY COUNT(*) DESC LIMIT 1",
    "SELECT cntry_code FROM players GROUP BY cntry_code HAVING COUNT(*) > 50",
    "SELECT cntry_code FROM players GROUP BY cntry_code HAVING COUNT(*) > 50",
    "SELECT players.first_name, players.cntry_code, players.birth_date FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id WHERE rankings.ranking_points = (SELECT MAX(ranking_points) FROM rankings) LIMIT 1",
    "SELECT p.first_name, p.cntry_code, p.birth_date FROM players p JOIN matches m ON p.player_id = m.winner_id JOIN rankings r ON p.player_id = r.player_id WHERE r.ranking_points = (SELECT MAX(ranking_points) FROM rankings) LIMIT 1",
    "SELECT name, result FROM battle WHERE bg_cdr <> 'Boril'",
    "SELECT DISTINCT battle.id, battle.name FROM battle  INNER JOIN ship ON battle.id = ship.loc  WHERE ship.ship_type = 'Brig' AND battle.id NOT IN  (SELECT DISTINCT battle.id FROM battle  INNER JOIN ship ON battle.id = ship.loc  WHERE ship.ship_type = 'Brig' AND ship.disposition_of_ship = 'lost')",
    "SELECT id, name FROM battle WHERE id IN (SELECT caused_by_ship_id FROM death GROUP BY caused_by_ship_id HAVING SUM(killed) > 10)",
    "SELECT DISTINCT name FROM battle WHERE bg_cdr = 'Kaloyan' AND latin_cdr = 'Baldwin I'",
    "SELECT COUNT(*) FROM battle b WHERE NOT EXISTS (SELECT * FROM ship s WHERE s.tonnage = '225' AND s.disposition_of_ship = 'lost' AND s.loc = b.id)",
    "SELECT battle.name, battle.date FROM battle JOIN ship AS s1 ON battle.id = s1.loc AND s1.name = 'Lettice' JOIN ship AS s2 ON battle.id = s2.loc AND s2.name = 'HMS Atalanta'",
    "SELECT battle.name, battle.result, battle.bg_cdr FROM battle LEFT JOIN ship ON battle.id = ship.lib WHERE ship.loc = 'English Channel' AND ship.disposition_of_ship = 'no ships lost'",
    "SELECT COUNT(*) FROM ship WHERE loc = 'Captured'",
    "SELECT death.note, death.killed, death.injured FROM death JOIN ship ON death.id = ship.id WHERE ship.tonnage = 't'",
    "SELECT name, result FROM battle WHERE bg_cdr <> 'Boril'",
    "SELECT DISTINCT battle.id, battle.name FROM battle INNER JOIN ship ON battle.id = ship.id WHERE ship.name LIKE '%Brig%' AND battle.id NOT IN (     SELECT DISTINCT battle.id     FROM battle     INNER JOIN ship ON battle.id = ship.id     WHERE ship.name LIKE '%Brig%' AND ship.loc = 'lost' )",
    "SELECT id, name FROM battle WHERE id IN (SELECT id FROM death GROUP BY id HAVING SUM(killed) > 10)",
    "SELECT ship.id, ship.name  FROM ship  JOIN death ON ship.id = death.id  GROUP BY ship.id, ship.name  ORDER BY SUM(death.injured) DESC  LIMIT 1",
    "SELECT DISTINCT name FROM battle WHERE bg_cdr = 'Kaloyan' AND latin_commander = 'Baldwin I'",
    "SELECT COUNT(*) FROM battle b WHERE NOT EXISTS (SELECT * FROM ship s WHERE s.tonnage = '225' AND s.loc = b.id AND s.st = 'lost')",
    "SELECT battle.name, battle.date FROM battle JOIN ship ON ship.loc = battle.id WHERE ship.name = 'Lettice' OR ship.name = 'HMS Atalanta'",
    "SELECT name, result, bg_cdr FROM battle WHERE id NOT IN (SELECT DISTINCT battle_id FROM death) AND loc = 'English Channel'",
    "SELECT COUNT(*) FROM ship WHERE loc = 'Captured'",
    "SELECT DISTINCT battle.id, battle.name FROM battle  INNER JOIN ship ON battle.id = ship.loc  WHERE ship.lib = 'Brig' AND battle.id IN  (SELECT death.id FROM death WHERE death.caused_by_ship_id = ship.id) AND battle.result = 'loss'",
    "SELECT battle.id, battle.name FROM battle JOIN death ON battle.id = death.caused_by_ship_id GROUP BY battle.id, battle.name HAVING SUM(death.killed) > 10",
    "SELECT DISTINCT name FROM battle WHERE bulgarian_commander = 'Kaloyan' AND latin_cdr = 'Baldwin I'",
    "SELECT COUNT(*) FROM battle b WHERE NOT EXISTS (SELECT * FROM ship s WHERE s.tonnage = '225' AND s.st = b.id AND s.loc = 'lost')",
    "SELECT battle.name, battle.date FROM battle JOIN ship AS s1 ON battle.id = s1.loc JOIN ship AS s2 ON battle.id = s2.loc WHERE s1.name = 'Lettice' AND s2.name = 'HMS Atalanta' AND battle.result = 'lost'",
    "SELECT battle.name, battle.result, battle.bulgarian_commander FROM battle WHERE battle.id NOT IN (     SELECT DISTINCT caused_by_ship_id     FROM death     WHERE caused_by_ship_id IS NOT NULL ) AND battle.latin_cdr = 'English Channel'",
    "SELECT name, result FROM battle WHERE bg_cdr <> 'Boril'",
    "SELECT DISTINCT battle.id, battle.name FROM battle  INNER JOIN ship ON battle.id = ship.location  WHERE ship.disposition_of_ship = 'lost' AND ship.st = 'Brig'",
    "SELECT battle.id, battle.name FROM battle JOIN death ON battle.id = death.caused_by_ship_id GROUP BY battle.id, battle.name HAVING SUM(death.killed) > 10",
    "SELECT DISTINCT name FROM battle WHERE bg_cdr = 'Kaloyan' AND latin_commander = 'Baldwin I'",
    "SELECT COUNT(*) FROM battle b WHERE NOT EXISTS (SELECT * FROM ship s WHERE s.tonnage = '225' AND s.st = b.id AND s.location = 'lost')",
    "SELECT battle.name, battle.date FROM battle JOIN ship AS s1 ON battle.id = s1.location JOIN ship AS s2 ON battle.id = s2.location WHERE s1.name = 'Lettice' AND s2.name = 'HMS Atalanta' AND s1.disposition_of_ship = 'lost' AND s2.disposition_of_ship = 'lost'",
    "SELECT battle.name, battle.result, battle.bg_cdr FROM battle LEFT JOIN ship ON battle.id = ship.id WHERE ship.id IS NULL AND battle.location = 'English Channel'",
    "SELECT COUNT(*) FROM ship WHERE lost_in_battle = 'Captured'",
    "SELECT course_description FROM courses WHERE crs_name = 'math'",
    "SELECT course_description FROM courses WHERE crs_name LIKE '%math%'",
    "SELECT zipcode FROM addresses WHERE city = 'Port Chelsea'",
    "SELECT zipcode FROM addresses WHERE city = 'Port Chelsea'",
    "SELECT departments.department_id, departments.department_name FROM departments JOIN degree_programs ON departments.department_id = degree_programs.dept_id GROUP BY departments.department_id, departments.department_name ORDER BY COUNT(degree_programs.degree_pmg_id) DESC LIMIT 1;",
    "SELECT department_id, department_name FROM departments WHERE department_id = (SELECT dept_id FROM degree_programs GROUP BY dept_id ORDER BY COUNT(*) DESC LIMIT 1)",
    "SELECT COUNT(DISTINCT department_id) FROM degree_programs",
    "SELECT COUNT(DISTINCT department_id) FROM degree_programs",
    "SELECT COUNT(DISTINCT degree_smry_name) FROM degree_programs",
    "SELECT COUNT(DISTINCT degree_pmg_id) FROM degree_programs",
    "SELECT COUNT(*) FROM degree_programs WHERE dept_id = (SELECT department_id FROM departments WHERE department_name = 'engineering')",
    "SELECT COUNT(*) FROM degree_programs WHERE dept_id = (SELECT department_id FROM departments WHERE department_name = 'engineering')",
    "SELECT section_name, sect_desc FROM sections",
    "SELECT section_name, sect_desc FROM sections",
    "SELECT course_id, crs_name FROM courses WHERE course_id IN (SELECT course_id FROM sections GROUP BY course_id HAVING COUNT(*) <= 2)",
    "SELECT course_id, crs_name FROM courses WHERE course_id IN (SELECT course_id FROM sections GROUP BY course_id HAVING COUNT(*) < 2)",
    "SELECT dept_desc FROM departments WHERE department_name LIKE '%the computer%'",
    "SELECT dept_desc FROM departments WHERE department_name LIKE '%computer%'",
    "SELECT first_name, middle_name, last_name FROM students  INNER JOIN student_enrolment ON students.student_id = student_enrolment.student_id  INNER JOIN degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_pmg_id  WHERE degree_smry_name LIKE '%Bachelor%'",
    "SELECT first_name, middle_name, last_name FROM students  JOIN student_enrolment ON students.student_id = student_enrolment.student_id  JOIN degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_pmg_id  WHERE degree_smry_name = 'Bachelors'",
    "SELECT degree_programs.degree_smry_name, COUNT(*) AS num_students_enrolled FROM student_enrolment JOIN degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_pmg_id GROUP BY degree_programs.degree_smry_name ORDER BY num_students_enrolled DESC LIMIT 1;",
    "SELECT degree_smry_name FROM degree_programs  WHERE degree_pmg_id IN (     SELECT degree_program_id FROM student_enrolment      GROUP BY degree_program_id      ORDER BY COUNT(*) DESC      LIMIT 1 )",
    "SELECT degree_programs.degree_pmg_id, degree_programs.degree_smry_name FROM degree_programs JOIN student_enrolment ON degree_programs.degree_pmg_id = student_enrolment.degree_program_id GROUP BY degree_programs.degree_pmg_id, degree_programs.degree_smry_name ORDER BY COUNT(student_enrolment.student_id) DESC LIMIT 1",
    "SELECT degree_programs.degree_pmg_id, degree_programs.degree_smry_name FROM degree_programs JOIN student_enrolment ON degree_programs.degree_pmg_id = student_enrolment.degree_program_id GROUP BY degree_programs.degree_pmg_id, degree_programs.degree_smry_name ORDER BY COUNT(student_enrolment.student_id) DESC LIMIT 1",
    "SELECT DISTINCT crs_name FROM courses JOIN student_enrolment_courses ON courses.course_id = student_enrolment_courses.course_id",
    "SELECT DISTINCT crs_name FROM courses JOIN student_enrolment_courses ON courses.course_id = student_enrolment_courses.course_id",
    "SELECT crs_name FROM courses WHERE course_id = (SELECT course_id FROM student_enrolment_courses GROUP BY course_id ORDER BY COUNT(*) DESC LIMIT 1)",
    "SELECT crs_name FROM courses WHERE course_id = (SELECT course_id FROM student_enrolment_courses GROUP BY course_id ORDER BY COUNT(*) DESC LIMIT 1)",
    "SELECT last_name FROM students WHERE permanent_address_id IN (SELECT adr_id FROM addresses WHERE state_province_county = 'North Carolina') AND student_id NOT IN (SELECT student_id FROM student_enrolment)",
    "SELECT last_name FROM students WHERE state_province_county = 'North Carolina' AND student_id NOT IN (SELECT student_id FROM student_enrolment)",
    "SELECT cell FROM students WHERE first_name = 'Timmothy' AND last_name = 'Ward'",
    "SELECT cell FROM students WHERE first_name = 'Timmothy' AND last_name = 'Ward'",
    "SELECT first_name FROM students WHERE permanent_address_id <> current_address_id",
    "SELECT first_name FROM students WHERE permanent_address_id <> current_address_id LIMIT 1",
    "SELECT address.adr_id, address.line_1, address.line_2, address.line_3 FROM addresses AS address JOIN students AS student ON address.adr_id = student.permanent_address_id GROUP BY address.adr_id ORDER BY COUNT(student.student_id) DESC LIMIT 1",
    "SELECT addresses.adr_id, addresses.line_1, addresses.line_2 FROM addresses JOIN students ON students.permanent_address_id = addresses.adr_id GROUP BY addresses.adr_id ORDER BY COUNT(students.student_id) DESC LIMIT 1",
    "SELECT semester_name FROM semesters WHERE semester_id IN  (SELECT semester_id FROM student_enrolment WHERE degree_program_id IN  (SELECT degree_pmg_id FROM degree_programs WHERE degree_smry_name = 'Master')  AND semester_id IN  (SELECT semester_id FROM student_enrolment WHERE degree_program_id IN  (SELECT degree_pmg_id FROM degree_programs WHERE degree_smry_name = 'Bachelor')))",
    "SELECT semester_id FROM student_enrolment WHERE degree_program_id IN (SELECT degree_pmg_id FROM degree_programs WHERE degree_smry_name = 'Masters') AND degree_program_id IN (SELECT degree_pmg_id FROM degree_programs WHERE degree_smry_name = 'Bachelors') GROUP BY semester_id HAVING COUNT(DISTINCT degree_program_id) = 2",
    "SELECT COUNT(DISTINCT addresses.adr_id) FROM students JOIN addresses ON students.permanent_address_id = addresses.adr_id JOIN student_enrolment ON students.student_id = student_enrolment.student_id JOIN student_enrolment_courses ON student_enrolment.student_enrolment_id = student_enrolment_courses.stu_enroll_id",
    "SELECT DISTINCT line_1, line_2, line_3, city, zipcode, state_province_county, country, other_address_details  FROM addresses  WHERE adr_id IN (SELECT permanent_address_id FROM students)",
    "SELECT * FROM sections WHERE section_name = 'h'",
    "SELECT sect_desc FROM sections WHERE section_name = 'h'",
    "SELECT first_name FROM students WHERE permanent_address_id IN (SELECT adr_id FROM addresses WHERE country = 'Haiti') OR cell = '09700166582'",
    "SELECT first_name FROM students WHERE permanent_address_id IN (SELECT adr_id FROM addresses WHERE country = 'Haiti') OR cell = '09700166582'",
    "SELECT crs_desc FROM courses WHERE crs_name = 'math'",
    "SELECT crs_desc FROM courses WHERE crs_name LIKE '%math%'",
    "SELECT zipcode FROM addresses WHERE city = 'Port Chelsea'",
    "SELECT zipcode FROM addresses WHERE city = 'Port Chelsea'",
    "SELECT departments.dept_id, departments.dept_name FROM departments JOIN degree_programs ON departments.dept_id = degree_programs.dept_id GROUP BY departments.dept_id, departments.dept_name ORDER BY COUNT(degree_programs.degree_pmg_id) DESC LIMIT 1;",
    "SELECT departments.dept_id, departments.dept_name  FROM departments  JOIN degree_programs ON departments.dept_id = degree_programs.dept_id  JOIN student_enrolment ON degree_programs.degree_pmg_id = student_enrolment.degree_program_id  GROUP BY departments.dept_id, departments.dept_name  ORDER BY COUNT(student_enrolment.stu_id) DESC  LIMIT 1",
    "SELECT COUNT(DISTINCT dept_id) FROM degree_programs",
    "SELECT COUNT(DISTINCT dept_id) FROM degree_programs",
    "SELECT COUNT(DISTINCT degree_smry_name) FROM degree_programs",
    "SELECT COUNT(DISTINCT degree_pmg_id) FROM degree_programs",
    "SELECT COUNT(*) FROM degree_programs WHERE dept_id = (SELECT dept_id FROM departments WHERE dept_name = 'engineering')",
    "SELECT COUNT(*) FROM degree_programs WHERE dept_id = (SELECT dept_id FROM departments WHERE dept_name = 'engineering')",
    "SELECT sect_name, sect_desc FROM sections",
    "SELECT sect_name, sect_desc FROM sections",
    "SELECT crs_id, crs_name FROM courses WHERE crs_id IN (SELECT crs_id FROM sections GROUP BY crs_id HAVING COUNT(*) <= 2)",
    "SELECT crs_id, crs_name FROM courses WHERE crs_id IN (SELECT crs_id FROM sections GROUP BY crs_id HAVING COUNT(*) < 2)",
    "SELECT section_name FROM sections ORDER BY section_name DESC",
    "SELECT sect_name FROM sections ORDER BY sect_name DESC",
    "SELECT semesters.sem_id, semesters.sem_name FROM student_enrolment JOIN semesters ON student_enrolment.sem_id = semesters.sem_id GROUP BY semesters.sem_id, semesters.sem_name ORDER BY COUNT(student_enrolment.stu_id) DESC LIMIT 1",
    "SELECT semesters.sem_id, semesters.sem_name, student_enrolment.degree_program_id, COUNT(*) AS num_students FROM student_enrolment JOIN semesters ON student_enrolment.sem_id = semesters.sem_id GROUP BY semesters.sem_id, semesters.sem_name, student_enrolment.degree_program_id HAVING COUNT(*) = (     SELECT MAX(num_students)     FROM (         SELECT semesters.sem_id, student_enrolment.degree_program_id, COUNT(*) AS num_students         FROM student_enrolment         JOIN semesters ON student_enrolment.sem_id = semesters.sem_id         GROUP BY semesters.sem_id, student_enrolment.degree_program_id     ) AS temp     WHERE temp.sem_id = semesters.sem_id AND temp.degree_program_id = student_enrolment.degree_program_id )",
    "SELECT dept_desc FROM departments WHERE dept_name LIKE '%the computer%'",
    "SELECT dept_desc FROM departments WHERE dept_name LIKE '%computer%'",
    "SELECT students.first_name, students.middle_name, students.last_name, students.stuid FROM students JOIN student_enrolment ON students.stuid = student_enrolment.stu_id JOIN student_enrolment_courses ON student_enrolment.stu_enroll_id = student_enrolment_courses.stu_enroll_id GROUP BY students.stuid HAVING COUNT(DISTINCT student_enrolment_courses.crs_id) >= 2 AND COUNT(DISTINCT student_enrolment.sem_id) = 1",
    "SELECT students.stuid, students.first_name, students.middle_name, students.last_name FROM students JOIN student_enrolment ON students.stuid = student_enrolment.stu_id GROUP BY students.stuid HAVING COUNT(DISTINCT student_enrolment.degree_program_id) = 2 AND COUNT(DISTINCT student_enrolment.sem_id) = 1",
    "SELECT first_name, middle_name, last_name FROM students  INNER JOIN student_enrolment ON students.stuid = student_enrolment.stu_id  INNER JOIN degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_pmg_id  WHERE degree_smry_name LIKE '%Bachelor%'",
    "SELECT first_name, middle_name, last_name FROM students  JOIN student_enrolment ON students.stuid = student_enrolment.stu_id  JOIN degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_pmg_id  WHERE degree_smry_name = 'Bachelors'",
    "SELECT degree_programs.degree_smry_name, COUNT(*) AS num_students_enrolled FROM student_enrolment JOIN degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_pmg_id GROUP BY degree_programs.degree_smry_name ORDER BY num_students_enrolled DESC LIMIT 1;",
    "SELECT degree_smry_name FROM degree_programs  WHERE degree_pmg_id IN  (SELECT degree_program_id FROM student_enrolment  GROUP BY degree_program_id  ORDER BY COUNT(*) DESC  LIMIT 1)",
    "SELECT degree_programs.degree_pmg_id, degree_programs.degree_smry_name FROM degree_programs JOIN student_enrolment ON degree_programs.degree_pmg_id = student_enrolment.degree_program_id GROUP BY degree_programs.degree_pmg_id, degree_programs.degree_smry_name ORDER BY COUNT(student_enrolment.stu_id) DESC LIMIT 1;",
    "SELECT degree_programs.degree_pmg_id, degree_programs.degree_smry_name FROM degree_programs JOIN student_enrolment ON degree_programs.degree_pmg_id = student_enrolment.degree_program_id GROUP BY degree_programs.degree_pmg_id, degree_programs.degree_smry_name ORDER BY COUNT(student_enrolment.stu_id) DESC LIMIT 1",
    "SELECT stu.stuid, stu.first_name, stu.middle_name, stu.last_name, COUNT(*) AS num_enrollments FROM students stu JOIN student_enrolment se ON stu.stuid = se.stu_id GROUP BY stu.stuid ORDER BY num_enrollments DESC LIMIT 1;",
    "SELECT s.first_name, s.middle_name, s.last_name, s.stuid, COUNT(*) as num_enrollments FROM students s JOIN student_enrolment se ON s.stuid = se.stu_id GROUP BY s.stuid ORDER BY num_enrollments DESC LIMIT 1",
    "SELECT sem_name FROM semesters WHERE sem_id NOT IN (SELECT sem_id FROM student_enrolment)",
    "SELECT sem_name FROM semesters WHERE sem_id NOT IN (SELECT sem_id FROM student_enrolment)",
    "SELECT DISTINCT crs_name FROM courses JOIN student_enrolment_courses ON courses.crs_id = student_enrolment_courses.crs_id",
    "SELECT DISTINCT crs_name FROM courses JOIN student_enrolment_courses ON courses.crs_id = student_enrolment_courses.crs_id",
    "SELECT crs_name FROM courses WHERE crs_id = (SELECT crs_id FROM student_enrolment_courses GROUP BY crs_id ORDER BY COUNT(*) DESC LIMIT 1)",
    "SELECT crs_name FROM courses  JOIN student_enrolment_courses ON courses.crs_id = student_enrolment_courses.crs_id  GROUP BY courses.crs_id  ORDER BY COUNT(student_enrolment_courses.stu_crs_id) DESC  LIMIT 1",
    "SELECT last_name FROM students WHERE state_province_county = 'North Carolina' AND stuid NOT IN (SELECT stu_id FROM student_enrolment)",
    "SELECT last_name FROM students  WHERE state_province_county = 'North Carolina'  AND stuid NOT IN (SELECT stu_id FROM student_enrolment)",
    "SELECT cell FROM students WHERE first_name = 'Timmothy' AND last_name = 'Ward'",
    "SELECT cell FROM students WHERE first_name = 'Timmothy' AND last_name = 'Ward'",
    "SELECT first_name FROM students WHERE ca_id <> pa_id",
    "SELECT first_name FROM students WHERE pa_id <> ca_id",
    "SELECT addresses.adr_id, addresses.line_1, addresses.line_2, addresses.line_3 FROM addresses JOIN student_enrolment ON addresses.adr_id = student_enrolment.ca_id GROUP BY addresses.adr_id ORDER BY COUNT(student_enrolment.stu_id) DESC LIMIT 1",
    "SELECT adr_id, line_1, line_2 FROM addresses WHERE adr_id = (SELECT address_id FROM students GROUP BY address_id ORDER BY COUNT(*) DESC LIMIT 1)",
    "SELECT transcript_date, oth_dtl FROM transcripts ORDER BY transcript_date LIMIT 1",
    "SELECT MIN(transcript_date), * FROM transcripts",
    "SELECT COUNT(DISTINCT transcript_id), stu_crs_id FROM transcript_contents GROUP BY stu_crs_id HAVING COUNT(DISTINCT transcript_id) = (SELECT MAX(counts) FROM (SELECT COUNT(DISTINCT transcript_id) as counts FROM transcript_contents GROUP BY stu_crs_id) as temp)",
    "SELECT MAX(course_count), enrollment_id FROM (SELECT COUNT(stu_crs_id) AS course_count, stu_enroll_id AS enrollment_id FROM student_enrolment_courses GROUP BY crs_id) AS course_counts;",
    "SELECT semesters.sem_name  FROM semesters  JOIN student_enrolment ON semesters.sem_id = student_enrolment.sem_id  JOIN degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_pmg_id  WHERE degree_programs.degree_smry_name = 'Master'  AND semesters.sem_id IN (SELECT semesters.sem_id                           FROM semesters                           JOIN student_enrolment ON semesters.sem_id = student_enrolment.sem_id                           JOIN degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_pmg_id                           WHERE degree_programs.degree_smry_name = 'Bachelor')",
    "SELECT sem_id FROM student_enrolment WHERE degree_program_id IN (SELECT degree_pmg_id FROM degree_programs WHERE degree_smry_name = 'Masters') AND degree_program_id IN (SELECT degree_pmg_id FROM degree_programs WHERE degree_smry_name = 'Bachelors') GROUP BY sem_id HAVING COUNT(DISTINCT degree_program_id) = 2",
    "SELECT COUNT(DISTINCT line_1, line_2, line_3, city, zipcode, state_province_county, cntry, oth_adr_dtl) FROM addresses WHERE adr_id IN (SELECT adr_id FROM student_transcripts_tracking_1 JOIN students ON student_transcripts_tracking_1.stuid = students.stuid)",
    "SELECT DISTINCT line_1, line_2, line_3, city, zipcode, state_province_county, cntry, oth_adr_dtl FROM addresses WHERE adr_id IN (SELECT pa_id FROM students UNION SELECT ca_id FROM students)",
    "SELECT * FROM students ORDER BY last_name DESC",
    "SELECT * FROM students ORDER BY last_name DESC",
    "SELECT * FROM sections WHERE sect_name = 'h'",
    "SELECT sect_desc FROM sections WHERE sect_name = 'h'",
    "SELECT first_name FROM students WHERE cntry = 'Haiti' OR cell = '09700166582'",
    "SELECT first_name FROM students WHERE (line_3 = 'Haiti' AND oth_adr_dtl = 'permanent') OR cell = '09700166582'",
    "SELECT crs_desc FROM courses WHERE course_name = 'math'",
    "SELECT crs_desc FROM courses WHERE course_name LIKE '%math%'",
    "SELECT zipcode FROM addresses WHERE city = 'Port Chelsea'",
    "SELECT zipcode FROM addresses WHERE city = 'Port Chelsea'",
    "SELECT departments.dept_id, departments.dept_name FROM departments JOIN degree_programs ON departments.dept_id = degree_programs.department_id GROUP BY departments.dept_id, departments.dept_name ORDER BY COUNT(degree_programs.degree_pmg_id) DESC LIMIT 1;",
    "SELECT departments.dept_id, departments.dept_name  FROM departments  JOIN degree_programs ON departments.dept_id = degree_programs.department_id  JOIN student_enrolment ON degree_programs.degree_pmg_id = student_enrolment.degree_program_id  GROUP BY departments.dept_id, departments.dept_name  ORDER BY COUNT(student_enrolment.stu_id) DESC  LIMIT 1",
    "SELECT COUNT(DISTINCT degree_smry_name) FROM degree_programs",
    "SELECT COUNT(DISTINCT degree_pmg_id) FROM degree_programs",
    "SELECT COUNT(*) FROM degree_programs WHERE department_id = (SELECT dept_id FROM departments WHERE dept_name = 'engineering')",
    "SELECT COUNT(*) FROM degree_programs WHERE department_id = (SELECT dept_id FROM departments WHERE dept_name = 'engineering')",
    "SELECT section_name, sect_desc FROM sections",
    "SELECT section_name, sect_desc FROM sections",
    "SELECT crs_id, course_name FROM courses WHERE crs_id IN (SELECT crs_id FROM sections GROUP BY crs_id HAVING COUNT(*) <= 2)",
    "SELECT crs_id, course_name FROM courses WHERE crs_id IN (SELECT crs_id FROM sections GROUP BY crs_id HAVING COUNT(*) < 2)",
    "SELECT semesters.sem_id, semesters.semester_name FROM student_enrolment JOIN student_enrolment_courses ON student_enrolment.stu_enroll_id = student_enrolment_courses.stu_enroll_id JOIN semesters ON student_enrolment.semester_id = semesters.sem_id GROUP BY semesters.sem_id, semesters.semester_name ORDER BY COUNT(DISTINCT student_enrolment.stu_id) DESC LIMIT 1",
    "SELECT semesters.sem_id, semesters.semester_name, student_enrolment.degree_program_id, COUNT(*) AS num_students FROM student_enrolment JOIN semesters ON student_enrolment.semester_id = semesters.sem_id GROUP BY semesters.sem_id, student_enrolment.degree_program_id HAVING COUNT(*) = (     SELECT MAX(num_students)     FROM (         SELECT semesters.sem_id, student_enrolment.degree_program_id, COUNT(*) AS num_students         FROM student_enrolment         JOIN semesters ON student_enrolment.semester_id = semesters.sem_id         GROUP BY semesters.sem_id, student_enrolment.degree_program_id     ) AS temp     WHERE temp.sem_id = semesters.sem_id     AND temp.degree_program_id = student_enrolment.degree_program_id )",
    "SELECT department_description FROM departments WHERE dept_name LIKE '%the computer%'",
    "SELECT department_description FROM departments WHERE dept_name LIKE '%computer%'",
    "SELECT students.first_name, students.middle_name, students.last_name, students.stuid FROM students JOIN student_enrolment ON students.stuid = student_enrolment.stu_id JOIN student_enrolment_courses ON student_enrolment.stu_enroll_id = student_enrolment_courses.stu_enroll_id GROUP BY students.stuid HAVING COUNT(DISTINCT student_enrolment_courses.crs_id) >= 2 AND COUNT(DISTINCT student_enrolment.semester_id) = 1",
    "SELECT stu.stuid, stu.first_name, stu.middle_name, stu.last_name FROM students stu JOIN student_enrolment se1 ON stu.stuid = se1.stu_id JOIN student_enrolment se2 ON stu.stuid = se2.stu_id AND se1.semester_id = se2.semester_id AND se1.stu_enroll_id <> se2.stu_enroll_id GROUP BY stu.stuid, stu.first_name, stu.middle_name, stu.last_name HAVING COUNT(DISTINCT se1.degree_program_id) = 2",
    "SELECT first_name, middle_name, last_name FROM students  INNER JOIN student_enrolment ON students.stuid = student_enrolment.stu_id  INNER JOIN degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_pmg_id  WHERE degree_smry_name LIKE '%Bachelor%'",
    "SELECT first_name, middle_name, last_name FROM students  JOIN student_enrolment ON students.stuid = student_enrolment.stu_id  JOIN degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_pmg_id  WHERE degree_smry_name = 'Bachelors'",
    "SELECT degree_programs.degree_smry_name FROM degree_programs JOIN student_enrolment ON degree_programs.degree_pmg_id = student_enrolment.degree_program_id GROUP BY degree_programs.degree_smry_name ORDER BY COUNT(student_enrolment.stu_id) DESC LIMIT 1;",
    "SELECT degree_smry_name FROM degree_programs  WHERE degree_pmg_id IN  (SELECT degree_program_id FROM student_enrolment  GROUP BY degree_program_id  ORDER BY COUNT(DISTINCT stu_id) DESC LIMIT 1)",
    "SELECT degree_programs.degree_pmg_id, degree_programs.degree_smry_name FROM degree_programs JOIN student_enrolment ON degree_programs.degree_pmg_id = student_enrolment.degree_program_id GROUP BY degree_programs.degree_pmg_id, degree_programs.degree_smry_name ORDER BY COUNT(student_enrolment.stu_id) DESC LIMIT 1;",
    "SELECT degree_programs.degree_pmg_id, degree_programs.degree_smry_name FROM degree_programs JOIN student_enrolment ON degree_programs.degree_pmg_id = student_enrolment.degree_program_id GROUP BY degree_programs.degree_pmg_id, degree_programs.degree_smry_name ORDER BY COUNT(student_enrolment.stu_id) DESC LIMIT 1",
    "SELECT stu.stuid, stu.first_name, stu.middle_name, stu.last_name, COUNT(*) AS num_enrollments FROM students stu JOIN student_enrolment se ON stu.stuid = se.stu_id GROUP BY stu.stuid ORDER BY num_enrollments DESC LIMIT 1;",
    "SELECT s.first_name, s.middle_name, s.last_name, s.stuid, COUNT(*) as num_enrollments FROM students s JOIN student_enrolment se ON s.stuid = se.stu_id JOIN student_enrolment_courses sec ON se.stu_enroll_id = sec.stu_enroll_id GROUP BY s.stuid ORDER BY num_enrollments DESC LIMIT 1",
    "SELECT semester_name FROM semesters WHERE sem_id NOT IN (SELECT semester_id FROM student_enrolment)",
    "SELECT semester_name FROM semesters WHERE sem_id NOT IN (SELECT semester_id FROM student_enrolment)",
    "SELECT DISTINCT courses.course_name FROM courses JOIN student_enrolment_courses ON courses.crs_id = student_enrolment_courses.crs_id",
    "SELECT DISTINCT course_name FROM courses JOIN student_enrolment_courses ON courses.crs_id = student_enrolment_courses.crs_id",
    "SELECT courses.course_name  FROM courses  JOIN student_enrolment_courses ON courses.crs_id = student_enrolment_courses.crs_id  GROUP BY courses.course_name  ORDER BY COUNT(student_enrolment_courses.stu_enroll_id) DESC  LIMIT 1",
    "SELECT courses.course_name  FROM courses  JOIN student_enrolment_courses ON courses.crs_id = student_enrolment_courses.crs_id  GROUP BY courses.course_name  ORDER BY COUNT(student_enrolment_courses.stu_enroll_id) DESC  LIMIT 1",
    "SELECT last_name FROM students WHERE state_province_county = 'North Carolina' AND stuid NOT IN (SELECT stu_id FROM student_enrolment)",
    "SELECT last_name FROM students  WHERE state_province_county = 'North Carolina'  AND stuid NOT IN (SELECT stu_id FROM student_enrolment)",
    "SELECT cell FROM students WHERE first_name = 'Timmothy' AND last_name = 'Ward'",
    "SELECT cell FROM students WHERE first_name = 'Timmothy' AND last_name = 'Ward'",
    "SELECT DISTINCT first_name FROM students WHERE ca_id <> pa_id",
    "SELECT first_name FROM students WHERE ca_id <> pa_id",
    "SELECT student_enrolment.degree_program_id, addresses.adr_id, addresses.line_1, addresses.line_2, addresses.line_3  FROM student_enrolment  JOIN students ON student_enrolment.stu_id = students.stuid  JOIN addresses ON students.ca_id = addresses.adr_id  GROUP BY student_enrolment.degree_program_id, addresses.adr_id, addresses.line_1, addresses.line_2, addresses.line_3  ORDER BY COUNT(*) DESC  LIMIT 1",
    "SELECT adr_id, line_1, line_2 FROM addresses WHERE adr_id = (SELECT ca_id FROM students GROUP BY ca_id ORDER BY COUNT(*) DESC LIMIT 1)",
    "SELECT COUNT(DISTINCT transcript_id), student_course_id FROM student_enrolment_courses JOIN transcripts ON student_enrolment_courses.stu_enroll_id = transcripts.transcript_id GROUP BY student_course_id ORDER BY COUNT(DISTINCT transcript_id) DESC LIMIT 1",
    "SELECT MAX(course_count), crs_id FROM (SELECT COUNT(DISTINCT stu_enroll_id) AS course_count, crs_id FROM student_enrolment_courses GROUP BY crs_id) AS course_counts",
    "SELECT semester_name FROM semesters WHERE sem_id IN (SELECT semester_id FROM student_enrolment WHERE degree_program_id IN (SELECT degree_pmg_id FROM degree_programs WHERE degree_smry_name = 'Master') INTERSECT SELECT semester_id FROM student_enrolment WHERE degree_program_id IN (SELECT degree_pmg_id FROM degree_programs WHERE degree_smry_name = 'Bachelor'))",
    "SELECT semester_id FROM student_enrolment WHERE degree_program_id IN (SELECT degree_pmg_id FROM degree_programs WHERE degree_smry_name = 'Masters') AND degree_program_id IN (SELECT degree_pmg_id FROM degree_programs WHERE degree_smry_name = 'Bachelors') GROUP BY semester_id HAVING COUNT(DISTINCT degree_program_id) = 2",
    "SELECT COUNT(DISTINCT line_1, line_2, line_3, city, zipcode, state_province_county, country, other_address_details) FROM addresses JOIN student_transcripts_tracking_2 ON addresses.adr_id = student_transcripts_tracking_2.pa_id WHERE student_transcripts_tracking_2.date_left IS NULL",
    "SELECT DISTINCT line_1, line_2, line_3, city, zipcode, state_province_county, country, other_address_details  FROM addresses  INNER JOIN student_enrolment ON addresses.adr_id = student_enrolment.stu_id  INNER JOIN students ON student_enrolment.stu_id = students.stuid",
    "SELECT * FROM students ORDER BY last_name DESC",
    "SELECT * FROM students ORDER BY last_name DESC",
    "SELECT * FROM sections WHERE section_name = 'h'",
    "SELECT sect_desc FROM sections WHERE section_name = 'h'",
    "SELECT first_name FROM students WHERE country = 'Haiti' OR cell = '09700166582'",
    "SELECT first_name FROM students WHERE (country = 'Haiti' AND other_address_details = 'permanent') OR cell = '09700166582'",
    "SELECT crs_desc FROM courses WHERE crs_name = 'math'",
    "SELECT crs_desc FROM courses WHERE crs_name LIKE '%math%'",
    "SELECT zipcode FROM addresses WHERE city = 'Port Chelsea'",
    "SELECT zipcode FROM addresses WHERE city = 'Port Chelsea'",
    "SELECT departments.department_id, departments.dept_name FROM departments JOIN degree_programs ON departments.department_id = degree_programs.dept_id GROUP BY departments.department_id, departments.dept_name ORDER BY COUNT(degree_programs.degree_pmg_id) DESC LIMIT 1;",
    "SELECT department_id, dept_name FROM departments WHERE department_id = (SELECT department_id FROM degree_programs GROUP BY department_id ORDER BY COUNT(*) DESC LIMIT 1)",
    "SELECT COUNT(DISTINCT department_id) FROM degree_programs",
    "SELECT COUNT(DISTINCT department_id) FROM degree_programs",
    "SELECT COUNT(DISTINCT degree_smry_name) FROM degree_programs",
    "SELECT COUNT(DISTINCT degree_pmg_id) FROM degree_programs",
    "SELECT COUNT(*) FROM degree_programs WHERE dept_id = (SELECT department_id FROM departments WHERE dept_name = 'engineering')",
    "SELECT COUNT(*) FROM degree_programs WHERE dept_id = (SELECT department_id FROM departments WHERE dept_name = 'engineering')",
    "SELECT sect_name, sect_desc FROM sections",
    "SELECT sect_name, sect_desc FROM sections",
    "SELECT crs_id, crs_name FROM courses WHERE crs_id IN (SELECT crs_id FROM sections GROUP BY crs_id HAVING COUNT(*) <= 2)",
    "SELECT crs_id, crs_name FROM courses WHERE crs_id IN (SELECT crs_id FROM sections GROUP BY crs_id HAVING COUNT(*) < 2)",
    "SELECT section_name FROM sections ORDER BY section_name DESC",
    "SELECT sect_name FROM sections ORDER BY sect_name DESC",
    "SELECT semesters.sem_id, semesters.sem_name FROM student_enrolment JOIN student_enrolment_courses ON student_enrolment.stu_enroll_id = student_enrolment_courses.stu_enroll_id JOIN sections ON student_enrolment_courses.course_id = sections.crs_id JOIN semesters ON student_enrolment.sem_id = semesters.sem_id GROUP BY semesters.sem_id, semesters.sem_name ORDER BY COUNT(DISTINCT student_enrolment.student_id) DESC LIMIT 1",
    "SELECT semesters.sem_id, semesters.sem_name, student_enrolment.degree_program_id, COUNT(*) AS num_students FROM student_enrolment JOIN semesters ON student_enrolment.sem_id = semesters.sem_id GROUP BY semesters.sem_id, semesters.sem_name, student_enrolment.degree_program_id HAVING COUNT(*) = (     SELECT MAX(num_students)     FROM (         SELECT semesters.sem_id, student_enrolment.degree_program_id, COUNT(*) AS num_students         FROM student_enrolment         JOIN semesters ON student_enrolment.sem_id = semesters.sem_id         GROUP BY semesters.sem_id, student_enrolment.degree_program_id     ) AS temp     WHERE temp.sem_id = semesters.sem_id AND temp.degree_program_id = student_enrolment.degree_program_id )",
    "SELECT dept_desc FROM departments WHERE dept_name LIKE '%the computer%'",
    "SELECT dept_desc FROM departments WHERE dept_name LIKE '%computer%'",
    "SELECT students.first_name, students.middle_name, students.last_name, students.stuid FROM students JOIN student_enrolment ON students.stuid = student_enrolment.student_id JOIN student_enrolment_courses ON student_enrolment.stu_enroll_id = student_enrolment_courses.stu_enroll_id GROUP BY students.stuid HAVING COUNT(DISTINCT student_enrolment.degree_program_id) = 2 AND COUNT(DISTINCT student_enrolment.sem_id) = 1",
    "SELECT students.stuid, students.first_name, students.middle_name, students.last_name FROM students JOIN student_enrolment ON students.stuid = student_enrolment.student_id GROUP BY students.stuid HAVING COUNT(DISTINCT student_enrolment.degree_program_id) = 2;",
    "SELECT first_name, middle_name, last_name FROM students  INNER JOIN student_enrolment ON students.stuid = student_enrolment.student_id  INNER JOIN degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_pmg_id  WHERE degree_summary_description LIKE '%Bachelor%'",
    "SELECT first_name, middle_name, last_name FROM students  JOIN student_enrolment ON students.stuid = student_enrolment.student_id  JOIN degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_pmg_id  WHERE degree_summary_description = 'Bachelors'",
    "SELECT degree_programs.degree_summary_description, COUNT(*) AS num_students_enrolled FROM student_enrolment JOIN degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_pmg_id GROUP BY degree_programs.degree_summary_description ORDER BY num_students_enrolled DESC LIMIT 1;",
    "SELECT degree_summary_name FROM degree_programs  WHERE degree_pmg_id IN (     SELECT degree_program_id FROM student_enrolment      GROUP BY degree_program_id      ORDER BY COUNT(student_id) DESC      LIMIT 1 )",
    "SELECT degree_programs.degree_pmg_id, degree_programs.degree_smry_name  FROM degree_programs  JOIN student_enrolment ON degree_programs.degree_pmg_id = student_enrolment.degree_program_id  GROUP BY degree_programs.degree_pmg_id, degree_programs.degree_smry_name  ORDER BY COUNT(student_enrolment.student_id) DESC  LIMIT 1",
    "SELECT degree_programs.degree_pmg_id, degree_programs.degree_summary_description  FROM degree_programs  JOIN student_enrolment ON degree_programs.degree_pmg_id = student_enrolment.degree_program_id  GROUP BY degree_programs.degree_pmg_id  ORDER BY COUNT(student_enrolment.student_id) DESC  LIMIT 1",
    "SELECT student.stuid, student.first_name, student.middle_name, student.last_name, COUNT(*) AS num_enrollments FROM student_enrolment JOIN student ON student_enrolment.student_id = student.stuid GROUP BY student.stuid ORDER BY num_enrollments DESC LIMIT 1;",
    "SELECT s.stuid, s.first_name, s.middle_name, s.last_name, COUNT(*) as num_enrollments FROM students s JOIN student_enrolment se ON s.stuid = se.student_id GROUP BY s.stuid, s.first_name, s.middle_name, s.last_name ORDER BY num_enrollments DESC LIMIT 1",
    "SELECT sem_name FROM semesters WHERE sem_id NOT IN (SELECT sem_id FROM student_enrolment)",
    "SELECT sem_name FROM semesters WHERE sem_id NOT IN (SELECT sem_id FROM student_enrolment)",
    "SELECT DISTINCT crs_name FROM courses JOIN student_enrolment_courses ON courses.crs_id = student_enrolment_courses.course_id",
    "SELECT DISTINCT crs_name FROM courses JOIN student_enrolment_courses ON courses.crs_id = student_enrolment_courses.course_id",
    "SELECT crs_name FROM courses WHERE crs_id = (SELECT course_id FROM student_enrolment_courses GROUP BY course_id ORDER BY COUNT(*) DESC LIMIT 1)",
    "SELECT crs_name FROM courses WHERE crs_id = (SELECT course_id FROM student_enrolment_courses GROUP BY course_id ORDER BY COUNT(*) DESC LIMIT 1)",
    "SELECT last_name FROM students WHERE state_province_county = 'North Carolina' AND stuid NOT IN (SELECT student_id FROM student_enrolment)",
    "SELECT last_name FROM students  WHERE state_province_county = 'North Carolina'  AND stuid NOT IN (SELECT student_id FROM student_enrolment)",
    "SELECT cell FROM students WHERE first_name = 'Timmothy' AND last_name = 'Ward'",
    "SELECT cell FROM students WHERE first_name = 'Timmothy' AND last_name = 'Ward'",
    "SELECT first_name FROM students WHERE ca_id <> pa_id",
    "SELECT first_name FROM students WHERE pa_id <> ca_id",
    "SELECT addresses.adr_id, addresses.line_1, addresses.line_2, addresses.line_3 FROM addresses JOIN student_enrolment ON addresses.adr_id = student_enrolment.ca_id GROUP BY addresses.adr_id ORDER BY COUNT(student_enrolment.student_id) DESC LIMIT 1",
    "SELECT adr_id, line_1, line_2 FROM addresses WHERE adr_id = (SELECT address_id FROM students GROUP BY address_id ORDER BY COUNT(*) DESC LIMIT 1)",
    "SELECT transcript_date, oth_dtl FROM transcripts ORDER BY transcript_date LIMIT 1",
    "SELECT MIN(transcript_date), * FROM transcripts",
    "SELECT COUNT(DISTINCT transcript_id), stu_crs_id FROM transcript_contents GROUP BY stu_crs_id HAVING COUNT(DISTINCT transcript_id) ORDER BY COUNT(DISTINCT transcript_id) DESC LIMIT 1",
    "SELECT MAX(course_count), course_id FROM (SELECT COUNT(course_id) AS course_count, course_id FROM student_enrolment_courses GROUP BY course_id) AS course_counts",
    "SELECT semesters.sem_name  FROM semesters  JOIN student_enrolment ON semesters.sem_id = student_enrolment.sem_id  JOIN degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_pmg_id  JOIN student_enrolment_courses ON student_enrolment.stu_enroll_id = student_enrolment_courses.stu_enroll_id  JOIN courses ON student_enrolment_courses.course_id = courses.crs_id  WHERE degree_programs.degree_smry_name = 'Master' AND semesters.sem_id IN  (SELECT semesters.sem_id  FROM semesters  JOIN student_enrolment ON semesters.sem_id = student_enrolment.sem_id  JOIN degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_pmg_id  JOIN student_enrolment_courses ON student_enrolment.stu_enroll_id = student_enrolment_courses.stu_enroll_id  JOIN courses ON student_enrolment_courses.course_id =",
    "SELECT sem_id FROM student_enrolment WHERE degree_program_id IN (SELECT degree_pmg_id FROM degree_programs WHERE degree_summary_description LIKE '%Masters%') AND degree_program_id IN (SELECT degree_pmg_id FROM degree_programs WHERE degree_summary_description LIKE '%Bachelors%') GROUP BY sem_id HAVING COUNT(DISTINCT degree_program_id) = 2",
    "SELECT COUNT(DISTINCT line_1, line_2, line_3, city, zipcode, state_province_county, cntry, oth_adr_dtl) FROM addresses WHERE adr_id IN (SELECT adr_id FROM student_transcripts_tracking_3 WHERE stuid IN (SELECT student_id FROM student_enrolment WHERE sem_id = (SELECT sem_id FROM semesters WHERE sem_name = 'current')))",
    "SELECT DISTINCT line_1, line_2, line_3, city, zipcode, state_province_county, cntry, oth_adr_dtl FROM addresses JOIN student_transcripts_tracking_3 ON addresses.adr_id = student_transcripts_tracking_3.pa_id OR addresses.adr_id = student_transcripts_tracking_3.ca_id JOIN students ON students.pa_id = addresses.adr_id OR students.ca_id = addresses.adr_id",
    "SELECT * FROM students ORDER BY last_name DESC",
    "SELECT * FROM students ORDER BY last_name DESC",
    "SELECT * FROM sections WHERE sect_name = 'h'",
    "SELECT sect_desc FROM sections WHERE sect_name = 'h'",
    "SELECT first_name FROM students WHERE cell = '09700166582' OR EXISTS (SELECT * FROM addresses WHERE students.stuid = addresses.stuid AND cntry = 'Haiti' AND oth_adr_dtl = 'permanent')",
    "SELECT first_name FROM students WHERE (cell = '09700166582' OR pa_id IN (SELECT adr_id FROM addresses WHERE cntry = 'Haiti' AND line_1 IS NOT NULL))",
    "SELECT departments.dept_id, departments.department_name FROM departments JOIN degree_programs ON departments.dept_id = degree_programs.dept_id GROUP BY departments.dept_id, departments.department_name ORDER BY COUNT(degree_programs.degree_pmg_id) DESC LIMIT 1;",
    "SELECT department_name, dept_id FROM departments WHERE dept_id = (SELECT dept_id FROM student_enrolment GROUP BY degree_program_id ORDER BY COUNT(*) DESC LIMIT 1)",
    "SELECT COUNT(DISTINCT dept_id) FROM degree_programs",
    "SELECT COUNT(DISTINCT dept_id) FROM degree_programs",
    "SELECT COUNT(DISTINCT degree_smry_name) FROM degree_programs",
    "SELECT COUNT(DISTINCT degree_pmg_id) FROM degree_programs",
    "SELECT COUNT(*) FROM degree_programs WHERE dept_id = (SELECT dept_id FROM departments WHERE department_name = 'engineering')",
    "SELECT COUNT(*) FROM degree_programs WHERE dept_id = (SELECT dept_id FROM departments WHERE department_name = 'engineering')",
    "SELECT section_name, sect_desc FROM sections",
    "SELECT section_name, sect_desc FROM sections",
    "SELECT course_id, course_name FROM courses WHERE course_id IN (SELECT course_id FROM sections GROUP BY course_id HAVING COUNT(*) <= 2)",
    "SELECT course_id, course_name FROM courses WHERE course_id IN (SELECT course_id FROM sections GROUP BY course_id HAVING COUNT(*) < 2)",
    "SELECT semesters.sem_id, semesters.sem_name FROM semesters JOIN student_enrolment ON semesters.sem_id = student_enrolment.sem_id GROUP BY semesters.sem_id, semesters.sem_name ORDER BY COUNT(student_enrolment.stu_id) DESC LIMIT 1",
    "SELECT semesters.sem_id, semesters.sem_name, student_enrolment.degree_program_id, COUNT(*) AS num_students FROM student_enrolment JOIN semesters ON student_enrolment.sem_id = semesters.sem_id GROUP BY semesters.sem_id, semesters.sem_name, student_enrolment.degree_program_id HAVING COUNT(*) = (     SELECT MAX(num_students)     FROM (         SELECT semesters.sem_id, student_enrolment.degree_program_id, COUNT(*) AS num_students         FROM student_enrolment         JOIN semesters ON student_enrolment.sem_id = semesters.sem_id         GROUP BY semesters.sem_id, student_enrolment.degree_program_id     ) AS temp     WHERE temp.sem_id = semesters.sem_id AND temp.degree_program_id = student_enrolment.degree_program_id )",
    "SELECT dept_desc FROM departments WHERE department_name LIKE '%the computer%'",
    "SELECT dept_desc FROM departments WHERE department_name LIKE '%computer%'",
    "SELECT students.first_name, students.middle_name, students.last_name, students.stuid FROM students JOIN student_enrolment ON students.stuid = student_enrolment.stu_id JOIN student_enrolment_courses ON student_enrolment.stu_enroll_id = student_enrolment_courses.stu_enroll_id GROUP BY students.stuid HAVING COUNT(DISTINCT student_enrolment_courses.course_id) >= 2 AND COUNT(DISTINCT student_enrolment.sem_id) = 1",
    "SELECT students.stuid, students.first_name, students.middle_name, students.last_name FROM students JOIN student_enrolment ON students.stuid = student_enrolment.stu_id JOIN student_enrolment_courses ON student_enrolment.stu_enroll_id = student_enrolment_courses.stu_enroll_id GROUP BY students.stuid HAVING COUNT(DISTINCT student_enrolment.degree_program_id) = 2 AND COUNT(DISTINCT student_enrolment.sem_id) = 1",
    "SELECT first_name, middle_name, last_name FROM students  INNER JOIN student_enrolment ON students.stuid = student_enrolment.stu_id  INNER JOIN degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_pmg_id  WHERE degree_summary_description LIKE '%Bachelor%'",
    "SELECT first_name, middle_name, last_name FROM students  JOIN student_enrolment ON students.stuid = student_enrolment.stu_id  JOIN degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_pmg_id  WHERE degree_summary_description = 'Bachelors'",
    "SELECT degree_programs.degree_summary_description, COUNT(*) AS num_students_enrolled FROM student_enrolment JOIN degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_pmg_id GROUP BY degree_programs.degree_summary_description ORDER BY num_students_enrolled DESC LIMIT 1;",
    "SELECT degree_summary_name FROM degree_programs  WHERE degree_pmg_id IN  (SELECT degree_program_id FROM student_enrolment  GROUP BY degree_program_id  ORDER BY COUNT(DISTINCT stu_id) DESC LIMIT 1)",
    "SELECT degree_programs.degree_pmg_id, degree_programs.degree_smry_name  FROM degree_programs  JOIN student_enrolment ON degree_programs.degree_pmg_id = student_enrolment.degree_program_id  GROUP BY degree_programs.degree_pmg_id, degree_programs.degree_smry_name  ORDER BY COUNT(student_enrolment.stu_id) DESC  LIMIT 1",
    "SELECT degree_programs.degree_pmg_id, degree_programs.degree_smry_name  FROM degree_programs  JOIN student_enrolment ON degree_programs.degree_pmg_id = student_enrolment.degree_program_id  GROUP BY degree_programs.degree_pmg_id, degree_programs.degree_smry_name  ORDER BY COUNT(student_enrolment.stu_id) DESC  LIMIT 1",
    "SELECT stu_id, first_name, middle_name, last_name, COUNT(*) AS num_enrollments FROM student_enrolment JOIN students ON student_enrolment.stu_id = students.stuid GROUP BY stu_id, first_name, middle_name, last_name ORDER BY num_enrollments DESC LIMIT 1;",
    "SELECT s.first_name, s.middle_name, s.last_name, s.stuid, COUNT(*) AS num_enrollments FROM students s JOIN student_enrolment se ON s.stuid = se.stu_id GROUP BY s.stuid ORDER BY num_enrollments DESC LIMIT 1",
    "SELECT sem_name FROM semesters WHERE sem_id NOT IN (SELECT sem_id FROM student_enrolment)",
    "SELECT sem_name FROM semesters WHERE sem_id NOT IN (SELECT sem_id FROM student_enrolment)",
    "SELECT last_name FROM students WHERE state_province_county = 'North Carolina' AND stuid NOT IN (SELECT stu_id FROM student_enrolment)",
    "SELECT last_name FROM students  WHERE state_province_county = 'North Carolina'  AND stuid NOT IN (SELECT stu_id FROM student_enrolment)",
    "SELECT first_name FROM students WHERE ca_id <> pa_id",
    "SELECT first_name FROM students WHERE ca_id <> pa_id",
    "SELECT addresses.adr_id, addresses.line_1, addresses.line_2, addresses.line_3 FROM addresses JOIN student_enrolment ON addresses.adr_id = student_enrolment.ca_id GROUP BY addresses.adr_id ORDER BY COUNT(student_enrolment.stu_id) DESC LIMIT 1",
    "SELECT addresses.adr_id, addresses.line_1, addresses.line_2  FROM addresses  JOIN student_enrolment ON addresses.adr_id = student_enrolment.ca_id  GROUP BY addresses.adr_id  ORDER BY COUNT(student_enrolment.stu_id) DESC  LIMIT 1",
    "SELECT transcript_date, oth_dtl FROM transcripts ORDER BY transcript_date LIMIT 1",
    "SELECT MIN(transcript_date), * FROM transcripts",
    "SELECT COUNT(DISTINCT transcript_id), stu_crs_id FROM transcript_contents GROUP BY stu_crs_id ORDER BY COUNT(DISTINCT transcript_id) DESC LIMIT 1",
    "SELECT MAX(course_count), course_id FROM (SELECT COUNT(DISTINCT stu_crs_id) AS course_count, course_id FROM student_enrolment_courses GROUP BY course_id) AS course_counts",
    "SELECT semesters.sem_name  FROM semesters  JOIN student_enrolment ON semesters.sem_id = student_enrolment.sem_id  JOIN degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_pmg_id  JOIN student_enrolment_courses ON student_enrolment.stu_enroll_id = student_enrolment_courses.stu_enroll_id  JOIN courses ON student_enrolment_courses.course_id = courses.course_id  WHERE degree_programs.degree_smry_name = 'Master' AND semesters.sem_id IN  (SELECT semesters.sem_id  FROM semesters  JOIN student_enrolment ON semesters.sem_id = student_enrolment.sem_id  JOIN degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_pmg_id  JOIN student_enrolment_courses ON student_enrolment.stu_enroll_id = student_enrolment_courses.stu_enroll_id  JOIN courses ON student_enrolment_courses.course_id = courses",
    "SELECT sem_id FROM student_enrolment WHERE degree_program_id IN (SELECT degree_pmg_id FROM degree_programs WHERE degree_summary_description LIKE '%Masters%') AND degree_program_id IN (SELECT degree_pmg_id FROM degree_programs WHERE degree_summary_description LIKE '%Bachelors%') GROUP BY sem_id HAVING COUNT(DISTINCT degree_program_id) = 2",
    "SELECT COUNT(DISTINCT line_1, line_2, line_3, city, zip_postcode, state_province_county, cntry, oth_adr_dtl) FROM addresses JOIN student_transcripts_tracking_4 ON addresses.adr_id = student_transcripts_tracking_4.pa_id WHERE student_transcripts_tracking_4.date_left IS NULL",
    "SELECT DISTINCT line_1, line_2, line_3, city, zip_postcode, state_province_county, cntry, oth_adr_dtl FROM addresses JOIN student_enrolment ON addresses.adr_id = student_enrolment.ca_id JOIN students ON student_enrolment.stu_id = students.stuid",
    "SELECT * FROM sections WHERE section_name = 'h'",
    "SELECT sect_desc FROM sections WHERE section_name = 'h'",
    "SELECT first_name FROM students WHERE cell_mobile_number = '09700166582' OR pa_id IN (SELECT adr_id FROM addresses WHERE cntry = 'Haiti')",
    "SELECT first_name FROM students WHERE (cell_mobile_number = '09700166582' OR pa_id IN (SELECT adr_id FROM addresses WHERE cntry = 'Haiti' AND line_1 IS NOT NULL))",
    "SELECT title FROM cartoon WHERE dir = 'Ben Jones'",
    "SELECT title FROM cartoon WHERE dir = 'Ben Jones'",
    "SELECT COUNT(*) FROM cartoon WHERE wr = 'Joseph Kuhr'",
    "SELECT COUNT(*) FROM cartoon WHERE wr = 'Joseph Kuhr'",
    "SELECT cartoon.title, cartoon.dir FROM cartoon ORDER BY cartoon.original_air_date ASC",
    "SELECT title, dir FROM cartoon ORDER BY original_air_date",
    "SELECT title FROM cartoon WHERE dir = 'Ben Jones' OR dir = 'Brandon Vietti'",
    "SELECT title FROM cartoon WHERE dir = 'Ben Jones' OR dir = 'Brandon Vietti'",
    "SELECT cntry, COUNT(*) AS num_channels FROM tv_channel GROUP BY cntry ORDER BY num_channels DESC LIMIT 1;",
    "SELECT cntry, COUNT(*) AS num_channels FROM tv_channel GROUP BY cntry ORDER BY num_channels DESC LIMIT 1;",
    "SELECT COUNT(DISTINCT ser_name), COUNT(DISTINCT cont) FROM tv_channel",
    "SELECT COUNT(DISTINCT ser_name), COUNT(DISTINCT cont) FROM tv_channel",
    "SELECT cont FROM tv_channel WHERE ser_name = 'Sky Radio'",
    "SELECT cont FROM tv_channel WHERE ser_name = 'Sky Radio'",
    "SELECT package_option FROM tv_channel WHERE ser_name = 'Sky Radio'",
    "SELECT package_option FROM tv_channel WHERE ser_name = 'Sky Radio'",
    "SELECT COUNT(*) FROM tv_channel WHERE lang = 'English'",
    "SELECT COUNT(*) FROM tv_channel WHERE lang = 'English'",
    "SELECT lang, COUNT(*) AS num_channels FROM tv_channel GROUP BY lang ORDER BY num_channels ASC LIMIT 1;",
    "SELECT lang, COUNT(*) AS num_channels FROM tv_channel GROUP BY lang HAVING COUNT(*) = (SELECT MIN(channel_count) FROM (SELECT COUNT(*) AS channel_count FROM tv_channel GROUP BY lang) AS channel_counts) ORDER BY num_channels ASC;",
    "SELECT lang, COUNT(*) AS num_channels FROM tv_channel GROUP BY lang",
    "SELECT lang, COUNT(*) AS num_channels FROM tv_channel GROUP BY lang",
    "SELECT tv_channel.ser_name FROM tv_channel JOIN cartoon ON tv_channel.id = cartoon.chnl WHERE cartoon.title = 'The Rise of the Blue Beetle!'",
    "SELECT tv_channel.ser_name FROM tv_channel JOIN cartoon ON tv_channel.id = cartoon.chnl WHERE cartoon.title = 'The Rise of the Blue Beetle'",
    "SELECT cartoon.title FROM tvshow_0.cartoon JOIN tvshow_0.tv_series ON cartoon.chnl = tv_series.id JOIN tvshow_0.tv_channel ON tv_series.chnl = tv_channel.id WHERE tv_channel.ser_name = 'Sky Radio'",
    "SELECT title FROM cartoon WHERE chnl IN (SELECT id FROM tv_channel WHERE ser_name = 'Sky Radio')",
    "SELECT ep FROM tv_series ORDER BY rtg DESC",
    "SELECT * FROM tv_series ORDER BY rtg DESC",
    "SELECT ser_name AS TV_Series, ep AS Episode, rtg AS Rating FROM tv_channel JOIN tv_series ON tv_channel.id = tv_series.chnl ORDER BY rtg DESC LIMIT 3",
    "SELECT ep, rtg FROM tv_series ORDER BY rtg DESC LIMIT 3",
    "SELECT air_date FROM tv_series WHERE ep = \"A Love of a Lifetime\"",
    "SELECT air_date FROM tv_series WHERE ep = \"A Love of a Lifetime\"",
    "SELECT wkly_rank FROM tv_series WHERE ser_name = 'A Love of a Lifetime'",
    "SELECT wkly_rank FROM tv_series WHERE ep = \"A Love of a Lifetime\"",
    "SELECT tv_channel.ser_name FROM tv_channel JOIN tv_series ON tv_channel.id = tv_series.chnl WHERE tv_series.ep = \"A Love of a Lifetime\"",
    "SELECT ser_name FROM tv_series WHERE ep = \"A Love of a Lifetime\"",
    "SELECT ep FROM tv_series WHERE chnl = 'Sky Radio'",
    "I'm sorry, but the serialized schema you provided does not contain a table for TV shows. Could you please provide the correct schema?",
    "SELECT dir, COUNT(*) FROM cartoon GROUP BY dir",
    "SELECT dir, COUNT(*) FROM cartoon GROUP BY dir",
    "SELECT prod_code, chnl FROM cartoon WHERE original_air_date = (SELECT MAX(original_air_date) FROM cartoon)",
    "SELECT prod_code, chnl FROM cartoon WHERE original_air_date = (SELECT MAX(original_air_date) FROM cartoon)",
    "SELECT package_option, ser_name FROM tv_channel WHERE hd = true",
    "SELECT package_option, ser_name FROM tv_channel WHERE hd = 'yes'",
    "SELECT DISTINCT tv_channel.cntry  FROM tv_channel  JOIN tv_series ON tv_channel.id = tv_series.chnl  JOIN cartoon ON tv_series.id = cartoon.chnl  WHERE cartoon.wr LIKE '%Todd Casey%'",
    "SELECT DISTINCT tv_channel.cntry  FROM tv_channel  JOIN tv_series ON tv_channel.id = tv_series.chnl  JOIN cartoon ON tv_series.id = cartoon.chnl  WHERE cartoon.wr = 'Todd Casey'",
    "SELECT DISTINCT tv_channel.cntry  FROM tv_channel  WHERE tv_channel.id NOT IN      (SELECT cartoon.chnl       FROM cartoon       WHERE cartoon.wr = 'Todd Casey')",
    "SELECT DISTINCT cntry FROM tv_channel WHERE id NOT IN (SELECT chnl FROM cartoon WHERE wr = 'Todd Casey')",
    "SELECT ser_name, cntry FROM tv_channel  JOIN tv_series ON tv_channel.id = tv_series.chnl  JOIN cartoon ON tv_series.id = cartoon.chnl  WHERE dir LIKE '%Ben Jones%' AND dir LIKE '%Michael Chang%'",
    "SELECT ser_name, cntry FROM tv_channel  JOIN tv_series ON tv_channel.id = tv_series.chnl  JOIN cartoon ON tv_series.id = cartoon.chnl  WHERE cartoon.dir = 'Ben Jones' AND cartoon.dir = 'Michael Chang'",
    "SELECT par, cntry FROM tv_channel WHERE lang <> 'English'",
    "SELECT par, cntry FROM tv_channel WHERE lang <> 'English'",
    "SELECT id FROM tv_channel WHERE cntry IN (SELECT cntry FROM tv_channel GROUP BY cntry HAVING COUNT(*) > 2)",
    "SELECT id FROM tv_channel GROUP BY id HAVING COUNT(*) > 2",
    "SELECT DISTINCT tv_channel.id FROM tv_channel LEFT JOIN tv_series ON tv_channel.id = tv_series.chnl LEFT JOIN cartoon ON tv_series.id = cartoon.chnl AND cartoon.dir = 'Ben Jones' WHERE cartoon.id IS NULL",
    "SELECT DISTINCT tv_channel.id  FROM tv_channel  LEFT JOIN tv_series ON tv_channel.id = tv_series.chnl  LEFT JOIN cartoon ON tv_series.id = cartoon.chnl AND cartoon.dir = 'Ben Jones'  WHERE cartoon.id IS NULL",
    "SELECT package_option  FROM tv_channel  WHERE id NOT IN      (SELECT chnl       FROM cartoon       WHERE dir = 'Ben Jones')",
    "SELECT DISTINCT package_option FROM tv_channel WHERE id NOT IN (SELECT chnl FROM cartoon WHERE dir = 'Ben Jones')",
    "SELECT title FROM cartoon WHERE dir = 'Ben Jones'",
    "SELECT title FROM cartoon WHERE dir = 'Ben Jones'",
    "SELECT cartoon.title, cartoon.dir FROM cartoon ORDER BY cartoon.original_air_date ASC",
    "SELECT title, dir FROM cartoon ORDER BY original_air_date",
    "SELECT title FROM cartoon WHERE dir = 'Ben Jones' OR dir = 'Brandon Vietti'",
    "SELECT title FROM cartoon WHERE dir = 'Ben Jones' OR dir = 'Brandon Vietti'",
    "SELECT cntry, COUNT(*) AS num_channels FROM tv_channel GROUP BY cntry ORDER BY num_channels DESC LIMIT 1;",
    "SELECT cntry, COUNT(*) AS num_channels FROM tv_channel GROUP BY cntry ORDER BY num_channels DESC LIMIT 1;",
    "SELECT COUNT(DISTINCT ser_name), COUNT(DISTINCT cont) FROM tv_channel",
    "SELECT COUNT(DISTINCT ser_name), COUNT(DISTINCT cont) FROM tv_channel",
    "SELECT cont FROM tv_channel WHERE ser_name = 'Sky Radio'",
    "SELECT cont FROM tv_channel WHERE ser_name = 'Sky Radio'",
    "SELECT package_option FROM tv_channel WHERE ser_name = 'Sky Radio'",
    "SELECT package_option FROM tv_channel WHERE ser_name = 'Sky Radio'",
    "SELECT tv_channel.ser_name  FROM tv_channel  JOIN cartoon ON tv_channel.id = cartoon.chnl  WHERE cartoon.title = 'The Rise of the Blue Beetle!'",
    "SELECT tv_channel.ser_name FROM tv_channel JOIN cartoon ON tv_channel.id = cartoon.chnl WHERE cartoon.title = 'The Rise of the Blue Beetle'",
    "SELECT cartoon.title FROM tv_channel  JOIN tv_series ON tv_channel.id = tv_series.chnl  JOIN cartoon ON tv_series.id = cartoon.chnl  WHERE tv_channel.ser_name = 'Sky Radio'",
    "SELECT title FROM cartoon WHERE chnl IN (SELECT id FROM tv_channel WHERE ser_name = 'Sky Radio')",
    "SELECT ep FROM tv_series ORDER BY rtg DESC",
    "SELECT * FROM tv_series ORDER BY rtg DESC",
    "SELECT ser_name AS TV_Series, ep AS Episode, rtg AS Rating FROM tv_channel JOIN tv_series ON tv_channel.id = tv_series.chnl ORDER BY rtg DESC LIMIT 3",
    "SELECT ep, rtg FROM tv_series ORDER BY rtg DESC LIMIT 3",
    "SELECT air_date FROM tv_series WHERE ep = \"A Love of a Lifetime\"",
    "SELECT air_date FROM tv_series WHERE ep = \"A Love of a Lifetime\"",
    "SELECT weekly_rank FROM tv_series WHERE ep = \"A Love of a Lifetime\"",
    "SELECT weekly_rank FROM tv_series WHERE ep = \"A Love of a Lifetime\"",
    "SELECT tv_channel.ser_name FROM tv_channel JOIN tv_series ON tv_channel.id = tv_series.chnl WHERE tv_series.ep = \"A Love of a Lifetime\"",
    "SELECT ser_name FROM tv_series WHERE ep = \"A Love of a Lifetime\"",
    "SELECT ep FROM tv_series WHERE chnl = 'Sky Radio'",
    "SELECT ep FROM tv_series WHERE ser_name = 'Sky Radio'",
    "SELECT dir, COUNT(*) FROM cartoon GROUP BY dir",
    "SELECT dir, COUNT(*) FROM cartoon GROUP BY dir",
    "SELECT prod_code, chnl FROM cartoon WHERE original_air_date = (SELECT MAX(original_air_date) FROM cartoon)",
    "SELECT prod_code, chnl FROM cartoon WHERE original_air_date = (SELECT MAX(original_air_date) FROM cartoon)",
    "SELECT package_option, ser_name FROM tv_channel WHERE hd = true",
    "SELECT package_option, ser_name FROM tv_channel WHERE hd = 'yes'",
    "SELECT DISTINCT tv_channel.cntry FROM cartoon JOIN tv_series ON cartoon.id = tv_series.id JOIN tv_channel ON tv_series.chnl = tv_channel.id WHERE cartoon.written_by = 'Todd Casey'",
    "SELECT DISTINCT cntry FROM tv_channel c JOIN tv_series s ON c.id = s.chnl JOIN cartoon t ON s.id = t.chnl WHERE t.written_by = 'Todd Casey'",
    "SELECT DISTINCT tv_channel.cntry  FROM tv_channel  WHERE tv_channel.id NOT IN      (SELECT cartoon.chnl       FROM cartoon       WHERE cartoon.written_by = 'Todd Casey')",
    "SELECT DISTINCT cntry FROM tv_channel WHERE id NOT IN (SELECT chnl FROM cartoon WHERE written_by = 'Todd Casey')",
    "SELECT ser_name, cntry FROM tv_channel  JOIN tv_series ON tv_channel.id = tv_series.chnl  JOIN cartoon ON tv_series.id = cartoon.chnl  WHERE dir IN ('Ben Jones', 'Michael Chang')",
    "SELECT ser_name, cntry FROM tv_channel  JOIN tv_series ON tv_channel.id = tv_series.chnl  JOIN cartoon ON tv_series.id = cartoon.chnl  WHERE cartoon.dir = 'Ben Jones' AND cartoon.dir = 'Michael Chang'",
    "SELECT par, cntry FROM tv_channel WHERE language <> 'English'",
    "SELECT par, cntry FROM tv_channel WHERE language <> 'English'",
    "SELECT id FROM tv_channel WHERE cntry IN (SELECT cntry FROM tv_channel GROUP BY cntry HAVING COUNT(*) > 2)",
    "SELECT id FROM tv_channel GROUP BY id HAVING COUNT(*) > 2",
    "SELECT DISTINCT tv_channel.id FROM tv_channel LEFT JOIN tv_series ON tv_channel.id = tv_series.chnl LEFT JOIN cartoon ON tv_series.id = cartoon.chnl AND cartoon.dir = 'Ben Jones' WHERE cartoon.id IS NULL",
    "SELECT DISTINCT tv_channel.id  FROM tv_channel  LEFT JOIN tv_series ON tv_channel.id = tv_series.chnl  LEFT JOIN cartoon ON tv_series.id = cartoon.chnl AND cartoon.dir = 'Ben Jones'  WHERE cartoon.id IS NULL",
    "SELECT package_option  FROM tv_channel  WHERE id NOT IN      (SELECT chnl       FROM cartoon       WHERE dir = 'Ben Jones')",
    "SELECT DISTINCT package_option FROM tv_channel WHERE id NOT IN (SELECT chnl FROM cartoon WHERE dir = 'Ben Jones')",
    "SELECT title FROM cartoon WHERE dir = 'Ben Jones'",
    "SELECT title FROM cartoon WHERE dir = 'Ben Jones'",
    "SELECT COUNT(*) FROM cartoon WHERE wr = 'Joseph Kuhr'",
    "SELECT COUNT(*) FROM cartoon WHERE wr = 'Joseph Kuhr'",
    "SELECT title, dir FROM cartoon ORDER BY original_air_date ASC",
    "SELECT title, dir FROM cartoon ORDER BY original_air_date",
    "SELECT title FROM cartoon WHERE dir = 'Ben Jones' OR dir = 'Brandon Vietti'",
    "SELECT title FROM cartoon WHERE dir = 'Ben Jones' OR dir = 'Brandon Vietti'",
    "SELECT cntry, COUNT(*) AS num_channels FROM tv_channel GROUP BY cntry ORDER BY num_channels DESC LIMIT 1;",
    "SELECT cntry, COUNT(*) AS num_channels FROM tv_channel GROUP BY cntry ORDER BY num_channels DESC LIMIT 1;",
    "SELECT COUNT(DISTINCT ser_name), COUNT(DISTINCT content) FROM tv_channel",
    "SELECT COUNT(DISTINCT ser_name), COUNT(DISTINCT content) FROM tv_channel",
    "SELECT content FROM tv_channel WHERE ser_name = 'Sky Radio'",
    "SELECT content FROM tv_channel WHERE ser_name = 'Sky Radio'",
    "SELECT package_option FROM tv_channel WHERE ser_name = 'Sky Radio'",
    "SELECT package_option FROM tv_channel WHERE ser_name = 'Sky Radio'",
    "SELECT ser_name FROM tv_channel WHERE id = (SELECT chnl FROM cartoon WHERE title = 'The Rise of the Blue Beetle!')",
    "SELECT ser_name FROM tv_channel JOIN cartoon ON tv_channel.id = cartoon.chnl WHERE title = 'The Rise of the Blue Beetle'",
    "SELECT cartoon.title FROM cartoon JOIN tv_channel ON cartoon.chnl = tv_channel.id WHERE tv_channel.ser_name = 'Sky Radio'",
    "SELECT title FROM cartoon WHERE chnl IN (SELECT id FROM tv_channel WHERE ser_name = 'Sky Radio')",
    "SELECT ep FROM tv_series ORDER BY rating DESC",
    "SELECT * FROM tv_series ORDER BY rating DESC",
    "SELECT ser_name AS TV_Series, ep AS Episode, rating AS Rating FROM tv_channel JOIN tv_series ON tv_channel.id = tv_series.chnl ORDER BY rating DESC LIMIT 3",
    "SELECT ep, rating FROM tv_series ORDER BY rating DESC LIMIT 3",
    "SELECT air_date FROM tv_series WHERE ep = \"A Love of a Lifetime\"",
    "SELECT air_date FROM tv_series WHERE ep = \"A Love of a Lifetime\"",
    "SELECT weekly_rank FROM tv_series WHERE ep = \"A Love of a Lifetime\"",
    "SELECT weekly_rank FROM tv_series WHERE ep = \"A Love of a Lifetime\"",
    "SELECT tv_channel.ser_name FROM tv_channel JOIN tv_series ON tv_channel.id = tv_series.chnl WHERE tv_series.ep = \"A Love of a Lifetime\"",
    "SELECT ser_name FROM tv_series WHERE ep = \"A Love of a Lifetime\"",
    "SELECT ep FROM tv_series WHERE chnl IN (SELECT id FROM tv_channel WHERE ser_name = 'Sky Radio')",
    "I'm sorry, but the serialized schema you provided does not contain a table for TV shows. Could you please provide the correct schema?",
    "SELECT dir, COUNT(*) FROM cartoon GROUP BY dir",
    "SELECT dir, COUNT(*) FROM cartoon GROUP BY dir",
    "SELECT prod_code, chnl FROM cartoon WHERE original_air_date = (SELECT MAX(original_air_date) FROM cartoon)",
    "SELECT prod_code, chnl FROM cartoon WHERE original_air_date = (SELECT MAX(original_air_date) FROM cartoon)",
    "SELECT package_option, ser_name FROM tv_channel WHERE hd = true",
    "SELECT package_option, ser_name FROM tv_channel WHERE hd = 'yes'",
    "SELECT DISTINCT tv_channel.cntry FROM tv_channel JOIN cartoon ON tv_channel.id = cartoon.chnl WHERE cartoon.wr = 'Todd Casey'",
    "SELECT DISTINCT tv_channel.cntry  FROM tv_channel  JOIN tv_series ON tv_channel.id = tv_series.chnl  JOIN cartoon ON tv_series.id = cartoon.chnl  WHERE cartoon.wr = 'Todd Casey'",
    "SELECT DISTINCT tv_channel.cntry  FROM tv_channel  WHERE tv_channel.id NOT IN      (SELECT cartoon.chnl       FROM cartoon       WHERE cartoon.wr = 'Todd Casey')",
    "SELECT DISTINCT cntry FROM tv_channel WHERE id NOT IN (SELECT chnl FROM cartoon WHERE wr = 'Todd Casey')",
    "SELECT ser_name, cntry FROM tv_channel  JOIN tv_series ON tv_channel.id = tv_series.chnl  JOIN cartoon ON tv_series.id = cartoon.chnl  WHERE cartoon.dir LIKE '%Ben Jones%' AND cartoon.dir LIKE '%Michael Chang%'",
    "SELECT ser_name, cntry FROM tv_channel WHERE id IN (SELECT chnl FROM cartoon WHERE dir = 'Ben Jones' INTERSECT SELECT chnl FROM cartoon WHERE dir = 'Michael Chang') AND content = 'cartoons'",
    "SELECT par, cntry FROM tv_channel WHERE language <> 'English'",
    "SELECT par, cntry FROM tv_channel WHERE language <> 'English'",
    "SELECT id FROM tv_channel WHERE cntry IN (SELECT cntry FROM tv_channel GROUP BY cntry HAVING COUNT(*) > 2)",
    "SELECT id FROM tv_channel GROUP BY id HAVING COUNT(*) > 2",
    "SELECT DISTINCT tv_channel.id FROM tv_channel LEFT JOIN tv_series ON tv_channel.id = tv_series.chnl LEFT JOIN cartoon ON tv_series.id = cartoon.chnl AND cartoon.dir = 'Ben Jones' WHERE cartoon.id IS NULL AND tv_series.id IS NOT NULL;",
    "SELECT DISTINCT tv_channel.id  FROM tv_channel  LEFT JOIN tv_series ON tv_channel.id = tv_series.chnl  LEFT JOIN cartoon ON tv_series.id = cartoon.chnl AND cartoon.dir = 'Ben Jones'  WHERE cartoon.id IS NULL",
    "SELECT package_option  FROM tv_channel  WHERE id NOT IN      (SELECT chnl       FROM cartoon       WHERE dir = 'Ben Jones' AND title LIKE '%cartoon%')",
    "SELECT DISTINCT package_option FROM tv_channel WHERE id NOT IN (SELECT chnl FROM cartoon WHERE dir = 'Ben Jones' AND title LIKE '%cartoon%')",
    "SELECT title FROM cartoon WHERE dir = 'Ben Jones'",
    "SELECT title FROM cartoon WHERE dir = 'Ben Jones'",
    "SELECT COUNT(*) FROM cartoon WHERE wr = 'Joseph Kuhr'",
    "SELECT COUNT(*) FROM cartoon WHERE wr = 'Joseph Kuhr'",
    "SELECT cartoon.title, cartoon.dir FROM cartoon ORDER BY cartoon.original_air_date ASC",
    "SELECT title, dir FROM cartoon ORDER BY original_air_date",
    "SELECT title FROM cartoon WHERE dir = 'Ben Jones' OR dir = 'Brandon Vietti'",
    "SELECT title FROM cartoon WHERE dir = 'Ben Jones' OR dir = 'Brandon Vietti'",
    "SELECT cntry, COUNT(*) AS num_channels FROM tv_channel GROUP BY cntry ORDER BY num_channels DESC LIMIT 1;",
    "SELECT cntry, COUNT(*) AS num_channels FROM tv_channel GROUP BY cntry ORDER BY num_channels DESC LIMIT 1;",
    "SELECT COUNT(DISTINCT ser_name), COUNT(DISTINCT content) FROM tv_channel",
    "SELECT COUNT(DISTINCT ser_name, content) FROM tv_channel",
    "SELECT content FROM tv_channel WHERE ser_name = 'Sky Radio'",
    "SELECT content FROM tv_channel WHERE ser_name = 'Sky Radio'",
    "SELECT package_option FROM tv_channel WHERE ser_name = 'Sky Radio'",
    "SELECT package_option FROM tv_channel WHERE ser_name = 'Sky Radio'",
    "SELECT COUNT(*) FROM tv_channel WHERE lang = 'English'",
    "SELECT COUNT(*) FROM tv_channel WHERE lang = 'English'",
    "SELECT lang, COUNT(*) AS num_channels FROM tv_channel GROUP BY lang ORDER BY num_channels ASC LIMIT 1;",
    "SELECT lang, COUNT(*) AS num_channels FROM tv_channel GROUP BY lang HAVING COUNT(*) = (   SELECT MIN(channel_count)   FROM (     SELECT COUNT(*) AS channel_count     FROM tv_channel     GROUP BY lang   ) AS channel_counts )",
    "SELECT lang, COUNT(*) AS num_channels FROM tv_channel GROUP BY lang",
    "SELECT lang, COUNT(DISTINCT id) AS num_channels FROM tv_channel GROUP BY lang",
    "SELECT ser_name FROM tv_channel WHERE id = (SELECT chnl FROM cartoon WHERE title = 'The Rise of the Blue Beetle!')",
    "SELECT ser_name FROM tv_channel JOIN cartoon ON tv_channel.id = cartoon.chnl WHERE title = 'The Rise of the Blue Beetle'",
    "SELECT cartoon.title FROM cartoon JOIN tv_series ON cartoon.chnl = tv_series.id JOIN tv_channel ON tv_series.chnl = tv_channel.id WHERE tv_channel.ser_name = 'Sky Radio'",
    "SELECT title FROM cartoon WHERE chnl IN (SELECT id FROM tv_channel WHERE ser_name = 'Sky Radio')",
    "SELECT ep FROM tv_series ORDER BY rtg DESC",
    "SELECT * FROM tv_series ORDER BY rtg DESC",
    "SELECT ser_name AS TV_Series, ep AS Episode, rtg AS Rating FROM tv_channel JOIN tv_series ON tv_channel.id = tv_series.chnl ORDER BY rtg DESC LIMIT 3",
    "SELECT ep, rtg FROM tv_series ORDER BY rtg DESC LIMIT 3",
    "SELECT air_date FROM tv_series WHERE ep = \"A Love of a Lifetime\"",
    "SELECT air_date FROM tv_series WHERE title = 'A Love of a Lifetime'",
    "SELECT wkly_rank FROM tv_series WHERE ser_name = 'A Love of a Lifetime'",
    "SELECT wkly_rank FROM tv_series WHERE ep = \"A Love of a Lifetime\"",
    "SELECT tv_channel.ser_name FROM tv_channel JOIN tv_series ON tv_channel.id = tv_series.chnl WHERE tv_series.ep = \"A Love of a Lifetime\"",
    "SELECT ser_name FROM tv_channel JOIN tv_series ON tv_channel.id = tv_series.id WHERE ep = \"A Love of a Lifetime\"",
    "SELECT tv_series.ep FROM tv_channel JOIN tv_series ON tv_channel.ser_name = 'Sky Radio' AND tv_channel.id = tv_series.chnl",
    "I'm sorry, but the provided schema does not contain any information about episodes or seasons of TV shows. Could you please provide a schema that includes this information?",
    "SELECT dir, COUNT(*) FROM cartoon GROUP BY dir",
    "SELECT dir, COUNT(*) FROM cartoon GROUP BY dir",
    "SELECT prod_code, chnl FROM cartoon WHERE original_air_date = (SELECT MAX(original_air_date) FROM cartoon)",
    "SELECT prod_code, chnl FROM cartoon WHERE original_air_date = (SELECT MAX(original_air_date) FROM cartoon)",
    "SELECT package_option, ser_name FROM tv_channel WHERE hd = true",
    "SELECT package_option, ser_name FROM tv_channel WHERE hd = true",
    "SELECT DISTINCT tv_channel.cntry  FROM tv_channel  JOIN tv_series ON tv_channel.id = tv_series.chnl  JOIN cartoon ON tv_series.id = cartoon.chnl  WHERE cartoon.wr LIKE '%Todd Casey%'",
    "SELECT DISTINCT tv_channel.cntry  FROM tv_channel  JOIN tv_series ON tv_channel.id = tv_series.chnl  JOIN cartoon ON tv_series.id = cartoon.chnl  WHERE cartoon.wr = 'Todd Casey'",
    "SELECT DISTINCT tv_channel.cntry  FROM tv_channel  WHERE tv_channel.id NOT IN      (SELECT cartoon.chnl       FROM cartoon       WHERE cartoon.wr = 'Todd Casey')",
    "SELECT DISTINCT cntry FROM tv_channel WHERE id NOT IN (SELECT chnl FROM cartoon WHERE wr = 'Todd Casey')",
    "SELECT ser_name, cntry FROM tv_channel  JOIN tv_series ON tv_channel.id = tv_series.chnl  JOIN cartoon ON tv_series.id = cartoon.chnl  WHERE dir LIKE '%Ben Jones%' AND dir LIKE '%Michael Chang%'",
    "SELECT ser_name, cntry FROM tv_channel  JOIN tv_series ON tv_channel.id = tv_series.chnl  JOIN cartoon ON tv_series.id = cartoon.chnl  WHERE cartoon.dir = 'Ben Jones' AND cartoon.dir = 'Michael Chang' AND content = 'cartoon'",
    "SELECT pixel_aspect_ratio_par, cntry FROM tv_channel WHERE lang <> 'English'",
    "SELECT pixel_aspect_ratio_par, cntry FROM tv_channel WHERE lang <> 'English'",
    "SELECT id FROM tv_channel WHERE cntry IN (SELECT cntry FROM tv_channel GROUP BY cntry HAVING COUNT(*) > 2)",
    "SELECT id FROM tv_channel GROUP BY id HAVING COUNT(*) > 2",
    "SELECT DISTINCT tv_channel.id FROM tv_channel LEFT JOIN tv_series ON tv_channel.id = tv_series.chnl LEFT JOIN cartoon ON tv_series.id = cartoon.chnl AND cartoon.dir = 'Ben Jones' WHERE cartoon.id IS NULL AND tv_series.id IS NOT NULL;",
    "SELECT DISTINCT tv_channel.id  FROM tv_channel  LEFT JOIN tv_series ON tv_channel.id = tv_series.chnl  LEFT JOIN cartoon ON tv_series.id = cartoon.chnl AND cartoon.dir = 'Ben Jones'  WHERE cartoon.id IS NULL",
    "SELECT package_option  FROM tv_channel  WHERE id NOT IN      (SELECT chnl       FROM cartoon       WHERE dir = 'Ben Jones')",
    "SELECT DISTINCT package_option  FROM tv_channel  WHERE id NOT IN      (SELECT chnl       FROM cartoon       WHERE dir = 'Ben Jones' AND content = 'cartoon')",
    "SELECT COUNT(*) FROM cartoon WHERE wr = 'Joseph Kuhr'",
    "SELECT COUNT(*) FROM cartoon WHERE wr = 'Joseph Kuhr'",
    "SELECT cntry, COUNT(*) AS num_channels FROM tv_channel GROUP BY cntry ORDER BY num_channels DESC LIMIT 1;",
    "SELECT cntry, COUNT(*) AS num_channels FROM tv_channel GROUP BY cntry ORDER BY num_channels DESC LIMIT 1;",
    "SELECT COUNT(DISTINCT ser_name), COUNT(DISTINCT cont) FROM tv_channel",
    "SELECT COUNT(DISTINCT ser_name), COUNT(DISTINCT cont) FROM tv_channel",
    "SELECT cont FROM tv_channel WHERE ser_name = 'Sky Radio'",
    "SELECT cont FROM tv_channel WHERE ser_name = 'Sky Radio'",
    "SELECT package_option FROM tv_channel WHERE ser_name = 'Sky Radio'",
    "SELECT package_option FROM tv_channel WHERE ser_name = 'Sky Radio'",
    "SELECT COUNT(*) FROM tv_channel WHERE lang = 'English'",
    "SELECT COUNT(*) FROM tv_channel WHERE lang = 'English'",
    "SELECT lang, COUNT(*) AS num_channels FROM tv_channel GROUP BY lang ORDER BY num_channels ASC LIMIT 1;",
    "SELECT lang, COUNT(*) AS num_channels FROM tv_channel GROUP BY lang HAVING COUNT(*) = (   SELECT MIN(channel_count)   FROM (     SELECT COUNT(*) AS channel_count     FROM tv_channel     GROUP BY lang   ) AS channel_counts )",
    "SELECT lang, COUNT(*) AS num_channels FROM tv_channel GROUP BY lang",
    "SELECT lang, COUNT(*) AS num_channels FROM tv_channel GROUP BY lang",
    "SELECT ser_name FROM tv_channel WHERE id = (SELECT chnl FROM cartoon WHERE title = 'The Rise of the Blue Beetle!')",
    "SELECT ser_name FROM tv_channel JOIN cartoon ON tv_channel.id = cartoon.chnl WHERE title = 'The Rise of the Blue Beetle'",
    "SELECT cartoon.title FROM cartoon JOIN tv_series ON cartoon.chnl = tv_series.chnl JOIN tv_channel ON tv_series.id = tv_channel.id WHERE tv_channel.ser_name = 'Sky Radio'",
    "SELECT title FROM cartoon WHERE chnl IN (SELECT id FROM tv_channel WHERE ser_name = 'Sky Radio')",
    "SELECT ep FROM tv_series ORDER BY rtg DESC",
    "SELECT * FROM tv_series ORDER BY rtg DESC",
    "SELECT ser_name AS TV_Series, ep AS Episode, rtg AS Rating FROM tv_channel JOIN tv_series ON tv_channel.id = tv_series.chnl ORDER BY rtg DESC LIMIT 3",
    "SELECT ep, rtg FROM tv_series ORDER BY rtg DESC LIMIT 3",
    "SELECT air_date FROM tv_series WHERE ep = \"A Love of a Lifetime\"",
    "SELECT air_date FROM tv_series WHERE ep = \"A Love of a Lifetime\"",
    "SELECT weekly_rank FROM tv_series WHERE ep = \"A Love of a Lifetime\"",
    "SELECT weekly_rank FROM tv_series WHERE ep = \"A Love of a Lifetime\"",
    "SELECT tv_channel.ser_name FROM tv_channel JOIN tv_series ON tv_channel.id = tv_series.chnl WHERE tv_series.ep = \"A Love of a Lifetime\"",
    "SELECT ser_name FROM tv_channel JOIN tv_series ON tv_channel.id = tv_series.chnl WHERE ep = \"A Love of a Lifetime\"",
    "SELECT ep FROM tv_series WHERE chnl = (SELECT id FROM tv_channel WHERE ser_name = 'Sky Radio')",
    "I'm sorry, but the provided schema does not contain any information about episodes or seasons of TV shows. Could you please provide a schema that includes this information?",
    "SELECT prod_code, chnl FROM cartoon WHERE original_air_date = (SELECT MAX(original_air_date) FROM cartoon)",
    "SELECT prod_code, chnl FROM cartoon WHERE original_air_date = (SELECT MAX(original_air_date) FROM cartoon)",
    "SELECT package_option, ser_name FROM tv_channel WHERE hd = true",
    "SELECT package_option, ser_name FROM tv_channel WHERE hd = true",
    "SELECT DISTINCT tv_channel.cntry FROM tv_channel JOIN tv_series ON tv_channel.id = tv_series.chnl JOIN cartoon ON tv_series.id = cartoon.chnl WHERE cartoon.wr LIKE '%Todd Casey%'",
    "SELECT DISTINCT tv_channel.cntry  FROM tv_channel  JOIN tv_series ON tv_channel.id = tv_series.chnl  JOIN cartoon ON tv_series.id = cartoon.chnl  WHERE cartoon.wr = 'Todd Casey'",
    "SELECT DISTINCT tv_channel.cntry  FROM tv_channel  WHERE tv_channel.id NOT IN      (SELECT cartoon.chnl       FROM cartoon       WHERE cartoon.wr = 'Todd Casey')",
    "SELECT DISTINCT cntry FROM tv_channel WHERE id NOT IN (SELECT chnl FROM cartoon WHERE wr = 'Todd Casey')",
    "SELECT ser_name, cntry FROM tv_channel  JOIN tv_series ON tv_channel.id = tv_series.chnl  JOIN cartoon ON tv_series.id = cartoon.chnl  WHERE directed_by = 'Ben Jones' AND directed_by = 'Michael Chang'",
    "SELECT ser_name, cntry FROM tv_channel JOIN tv_series ON tv_channel.id = tv_series.chnl JOIN cartoon ON tv_series.id = cartoon.chnl WHERE cartoon.directed_by = 'Ben Jones' AND cartoon.directed_by = 'Michael Chang'",
    "SELECT pixel_aspect_ratio_par, cntry FROM tv_channel WHERE lang <> 'English'",
    "SELECT pixel_aspect_ratio_par, cntry FROM tv_channel WHERE lang <> 'English'",
    "SELECT id FROM tv_channel WHERE cntry IN (SELECT cntry FROM tv_channel GROUP BY cntry HAVING COUNT(*) > 2)",
    "SELECT id FROM tv_channel GROUP BY id HAVING COUNT(*) > 2",
    "SELECT DISTINCT tv_channel.id FROM tv_channel LEFT JOIN tv_series ON tv_channel.id = tv_series.chnl LEFT JOIN cartoon ON tv_series.id = cartoon.chnl AND cartoon.directed_by = 'Ben Jones' WHERE cartoon.id IS NULL",
    "SELECT DISTINCT tv_channel.id  FROM tv_channel  LEFT JOIN tv_series ON tv_channel.id = tv_series.chnl  LEFT JOIN cartoon ON tv_series.id = cartoon.chnl AND cartoon.directed_by = 'Ben Jones'  WHERE cartoon.id IS NULL",
    "SELECT package_option  FROM tv_channel  WHERE id NOT IN      (SELECT chnl       FROM cartoon       WHERE directed_by = 'Ben Jones')",
    "SELECT DISTINCT package_option  FROM tv_channel  WHERE id NOT IN      (SELECT chnl       FROM cartoon       WHERE directed_by = 'Ben Jones')",
    "SELECT final_table_made, best_fin FROM poker_player WHERE final_table_made IS NOT NULL ORDER BY best_fin DESC",
    "SELECT final_table_made, best_fin FROM poker_player",
    "SELECT name FROM people JOIN poker_player ON people.ppl_id = poker_player.ppl_id",
    "SELECT name FROM people JOIN poker_player ON people.ppl_id = poker_player.ppl_id",
    "SELECT name FROM poker_player JOIN people ON poker_player.ppl_id = people.ppl_id WHERE earnings > 300000",
    "SELECT name FROM poker_player JOIN people ON poker_player.ppl_id = people.ppl_id WHERE earnings > 300000",
    "SELECT people.name FROM poker_player JOIN people ON poker_player.ppl_id = people.ppl_id ORDER BY poker_player.final_table_made ASC",
    "SELECT people.name FROM poker_player JOIN people ON poker_player.ppl_id = people.ppl_id ORDER BY poker_player.final_table_made ASC",
    "SELECT dob FROM poker_player JOIN people ON poker_player.ppl_id = people.ppl_id ORDER BY earnings ASC LIMIT 1",
    "SELECT dob FROM poker_player JOIN people ON poker_player.ppl_id = people.ppl_id ORDER BY earnings ASC LIMIT 1",
    "SELECT money_rank FROM poker_player WHERE height = (SELECT MAX(height) FROM poker_player)",
    "SELECT money_rank FROM poker_player WHERE poker_player_id = (SELECT poker_player_id FROM poker_player JOIN people ON poker_player.ppl_id = people.ppl_id ORDER BY height DESC LIMIT 1)",
    "SELECT AVG(earnings) FROM poker_player WHERE height > 200",
    "SELECT AVG(earnings) FROM poker_player WHERE EXISTS (SELECT * FROM people WHERE poker_player.ppl_id = people.ppl_id AND height > 200)",
    "SELECT name FROM people JOIN poker_player ON people.ppl_id = poker_player.ppl_id ORDER BY earnings DESC",
    "SELECT people.name FROM poker_player_0.poker_player JOIN poker_player_0.people ON poker_player.ppl_id = people.ppl_id ORDER BY poker_player.earnings DESC",
    "SELECT name, dob FROM people ORDER BY name ASC",
    "SELECT name, dob FROM people ORDER BY name ASC",
    "SELECT name FROM people WHERE ppl_id NOT IN (SELECT ppl_id FROM poker_player)",
    "SELECT name FROM people WHERE ppl_id NOT IN (SELECT ppl_id FROM poker_player)",
    "SELECT name FROM people JOIN poker_player ON people.ppl_id = poker_player.people_id",
    "SELECT name FROM people JOIN poker_player ON people.ppl_id = poker_player.people_id",
    "SELECT people.name FROM poker_player JOIN people ON poker_player.people_id = people.ppl_id WHERE poker_player.earnings > 300000",
    "SELECT people.name FROM poker_player JOIN people ON poker_player.people_id = people.ppl_id WHERE poker_player.earnings > 300000",
    "SELECT p.name FROM poker_player AS pp JOIN people AS p ON pp.people_id = p.ppl_id ORDER BY pp.final_table_made ASC",
    "SELECT people.name FROM poker_player JOIN people ON poker_player.people_id = people.ppl_id ORDER BY poker_player.final_table_made ASC",
    "SELECT birth_date FROM people WHERE ppl_id = (SELECT people_id FROM poker_player ORDER BY earnings ASC LIMIT 1)",
    "SELECT birth_date FROM people WHERE ppl_id = (SELECT people_id FROM poker_player ORDER BY earnings ASC LIMIT 1)",
    "SELECT money_rank FROM poker_player WHERE poker_player_id = (SELECT poker_player_id FROM people WHERE height = (SELECT MAX(height) FROM people INNER JOIN poker_player ON people.ppl_id = poker_player.people_id))",
    "SELECT money_rank FROM poker_player JOIN people ON poker_player.people_id = people.ppl_id ORDER BY height DESC LIMIT 1",
    "SELECT AVG(earnings) FROM poker_player WHERE height > 200",
    "SELECT AVG(earnings) FROM poker_player WHERE poker_player_id IN (SELECT poker_player_id FROM people WHERE height > 200)",
    "SELECT people.name FROM poker_player JOIN people ON poker_player.people_id = people.ppl_id ORDER BY poker_player.earnings DESC",
    "SELECT people.name FROM poker_player JOIN people ON poker_player.people_id = people.ppl_id ORDER BY poker_player.earnings DESC",
    "SELECT people.nal, COUNT(*) as num_people FROM people GROUP BY people.nal",
    "SELECT nationality, COUNT(*) FROM people GROUP BY nationality",
    "SELECT nationality, COUNT(*) AS count FROM people GROUP BY nationality ORDER BY count DESC LIMIT 1",
    "SELECT nal  FROM people  GROUP BY nal  ORDER BY COUNT(*) DESC  LIMIT 1",
    "SELECT DISTINCT p1.nal FROM people p1 JOIN people p2 ON p1.nal = p2.nal AND p1.ppl_id <> p2.ppl_id JOIN poker_player pp1 ON p1.ppl_id = pp1.people_id JOIN poker_player pp2 ON p2.ppl_id = pp2.people_id",
    "SELECT nal FROM people GROUP BY nal HAVING COUNT(*) >= 2",
    "SELECT name FROM people WHERE nationality <> 'Russia'",
    "SELECT name FROM people WHERE nal <> 'Russia'",
    "SELECT name FROM people WHERE ppl_id NOT IN (SELECT people_id FROM poker_player)",
    "SELECT name FROM people WHERE ppl_id NOT IN (SELECT people_id FROM poker_player)",
    "SELECT COUNT(DISTINCT nationality) FROM people",
    "SELECT COUNT(DISTINCT nal) FROM people",
    "SELECT earn FROM poker_player ORDER BY earn DESC",
    "SELECT earn FROM poker_player ORDER BY earn DESC",
    "SELECT final_table_made, best_fin FROM poker_player",
    "SELECT final_table_made, best_fin FROM poker_player",
    "SELECT AVG(earn) FROM poker_player",
    "SELECT AVG(earn) FROM poker_player",
    "SELECT money_rank FROM poker_player ORDER BY earn DESC LIMIT 1",
    "SELECT money_rank FROM poker_player ORDER BY earn DESC LIMIT 1",
    "SELECT MAX(final_table_made) FROM poker_player WHERE earn < 200000",
    "SELECT MAX(final_table_made) FROM poker_player WHERE earn < 200000",
    "SELECT people.name FROM poker_player JOIN people ON poker_player.people_id = people.people_id WHERE poker_player.earn > 300000",
    "SELECT p.name FROM poker_player AS pp JOIN people AS p ON pp.people_id = p.people_id WHERE pp.earn > 300000",
    "SELECT birth_date FROM people WHERE people_id = (SELECT people_id FROM poker_player ORDER BY earn ASC LIMIT 1)",
    "SELECT birth_date FROM people WHERE people_id = (SELECT people_id FROM poker_player ORDER BY earn ASC LIMIT 1)",
    "SELECT AVG(earn) FROM poker_player JOIN people ON poker_player.people_id = people.people_id WHERE height > 200",
    "SELECT AVG(earn) FROM poker_player JOIN people ON poker_player.people_id = people.people_id WHERE height > 200",
    "SELECT name FROM people JOIN poker_player ON people.people_id = poker_player.people_id ORDER BY earn DESC",
    "SELECT people.name FROM poker_player_2.poker_player JOIN poker_player_2.people ON poker_player_2.poker_player.people_id = poker_player_2.people.people_id ORDER BY poker_player_2.poker_player.earn DESC",
    "SELECT people.nal, COUNT(*) FROM people JOIN poker_player ON people.people_id = poker_player.people_id GROUP BY people.nal",
    "SELECT nationality, COUNT(*) FROM people GROUP BY nationality",
    "SELECT nal, COUNT(*) AS count FROM people GROUP BY nal ORDER BY count DESC LIMIT 1",
    "SELECT nal FROM people GROUP BY nal ORDER BY COUNT(*) DESC LIMIT 1",
    "SELECT DISTINCT p1.nal FROM people p1, people p2, poker_player pp1, poker_player pp2 WHERE p1.people_id = pp1.people_id AND p2.people_id = pp2.people_id AND pp1.poker_player_id <> pp2.poker_player_id AND p1.nal = p2.nal",
    "SELECT nal FROM people GROUP BY nal HAVING COUNT(*) >= 2",
    "SELECT name FROM people WHERE nal <> 'Russia'",
    "SELECT name FROM people WHERE nal <> 'Russia'",
    "SELECT COUNT(DISTINCT nal) FROM people",
    "SELECT COUNT(DISTINCT nal) FROM people",
    "SELECT name FROM people JOIN poker_player ON people.ppl_id = poker_player.ppl_id",
    "SELECT name FROM people JOIN poker_player ON people.ppl_id = poker_player.ppl_id",
    "SELECT name FROM poker_player_3.poker_player JOIN poker_player_3.people ON poker_player.ppl_id = people.ppl_id WHERE earnings > 300000",
    "SELECT name FROM poker_player_3.poker_player JOIN poker_player_3.people ON poker_player.ppl_id = people.ppl_id WHERE earnings > 300000",
    "SELECT people.name FROM poker_player_3.poker_player JOIN poker_player_3.people ON poker_player.ppl_id = people.ppl_id ORDER BY final_table_made ASC",
    "SELECT people.name FROM poker_player JOIN people ON poker_player.ppl_id = people.ppl_id ORDER BY poker_player.final_table_made ASC",
    "SELECT birth_date FROM poker_player JOIN people ON poker_player.ppl_id = people.ppl_id ORDER BY earnings ASC LIMIT 1",
    "SELECT birth_date FROM poker_player JOIN people ON poker_player.ppl_id = people.ppl_id ORDER BY earnings ASC LIMIT 1",
    "SELECT money_rank FROM poker_player WHERE p_id = (SELECT p_id FROM poker_player JOIN people ON poker_player.ppl_id = people.ppl_id ORDER BY height DESC LIMIT 1)",
    "SELECT money_rank FROM poker_player WHERE p_id = (SELECT p_id FROM poker_player JOIN people ON poker_player.ppl_id = people.ppl_id ORDER BY height DESC LIMIT 1)",
    "SELECT AVG(earnings) FROM poker_player WHERE p_id IN (SELECT p_id FROM people WHERE height > 200)",
    "SELECT AVG(earnings) FROM poker_player WHERE ppl_id IN (SELECT ppl_id FROM people WHERE height > 200)",
    "SELECT name FROM people JOIN poker_player ON people.ppl_id = poker_player.ppl_id ORDER BY earnings DESC",
    "SELECT people.name FROM poker_player_3.poker_player JOIN poker_player_3.people ON poker_player.ppl_id = people.ppl_id ORDER BY poker_player.earnings DESC",
    "SELECT nal, COUNT(*) FROM people GROUP BY nal",
    "SELECT nationality, COUNT(*) FROM people GROUP BY nationality",
    "SELECT nal, COUNT(*) AS count FROM people GROUP BY nal ORDER BY count DESC LIMIT 1",
    "SELECT nal FROM people GROUP BY nal ORDER BY COUNT(*) DESC LIMIT 1;",
    "SELECT DISTINCT p1.nationality  FROM people p1, people p2  WHERE p1.nationality = p2.nationality AND p1.ppl_id <> p2.ppl_id",
    "SELECT nal FROM people GROUP BY nal HAVING COUNT(*) >= 2",
    "SELECT name FROM people WHERE nal <> 'Russia'",
    "SELECT name FROM people WHERE nal <> 'Russia'",
    "SELECT name FROM people WHERE ppl_id NOT IN (SELECT ppl_id FROM poker_player)",
    "SELECT name FROM people WHERE ppl_id NOT IN (SELECT ppl_id FROM poker_player)",
    "SELECT COUNT(DISTINCT nal) FROM people",
    "SELECT COUNT(DISTINCT nal) FROM people",
    "SELECT poker_player.ftm, poker_player.best_finish FROM poker_player_4.poker_player JOIN poker_player_4.people ON poker_player.ppl_id = people.ppl_id",
    "SELECT poker_player.name, poker_player.best_finish FROM poker_player JOIN people ON poker_player.ppl_id = people.ppl_id",
    "SELECT MAX(ftm) FROM poker_player WHERE earnings < 200000",
    "SELECT MAX(ftm) FROM poker_player WHERE earnings < 200000",
    "SELECT name FROM people JOIN poker_player ON people.ppl_id = poker_player.ppl_id",
    "SELECT name FROM people JOIN poker_player ON people.ppl_id = poker_player.ppl_id",
    "SELECT name FROM poker_player JOIN people ON poker_player.ppl_id = people.ppl_id WHERE earnings > 300000",
    "SELECT name FROM poker_player JOIN people ON poker_player.ppl_id = people.ppl_id WHERE earnings > 300000",
    "SELECT people.name FROM poker_player_4.poker_player JOIN poker_player_4.people ON poker_player.ppl_id = people.ppl_id ORDER BY poker_player.ftm ASC",
    "SELECT people.name FROM poker_player JOIN people ON poker_player.ppl_id = people.ppl_id ORDER BY poker_player.ftm ASC",
    "SELECT dob FROM poker_player JOIN people ON poker_player.ppl_id = people.ppl_id ORDER BY earnings ASC LIMIT 1",
    "SELECT dob FROM poker_player JOIN people ON poker_player.ppl_id = people.ppl_id ORDER BY earnings ASC LIMIT 1",
    "SELECT money_rank FROM poker_player WHERE ftm = (SELECT MAX(ftm) FROM poker_player)",
    "SELECT money_rank FROM poker_player WHERE ftm = (SELECT MAX(ht) FROM people INNER JOIN poker_player ON people.ppl_id = poker_player.ppl_id)",
    "SELECT AVG(earnings) FROM poker_player WHERE ftm > 200",
    "SELECT AVG(earnings) FROM poker_player WHERE ftm > 200",
    "SELECT name FROM people JOIN poker_player ON people.ppl_id = poker_player.ppl_id ORDER BY earnings DESC",
    "SELECT name FROM poker_player JOIN people ON poker_player.ppl_id = people.ppl_id ORDER BY earnings DESC",
    "SELECT nal, COUNT(*) FROM people GROUP BY nal",
    "SELECT nal, COUNT(*) FROM people GROUP BY nal",
    "SELECT nal, COUNT(*) AS count FROM people GROUP BY nal ORDER BY count DESC LIMIT 1",
    "SELECT nal FROM people GROUP BY nal ORDER BY COUNT(*) DESC LIMIT 1",
    "SELECT DISTINCT p1.nal FROM people p1, people p2, poker_player pp1, poker_player pp2 WHERE p1.nal = p2.nal AND pp1.ppl_id = p1.ppl_id AND pp2.ppl_id = p2.ppl_id AND pp1.p_id <> pp2.p_id",
    "SELECT nal FROM people GROUP BY nal HAVING COUNT(*) >= 2",
    "SELECT name, dob FROM people ORDER BY name ASC",
    "SELECT name, dob FROM people ORDER BY name ASC",
    "SELECT name FROM people WHERE nal <> 'Russia'",
    "SELECT name FROM people WHERE nal <> 'Russia'",
    "SELECT name FROM people WHERE ppl_id NOT IN (SELECT ppl_id FROM poker_player)",
    "SELECT name FROM people WHERE ppl_id NOT IN (SELECT ppl_id FROM poker_player)",
    "SELECT COUNT(DISTINCT nal) FROM people",
    "SELECT COUNT(DISTINCT nal) FROM people",
    "SELECT contestant_no, name FROM contestants ORDER BY name DESC",
    "SELECT vote_id, ph, state FROM votes",
    "SELECT name FROM contestants WHERE name <> 'Jessie Alloway'",
    "SELECT contestants.contestant_no, contestants.name  FROM contestants  JOIN votes ON contestants.contestant_no = votes.contestant_no  GROUP BY contestants.contestant_no, contestants.name  HAVING COUNT(*) >= 2",
    "SELECT contestant_no, name FROM contestants WHERE contestant_no = (SELECT contestant_no FROM votes GROUP BY contestant_no ORDER BY COUNT(*) ASC LIMIT 1)",
    "SELECT COUNT(*) FROM contestants WHERE contestant_no NOT IN (SELECT contestant_no FROM votes)",
    "SELECT created, state, ph FROM votes WHERE contestant_no = (SELECT contestant_no FROM contestants WHERE name = 'Tabatha Gehling')",
    "SELECT DISTINCT v1.area_code FROM voter_1_0.area_code_state v1 JOIN voter_1_0.votes v2 ON v1.state = v2.state JOIN voter_1_0.contestants c ON v2.contestant_no = c.contestant_no WHERE c.name = 'Tabatha Gehling' AND v2.ph IN (   SELECT v3.ph   FROM voter_1_0.votes v3   JOIN voter_1_0.contestants c2 ON v3.contestant_no = c2.contestant_no   WHERE c2.name = 'Kelly Clauss' )",
    "SELECT name FROM contestants WHERE name LIKE '%Al%'",
    "SELECT contestant_no, contestant_name FROM contestants ORDER BY contestant_name DESC",
    "SELECT vote_id, ph, st FROM votes",
    "SELECT MAX(created) FROM votes WHERE st = 'CA'",
    "SELECT DISTINCT st, created FROM votes",
    "SELECT contestant_no, contestant_name FROM contestants WHERE contestant_no IN (SELECT contestant_no FROM votes GROUP BY contestant_no HAVING COUNT(*) >= 2)",
    "SELECT contestant_no, contestant_name FROM contestants WHERE contestant_no = (SELECT contestant_no FROM votes GROUP BY contestant_no ORDER BY COUNT(*) ASC LIMIT 1)",
    "SELECT COUNT(*) FROM votes WHERE st = 'NY' OR st = 'CA'",
    "SELECT COUNT(*) FROM contestants WHERE contestant_no NOT IN (SELECT contestant_no FROM votes)",
    "SELECT area_code FROM area_code_state WHERE area_code = (SELECT st FROM votes                    GROUP BY st                    ORDER BY COUNT(*) DESC                    LIMIT 1)",
    "SELECT created, st, ph FROM votes WHERE contestant_no = (SELECT contestant_no FROM contestants WHERE contestant_name = 'Tabatha Gehling')",
    "SELECT DISTINCT v1.area_code  FROM voter_1_1.area_code_state v1  JOIN voter_1_1.votes v2 ON v1.area_code = LEFT(v2.ph, 3)  JOIN voter_1_1.contestants c ON v2.contestant_no = c.contestant_no  WHERE c.contestant_name = 'Tabatha Gehling' AND v1.area_code IN      (SELECT DISTINCT v1.area_code       FROM voter_1_1.area_code_state v1       JOIN voter_1_1.votes v2 ON v1.area_code = LEFT(v2.ph, 3)       JOIN voter_1_1.contestants c ON v2.contestant_no = c.contestant_no       WHERE c.contestant_name = 'Kelly Clauss')",
    "SELECT contestant_number, name FROM contestants ORDER BY name DESC",
    "SELECT vote_id, ph, st FROM votes",
    "SELECT MAX(created) FROM votes WHERE st = 'CA'",
    "SELECT name FROM contestants WHERE name <> 'Jessie Alloway'",
    "SELECT DISTINCT st, created FROM votes",
    "SELECT contestant_number, name FROM contestants WHERE contestant_number IN (SELECT contestant_number FROM votes GROUP BY contestant_number HAVING COUNT(*) >= 2)",
    "SELECT contestant_number, name FROM contestants WHERE contestant_number = (SELECT contestant_number FROM votes GROUP BY contestant_number ORDER BY COUNT(*) ASC LIMIT 1)",
    "SELECT COUNT(*) FROM votes WHERE st = 'NY' OR st = 'CA'",
    "SELECT area_code FROM (     SELECT area_code, COUNT(*) AS num_votes     FROM votes     JOIN area_code_state ON votes.st = area_code_state.state     GROUP BY area_code     ORDER BY num_votes DESC     LIMIT 1 ) AS max_votes_area_code",
    "SELECT created, st, ph FROM votes WHERE contestant_number = (SELECT contestant_number FROM contestants WHERE name = 'Tabatha Gehling')",
    "SELECT DISTINCT v1.area_code FROM voter_1_2 AS v1 JOIN votes AS v2 ON v1.ph = v2.ph AND v1.st = v2.st JOIN contestants AS c ON v2.contestant_number = c.contestant_number WHERE c.name = 'Tabatha Gehling' INTERSECT SELECT DISTINCT v1.area_code FROM voter_1_2 AS v1 JOIN votes AS v2 ON v1.ph = v2.ph AND v1.st = v2.st JOIN contestants AS c ON v2.contestant_number = c.contestant_number WHERE c.name = 'Kelly Clauss'",
    "SELECT name FROM contestants WHERE name LIKE '%Al%'",
    "SELECT contestant_no, name FROM contestants ORDER BY name DESC",
    "SELECT vote_id, ph, st FROM votes",
    "SELECT MAX(created) FROM votes WHERE st = 'CA'",
    "SELECT name FROM contestants WHERE name <> 'Jessie Alloway'",
    "SELECT DISTINCT st, created FROM votes",
    "SELECT contestant_no, name FROM contestants WHERE contestant_no IN (SELECT contestant_no FROM votes GROUP BY contestant_no HAVING COUNT(*) >= 2)",
    "SELECT contestant_no, name FROM contestants WHERE contestant_no = (SELECT contestant_no FROM votes GROUP BY contestant_no ORDER BY COUNT(*) ASC LIMIT 1)",
    "SELECT COUNT(*) FROM votes WHERE st = 'NY' OR st = 'CA'",
    "SELECT COUNT(*) FROM contestants WHERE contestant_no NOT IN (SELECT contestant_no FROM votes)",
    "SELECT area_code FROM (     SELECT area_code, COUNT(*) AS num_votes     FROM votes     JOIN area_code_state ON votes.st = area_code_state.state     GROUP BY area_code     ORDER BY num_votes DESC     LIMIT 1 ) AS max_votes_area_code",
    "SELECT created, st, ph FROM votes WHERE contestant_no = (SELECT contestant_no FROM contestants WHERE name = 'Tabatha Gehling')",
    "SELECT DISTINCT v1.area_code FROM voter_1_3 AS v1 JOIN votes AS v2 ON v1.area_code = v2.ph JOIN votes AS v3 ON v2.ph = v3.ph AND v2.contestant_no = 1 AND v3.contestant_no = 2 WHERE v2.contestant_no = 1 AND v3.contestant_no = 2;",
    "SELECT name FROM contestants WHERE name LIKE '%Al%'",
    "SELECT vote_id, phone_number, st FROM votes",
    "SELECT MAX(created) FROM votes WHERE st = 'CA'",
    "SELECT DISTINCT st, created FROM votes",
    "SELECT contestant_number, contestant_name FROM contestants WHERE contestant_number IN (SELECT contestant_no FROM votes GROUP BY contestant_no HAVING COUNT(*) >= 2)",
    "SELECT contestant_number, contestant_name FROM contestants WHERE contestant_number = (SELECT contestant_no FROM votes GROUP BY contestant_no ORDER BY COUNT(*) ASC LIMIT 1)",
    "SELECT COUNT(*) FROM votes WHERE st = 'NY' OR st = 'CA'",
    "SELECT COUNT(*) FROM contestants WHERE contestant_number NOT IN (SELECT contestant_no FROM votes)",
    "SELECT area_code FROM area_code_state WHERE state = (SELECT st FROM votes                GROUP BY st                ORDER BY COUNT(*) DESC                LIMIT 1)",
    "SELECT created, st, phone_number FROM votes WHERE contestant_no = (SELECT contestant_number FROM contestants WHERE contestant_name = 'Tabatha Gehling')",
    "SELECT DISTINCT v1.area_code  FROM voter_1_4 AS v1  JOIN votes AS v2 ON v1.phone_number = v2.phone_number  JOIN contestants AS c ON v2.contestant_no = c.contestant_number  WHERE c.contestant_name = 'Tabatha Gehling' AND v1.area_code IN      (SELECT v3.area_code       FROM voter_1_4 AS v3       JOIN votes AS v4 ON v3.phone_number = v4.phone_number       JOIN contestants AS c2 ON v4.contestant_no = c2.contestant_number       WHERE c2.contestant_name = 'Kelly Clauss')",
    "SELECT COUNT(*) FROM country WHERE govform = 'Republic'",
    "SELECT COUNT(*) FROM country WHERE govform = 'Republic'",
    "SELECT SUM(sa) FROM country WHERE region = 'Caribbean'",
    "SELECT SUM(sa) FROM country WHERE cont = 'Caribbean'",
    "SELECT cont FROM country WHERE code='AIA'",
    "SELECT cont FROM country WHERE code = (SELECT cntry_code FROM city WHERE name = 'Anguilla')",
    "SELECT region FROM country WHERE code = (SELECT cntry_code FROM city WHERE name = 'Kabul')",
    "SELECT country.region FROM city JOIN country ON city.cntry_code = country.code WHERE city.name = 'Kabul'",
    "SELECT lang FROM countrylanguage WHERE cntry_code = 'ABW' ORDER BY pct DESC LIMIT 1",
    "SELECT lang FROM countrylanguage WHERE cntry_code = 'ABW' AND pct = 100",
    "SELECT popn, le FROM country WHERE name = 'Brazil'",
    "SELECT country.popn, country.le FROM country WHERE country.name = 'Brazil'",
    "SELECT region, popn FROM country WHERE name = 'Angola'",
    "SELECT country.region, country.popn FROM country WHERE country.name = 'Angola'",
    "SELECT AVG(le) FROM country WHERE region = 'Central Africa'",
    "SELECT AVG(le) FROM country WHERE region = 'Central Africa'",
    "SELECT name FROM country WHERE cont = 'Asia' ORDER BY le ASC LIMIT 1",
    "SELECT name FROM country WHERE cont = 'Asia' ORDER BY le ASC LIMIT 1",
    "SELECT SUM(popn), MAX(gnp) FROM country WHERE cont = 'Asia'",
    "SELECT SUM(popn) AS population_in_asia, MAX(gnp) AS largest_gnp_in_asia FROM country WHERE cont = 'Asia'",
    "SELECT AVG(le) FROM country WHERE cont = 'Africa' AND govform = 'Republic'",
    "SELECT AVG(le) FROM country WHERE cont = 'Africa' AND govform = 'Republic'",
    "SELECT SUM(sa) FROM country WHERE cont IN ('Asia', 'Europe')",
    "SELECT SUM(sa) FROM country WHERE cont IN ('Asia', 'Europe')",
    "SELECT SUM(popn) FROM city WHERE dist = 'Gelderland'",
    "SELECT SUM(popn) FROM city WHERE dist = 'Gelderland'",
    "SELECT AVG(gnp), SUM(popn) FROM country WHERE gov_form = 'US territory'",
    "SELECT AVG(gnp), SUM(popn) FROM country WHERE code2 = 'US'",
    "SELECT COUNT(DISTINCT lang) FROM countrylanguage",
    "SELECT COUNT(DISTINCT lang) FROM countrylanguage",
    "SELECT COUNT(DISTINCT(cont)) FROM country WHERE cont = 'Africa'",
    "SELECT COUNT(DISTINCT cont) FROM country WHERE cont = 'Africa'",
    "SELECT COUNT(DISTINCT lang) FROM countrylanguage WHERE cntry_code = 'ABW'",
    "SELECT COUNT(DISTINCT lang) FROM countrylanguage WHERE cntry_code = 'ABW'",
    "SELECT COUNT(*) FROM countrylanguage WHERE cntry_code = 'AFG' AND ofcl = 'T'",
    "SELECT COUNT(*) FROM countrylanguage WHERE cntry_code = 'AFG' AND ofcl = 'T'",
    "SELECT name FROM country ORDER BY (SELECT COUNT(DISTINCT lang) FROM countrylanguage WHERE cntry_code = code) DESC LIMIT 1",
    "SELECT name FROM country WHERE code = (SELECT cntry_code FROM countrylanguage GROUP BY cntry_code ORDER BY COUNT(lang) DESC LIMIT 1)",
    "SELECT cont FROM country GROUP BY cont ORDER BY COUNT(DISTINCT lang) DESC LIMIT 1",
    "SELECT cont, COUNT(DISTINCT lang) AS num_languages FROM country JOIN countrylanguage ON country.code = countrylanguage.cntry_code GROUP BY cont ORDER BY num_languages DESC LIMIT 1;",
    "SELECT COUNT(DISTINCT cntry_code) FROM countrylanguage WHERE lang = 'English' AND cntry_code IN (SELECT cntry_code FROM countrylanguage WHERE lang = 'Dutch')",
    "SELECT COUNT(DISTINCT cntry_code) FROM countrylanguage WHERE lang IN ('English', 'Dutch')",
    "SELECT DISTINCT c.name  FROM country c  JOIN countrylanguage cl1 ON c.code = cl1.cntry_code AND cl1.lang = 'English'  JOIN countrylanguage cl2 ON c.code = cl2.cntry_code AND cl2.lang = 'French'",
    "SELECT DISTINCT c1.name  FROM country c1  JOIN countrylanguage cl1 ON c1.code = cl1.cntry_code AND cl1.lang = 'English'  JOIN countrylanguage cl2 ON c1.code = cl2.cntry_code AND cl2.lang = 'French'",
    "SELECT DISTINCT c.name  FROM country c  JOIN countrylanguage cl1 ON c.code = cl1.cntry_code AND cl1.lang = 'English' AND cl1.ofcl = 'T'  JOIN countrylanguage cl2 ON c.code = cl2.cntry_code AND cl2.lang = 'French' AND cl2.ofcl = 'T'",
    "SELECT name FROM country WHERE (ofcl = 'T' AND lang = 'English') AND (ofcl = 'T' AND lang = 'French')",
    "SELECT COUNT(DISTINCT cont) FROM country WHERE code IN (SELECT cntry_code FROM countrylanguage WHERE lang = 'Chinese')",
    "SELECT COUNT(DISTINCT country.cont) FROM country JOIN countrylanguage ON country.code = countrylanguage.cntry_code WHERE countrylanguage.lang = 'Chinese'",
    "SELECT DISTINCT region FROM country WHERE code IN (SELECT cntry_code FROM countrylanguage WHERE lang IN ('English', 'Dutch'))",
    "SELECT DISTINCT country.region FROM country  JOIN countrylanguage ON country.code = countrylanguage.cntry_code  WHERE countrylanguage.lang IN ('Dutch', 'English')",
    "SELECT DISTINCT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.cntry_code WHERE countrylanguage.lang = 'English' OR countrylanguage.lang = 'Dutch' AND countrylanguage.ofcl = 'T'",
    "SELECT name FROM countrylanguage WHERE lang = 'English' OR lang = 'Dutch' AND ofcl = 'T'",
    "SELECT lang FROM countrylanguage WHERE pct = (SELECT MAX(pct) FROM countrylanguage WHERE continent = 'Asia') AND continent = 'Asia'",
    "SELECT lang FROM countrylanguage WHERE cont = 'Asia' GROUP BY lang ORDER BY COUNT(*) DESC LIMIT 1",
    "SELECT lang FROM countrylanguage WHERE pct = 100 AND cntry_code IN (SELECT code FROM country WHERE govform LIKE '%Republic%' AND code NOT IN (SELECT cntry_code FROM countrylanguage GROUP BY cntry_code HAVING COUNT(*) > 1))",
    "SELECT lang FROM countrylanguage WHERE pct = 100 AND cntry_code IN (SELECT code FROM country WHERE governmentform LIKE '%Republic%') GROUP BY lang HAVING COUNT(*) = 1",
    "SELECT city.name FROM city JOIN countrylanguage ON city.cntry_code = countrylanguage.cntry_code WHERE countrylanguage.lang = 'English' ORDER BY city.popn DESC LIMIT 1",
    "SELECT city.name FROM city  JOIN country ON city.cntry_code = country.code  JOIN countrylanguage ON city.cntry_code = countrylanguage.cntry_code  WHERE countrylanguage.lang = 'English'  ORDER BY city.popn DESC  LIMIT 1",
    "SELECT name, popn, le FROM country WHERE cont = 'Asia' ORDER BY sa DESC LIMIT 1",
    "SELECT name, popn, le FROM country WHERE cont = 'Asia' ORDER BY popn DESC LIMIT 1",
    "SELECT AVG(le) FROM country WHERE code NOT IN (SELECT cntry_code FROM countrylanguage WHERE lang = 'English' AND ofcl = 'T')",
    "SELECT AVG(le) FROM country WHERE code NOT IN (SELECT cntry_code FROM countrylanguage WHERE ofcl = 'T' AND lang = 'English')",
    "SELECT SUM(popn) FROM country WHERE code NOT IN (SELECT cntry_code FROM countrylanguage WHERE lang = 'English')",
    "SELECT COUNT(DISTINCT city.popn) FROM city JOIN country ON city.cntry_code = country.code WHERE country.code NOT IN (SELECT cntry_code FROM countrylanguage WHERE lang = 'English')",
    "SELECT countrylanguage.lang FROM countrylanguage JOIN country ON countrylanguage.cntry_code = country.code WHERE country.hos = 'Beatrix' AND countrylanguage.ofcl = 'T'",
    "SELECT countrylanguage.lang FROM countrylanguage JOIN country ON countrylanguage.cntry_code = country.code WHERE country.hos = 'Beatrix' AND countrylanguage.ofcl = 'T'",
    "SELECT COUNT(DISTINCT lang) FROM countrylanguage cl JOIN country c ON cl.cntry_code = c.code WHERE c.indepyear < 1930 AND ofcl = 'T'",
    "SELECT COUNT(DISTINCT lang) FROM countrylanguage cl JOIN country c ON cl.cntry_code = c.code WHERE c.indepyear < 1930 AND ofcl = 'T'",
    "SELECT name FROM country WHERE sa > (SELECT MAX(sa) FROM country WHERE cont = 'Europe')",
    "SELECT name FROM country WHERE sa > (SELECT MAX(sa) FROM country WHERE cont = 'Europe')",
    "SELECT name FROM country WHERE cont = 'Africa' AND popn < (SELECT MIN(popn) FROM country WHERE cont = 'Asia')",
    "SELECT name FROM country WHERE cont = 'Africa' AND popn < (SELECT MIN(popn) FROM country WHERE cont = 'Asia')",
    "SELECT name FROM country WHERE cont = 'Asia' AND popn > (SELECT MAX(popn) FROM country WHERE cont = 'Africa')",
    "SELECT name FROM country WHERE cont = 'Asia' AND popn > (SELECT MAX(popn) FROM country WHERE cont = 'Africa')",
    "SELECT DISTINCT code FROM country WHERE code NOT IN (SELECT cntry_code FROM countrylanguage WHERE lang = 'English')",
    "SELECT DISTINCT code FROM country WHERE code NOT IN (SELECT cntry_code FROM countrylanguage WHERE lang = 'English')",
    "SELECT DISTINCT country.code FROM country JOIN countrylanguage ON country.code = countrylanguage.cntry_code WHERE countrylanguage.lang != 'English'",
    "SELECT DISTINCT country.code FROM country JOIN countrylanguage ON country.code = countrylanguage.cntry_code WHERE countrylanguage.lang != 'English'",
    "SELECT code FROM country WHERE code NOT IN (SELECT cntry_code FROM countrylanguage WHERE lang = 'English') AND governmentform != 'Republic'",
    "SELECT code FROM country WHERE code NOT IN (SELECT cntry_code FROM countrylanguage WHERE lang = 'English') AND governmentform NOT LIKE '%Republic%'",
    "SELECT DISTINCT city.name FROM city  JOIN country ON city.cntry_code = country.code  JOIN countrylanguage ON city.cntry_code = countrylanguage.cntry_code  WHERE country.cont = 'Europe' AND countrylanguage.ofcl <> 'T' AND countrylanguage.lang = 'English'",
    "SELECT DISTINCT city.name FROM city  JOIN country ON city.cntry_code = country.code  JOIN countrylanguage ON city.cntry_code = countrylanguage.cntry_code  WHERE country.cont = 'Europe' AND countrylanguage.lang <> 'English' AND countrylanguage.ofcl = 'F'",
    "SELECT DISTINCT city.name FROM city  JOIN country ON city.cntry_code = country.code  JOIN countrylanguage ON city.cntry_code = countrylanguage.cntry_code  WHERE country.cont = 'Asia' AND countrylanguage.lang = 'Chinese' AND countrylanguage.ofcl = 'T'",
    "SELECT DISTINCT city.name FROM city  JOIN country ON city.cntry_code = country.code  JOIN countrylanguage ON city.cntry_code = countrylanguage.cntry_code  WHERE country.cont = 'Asia' AND countrylanguage.lang = 'Chinese' AND countrylanguage.ofcl = 'T'",
    "SELECT name, indepyear, sa FROM country WHERE popn = (SELECT MIN(popn) FROM country)",
    "SELECT name, indepyear, sa FROM country ORDER BY popn ASC LIMIT 1",
    "SELECT popn, name, hos FROM country ORDER BY sa DESC LIMIT 1",
    "SELECT c.name, c.popn, c.hos FROM country c WHERE c.sa = (SELECT MAX(sa) FROM country)",
    "SELECT country.name, COUNT(countrylanguage.lang) as num_languages FROM country JOIN countrylanguage ON country.code = countrylanguage.cntry_code WHERE country.code IN (     SELECT cntry_code     FROM countrylanguage     GROUP BY cntry_code     HAVING COUNT(lang) >= 3 ) GROUP BY country.code",
    "SELECT country.name, COUNT(countrylanguage.lang) as num_languages FROM country JOIN countrylanguage ON country.code = countrylanguage.cntry_code WHERE country.code IN (     SELECT cntry_code     FROM countrylanguage     GROUP BY cntry_code     HAVING COUNT(lang) > 2 ) GROUP BY country.code;",
    "SELECT district, COUNT(*)  FROM city  WHERE popn > (SELECT AVG(popn) FROM city)  GROUP BY district",
    "SELECT district, COUNT(city)  FROM city  WHERE popn > (SELECT AVG(popn) FROM city)  GROUP BY district",
    "SELECT gf AS government_form_name, SUM(popn) AS total_population FROM country WHERE le > 72 GROUP BY gf",
    "SELECT country.government_form, SUM(country.popn) AS total_population FROM country WHERE country.government_form IN (     SELECT government_form     FROM country     GROUP BY government_form     HAVING AVG(le) > 72 ) GROUP BY country.government_form",
    "SELECT AVG(le), SUM(popn), cont FROM country GROUP BY cont HAVING AVG(le) < 72",
    "SELECT cont, SUM(popn) AS total_population, AVG(le) AS average_life_expectancy FROM country GROUP BY cont HAVING AVG(le) < 72;",
    "SELECT name, sa FROM country ORDER BY sa DESC LIMIT 5",
    "SELECT name, sa  FROM country  ORDER BY sa DESC  LIMIT 5",
    "SELECT name FROM country ORDER BY popn DESC LIMIT 3",
    "SELECT name FROM country ORDER BY popn DESC LIMIT 3",
    "SELECT name FROM country ORDER BY popn ASC LIMIT 3",
    "SELECT name FROM country ORDER BY popn ASC LIMIT 3",
    "SELECT COUNT(*) FROM country WHERE cont = 'Asia'",
    "SELECT COUNT(*) FROM country WHERE cont = 'Asia'",
    "SELECT name FROM country WHERE cont = 'Europe' AND popn = 80000",
    "SELECT name FROM country WHERE cont = 'Europe' AND popn = 80000",
    "SELECT SUM(popn), AVG(sa) FROM country WHERE cont = 'North America' AND sa > 3000",
    "SELECT SUM(popn), AVG(sa) FROM country WHERE cont = 'North America' AND sa > 3000",
    "SELECT name FROM city WHERE popn BETWEEN 160000 AND 900000",
    "SELECT name FROM city WHERE popn BETWEEN 160000 AND 900000",
    "SELECT lang FROM countrylanguage GROUP BY lang ORDER BY COUNT(DISTINCT cntry_code) DESC LIMIT 1",
    "SELECT lang FROM countrylanguage GROUP BY lang ORDER BY COUNT(DISTINCT cntry_code) DESC LIMIT 1",
    "SELECT country.name, countrylanguage.lang FROM countrylanguage JOIN (     SELECT cntry_code, lang, pct, ROW_NUMBER() OVER (PARTITION BY cntry_code ORDER BY pct DESC) AS rn     FROM countrylanguage ) AS cl ON countrylanguage.cntry_code = cl.cntry_code AND countrylanguage.lang = cl.lang AND countrylanguage.pct = cl.pct JOIN country ON country.code = countrylanguage.cntry_code WHERE cl.rn = 1",
    "SELECT c.code AS country_code, cl.lang AS language, MAX(cl.pct) AS percentage FROM country c JOIN countrylanguage cl ON c.code = cl.cntry_code GROUP BY c.code, cl.lang",
    "SELECT COUNT(DISTINCT countrylanguage.cntry_code)  FROM countrylanguage  WHERE countrylanguage.lang = 'Spanish'  AND countrylanguage.pct = (SELECT MAX(pct) FROM countrylanguage WHERE lang = 'Spanish')",
    "SELECT COUNT(DISTINCT cntry_code) FROM countrylanguage WHERE lang = 'Spanish' AND pct > 50",
    "SELECT country.code FROM country JOIN countrylanguage ON country.code = countrylanguage.cntry_code WHERE countrylanguage.lang = 'Spanish' GROUP BY country.code ORDER BY MAX(countrylanguage.pct) DESC LIMIT 1",
    "SELECT code FROM country WHERE code IN (SELECT cntry_code FROM countrylanguage WHERE lang = 'Spanish' AND pct > 50)",
    "SELECT cont FROM country WHERE code = (SELECT cntry_code FROM city WHERE name = 'Anguilla')",
    "SELECT cont FROM country WHERE code = (SELECT cntry_code FROM city WHERE name = 'Anguilla')",
    "SELECT region FROM country WHERE code = (SELECT cntry_code FROM city WHERE name = 'Kabul')",
    "SELECT country.region FROM city JOIN country ON city.cntry_code = country.code WHERE city.name = 'Kabul'",
    "SELECT language FROM countrylanguage WHERE countrycode = 'ABW' ORDER BY pct DESC LIMIT 1",
    "SELECT language FROM countrylanguage WHERE countrycode = 'ABW' AND pct = 100",
    "SELECT population, le FROM country c JOIN city ci ON c.code = ci.cntry_code WHERE c.name = 'Brazil'",
    "SELECT country.popn AS population, country.le AS life_expectancy FROM country WHERE country.name = 'Brazil'",
    "SELECT region, popn FROM country WHERE name = 'Angola'",
    "SELECT country.region, country.popn FROM country WHERE country.name = 'Angola'",
    "SELECT AVG(le) FROM country WHERE region = 'Central Africa'",
    "SELECT AVG(le) FROM country WHERE name = 'Central Africa'",
    "SELECT name FROM country WHERE cont = 'Asia' ORDER BY le ASC LIMIT 1",
    "SELECT name FROM country WHERE cont = 'Asia' ORDER BY le ASC LIMIT 1",
    "SELECT SUM(population), MAX(gnp) FROM country WHERE cont = 'Asia'",
    "SELECT SUM(population) AS population_in_asia, MAX(gnp) AS largest_gnp_in_asia FROM city JOIN country ON city.cntry_code = country.code WHERE country.continent = 'Asia'",
    "SELECT AVG(le) FROM country WHERE cont = 'Africa' AND governmentform LIKE '%Republic%'",
    "SELECT AVG(le) FROM country WHERE cont = 'Africa' AND governmentform LIKE '%Republic%'",
    "SELECT SUM(surfacearea) FROM country WHERE cont IN ('Asia', 'Europe')",
    "SELECT SUM(surfacearea) FROM country WHERE cont IN ('Asia', 'Europe')",
    "SELECT AVG(gnp), SUM(popn) FROM country WHERE governmentform LIKE '%US territory%'",
    "SELECT AVG(gnp), SUM(popn) FROM country WHERE code2 = 'US'",
    "SELECT COUNT(DISTINCT governmentform) FROM country WHERE cont = 'Africa'",
    "SELECT COUNT(DISTINCT governmentform) FROM country WHERE continent = 'Africa'",
    "SELECT COUNT(*) FROM countrylanguage WHERE countrycode = 'AFG' AND ofcl = 'T'",
    "SELECT COUNT(*) FROM countrylanguage WHERE countrycode = 'AFG' AND ofcl = 'T'",
    "SELECT cont FROM country GROUP BY cont ORDER BY COUNT(DISTINCT language) DESC LIMIT 1",
    "SELECT cont, COUNT(DISTINCT language) AS num_languages FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY cont ORDER BY num_languages DESC LIMIT 1;",
    "SELECT DISTINCT c.name  FROM country c  JOIN countrylanguage cl1 ON c.code = cl1.countrycode AND cl1.language = 'English' AND cl1.ofcl = 'T'  JOIN countrylanguage cl2 ON c.code = cl2.countrycode AND cl2.language = 'French' AND cl2.ofcl = 'T'",
    "SELECT name FROM country WHERE code IN (SELECT countrycode FROM countrylanguage WHERE language = 'English' AND ofcl = 'T') AND code IN (SELECT countrycode FROM countrylanguage WHERE language = 'French' AND ofcl = 'T')",
    "SELECT COUNT(DISTINCT cont) FROM country WHERE code IN (SELECT countrycode FROM countrylanguage WHERE language = 'Chinese')",
    "SELECT COUNT(DISTINCT cont) FROM country WHERE code IN (SELECT countrycode FROM countrylanguage WHERE language = 'Chinese')",
    "SELECT DISTINCT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'English' OR countrylanguage.language = 'Dutch' AND countrylanguage.ofcl = 'T'",
    "SELECT name FROM country WHERE code IN (SELECT countrycode FROM countrylanguage WHERE language = 'English' OR language = 'Dutch')",
    "SELECT language FROM countrylanguage WHERE pct = (SELECT MAX(pct) FROM countrylanguage WHERE countrycode IN (SELECT code FROM country WHERE cont = 'Asia'))",
    "SELECT language FROM countrylanguage WHERE countrycode IN (SELECT code FROM country WHERE cont = 'Asia' ORDER BY popn DESC LIMIT 1) ORDER BY pct DESC LIMIT 1",
    "SELECT city.name FROM city JOIN countrylanguage ON city.cntry_code = countrylanguage.countrycode WHERE language = 'English' ORDER BY population DESC LIMIT 1",
    "SELECT city.name FROM city JOIN country ON city.cntry_code = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'English' ORDER BY city.population DESC LIMIT 1",
    "SELECT name, popn, le FROM country WHERE cont = 'Asia' ORDER BY surfacearea DESC LIMIT 1",
    "SELECT name, popn, le FROM country WHERE cont = 'Asia' ORDER BY surfacearea DESC LIMIT 1",
    "SELECT AVG(le) FROM country WHERE code NOT IN (SELECT code FROM country WHERE name = 'England') AND code IN (SELECT countrycode FROM countrylanguage WHERE ofcl = 'F')",
    "SELECT AVG(le) FROM country WHERE code NOT IN (SELECT code FROM country WHERE name = 'United Kingdom') AND code NOT IN (SELECT countrycode FROM countrylanguage WHERE language = 'English' AND ofcl = 'T')",
    "SELECT SUM(population) FROM city WHERE cntry_code IN (SELECT code FROM country WHERE language <> 'English')",
    "SELECT SUM(population) FROM city WHERE cntry_code NOT IN (SELECT code FROM country WHERE name LIKE '%United States%' OR name LIKE '%United Kingdom%' OR name LIKE '%Australia%' OR name LIKE '%Canada%' OR name LIKE '%Ireland%' OR name LIKE '%New Zealand%' OR name LIKE '%South Africa%' OR name LIKE '%India%' OR name LIKE '%Nigeria%' OR name LIKE '%Pakistan%' OR name LIKE '%Philippines%' OR name LIKE '%Singapore%' OR name LIKE '%Malaysia%' OR name LIKE '%Ghana%' OR name LIKE '%Jamaica%' OR name LIKE '%Kenya%' OR name LIKE '%Uganda%' OR name LIKE '%Zimbabwe%')",
    "SELECT language FROM countrylanguage cl JOIN country c ON cl.countrycode = c.code WHERE c.hos = 'Beatrix' AND cl.ofcl = 'T'",
    "SELECT language FROM countrylanguage cl JOIN country c ON cl.countrycode = c.code WHERE c.hos = 'Beatrix' AND cl.ofcl = 'T'",
    "SELECT COUNT(DISTINCT language) FROM countrylanguage cl JOIN country c ON cl.countrycode = c.code WHERE c.indepyear < 1930",
    "SELECT COUNT(DISTINCT language) FROM countrylanguage cl JOIN country c ON cl.countrycode = c.code WHERE c.indepyear < 1930 AND cl.ofcl = 'T'",
    "SELECT name FROM country WHERE surfacearea > (SELECT MAX(surfacearea) FROM country WHERE cont = 'Europe')",
    "SELECT name FROM country WHERE surfacearea > (SELECT MAX(surfacearea) FROM country WHERE cont = 'Europe')",
    "SELECT name FROM country WHERE cont = 'Africa' AND popn < (SELECT MIN(popn) FROM country WHERE cont = 'Asia')",
    "SELECT name FROM country WHERE cont = 'Africa' AND popn < (SELECT MIN(popn) FROM country WHERE cont = 'Asia')",
    "SELECT name FROM country WHERE cont = 'Asia' AND popn > ALL(SELECT popn FROM country WHERE cont = 'Africa')",
    "SELECT name FROM country WHERE cont = 'Asia' AND popn > (SELECT MAX(popn) FROM country WHERE cont = 'Africa')",
    "SELECT DISTINCT city.name FROM city  JOIN country ON city.cntry_code = country.code  JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE country.cont = 'Europe' AND countrylanguage.ofcl != 'T' AND countrylanguage.language = 'English'",
    "SELECT DISTINCT city.name FROM city  JOIN country ON city.cntry_code = country.code  JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE country.cont = 'Europe' AND countrylanguage.ofcl != 'T' AND countrylanguage.language = 'English'",
    "SELECT DISTINCT city.name FROM city  JOIN country ON city.cntry_code = country.code  JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE country.continent = 'Asia' AND countrylanguage.language = 'Chinese' AND countrylanguage.ofcl = 'T'",
    "SELECT DISTINCT city.name FROM city  JOIN country ON city.cntry_code = country.code  JOIN countrylanguage ON city.cntry_code = countrylanguage.countrycode  WHERE country.continent = 'Asia' AND countrylanguage.language = 'Chinese' AND countrylanguage.ofcl = 'T'",
    "SELECT name, indepyear, surfacearea FROM country WHERE popn = (SELECT MIN(popn) FROM country)",
    "SELECT name, indepyear, surfacearea FROM country ORDER BY popn ASC LIMIT 1",
    "SELECT population, name, hos AS leader FROM country WHERE surfacearea = (SELECT MAX(surfacearea) FROM country)",
    "SELECT c.name, c.popn, c.hos FROM country c WHERE c.surfacearea = (SELECT MAX(surfacearea) FROM country)",
    "SELECT governmentform, SUM(popn) as total_population FROM country WHERE le > 72 GROUP BY governmentform",
    "SELECT governmentform, SUM(popn) as total_population FROM country WHERE le > 72 GROUP BY governmentform",
    "SELECT AVG(le), SUM(popn), cont FROM country GROUP BY cont HAVING AVG(le) < 72",
    "SELECT cont, SUM(popn) AS total_population, AVG(le) AS average_life_expectancy FROM country GROUP BY cont HAVING AVG(le) < 72;",
    "SELECT name FROM country ORDER BY popn DESC LIMIT 3",
    "SELECT name FROM country ORDER BY popn DESC LIMIT 3",
    "SELECT name FROM country ORDER BY popn ASC LIMIT 3",
    "SELECT name FROM country ORDER BY popn ASC LIMIT 3",
    "SELECT COUNT(*) FROM country WHERE cont = 'Asia'",
    "SELECT COUNT(*) FROM country WHERE cont = 'Asia'",
    "SELECT name FROM country WHERE cont = 'Europe' AND popn = 80000",
    "SELECT name FROM country WHERE cont = 'Europe' AND popn = 80000",
    "SELECT SUM(popn), AVG(surfacearea) FROM country WHERE cont = 'North America' AND surfacearea > 3000",
    "SELECT SUM(popn), AVG(surfacearea) FROM country WHERE cont = 'North America' AND surfacearea > 3000",
    "SELECT country.name, countrylanguage.language FROM country JOIN (     SELECT countrycode, language, MAX(pct) AS max_pct     FROM countrylanguage     GROUP BY countrycode ) AS max_pct_per_country ON country.code = max_pct_per_country.countrycode JOIN countrylanguage ON country.code = countrylanguage.countrycode AND max_pct_per_country.language = countrylanguage.language AND max_pct_per_country.max_pct = countrylanguage.pct;",
    "SELECT c.code AS country_code, cl.language FROM country c JOIN countrylanguage cl ON c.code = cl.countrycode WHERE cl.pct = (SELECT MAX(pct) FROM countrylanguage WHERE countrycode = c.code) ORDER BY c.code ASC",
    "SELECT COUNT(DISTINCT countrycode) FROM countrylanguage WHERE language = 'Spanish' AND pct = (SELECT MAX(pct) FROM countrylanguage WHERE language = 'Spanish')",
    "SELECT COUNT(DISTINCT countrycode) FROM countrylanguage WHERE language = 'Spanish' AND pct > 50",
    "SELECT country.code FROM country  JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE language = 'Spanish'  GROUP BY country.code  ORDER BY MAX(pct) DESC  LIMIT 1",
    "SELECT code FROM country WHERE code IN (SELECT countrycode FROM countrylanguage WHERE language = 'Spanish' AND pct > 50)",
    "SELECT COUNT(*) FROM country WHERE sa = 'Republic'",
    "SELECT COUNT(*) FROM country WHERE governmentform = 'Republic'",
    "SELECT SUM(sa) FROM country WHERE region = 'Caribbean'",
    "SELECT SUM(sa) FROM country WHERE cont = 'Caribbean'",
    "SELECT cont FROM country WHERE code='AIA'",
    "SELECT cont FROM country WHERE code = (SELECT countrycode FROM city WHERE name = 'Anguilla')",
    "SELECT lang FROM countrylanguage WHERE cntry_code = 'ABW' ORDER BY pct DESC LIMIT 1",
    "SELECT lang FROM countrylanguage WHERE cntry_code = 'ABW' AND isofficial = true",
    "SELECT population, le FROM country WHERE name = 'Brazil'",
    "SELECT population, le FROM country WHERE name = 'Brazil'",
    "SELECT AVG(le) FROM country WHERE region = 'Central Africa'",
    "SELECT AVG(le) FROM country WHERE name = 'Central Africa'",
    "SELECT name FROM country WHERE cont = 'Asia' ORDER BY le ASC LIMIT 1",
    "SELECT name FROM country WHERE cont = 'Asia' ORDER BY le ASC LIMIT 1",
    "SELECT SUM(population), MAX(gnp) FROM country WHERE cont = 'Asia'",
    "SELECT SUM(population) AS population_in_asia, MAX(gnp) AS largest_gnp_in_asia FROM country WHERE cont = 'Asia'",
    "SELECT AVG(le) FROM country WHERE cont = 'Africa' AND governmentform = 'Republic'",
    "SELECT AVG(le) FROM country WHERE cont = 'Africa' AND governmentform = 'Republic'",
    "SELECT SUM(sa) FROM country WHERE cont IN ('Asia', 'Europe')",
    "SELECT SUM(sa) FROM country WHERE cont IN ('Asia', 'Europe')",
    "SELECT SUM(popn) FROM city WHERE district = 'Gelderland'",
    "SELECT SUM(popn) FROM city WHERE district = 'Gelderland'",
    "SELECT AVG(gnp), SUM(population) FROM country WHERE code IN (SELECT code FROM country WHERE governmentform LIKE '%US territory%')",
    "SELECT AVG(gnp), SUM(population) FROM country WHERE code2 = 'US'",
    "SELECT COUNT(DISTINCT lang) FROM countrylanguage",
    "SELECT COUNT(DISTINCT lang) FROM countrylanguage",
    "SELECT COUNT(DISTINCT cont) FROM country WHERE cont = 'Africa'",
    "SELECT COUNT(DISTINCT government_form) FROM country WHERE continent = 'Africa'",
    "SELECT COUNT(DISTINCT lang) FROM countrylanguage WHERE cntry_code = 'ABW'",
    "SELECT COUNT(DISTINCT lang) FROM countrylanguage WHERE cntry_code = 'ABW'",
    "SELECT COUNT(*) FROM countrylanguage WHERE cntry_code = 'AFG' AND isofficial = true",
    "SELECT COUNT(*) FROM countrylanguage WHERE cntry_code = 'AFG' AND isofficial = true",
    "SELECT name FROM country ORDER BY (SELECT COUNT(DISTINCT lang) FROM countrylanguage WHERE cntry_code = code) DESC LIMIT 1",
    "SELECT name FROM country WHERE code = (SELECT cntry_code FROM countrylanguage GROUP BY cntry_code ORDER BY COUNT(lang) DESC LIMIT 1)",
    "SELECT cont FROM country GROUP BY cont ORDER BY COUNT(DISTINCT lang) DESC LIMIT 1",
    "SELECT cont, COUNT(DISTINCT lang) AS num_languages FROM country JOIN countrylanguage ON country.code = countrylanguage.cntry_code GROUP BY cont ORDER BY num_languages DESC LIMIT 1;",
    "SELECT COUNT(DISTINCT cntry_code) FROM countrylanguage WHERE lang = 'English' AND cntry_code IN (SELECT cntry_code FROM countrylanguage WHERE lang = 'Dutch')",
    "SELECT COUNT(DISTINCT country.code) FROM countrylanguage AS lang1 JOIN countrylanguage AS lang2 ON lang1.cntry_code = lang2.cntry_code AND lang1.lang = 'English' AND lang2.lang = 'Dutch' JOIN country ON country.code = lang1.cntry_code",
    "SELECT DISTINCT c.name  FROM country c  JOIN countrylanguage cl1 ON c.code = cl1.cntry_code AND cl1.lang = 'English' AND cl1.isofficial = 'T'  JOIN countrylanguage cl2 ON c.code = cl2.cntry_code AND cl2.lang = 'French' AND cl2.isofficial = 'T'",
    "SELECT DISTINCT c1.name FROM country c1, country c2, countrylanguage cl1, countrylanguage cl2 WHERE c1.code = cl1.cntry_code AND c2.code = cl2.cntry_code AND c1.code = c2.code AND cl1.lang = 'English' AND cl2.lang = 'French'",
    "SELECT DISTINCT c.name  FROM country c  JOIN countrylanguage cl1 ON c.code = cl1.cntry_code AND cl1.lang = 'English' AND cl1.isofficial = 'T' JOIN countrylanguage cl2 ON c.code = cl2.cntry_code AND cl2.lang = 'French' AND cl2.isofficial = 'T'",
    "SELECT name FROM country WHERE code IN (SELECT cntry_code FROM countrylanguage WHERE lang = 'English' AND isofficial = 'T') AND code IN (SELECT cntry_code FROM countrylanguage WHERE lang = 'French' AND isofficial = 'T')",
    "SELECT COUNT(DISTINCT cont) FROM country c JOIN countrylanguage cl ON c.code = cl.cntry_code WHERE lang = 'Chinese'",
    "SELECT COUNT(DISTINCT cont) FROM country WHERE code IN (SELECT cntry_code FROM countrylanguage WHERE lang = 'Chinese')",
    "SELECT DISTINCT region FROM country WHERE code IN (SELECT cntry_code FROM countrylanguage WHERE lang IN ('English', 'Dutch'))",
    "SELECT DISTINCT country.region FROM country  JOIN countrylanguage ON country.code = countrylanguage.cntry_code  WHERE countrylanguage.lang IN ('Dutch', 'English')",
    "SELECT DISTINCT country.name FROM country  JOIN countrylanguage ON country.code = countrylanguage.cntry_code  WHERE countrylanguage.lang = 'English' OR countrylanguage.lang = 'Dutch' AND countrylanguage.isofficial = 'T'",
    "SELECT name FROM country WHERE code IN (SELECT cntry_code FROM countrylanguage WHERE lang = 'English' OR lang = 'Dutch')",
    "SELECT lang FROM countrylanguage WHERE isofficial = 'T' AND cntry_code IN (SELECT code FROM country WHERE cont = 'Asia') ORDER BY pct DESC LIMIT 1",
    "select lang from countrylanguage where isofficial = 'T' and cntry_code in (select code from country where cont = 'Asia' order by population desc limit 1)",
    "SELECT lang FROM countrylanguage WHERE isofficial = 'T' AND pct = 100 AND cntry_code IN (SELECT code FROM country WHERE sa = 'Republic') GROUP BY lang HAVING COUNT(*) = 1",
    "SELECT lang FROM countrylanguage WHERE cntry_code IN (SELECT code FROM country WHERE governmentform LIKE '%Republic%' AND code IN (SELECT cntry_code FROM countrylanguage GROUP BY cntry_code HAVING COUNT(*) = 1))",
    "SELECT city.name FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.cntry_code WHERE countrylanguage.lang = 'English' ORDER BY city.popn DESC LIMIT 1",
    "SELECT city.name FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.cntry_code WHERE countrylanguage.lang = 'English' ORDER BY city.popn DESC LIMIT 1",
    "SELECT name, population, le FROM country WHERE cont = 'Asia' ORDER BY sa DESC LIMIT 1",
    "SELECT name, population, le FROM country WHERE cont = 'Asia' ORDER BY population DESC LIMIT 1",
    "SELECT AVG(le) FROM country WHERE code NOT IN (SELECT countrycode FROM countrylanguage WHERE isofficial = 'T' AND lang = 'English')",
    "SELECT AVG(le) FROM country WHERE code NOT IN (SELECT countrycode FROM countrylanguage WHERE isofficial = 'T' AND lang = 'English')",
    "SELECT SUM(population) FROM country WHERE code NOT IN (SELECT countrycode FROM city WHERE countrycode = code AND lang = 'English')",
    "SELECT COUNT(DISTINCT city.popn) FROM city JOIN country ON city.countrycode = country.code WHERE country.code NOT IN (SELECT code FROM country WHERE countrylanguage.lang = 'English' AND isofficial = 'T')",
    "SELECT lang FROM countrylanguage cl JOIN country c ON cl.cntry_code = c.code WHERE c.hos = 'Beatrix' AND cl.isofficial = 'T'",
    "SELECT lang FROM countrylanguage cl JOIN country c ON cl.cntry_code = c.code WHERE c.hos = 'Beatrix' AND cl.isofficial = 'T'",
    "SELECT COUNT(DISTINCT lang) FROM countrylanguage cl JOIN country c ON cl.cntry_code = c.code WHERE c.indepyear < 1930",
    "SELECT COUNT(DISTINCT lang) FROM countrylanguage cl JOIN country c ON cl.cntry_code = c.code WHERE c.indepyear < 1930 AND cl.isofficial = 'T'",
    "SELECT name FROM country WHERE sa > (SELECT MAX(sa) FROM country WHERE cont = 'Europe')",
    "SELECT name FROM country WHERE sa > (SELECT MAX(sa) FROM country WHERE cont = 'Europe')",
    "SELECT name FROM country WHERE cont = 'Africa' AND population < (SELECT MIN(population) FROM country WHERE cont = 'Asia')",
    "SELECT name FROM country WHERE cont = 'Africa' AND population < (SELECT MIN(population) FROM country WHERE cont = 'Asia')",
    "SELECT name FROM country WHERE cont = 'Asia' AND population > (SELECT MAX(population) FROM country WHERE cont = 'Africa')",
    "SELECT name FROM country WHERE cont = 'Asia' AND population > (SELECT MAX(population) FROM country WHERE cont = 'Africa')",
    "SELECT DISTINCT code FROM country WHERE code NOT IN (SELECT DISTINCT country.code FROM country JOIN countrylanguage ON country.code = countrylanguage.cntry_code WHERE countrylanguage.lang = 'English')",
    "SELECT DISTINCT code FROM country WHERE code NOT IN (SELECT countrycode FROM countrylanguage WHERE lang = 'English')",
    "SELECT DISTINCT country.code FROM country JOIN countrylanguage ON country.code = countrylanguage.cntry_code WHERE countrylanguage.lang <> 'English'",
    "SELECT DISTINCT country.code FROM country JOIN countrylanguage ON country.code = countrylanguage.cntry_code WHERE countrylanguage.lang <> 'English'",
    "SELECT code FROM country WHERE code NOT IN (SELECT countrycode FROM countrylanguage WHERE lang = 'English') AND governmentform != 'Republic'",
    "SELECT code FROM country WHERE code NOT IN (SELECT countrycode FROM countrylanguage WHERE lang = 'English') AND governmentform NOT LIKE '%Republic%'",
    "SELECT DISTINCT city.name FROM city  JOIN country ON city.countrycode = country.code  JOIN countrylanguage ON country.code = countrylanguage.cntry_code  WHERE country.cont = 'Europe' AND countrylanguage.lang <> 'English' AND countrylanguage.isofficial = 'T'",
    "SELECT DISTINCT city.name FROM city  JOIN country ON city.countrycode = country.code  JOIN countrylanguage ON city.countrycode = countrylanguage.cntry_code  WHERE country.cont = 'Europe' AND countrylanguage.lang <> 'English' AND countrylanguage.isofficial = 'T'",
    "SELECT DISTINCT city.name FROM city  JOIN country ON city.countrycode = country.code  JOIN countrylanguage ON country.code = countrylanguage.cntry_code  WHERE country.continent = 'Asia' AND countrylanguage.lang = 'Chinese' AND countrylanguage.isofficial = 'T'",
    "SELECT DISTINCT city.name FROM city  JOIN country ON city.countrycode = country.code  JOIN countrylanguage ON city.countrycode = countrylanguage.cntry_code  WHERE country.continent = 'Asia' AND countrylanguage.lang = 'Chinese' AND countrylanguage.isofficial = 'T'",
    "SELECT name, indepyear, sa FROM country WHERE population = (SELECT MIN(population) FROM country)",
    "SELECT name, indepyear, sa FROM country WHERE population = (SELECT MIN(population) FROM country)",
    "SELECT population, name, leader FROM country WHERE sa = (SELECT MAX(sa) FROM country)",
    "SELECT c.name, c.population, c.hos FROM country c WHERE c.sa = (SELECT MAX(sa) FROM country)",
    "SELECT country.name, COUNT(countrylanguage.lang) AS num_languages FROM country JOIN countrylanguage ON country.code = countrylanguage.cntry_code WHERE country.code IN (     SELECT cntry_code     FROM countrylanguage     GROUP BY cntry_code     HAVING COUNT(lang) >= 3 ) GROUP BY country.code ORDER BY country.name",
    "SELECT country.name, COUNT(countrylanguage.lang) as num_languages FROM country JOIN countrylanguage ON country.code = countrylanguage.cntry_code WHERE country.code IN (     SELECT countrylanguage.cntry_code     FROM countrylanguage     GROUP BY countrylanguage.cntry_code     HAVING COUNT(*) > 2 ) GROUP BY country.name",
    "SELECT district, COUNT(*)  FROM city  WHERE popn > (SELECT AVG(popn) FROM city)  GROUP BY district",
    "SELECT district, COUNT(city)  FROM city  WHERE popn > (SELECT AVG(popn) FROM city)  GROUP BY district",
    "SELECT country.government_form, SUM(country.population) AS total_population FROM country WHERE country.le > 72 GROUP BY country.government_form",
    "SELECT country.government_form, SUM(country.population) AS total_population FROM country WHERE country.government_form IN (     SELECT government_form     FROM country     GROUP BY government_form     HAVING AVG(le) > 72 ) GROUP BY country.government_form",
    "SELECT AVG(le), SUM(population), cont FROM country GROUP BY cont HAVING AVG(le) < 72",
    "SELECT cont, SUM(population) AS total_population, AVG(le) AS avg_life_expectancy FROM country GROUP BY cont HAVING AVG(le) < 72",
    "SELECT name, sa FROM country ORDER BY sa DESC LIMIT 5",
    "SELECT name, sa FROM country ORDER BY sa DESC LIMIT 5",
    "SELECT COUNT(*) FROM country WHERE cont = 'Asia'",
    "SELECT COUNT(*) FROM country WHERE cont = 'Asia'",
    "SELECT name FROM country WHERE cont = 'Europe' AND population = 80000",
    "SELECT name FROM country WHERE cont = 'Europe' AND population = 80000",
    "SELECT SUM(population), AVG(sa) FROM country WHERE cont = 'North America' AND sa > 3000",
    "SELECT SUM(population), AVG(sa) FROM country WHERE cont = 'North America' AND sa > 3000",
    "SELECT name FROM city WHERE popn BETWEEN 160000 AND 900000",
    "SELECT name FROM city WHERE popn BETWEEN 160000 AND 900000",
    "SELECT lang  FROM countrylanguage  GROUP BY lang  ORDER BY COUNT(DISTINCT cntry_code) DESC  LIMIT 1",
    "SELECT lang FROM countrylanguage GROUP BY lang ORDER BY COUNT(DISTINCT cntry_code) DESC LIMIT 1",
    "SELECT country.name, countrylanguage.lang FROM country JOIN (     SELECT cntry_code, lang, MAX(pct) AS max_pct     FROM countrylanguage     GROUP BY cntry_code ) AS max_pct_per_country ON country.code = max_pct_per_country.cntry_code AND countrylanguage.lang = max_pct_per_country.lang AND countrylanguage.pct = max_pct_per_country.max_pct",
    "SELECT country.code, countrylanguage.lang FROM country JOIN countrylanguage ON country.code = countrylanguage.cntry_code WHERE countrylanguage.pct = (     SELECT MAX(pct)     FROM countrylanguage     WHERE cntry_code = country.code ) ORDER BY country.code ASC",
    "SELECT COUNT(DISTINCT countrylanguage.cntry_code)  FROM countrylanguage  JOIN (     SELECT cntry_code, MAX(pct) AS max_pct      FROM countrylanguage      WHERE lang = 'Spanish'      GROUP BY cntry_code ) AS max_pct_table  ON countrylanguage.cntry_code = max_pct_table.cntry_code AND countrylanguage.pct = max_pct_table.max_pct",
    "SELECT COUNT(DISTINCT country.code) FROM country JOIN countrylanguage ON country.code = countrylanguage.cntry_code WHERE countrylanguage.lang = 'Spanish' AND countrylanguage.isofficial = 'T' AND countrylanguage.pct > 50",
    "SELECT country.code FROM country  JOIN countrylanguage ON country.code = countrylanguage.cntry_code  WHERE countrylanguage.lang = 'Spanish'  GROUP BY country.code  ORDER BY MAX(countrylanguage.pct) DESC  LIMIT 1",
    "SELECT code FROM country WHERE code IN (SELECT cntry_code FROM countrylanguage WHERE lang = 'Spanish' AND isofficial = 'T')",
    "SELECT COUNT(*) FROM country WHERE governmentform = 'Republic'",
    "SELECT COUNT(*) FROM country WHERE governmentform = 'Republic'",
    "SELECT SUM(sa) FROM country WHERE region = 'Caribbean'",
    "SELECT SUM(sa) FROM country WHERE continent = 'Caribbean'",
    "SELECT region FROM country WHERE code = (SELECT cntry_code FROM city WHERE name = 'Kabul')",
    "SELECT region FROM country WHERE code = (SELECT cntry_code FROM city WHERE name = 'Kabul')",
    "SELECT lang FROM countrylanguage WHERE countrycode = 'ABW' ORDER BY pct DESC LIMIT 1",
    "SELECT lang FROM countrylanguage WHERE countrycode = 'ABW' AND pct = 100",
    "SELECT popn, le FROM country WHERE name = 'Brazil'",
    "SELECT country.popn, country.le FROM country WHERE country.name = 'Brazil'",
    "SELECT region, popn FROM country WHERE name = 'Angola'",
    "SELECT country.region, country.popn FROM country WHERE country.name = 'Angola'",
    "SELECT AVG(le) FROM country WHERE region = 'Central Africa'",
    "SELECT AVG(le) FROM country WHERE continent = 'Central Africa'",
    "SELECT name FROM country WHERE continent = 'Asia' ORDER BY le ASC LIMIT 1",
    "SELECT name FROM country WHERE continent = 'Asia' ORDER BY le ASC LIMIT 1",
    "SELECT SUM(popn), MAX(gnp) FROM country WHERE continent = 'Asia'",
    "SELECT SUM(popn) AS population_in_asia, MAX(gnp) AS largest_gnp_in_asia FROM country WHERE continent = 'Asia'",
    "SELECT AVG(le) FROM country WHERE continent = 'Africa' AND governmentform = 'Republic'",
    "SELECT AVG(le) FROM country WHERE continent = 'Africa' AND governmentform = 'Republic'",
    "SELECT SUM(sa) FROM country WHERE continent IN ('Asia', 'Europe')",
    "SELECT SUM(sa) FROM country WHERE continent = 'Asia' OR continent = 'Europe'",
    "SELECT SUM(popn) FROM city WHERE dist = 'Gelderland'",
    "SELECT SUM(popn) FROM city WHERE dist = 'Gelderland'",
    "SELECT AVG(gnp), SUM(popn) FROM country WHERE governmentform LIKE '%US territory%'",
    "SELECT AVG(gnp), SUM(popn) FROM country WHERE code2 = 'US'",
    "SELECT COUNT(DISTINCT lang) FROM countrylanguage",
    "SELECT COUNT(DISTINCT lang) FROM countrylanguage",
    "SELECT COUNT(DISTINCT government) FROM country WHERE continent = 'Africa'",
    "SELECT COUNT(DISTINCT government_form) FROM country WHERE continent = 'Africa'",
    "SELECT COUNT(DISTINCT lang) FROM countrylanguage WHERE countrycode = 'ABW'",
    "SELECT COUNT(DISTINCT lang) FROM countrylanguage WHERE countrycode = 'ABW'",
    "SELECT COUNT(*) FROM countrylanguage WHERE countrycode = 'AFG' AND ofcl = 'T'",
    "SELECT COUNT(*) FROM countrylanguage WHERE countrycode = 'AFG' AND ofcl = 'T'",
    "SELECT COUNT(DISTINCT countrycode) FROM countrylanguage WHERE lang IN ('English', 'Dutch') GROUP BY countrycode HAVING COUNT(DISTINCT lang) = 2",
    "SELECT COUNT(DISTINCT country.code) FROM countrylanguage AS lang1 JOIN countrylanguage AS lang2 ON lang1.countrycode = lang2.countrycode JOIN country ON lang1.countrycode = country.code WHERE lang1.lang = 'English' AND lang2.lang = 'Dutch'",
    "SELECT DISTINCT c.name  FROM country c  JOIN countrylanguage cl1 ON c.code = cl1.countrycode AND cl1.lang = 'English'  JOIN countrylanguage cl2 ON c.code = cl2.countrycode AND cl2.lang = 'French'",
    "SELECT DISTINCT c1.name  FROM country c1  JOIN countrylanguage cl1 ON c1.code = cl1.countrycode AND cl1.lang = 'English'  JOIN countrylanguage cl2 ON c1.code = cl2.countrycode AND cl2.lang = 'French'",
    "SELECT DISTINCT c.name  FROM country c  JOIN countrylanguage cl1 ON c.code = cl1.countrycode AND cl1.lang = 'English' AND cl1.ofcl = 'T'  JOIN countrylanguage cl2 ON c.code = cl2.countrycode AND cl2.lang = 'French' AND cl2.ofcl = 'T'",
    "SELECT name FROM country WHERE (ofcl = 'T' AND lang = 'English') AND (ofcl = 'T' AND lang = 'French')",
    "SELECT COUNT(DISTINCT continent) FROM country WHERE code IN (SELECT countrycode FROM countrylanguage WHERE lang = 'Chinese')",
    "SELECT COUNT(DISTINCT country.continent) FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.lang = 'Chinese'",
    "SELECT DISTINCT region FROM country WHERE code IN (SELECT countrycode FROM countrylanguage WHERE lang IN ('English', 'Dutch'))",
    "SELECT DISTINCT country.region FROM country  JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.lang IN ('Dutch', 'English')",
    "SELECT DISTINCT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.lang = 'English' OR countrylanguage.lang = 'Dutch' AND countrylanguage.ofcl = 'T'",
    "SELECT name FROM countrylanguage cl JOIN country c ON cl.countrycode = c.code WHERE lang = 'English' OR lang = 'Dutch' AND ofcl = 'T'",
    "SELECT lang FROM countrylanguage WHERE pct = (SELECT MAX(pct) FROM countrylanguage WHERE continent = 'Asia') AND continent = 'Asia'",
    "SELECT lang FROM countrylanguage WHERE countrycode IN (SELECT code FROM country WHERE continent = 'Asia' ORDER BY popn DESC LIMIT 1) ORDER BY pct DESC LIMIT 1",
    "SELECT lang FROM countrylanguage WHERE pct = 100 AND countrycode IN (SELECT code FROM country WHERE governmentform LIKE '%Republic%' AND code NOT IN (SELECT countrycode FROM countrylanguage GROUP BY countrycode HAVING COUNT(*) > 1))",
    "SELECT lang FROM countrylanguage WHERE pct = 100 AND countrycode IN (SELECT code FROM country WHERE governmentform LIKE '%Republic%') GROUP BY lang HAVING COUNT(*) = 1",
    "SELECT city.name FROM city JOIN country ON city.cntry_code = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.lang = 'English' ORDER BY city.popn DESC LIMIT 1",
    "SELECT city.name FROM city JOIN country ON city.cntry_code = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.lang = 'English' ORDER BY city.popn DESC LIMIT 1",
    "SELECT name, popn, le FROM country WHERE continent = 'Asia' ORDER BY sa DESC LIMIT 1",
    "SELECT name, popn, le FROM country WHERE continent = 'Asia' ORDER BY popn DESC LIMIT 1",
    "SELECT AVG(le) FROM country WHERE code NOT IN (SELECT code FROM countrylanguage WHERE lang = 'English' AND ofcl = 'T')",
    "SELECT AVG(le) FROM country WHERE code NOT IN (SELECT code FROM countrylanguage WHERE lang = 'English' AND ofcl = 'T')",
    "SELECT SUM(popn) FROM country WHERE code NOT IN (SELECT cntry_code FROM city WHERE name = 'English')",
    "SELECT COUNT(DISTINCT city.popn) FROM city JOIN country ON city.cntry_code = country.code WHERE country.code NOT IN (SELECT code FROM country WHERE continent = 'Europe' OR continent = 'North America' OR continent = 'Australia' OR continent = 'Antarctica' OR continent = 'Asia' OR continent = 'Africa')",
    "SELECT countrylanguage.lang FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.hos = 'Beatrix' AND countrylanguage.ofcl = 'T'",
    "SELECT countrylanguage.lang FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.hos = 'Beatrix' AND countrylanguage.ofcl = 'T'",
    "SELECT COUNT(DISTINCT lang) FROM countrylanguage cl JOIN country c ON cl.countrycode = c.code WHERE c.indepyear < 1930 AND cl.ofcl = 'T'",
    "SELECT COUNT(DISTINCT lang) FROM countrylanguage cl JOIN country c ON cl.countrycode = c.code WHERE c.indepyear < 1930 AND cl.ofcl = 'T'",
    "SELECT name FROM country WHERE sa > (SELECT MAX(sa) FROM country WHERE continent = 'Europe')",
    "SELECT name FROM country WHERE sa > (SELECT MAX(sa) FROM country WHERE continent = 'Europe')",
    "SELECT name FROM country WHERE continent = 'Africa' AND popn < (SELECT MIN(popn) FROM country WHERE continent = 'Asia')",
    "SELECT name FROM country WHERE continent = 'Africa' AND popn < (SELECT MIN(popn) FROM country WHERE continent = 'Asia')",
    "SELECT name FROM country WHERE continent = 'Asia' AND popn > (SELECT MAX(popn) FROM country WHERE continent = 'Africa')",
    "SELECT name FROM country WHERE continent = 'Asia' AND popn > (SELECT MAX(popn) FROM country WHERE continent = 'Africa')",
    "SELECT DISTINCT code FROM country WHERE code NOT IN (SELECT DISTINCT cntry_code FROM city WHERE name LIKE '%English%') AND code IN (SELECT DISTINCT countrycode FROM countrylanguage WHERE lang != 'English')",
    "SELECT code FROM country WHERE code NOT IN (SELECT countrycode FROM countrylanguage WHERE lang = 'English')",
    "SELECT DISTINCT country.code FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.lang != 'English'",
    "SELECT DISTINCT country.code FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.lang != 'English'",
    "SELECT code FROM country WHERE code NOT IN (SELECT DISTINCT cntry_code FROM city JOIN country ON city.cntry_code = country.code WHERE country.language != 'English' AND country.governmentform != 'Republic')",
    "SELECT code FROM country WHERE code NOT IN (SELECT cntry_code FROM city WHERE name = 'English') AND code NOT IN (SELECT code FROM country WHERE governmentform LIKE '%Republic%')",
    "SELECT DISTINCT city.name FROM city  JOIN country ON city.cntry_code = country.code  JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE country.continent = 'Europe' AND countrylanguage.ofcl != 'T' AND countrylanguage.lang = 'English'",
    "SELECT city.name FROM city  JOIN country ON city.cntry_code = country.code  JOIN countrylanguage ON city.cntry_code = countrylanguage.countrycode  WHERE country.continent = 'Europe' AND countrylanguage.lang <> 'English' AND countrylanguage.ofcl = 't'",
    "SELECT DISTINCT city.name FROM city  JOIN country ON city.cntry_code = country.code  JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE country.continent = 'Asia' AND countrylanguage.lang = 'Chinese' AND countrylanguage.ofcl = 'T'",
    "SELECT DISTINCT city.name FROM city  JOIN country ON city.cntry_code = country.code  JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE country.continent = 'Asia' AND countrylanguage.lang = 'Chinese' AND countrylanguage.ofcl = 'T'",
    "SELECT name, indepyear, sa FROM country WHERE popn = (SELECT MIN(popn) FROM country)",
    "SELECT name, indepyear, sa FROM country WHERE popn = (SELECT MIN(popn) FROM country)",
    "SELECT popn, name, hos FROM country ORDER BY sa DESC LIMIT 1",
    "SELECT name, popn, hos FROM country ORDER BY sa DESC LIMIT 1",
    "SELECT country.name, COUNT(countrylanguage.lang) AS num_languages FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.code IN (     SELECT countrycode     FROM countrylanguage     GROUP BY countrycode     HAVING COUNT(*) >= 3 ) GROUP BY country.code;",
    "SELECT country.name, COUNT(DISTINCT countrylanguage.lang) AS num_languages FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.name HAVING num_languages > 2",
    "SELECT district, COUNT(*)  FROM city  WHERE popn > (SELECT AVG(popn) FROM city)  GROUP BY district",
    "SELECT district, COUNT(city)  FROM city  WHERE popn > (SELECT AVG(popn) FROM city)  GROUP BY district",
    "SELECT country.governmentform, SUM(city.popn) as total_population FROM country JOIN city ON country.code = city.cntry_code WHERE country.le > 72 GROUP BY country.governmentform",
    "SELECT country.governmentform, SUM(country.popn) AS total_population FROM country WHERE country.governmentform IN (     SELECT governmentform     FROM country     GROUP BY governmentform     HAVING AVG(le) > 72 ) GROUP BY country.governmentform",
    "SELECT AVG(le), SUM(popn) FROM country GROUP BY continent HAVING AVG(le) < 72;",
    "SELECT continent, SUM(popn) AS total_population, AVG(le) AS average_life_expectancy FROM country GROUP BY continent HAVING AVG(le) < 72;",
    "SELECT name, sa AS area FROM country ORDER BY sa DESC LIMIT 5",
    "SELECT name, sa FROM country ORDER BY sa DESC LIMIT 5",
    "SELECT name FROM country ORDER BY popn DESC LIMIT 3",
    "SELECT name FROM country ORDER BY popn DESC LIMIT 3",
    "SELECT name FROM country ORDER BY popn ASC LIMIT 3",
    "SELECT name FROM country ORDER BY popn ASC LIMIT 3",
    "SELECT name FROM country WHERE continent = 'Europe' AND popn = 80000",
    "SELECT name FROM country WHERE continent = 'Europe' AND popn = 80000",
    "SELECT SUM(popn), AVG(sa) FROM country WHERE continent = 'North America' AND sa > 3000",
    "SELECT SUM(popn), AVG(sa) FROM country WHERE continent = 'North America' AND sa > 3000",
    "SELECT name FROM city WHERE popn BETWEEN 160000 AND 900000",
    "SELECT name FROM city WHERE popn BETWEEN 160000 AND 900000",
    "SELECT lang FROM countrylanguage GROUP BY lang ORDER BY COUNT(DISTINCT countrycode) DESC LIMIT 1",
    "SELECT lang FROM countrylanguage GROUP BY lang ORDER BY COUNT(DISTINCT countrycode) DESC LIMIT 1",
    "SELECT country.name, countrylanguage.lang FROM countrylanguage JOIN (     SELECT countrycode, MAX(pct) AS max_pct     FROM countrylanguage     GROUP BY countrycode ) AS max_pct_per_country ON countrylanguage.countrycode = max_pct_per_country.countrycode AND countrylanguage.pct = max_pct_per_country.max_pct JOIN country ON country.code = countrylanguage.countrycode;",
    "SELECT c.code, cl.lang FROM country c JOIN (     SELECT countrycode, lang     FROM countrylanguage     WHERE pct = (         SELECT MAX(pct)         FROM countrylanguage         WHERE countrycode = cl.countrycode     ) ) cl ON c.code = cl.countrycode;",
    "SELECT COUNT(DISTINCT countrycode) FROM countrylanguage WHERE lang = 'Spanish' AND pct = (SELECT MAX(pct) FROM countrylanguage WHERE lang = 'Spanish')",
    "SELECT COUNT(*) FROM countrylanguage WHERE lang = 'Spanish' AND pct > 50",
    "SELECT country.code FROM country  JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.lang = 'Spanish'  GROUP BY country.code  ORDER BY MAX(countrylanguage.pct) DESC  LIMIT 1",
    "SELECT code FROM country WHERE code IN (SELECT countrycode FROM countrylanguage WHERE lang = 'Spanish' AND pct > 50)",
    "SELECT COUNT(*) FROM country WHERE governmentform = 'Republic'",
    "SELECT COUNT(*) FROM country WHERE governmentform = 'Republic'",
    "SELECT region FROM country WHERE code = (SELECT cntry_code FROM city WHERE name = 'Kabul')",
    "SELECT region FROM country WHERE code = (SELECT cntry_code FROM city WHERE name = 'Kabul')",
    "SELECT lang FROM countrylanguage WHERE cntry_code = 'ABW' ORDER BY pct DESC LIMIT 1",
    "SELECT lang FROM countrylanguage WHERE cntry_code = 'ABW' AND pct = 100",
    "SELECT popn, lifeexpectancy FROM country WHERE name = 'Brazil'",
    "SELECT country.popn, country.lifeexpectancy FROM country WHERE country.name = 'Brazil'",
    "SELECT region, popn FROM country WHERE name = 'Angola'",
    "SELECT country.region, country.popn FROM country WHERE country.name = 'Angola'",
    "SELECT SUM(popn), MAX(gnp) FROM country WHERE continent = 'Asia'",
    "SELECT SUM(popn) AS population_in_asia, MAX(gnp) AS largest_gnp_in_asia FROM country WHERE continent = 'Asia'",
    "SELECT AVG(lifeexpectancy) FROM country WHERE continent = 'Africa' AND governmentform = 'Republic'",
    "SELECT AVG(lifeexpectancy) FROM country WHERE continent = 'Africa' AND governmentform = 'Republic'",
    "SELECT SUM(popn) FROM city WHERE district = 'Gelderland'",
    "SELECT SUM(popn) FROM city WHERE district = 'Gelderland'",
    "SELECT AVG(gnp), SUM(popn) FROM country WHERE governmentform LIKE '%US territory%'",
    "SELECT AVG(gnp), SUM(popn) FROM country WHERE code IN ('ASM', 'GUM', 'MNP', 'PRI', 'VIR')",
    "SELECT COUNT(DISTINCT lang) FROM countrylanguage",
    "SELECT COUNT(DISTINCT lang) FROM countrylanguage",
    "SELECT COUNT(DISTINCT(government)) FROM country WHERE continent = 'Africa'",
    "SELECT COUNT(DISTINCT government_form) FROM country WHERE continent = 'Africa'",
    "SELECT COUNT(DISTINCT lang) FROM countrylanguage WHERE cntry_code = 'ABW'",
    "SELECT COUNT(DISTINCT lang) FROM countrylanguage WHERE cntry_code = 'ABW'",
    "SELECT COUNT(*) FROM countrylanguage WHERE cntry_code = 'AFG' AND ofcl = 'T'",
    "SELECT COUNT(lang) FROM countrylanguage WHERE cntry_code = 'AFG' AND ofcl = 'T'",
    "SELECT name FROM country ORDER BY (SELECT COUNT(DISTINCT lang) FROM countrylanguage WHERE cntry_code = code) DESC LIMIT 1",
    "SELECT name FROM country WHERE code = (SELECT cntry_code FROM countrylanguage GROUP BY cntry_code ORDER BY COUNT(lang) DESC LIMIT 1)",
    "SELECT continent FROM country GROUP BY continent ORDER BY COUNT(DISTINCT countrylanguage.lang) DESC LIMIT 1",
    "SELECT continent, COUNT(DISTINCT lang) AS num_languages FROM country JOIN countrylanguage ON country.code = countrylanguage.cntry_code GROUP BY continent ORDER BY num_languages DESC LIMIT 1;",
    "SELECT COUNT(DISTINCT cntry_code) FROM countrylanguage WHERE lang IN ('English', 'Dutch') GROUP BY cntry_code HAVING COUNT(DISTINCT lang) = 2",
    "SELECT COUNT(DISTINCT cntry_code) FROM countrylanguage WHERE lang IN ('English', 'Dutch')",
    "SELECT DISTINCT c.name  FROM country c  JOIN countrylanguage cl1 ON c.code = cl1.cntry_code AND cl1.lang = 'English'  JOIN countrylanguage cl2 ON c.code = cl2.cntry_code AND cl2.lang = 'French'",
    "SELECT DISTINCT c1.name  FROM country c1  JOIN countrylanguage cl1 ON c1.code = cl1.cntry_code AND cl1.lang = 'English'  JOIN countrylanguage cl2 ON c1.code = cl2.cntry_code AND cl2.lang = 'French'",
    "SELECT DISTINCT c.name  FROM country c  JOIN countrylanguage cl1 ON c.code = cl1.cntry_code AND cl1.lang = 'English' AND cl1.ofcl = 'T'  JOIN countrylanguage cl2 ON c.code = cl2.cntry_code AND cl2.lang = 'French' AND cl2.ofcl = 'T'",
    "SELECT name FROM country WHERE (countrylanguage.lang = 'English' AND countrylanguage.ofcl = 'T') AND (countrylanguage.lang = 'French' AND countrylanguage.ofcl = 'T')",
    "SELECT COUNT(DISTINCT continent) FROM country WHERE code IN (SELECT cntry_code FROM countrylanguage WHERE lang = 'Chinese')",
    "SELECT COUNT(DISTINCT country.continent) FROM country JOIN countrylanguage ON country.code = countrylanguage.cntry_code WHERE countrylanguage.lang = 'Chinese'",
    "SELECT DISTINCT region FROM country WHERE code IN (SELECT cntry_code FROM countrylanguage WHERE lang IN ('English', 'Dutch'))",
    "SELECT DISTINCT country.region FROM country  JOIN countrylanguage ON country.code = countrylanguage.cntry_code  WHERE countrylanguage.lang IN ('Dutch', 'English')",
    "SELECT DISTINCT name FROM country WHERE code IN (SELECT cntry_code FROM countrylanguage WHERE lang = 'English' OR lang = 'Dutch')",
    "SELECT name FROM countrylanguage WHERE lang = 'English' OR lang = 'Dutch' AND ofcl = 'T'",
    "SELECT lang FROM countrylanguage WHERE pct = (SELECT MAX(pct) FROM countrylanguage WHERE lang IN (SELECT lang FROM countrylanguage WHERE cntry_code IN (SELECT code FROM country WHERE continent = 'Asia')))",
    "SELECT lang FROM countrylanguage WHERE cntry_code IN (SELECT code FROM country WHERE continent = 'Asia' ORDER BY popn DESC LIMIT 1) ORDER BY pct DESC LIMIT 1",
    "SELECT lang FROM countrylanguage WHERE pct = 100 AND cntry_code IN (SELECT code FROM country WHERE governmentform LIKE '%Republic%' AND code NOT IN (SELECT cntry_code FROM countrylanguage GROUP BY cntry_code HAVING COUNT(*) > 1))",
    "SELECT lang FROM countrylanguage WHERE pct = 100 AND cntry_code IN (SELECT code FROM country WHERE governmentform LIKE '%Republic%') GROUP BY lang HAVING COUNT(*) = 1",
    "SELECT city.name FROM city JOIN countrylanguage ON city.cntry_code = countrylanguage.cntry_code WHERE countrylanguage.lang = 'English' ORDER BY city.popn DESC LIMIT 1",
    "SELECT city.name FROM city JOIN country ON city.cntry_code = country.code JOIN countrylanguage ON city.cntry_code = countrylanguage.cntry_code WHERE countrylanguage.lang = 'English' ORDER BY city.popn DESC LIMIT 1",
    "SELECT name, popn, lifeexpectancy FROM country WHERE continent = 'Asia' ORDER BY surfacearea DESC LIMIT 1",
    "SELECT name, popn, lifeexpectancy FROM country WHERE continent = 'Asia' ORDER BY surfacearea DESC LIMIT 1",
    "SELECT AVG(lifeexpectancy) FROM country WHERE code NOT IN (SELECT cntry_code FROM countrylanguage WHERE lang = 'English' AND ofcl = 'T')",
    "SELECT AVG(lifeexpectancy) FROM country WHERE code NOT IN (SELECT cntry_code FROM countrylanguage WHERE lang = 'English' AND ofcl = 'T')",
    "SELECT SUM(popn) FROM country c JOIN city ci ON c.code = ci.cntry_code WHERE c.code NOT IN (SELECT cntry_code FROM countrylanguage WHERE lang = 'English')",
    "SELECT COUNT(DISTINCT city.popn) FROM city JOIN country ON city.cntry_code = country.code WHERE country.code NOT IN (SELECT cntry_code FROM countrylanguage WHERE lang = 'English')",
    "SELECT countrylanguage.lang FROM countrylanguage JOIN country ON countrylanguage.cntry_code = country.code WHERE country.headofstate = 'Beatrix' AND countrylanguage.ofcl = 'T'",
    "SELECT countrylanguage.lang FROM countrylanguage JOIN country ON countrylanguage.cntry_code = country.code WHERE country.hos = 'Beatrix' AND countrylanguage.ofcl = 'T'",
    "SELECT COUNT(DISTINCT lang) FROM countrylanguage cl JOIN country c ON cl.cntry_code = c.code WHERE c.indepyear < 1930 AND cl.ofcl = 'T'",
    "SELECT COUNT(DISTINCT lang) FROM countrylanguage cl JOIN country c ON cl.cntry_code = c.code WHERE c.indepyear < 1930 AND cl.ofcl = 'T'",
    "SELECT name FROM country WHERE continent = 'Africa' AND popn < (SELECT MIN(popn) FROM country WHERE continent = 'Asia')",
    "SELECT name FROM country WHERE continent = 'Africa' AND popn < (SELECT MIN(popn) FROM country WHERE continent = 'Asia')",
    "SELECT name FROM country WHERE continent = 'Asia' AND popn > (SELECT MAX(popn) FROM country WHERE continent = 'Africa')",
    "SELECT name FROM country WHERE continent = 'Asia' AND popn > (SELECT MAX(popn) FROM country WHERE continent = 'Africa')",
    "SELECT DISTINCT code FROM country WHERE code NOT IN (SELECT cntry_code FROM countrylanguage WHERE lang = 'English')",
    "SELECT DISTINCT code FROM country WHERE code NOT IN (SELECT cntry_code FROM countrylanguage WHERE lang = 'English')",
    "SELECT DISTINCT country.code FROM country JOIN countrylanguage ON country.code = countrylanguage.cntry_code WHERE countrylanguage.lang != 'English'",
    "SELECT DISTINCT country.code FROM country JOIN countrylanguage ON country.code = countrylanguage.cntry_code WHERE countrylanguage.lang != 'English'",
    "SELECT code FROM country WHERE code NOT IN (SELECT cntry_code FROM countrylanguage WHERE lang = 'English') AND governmentform != 'Republic'",
    "SELECT code FROM country WHERE code NOT IN (SELECT cntry_code FROM countrylanguage WHERE lang = 'English') AND governmentform NOT LIKE '%Republic%'",
    "SELECT DISTINCT city.name FROM city  JOIN country ON city.cntry_code = country.code  JOIN countrylanguage ON country.code = countrylanguage.cntry_code  WHERE country.continent = 'Europe' AND countrylanguage.ofcl != 'T' AND countrylanguage.lang = 'English'",
    "SELECT DISTINCT city.name FROM city  JOIN country ON city.cntry_code = country.code  JOIN countrylanguage ON city.cntry_code = countrylanguage.cntry_code  WHERE country.continent = 'Europe' AND countrylanguage.lang = 'English' AND countrylanguage.ofcl = 'F'",
    "SELECT DISTINCT city.name FROM city  JOIN country ON city.cntry_code = country.code  JOIN countrylanguage ON city.cntry_code = countrylanguage.cntry_code  WHERE country.continent = 'Asia' AND countrylanguage.lang = 'Chinese' AND countrylanguage.ofcl = 'T'",
    "SELECT DISTINCT city.name FROM city  JOIN country ON city.cntry_code = country.code  JOIN countrylanguage ON city.cntry_code = countrylanguage.cntry_code  WHERE country.continent = 'Asia' AND countrylanguage.lang = 'Chinese' AND countrylanguage.ofcl = 'T'",
    "SELECT name, indepyear, surfacearea FROM country WHERE popn = (SELECT MIN(popn) FROM country)",
    "SELECT name, indepyear, surfacearea FROM country WHERE popn = (SELECT MIN(popn) FROM country)",
    "SELECT country.popn, country.name, head.name as leader FROM country JOIN (SELECT code, MAX(surfacearea) as max_area FROM country) as max_country ON country.code = max_country.code JOIN head ON country.capital = head.head_id WHERE country.surfacearea = max_country.max_area",
    "SELECT c.name, c.popn, c.hos  FROM country c  WHERE c.surfacearea = (SELECT MAX(surfacearea) FROM country)",
    "SELECT country.name, COUNT(countrylanguage.lang) as num_languages FROM country JOIN countrylanguage ON country.code = countrylanguage.cntry_code WHERE country.code IN (     SELECT cntry_code     FROM countrylanguage     GROUP BY cntry_code     HAVING COUNT(lang) >= 3 ) GROUP BY country.code;",
    "SELECT country.name, COUNT(countrylanguage.lang) as num_languages FROM country JOIN countrylanguage ON country.code = countrylanguage.cntry_code GROUP BY country.name HAVING num_languages > 2",
    "SELECT district, COUNT(*)  FROM city  WHERE popn > (SELECT AVG(popn) FROM city)  GROUP BY district",
    "SELECT district, COUNT(city.name)  FROM city  JOIN (SELECT district, AVG(popn) as avg_popn FROM city GROUP BY district) as district_avg  ON city.district = district_avg.district  WHERE city.popn > district_avg.avg_popn  GROUP BY district",
    "SELECT gf AS government_form_name, SUM(popn) AS total_population FROM country WHERE lifeexpectancy > 72 GROUP BY gf",
    "SELECT country.governmentform, SUM(country.popn) AS total_population FROM country WHERE country.lifeexpectancy > 72 GROUP BY country.governmentform",
    "SELECT AVG(lifeexpectancy), SUM(popn), continent FROM country GROUP BY continent HAVING AVG(lifeexpectancy) < 72",
    "SELECT continent, SUM(popn) AS total_population, AVG(lifeexpectancy) AS average_life_expectancy FROM country GROUP BY continent HAVING AVG(lifeexpectancy) < 72;",
    "SELECT name FROM country ORDER BY popn DESC LIMIT 3",
    "SELECT name FROM country ORDER BY popn DESC LIMIT 3",
    "SELECT name FROM country ORDER BY popn ASC LIMIT 3",
    "SELECT name FROM country ORDER BY popn ASC LIMIT 3",
    "SELECT name FROM country WHERE continent = 'Europe' AND popn = 80000",
    "SELECT name FROM country WHERE continent = 'Europe' AND popn = 80000",
    "SELECT SUM(popn), AVG(surfacearea) FROM country WHERE continent = 'North America' AND surfacearea > 3000",
    "SELECT SUM(popn), AVG(surfacearea) FROM country WHERE continent = 'North America' AND surfacearea > 3000",
    "SELECT name FROM city WHERE popn BETWEEN 160000 AND 900000",
    "SELECT name FROM city WHERE popn BETWEEN 160000 AND 900000",
    "SELECT lang FROM countrylanguage GROUP BY lang ORDER BY COUNT(DISTINCT cntry_code) DESC LIMIT 1",
    "SELECT lang FROM countrylanguage GROUP BY lang ORDER BY COUNT(DISTINCT cntry_code) DESC LIMIT 1",
    "SELECT country.name, countrylanguage.lang FROM country JOIN (     SELECT cntry_code, lang, pct     FROM countrylanguage     WHERE pct = (         SELECT MAX(pct)         FROM countrylanguage         WHERE cntry_code = country.code     ) ) AS countrylanguage ON country.code = countrylanguage.cntry_code",
    "SELECT c.code, cl.lang FROM country c JOIN countrylanguage cl ON c.code = cl.cntry_code WHERE cl.pct = (SELECT MAX(pct) FROM countrylanguage WHERE cntry_code = c.code) ORDER BY c.code ASC",
    "SELECT COUNT(DISTINCT cntry_code) FROM countrylanguage WHERE lang = 'Spanish' AND pct = (SELECT MAX(pct) FROM countrylanguage WHERE lang = 'Spanish')",
    "SELECT COUNT(DISTINCT cntry_code) FROM countrylanguage WHERE lang = 'Spanish' AND pct > 50",
    "SELECT country.code FROM country JOIN countrylanguage ON country.code = countrylanguage.cntry_code WHERE countrylanguage.lang = 'Spanish' GROUP BY country.code ORDER BY MAX(countrylanguage.pct) DESC LIMIT 1",
    "SELECT code FROM country WHERE code IN (SELECT cntry_code FROM countrylanguage WHERE lang = 'Spanish' AND pct > 50)",
    "SELECT record_co FROM orchestra ORDER BY year_of_founded DESC",
    "SELECT record_co FROM orchestra WHERE maj_fmt = 'orchestra' ORDER BY year_of_founded DESC",
    "SELECT AVG(attend) FROM show",
    "SELECT AVG(attend) FROM show",
    "SELECT conductor.name, orchestra.orch FROM conductor JOIN orchestra ON conductor.cond_id = orchestra.cond_id",
    "SELECT conductor.name, orchestra.orch FROM conductor JOIN orchestra ON conductor.cond_id = orchestra.cond_id",
    "SELECT conductor.name FROM conductor  INNER JOIN orchestra ON conductor.cond_id = orchestra.cond_id  GROUP BY conductor.cond_id  HAVING COUNT(DISTINCT orchestra.orch_id) > 1",
    "SELECT DISTINCT conductor.name FROM conductor JOIN orchestra ON conductor.cond_id = orchestra.cond_id GROUP BY conductor.cond_id HAVING COUNT(DISTINCT orchestra.orch_id) > 1",
    "SELECT conductor.name FROM conductor JOIN orchestra ON conductor.cond_id = orchestra.cond_id GROUP BY conductor.cond_id ORDER BY COUNT(orchestra.orch_id) DESC LIMIT 1",
    "SELECT conductor.name FROM conductor JOIN orchestra ON conductor.cond_id = orchestra.cond_id GROUP BY conductor.cond_id ORDER BY COUNT(orchestra.orch_id) DESC LIMIT 1",
    "SELECT conductor.name FROM conductor JOIN orchestra ON conductor.cond_id = orchestra.cond_id WHERE orchestra.year_of_founded > 2008",
    "SELECT conductor.name FROM conductor JOIN orchestra ON conductor.cond_id = orchestra.cond_id WHERE orchestra.year_of_founded > 2008",
    "SELECT record_co, COUNT(DISTINCT orchestra.orch_id) AS num_orchestras FROM orchestra GROUP BY record_co",
    "SELECT record_co, COUNT(DISTINCT orchestra) AS num_orchestras_managed FROM orchestra_0.orchestra GROUP BY record_co",
    "SELECT orchestra.orch, COUNT(*) as count FROM orchestra JOIN performance ON orchestra.orch_id = performance.orch_id GROUP BY orchestra.orch_id ORDER BY count ASC",
    "SELECT maj_fmt, COUNT(*) AS frequency FROM orchestra GROUP BY maj_fmt ORDER BY frequency DESC",
    "SELECT record_co FROM orchestra GROUP BY record_co ORDER BY COUNT(DISTINCT orch_id) DESC LIMIT 1;",
    "SELECT record_co FROM orchestra GROUP BY record_co ORDER BY COUNT(orch_id) DESC LIMIT 1;",
    "SELECT orchestra.orch  FROM orchestra  LEFT JOIN performance ON orchestra.orch_id = performance.orch_id  WHERE performance.pref_id IS NULL",
    "SELECT orchestra.orch  FROM orchestra  LEFT JOIN performance ON orchestra.orch_id = performance.orch_id  WHERE performance.pref_id IS NULL",
    "SELECT DISTINCT o1.record_co FROM orchestra o1 JOIN orchestra o2 ON o1.record_co = o2.record_co WHERE o1.year_of_founded < 2003 AND o2.year_of_founded > 2003",
    "SELECT DISTINCT record_co FROM orchestra WHERE orch_id IN (SELECT orch_id FROM orchestra WHERE year_of_founded < 2003) AND orch_id IN (SELECT orch_id FROM orchestra WHERE year_of_founded > 2003)",
    "SELECT COUNT(*) FROM orchestra WHERE maj_fmt = 'CD' OR maj_fmt = 'DVD'",
    "SELECT COUNT(DISTINCT orchestra.orch_id) FROM orchestra WHERE orchestra.maj_fmt IN ('CD', 'DVD')",
    "SELECT year_of_founded FROM orchestra WHERE orch_id IN (SELECT orch_id FROM performance GROUP BY orch_id HAVING COUNT(*) > 1)",
    "SELECT DISTINCT year_of_founded FROM orchestra WHERE orch_id IN (SELECT orch_id FROM performance GROUP BY orch_id HAVING COUNT(DISTINCT pref_id) > 1)",
    "SELECT AVG(attend) FROM show",
    "SELECT AVG(attend) FROM show",
    "SELECT conductor.name, orchestra.orchestra FROM conductor JOIN orchestra ON conductor.cond_id = orchestra.cond_id",
    "SELECT conductor.name, orchestra.orchestra FROM conductor INNER JOIN orchestra ON conductor.cond_id = orchestra.cond_id",
    "SELECT conductor.name FROM conductor  JOIN orchestra ON conductor.cond_id = orchestra.cond_id  GROUP BY conductor.cond_id  HAVING COUNT(DISTINCT orchestra.orchestra_id) > 1",
    "SELECT DISTINCT c1.name  FROM conductor c1  JOIN orchestra o1 ON c1.cond_id = o1.cond_id  JOIN orchestra o2 ON c1.cond_id = o2.cond_id AND o1.orchestra_id <> o2.orchestra_id",
    "SELECT conductor.name  FROM conductor  JOIN orchestra ON conductor.cond_id = orchestra.cond_id  GROUP BY conductor.cond_id  ORDER BY COUNT(orchestra.orchestra_id) DESC  LIMIT 1",
    "SELECT conductor.name FROM conductor JOIN orchestra ON conductor.cond_id = orchestra.cond_id GROUP BY conductor.cond_id ORDER BY COUNT(orchestra.orchestra_id) DESC LIMIT 1",
    "SELECT conductor.name FROM conductor JOIN orchestra ON conductor.cond_id = orchestra.cond_id WHERE orchestra.year_of_founded > 2008",
    "SELECT conductor.name FROM conductor JOIN orchestra ON conductor.cond_id = orchestra.cond_id WHERE orchestra.year_of_founded > 2008",
    "SELECT orchestra, COUNT(*) AS count FROM orchestra_1 GROUP BY orchestra ORDER BY count ASC",
    "SELECT maj_fmt, COUNT(*) AS frequency FROM orchestra GROUP BY maj_fmt ORDER BY frequency DESC",
    "SELECT COUNT(*) FROM orchestra WHERE maj_fmt = 'CD' OR maj_fmt = 'DVD'",
    "SELECT COUNT(*) FROM orchestra WHERE maj_fmt IN ('CD', 'DVD')",
    "SELECT record_co FROM orchestra ORDER BY year_of_founded DESC",
    "SELECT record_co FROM orchestra WHERE orch = 'orchestra' ORDER BY year_of_founded DESC",
    "SELECT AVG(attend) FROM show",
    "SELECT AVG(attend) FROM show",
    "SELECT conductor.name, orchestra.orch FROM conductor JOIN orchestra ON conductor.conductor_id = orchestra.cond_id",
    "SELECT conductor.name, orchestra.orch  FROM conductor  JOIN orchestra ON conductor.conductor_id = orchestra.cond_id",
    "SELECT conductor.name FROM conductor  JOIN orchestra ON conductor.conductor_id = orchestra.cond_id  GROUP BY conductor.name  HAVING COUNT(DISTINCT orchestra.orchestra_id) > 1",
    "SELECT DISTINCT c.name FROM conductor c JOIN orchestra o ON c.conductor_id = o.cond_id GROUP BY c.name HAVING COUNT(DISTINCT o.orchestra_id) > 1",
    "SELECT conductor.name  FROM conductor  JOIN orchestra ON conductor.conductor_id = orchestra.cond_id  GROUP BY conductor.name  ORDER BY COUNT(orchestra.orchestra_id) DESC  LIMIT 1",
    "SELECT conductor.name FROM conductor JOIN orchestra ON conductor.conductor_id = orchestra.cond_id GROUP BY conductor.name ORDER BY COUNT(orchestra.orchestra_id) DESC LIMIT 1",
    "SELECT DISTINCT conductor.name FROM conductor JOIN orchestra ON conductor.conductor_id = orchestra.cond_id WHERE orchestra.year_of_founded > 2008",
    "SELECT conductor.name FROM conductor JOIN orchestra ON conductor.conductor_id = orchestra.cond_id WHERE orchestra.year_of_founded > 2008",
    "SELECT record_co, COUNT(DISTINCT orchestra_id) AS num_orchestras FROM orchestra GROUP BY record_co",
    "SELECT record_co, COUNT(DISTINCT orchestra_id) AS num_orchestras_managed FROM orchestra_2 GROUP BY record_co",
    "SELECT record_co FROM orchestra GROUP BY record_co ORDER BY COUNT(DISTINCT orchestra_id) DESC LIMIT 1;",
    "SELECT record_co FROM orchestra GROUP BY record_co ORDER BY COUNT(*) DESC LIMIT 1",
    "SELECT orchestra.orch FROM orchestra LEFT JOIN performance ON orchestra.orchestra_id = performance.orch_id WHERE performance.pref_id IS NULL",
    "SELECT orchestra.orch  FROM orchestra  LEFT JOIN performance ON orchestra.orchestra_id = performance.orch_id  WHERE performance.pref_id IS NULL",
    "SELECT DISTINCT o1.record_co FROM orchestra o1 JOIN orchestra o2 ON o1.record_co = o2.record_co WHERE o1.year_of_founded < 2003 AND o2.year_of_founded > 2003",
    "SELECT DISTINCT o1.record_co FROM orchestra o1, orchestra o2 WHERE o1.year_of_founded < 2003 AND o2.year_of_founded > 2003 AND o1.record_co = o2.record_co",
    "SELECT year_of_founded FROM orchestra WHERE orchestra_id IN (SELECT orchestra_id FROM performance GROUP BY orchestra_id HAVING COUNT(*) > 1)",
    "SELECT DISTINCT year_of_founded FROM orchestra WHERE orchestra_id IN (SELECT orchestra_id FROM performance GROUP BY orchestra_id HAVING COUNT(*) > 1)",
    "SELECT record_co FROM orchestra ORDER BY year_of_founded DESC",
    "SELECT record_co FROM orchestra WHERE maj_fmt = 'orchestra' ORDER BY year_of_founded DESC",
    "SELECT AVG(attend) FROM show",
    "SELECT AVG(attend) FROM show",
    "SELECT conductor.name, orchestra.orch FROM conductor JOIN orchestra ON conductor.cond_id = orchestra.conductor_id",
    "SELECT conductor.name, orchestra.orch  FROM conductor  JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id",
    "SELECT conductor.name FROM conductor  INNER JOIN orchestra ON conductor.cond_id = orchestra.conductor_id  GROUP BY conductor.cond_id  HAVING COUNT(DISTINCT orchestra.orch_id) > 1",
    "SELECT DISTINCT c.name FROM conductor c JOIN orchestra o ON c.cond_id = o.conductor_id GROUP BY c.cond_id HAVING COUNT(DISTINCT o.orch_id) > 1",
    "SELECT conductor.name  FROM conductor  JOIN orchestra ON conductor.cond_id = orchestra.conductor_id  GROUP BY conductor.cond_id  ORDER BY COUNT(orchestra.orch_id) DESC  LIMIT 1",
    "SELECT conductor.name FROM conductor JOIN orchestra ON conductor.cond_id = orchestra.conductor_id GROUP BY conductor.cond_id ORDER BY COUNT(orchestra.orch_id) DESC LIMIT 1",
    "SELECT conductor.name FROM conductor JOIN orchestra ON conductor.cond_id = orchestra.conductor_id WHERE orchestra.year_of_founded > 2008",
    "SELECT conductor.name FROM conductor JOIN orchestra ON conductor.cond_id = orchestra.conductor_id WHERE orchestra.year_of_founded > 2008",
    "SELECT record_co, COUNT(DISTINCT orchestra.orch_id) AS num_orchestras FROM orchestra GROUP BY record_co",
    "SELECT record_co, COUNT(DISTINCT orchestra) AS num_orchestras_managed FROM orchestra_3 GROUP BY record_co",
    "SELECT orchestra.orch, COUNT(*) as count FROM orchestra JOIN performance ON orchestra.orch_id = performance.orch_id GROUP BY orchestra.orch_id ORDER BY count ASC",
    "SELECT maj_fmt, COUNT(*) AS frequency FROM orchestra GROUP BY maj_fmt ORDER BY frequency DESC",
    "SELECT record_co FROM orchestra_3 GROUP BY record_co ORDER BY COUNT(DISTINCT orch_id) DESC LIMIT 1;",
    "SELECT record_co FROM orchestra GROUP BY record_co ORDER BY COUNT(*) DESC LIMIT 1",
    "SELECT orchestra.orch  FROM orchestra  LEFT JOIN performance ON orchestra.orch_id = performance.orch_id  WHERE performance.pref_id IS NULL",
    "SELECT orchestra.orch  FROM orchestra  LEFT JOIN performance ON orchestra.orch_id = performance.orch_id  WHERE performance.pref_id IS NULL",
    "SELECT DISTINCT o1.record_co FROM orchestra o1 JOIN orchestra o2 ON o1.record_co = o2.record_co WHERE o1.year_of_founded < 2003 AND o2.year_of_founded > 2003",
    "SELECT DISTINCT o1.record_co  FROM orchestra o1  JOIN orchestra o2 ON o1.record_co = o2.record_co  WHERE o1.year_of_founded < 2003 AND o2.year_of_founded > 2003",
    "SELECT COUNT(*) FROM orchestra WHERE maj_fmt = 'CD' OR maj_fmt = 'DVD'",
    "SELECT COUNT(DISTINCT orchestra.orch_id) FROM orchestra WHERE orchestra.maj_fmt IN ('CD', 'DVD')",
    "SELECT year_of_founded FROM orchestra WHERE orch_id IN (SELECT orch_id FROM performance GROUP BY orch_id HAVING COUNT(*) > 1)",
    "SELECT DISTINCT year_of_founded FROM orchestra WHERE orch_id IN (SELECT orch_id FROM performance GROUP BY orch_id HAVING COUNT(DISTINCT pref_id) > 1)",
    "SELECT AVG(attend) FROM show",
    "SELECT AVG(attend) FROM show",
    "SELECT conductor.name, orchestra.orch FROM conductor JOIN orchestra ON conductor.cond_id = orchestra.conductor_id",
    "SELECT conductor.name, orchestra.orch FROM conductor JOIN orchestra ON conductor.cond_id = orchestra.conductor_id",
    "SELECT conductor.name FROM conductor  JOIN orchestra ON conductor.cond_id = orchestra.conductor_id  GROUP BY conductor.cond_id  HAVING COUNT(DISTINCT orchestra.orchestra_id) > 1",
    "SELECT DISTINCT c.name FROM conductor c JOIN orchestra o ON c.cond_id = o.conductor_id GROUP BY c.cond_id HAVING COUNT(DISTINCT o.orchestra_id) > 1",
    "SELECT conductor.name FROM conductor JOIN orchestra ON conductor.cond_id = orchestra.conductor_id GROUP BY conductor.cond_id ORDER BY COUNT(orchestra.orchestra_id) DESC LIMIT 1",
    "SELECT conductor.name FROM conductor JOIN orchestra ON conductor.cond_id = orchestra.conductor_id GROUP BY conductor.cond_id ORDER BY COUNT(orchestra.orchestra_id) DESC LIMIT 1",
    "SELECT conductor.name FROM conductor JOIN orchestra ON conductor.cond_id = orchestra.conductor_id WHERE orchestra.year_of_founded > 2008",
    "SELECT conductor.name FROM conductor JOIN orchestra ON conductor.cond_id = orchestra.conductor_id WHERE orchestra.year_of_founded > 2008",
    "SELECT orchestra.orch, COUNT(*) as count FROM orchestra JOIN performance ON orchestra.orchestra_id = performance.orch_id GROUP BY orchestra.orch ORDER BY count ASC",
    "SELECT maj_fmt, COUNT(*) AS frequency FROM orchestra GROUP BY maj_fmt ORDER BY frequency DESC",
    "SELECT orchestra.orch FROM orchestra LEFT JOIN performance ON orchestra.orchestra_id = performance.orch_id WHERE performance.orch_id IS NULL",
    "SELECT orchestra.orch  FROM orchestra  LEFT JOIN performance ON orchestra.orchestra_id = performance.orch_id  WHERE performance.performance_id IS NULL",
    "SELECT COUNT(*) FROM orchestra WHERE maj_fmt = 'CD' OR maj_fmt = 'DVD'",
    "SELECT COUNT(DISTINCT orchestra_id) FROM orchestra WHERE maj_fmt IN ('CD', 'DVD')",
    "SELECT year_of_founded FROM orchestra WHERE orchestra_id IN (SELECT orchestra_id FROM performance GROUP BY orchestra_id HAVING COUNT(*) > 1)",
    "SELECT DISTINCT year_of_founded FROM orchestra WHERE orchestra_id IN (SELECT orchestra_id FROM performance GROUP BY orchestra_id HAVING COUNT(*) > 1)",
    "SELECT name, gr FROM highschooler",
    "SELECT name, gr FROM highschooler",
    "SELECT gr FROM highschooler",
    "SELECT id, gr FROM highschooler",
    "SELECT gr FROM highschooler WHERE name = 'Kyle'",
    "SELECT gr FROM highschooler WHERE name = 'Kyle'",
    "SELECT name FROM highschooler WHERE gr = 10",
    "SELECT name FROM highschooler WHERE gr = 10",
    "SELECT COUNT(*) FROM highschooler WHERE gr IN (9, 10)",
    "SELECT COUNT(*) FROM highschooler WHERE gr IN (9, 10)",
    "SELECT gr, COUNT(*) FROM highschooler GROUP BY gr ORDER BY gr",
    "SELECT gr, COUNT(*) FROM highschooler GROUP BY gr",
    "SELECT gr, COUNT(*) AS num_highschoolers FROM highschooler GROUP BY gr ORDER BY num_highschoolers DESC LIMIT 1;",
    "SELECT gr FROM highschooler GROUP BY gr ORDER BY COUNT(*) DESC LIMIT 1",
    "SELECT gr FROM highschooler GROUP BY gr HAVING COUNT(*) >= 4",
    "SELECT gr FROM highschooler GROUP BY gr HAVING COUNT(*) >= 4",
    "SELECT friend.stu_id AS student_id, COUNT(friend.frnd_id) AS number_of_friends FROM friend GROUP BY friend.stu_id",
    "SELECT highschooler.id, COUNT(friend.frnd_id) AS num_friends FROM highschooler LEFT JOIN friend ON highschooler.id = friend.stu_id GROUP BY highschooler.id",
    "SELECT highschooler.name, COUNT(friend.frnd_id) AS num_friends FROM highschooler LEFT JOIN friend ON highschooler.id = friend.stu_id GROUP BY highschooler.id, highschooler.name",
    "SELECT highschooler.name, COUNT(friend.frnd_id) AS num_friends FROM highschooler LEFT JOIN friend ON highschooler.id = friend.stu_id GROUP BY highschooler.id, highschooler.name",
    "SELECT h.name  FROM highschooler h  WHERE h.id = (SELECT f.stu_id                FROM friend f                GROUP BY f.stu_id                ORDER BY COUNT(f.frnd_id) DESC                LIMIT 1)",
    "SELECT h.name  FROM highschooler h  WHERE h.id IN (     SELECT f.stu_id      FROM friend f      GROUP BY f.stu_id      ORDER BY COUNT(*) DESC      LIMIT 1 )",
    "SELECT h.name  FROM highschooler h  JOIN friend f ON h.id = f.stu_id  GROUP BY h.id  HAVING COUNT(f.frnd_id) >= 3",
    "SELECT h.name FROM highschooler h JOIN friend f ON h.id = f.stu_id GROUP BY h.id HAVING COUNT(f.frnd_id) >= 3",
    "SELECT h2.name  FROM highschooler h1  JOIN friend f ON h1.id = f.stu_id  JOIN highschooler h2 ON f.frnd_id = h2.id  WHERE h1.name = 'Kyle'",
    "SELECT h2.name FROM highschooler h1, highschooler h2, friend f WHERE h1.name = 'Kyle' AND h1.id = f.stu_id AND f.frnd_id = h2.id",
    "SELECT COUNT(*) FROM friend WHERE stu_id = (SELECT id FROM highschooler WHERE name = 'Kyle')",
    "SELECT COUNT(*) FROM friend WHERE stu_id = (SELECT id FROM highschooler WHERE name = 'Kyle')",
    "SELECT h1.id FROM highschooler h1 WHERE NOT EXISTS (     SELECT *     FROM friend f     WHERE f.stu_id = h1.id )",
    "SELECT id FROM highschooler WHERE id NOT IN (SELECT stu_id FROM friend)",
    "SELECT name FROM highschooler WHERE id NOT IN (SELECT stu_id FROM friend) AND gr = 'HS'",
    "SELECT name FROM highschooler WHERE id NOT IN (SELECT stu_id FROM friend)",
    "SELECT DISTINCT h.id FROM highschooler h JOIN friend f ON h.id = f.stu_id JOIN likes l ON h.id = l.stu_id AND f.frnd_id = l.liked_id",
    "SELECT DISTINCT s1.id FROM highschooler s1, friend f1, likes l1 WHERE s1.id = f1.stu_id AND s1.id = l1.stu_id AND s1.id IN (     SELECT f2.stu_id     FROM friend f2 ) AND s1.id IN (     SELECT l2.stu_id     FROM likes l2 )",
    "SELECT DISTINCT h.name FROM highschooler h JOIN friend f ON h.id = f.stu_id JOIN likes l ON h.id = l.stu_id WHERE EXISTS (SELECT 1 FROM friend WHERE stu_id = h.id) AND EXISTS (SELECT 1 FROM likes WHERE stu_id = h.id AND liked_id <> f.frnd_id)",
    "SELECT DISTINCT h.name FROM highschooler h INNER JOIN friend f ON h.id = f.stu_id INNER JOIN likes l ON h.id = l.stu_id AND f.frnd_id = l.liked_id",
    "SELECT stu_id, COUNT(*) AS num_likes FROM likes GROUP BY stu_id",
    "SELECT stu_id, COUNT(*) AS num_likes FROM likes GROUP BY stu_id",
    "SELECT highschooler.name, COUNT(likes.liked_id) AS num_likes FROM highschooler JOIN likes ON highschooler.id = likes.stu_id GROUP BY highschooler.id HAVING COUNT(likes.liked_id) > 0",
    "SELECT highschooler.name, COUNT(likes.liked_id) AS num_likes FROM highschooler JOIN likes ON highschooler.id = likes.stu_id GROUP BY highschooler.id HAVING COUNT(likes.liked_id) > 0",
    "SELECT highschooler.name FROM highschooler JOIN likes ON highschooler.id = likes.stu_id GROUP BY highschooler.id ORDER BY COUNT(likes.liked_id) DESC LIMIT 1",
    "SELECT highschooler.name  FROM highschooler  WHERE highschooler.id = (     SELECT likes.stu_id      FROM likes      GROUP BY likes.stu_id      ORDER BY COUNT(*) DESC      LIMIT 1 )",
    "SELECT DISTINCT h.name FROM highschooler h JOIN likes l ON h.id = l.stu_id GROUP BY h.id HAVING COUNT(l.liked_id) >= 2;",
    "SELECT DISTINCT highschooler.name FROM highschooler JOIN likes ON highschooler.id = likes.stu_id GROUP BY highschooler.id HAVING COUNT(likes.liked_id) >= 2",
    "SELECT highschooler.name  FROM highschooler  JOIN friend ON highschooler.id = friend.stu_id  JOIN likes ON highschooler.id = likes.stu_id  WHERE highschooler.gr > 5  GROUP BY highschooler.id  HAVING COUNT(DISTINCT friend.frnd_id) >= 2",
    "SELECT name FROM highschooler WHERE gr > 5 AND id IN (SELECT stu_id FROM friend GROUP BY stu_id HAVING COUNT(*) >= 2)",
    "SELECT COUNT(*) FROM likes WHERE stu_id = (SELECT id FROM highschooler WHERE name = 'Kyle')",
    "SELECT COUNT(*) FROM likes WHERE stu_id = (SELECT id FROM highschooler WHERE name = 'Kyle')",
    "SELECT AVG(highschooler.gr) FROM highschooler WHERE highschooler.id IN (SELECT friend.stu_id FROM friend)",
    "SELECT AVG(highschooler.gr) FROM highschooler WHERE highschooler.id IN (SELECT friend.stu_id FROM friend)",
    "SELECT MIN(gr) FROM highschooler WHERE id NOT IN (SELECT stu_id FROM friend UNION SELECT frnd_id FROM friend)",
    "SELECT MIN(gr) FROM highschooler WHERE id NOT IN (SELECT stu_id FROM friend)",
    "SELECT friend.stu_id AS student_id, GROUP_CONCAT(friend.frnd_id) AS friend_ids FROM friend GROUP BY friend.stu_id;",
    "SELECT highschooler.id, COUNT(friend.frnd_id) AS num_friends FROM highschooler LEFT JOIN friend ON highschooler.id = friend.stu_id GROUP BY highschooler.id",
    "SELECT highschooler.name, COUNT(friend.frnd_id) AS num_friends FROM highschooler LEFT JOIN friend ON highschooler.id = friend.stu_id GROUP BY highschooler.id, highschooler.name",
    "SELECT highschooler.name, COUNT(friend.frnd_id) AS num_friends FROM highschooler LEFT JOIN friend ON highschooler.id = friend.stu_id GROUP BY highschooler.id, highschooler.name",
    "SELECT highschooler.name  FROM highschooler  WHERE highschooler.id = (     SELECT friend.stu_id      FROM friend      GROUP BY friend.stu_id      ORDER BY COUNT(*) DESC      LIMIT 1 )",
    "SELECT h.name  FROM highschooler h  WHERE h.id = (     SELECT f.stu_id      FROM friend f      GROUP BY f.stu_id      ORDER BY COUNT(*) DESC      LIMIT 1 )",
    "SELECT h.name  FROM highschooler h  JOIN friend f ON h.id = f.stu_id  GROUP BY h.id  HAVING COUNT(f.frnd_id) >= 3",
    "SELECT h.name FROM highschooler h WHERE h.id IN (SELECT f.stu_id FROM friend f GROUP BY f.stu_id HAVING COUNT(*) >= 3)",
    "SELECT h2.name FROM highschooler h1 JOIN friend f ON h1.id = f.stu_id JOIN highschooler h2 ON f.frnd_id = h2.id WHERE h1.name = 'Kyle'",
    "SELECT h2.name FROM highschooler h1 JOIN friend f ON h1.id = f.stu_id JOIN highschooler h2 ON f.frnd_id = h2.id WHERE h1.name = 'Kyle'",
    "SELECT COUNT(*) FROM friend WHERE stu_id = (SELECT id FROM highschooler WHERE name = 'Kyle')",
    "SELECT COUNT(*) FROM friend WHERE stu_id = (SELECT id FROM highschooler WHERE name = 'Kyle')",
    "SELECT h1.id FROM highschooler h1 WHERE NOT EXISTS (     SELECT *     FROM friend f     WHERE f.stu_id = h1.id )",
    "SELECT id FROM highschooler WHERE id NOT IN (SELECT stu_id FROM friend)",
    "SELECT name FROM highschooler WHERE id NOT IN (SELECT stu_id FROM friend)",
    "SELECT name FROM highschooler WHERE id NOT IN (SELECT stu_id FROM friend)",
    "SELECT DISTINCT h.id FROM highschooler h JOIN friend f ON h.id = f.stu_id JOIN likes l ON h.id = l.student_id AND f.frnd_id = l.liked_id",
    "SELECT DISTINCT s1.id FROM highschooler s1, friend f1, likes l1 WHERE s1.id = f1.stu_id AND s1.id = l1.student_id AND s1.id IN (     SELECT f2.stu_id     FROM friend f2 ) AND s1.id IN (     SELECT l2.student_id     FROM likes l2 )",
    "SELECT h.name  FROM highschooler h  JOIN friend f ON h.id = f.stu_id  JOIN friend f2 ON h.id = f2.stu_id AND f.frnd_id <> f2.frnd_id  JOIN likes l ON h.id = l.student_id  WHERE h.grade > 5  GROUP BY h.id  HAVING COUNT(DISTINCT f.frnd_id) >= 2",
    "SELECT h.name  FROM highschooler h  JOIN friend f ON h.id = f.stu_id  JOIN friend f2 ON h.id = f2.stu_id AND f.frnd_id <> f2.frnd_id  JOIN likes l ON h.id = l.student_id  WHERE h.grade > 5  GROUP BY h.id  HAVING COUNT(DISTINCT f.frnd_id) >= 2",
    "SELECT AVG(grade) FROM highschooler WHERE id IN (SELECT stu_id FROM friend)",
    "SELECT AVG(highschooler.grade) FROM highschooler WHERE highschooler.id IN (SELECT friend.stu_id FROM friend)",
    "SELECT MIN(grade) FROM highschooler WHERE id NOT IN (SELECT stu_id FROM friend UNION SELECT frnd_id FROM friend)",
    "SELECT MIN(grade) FROM highschooler WHERE id NOT IN (SELECT stu_id FROM friend)",
    "SELECT DISTINCT h.name FROM highschooler h JOIN friend f ON h.id = f.student_id JOIN likes l ON h.id = l.stu_id WHERE f.friend_id IS NOT NULL AND l.liked_id <> h.id;",
    "SELECT DISTINCT h.name FROM highschooler h JOIN friend f ON h.id = f.student_id JOIN likes l ON h.id = l.stu_id WHERE h.id IN (SELECT student_id FROM friend) AND h.id IN (SELECT stu_id FROM likes)",
    "SELECT stu_id, COUNT(*) FROM likes GROUP BY stu_id",
    "SELECT stu_id, COUNT(*) FROM likes GROUP BY stu_id",
    "SELECT highschooler.name, COUNT(likes.liked_id) AS num_likes FROM highschooler JOIN likes ON highschooler.id = likes.stu_id GROUP BY highschooler.id HAVING COUNT(likes.liked_id) > 0",
    "SELECT highschooler.name, COUNT(likes.liked_id) AS num_likes FROM highschooler JOIN likes ON highschooler.id = likes.stu_id GROUP BY highschooler.id HAVING COUNT(likes.liked_id) > 0",
    "SELECT highschooler.name FROM highschooler JOIN likes ON highschooler.id = likes.stu_id GROUP BY highschooler.id ORDER BY COUNT(likes.liked_id) DESC LIMIT 1",
    "SELECT highschooler.name FROM highschooler WHERE highschooler.id = (     SELECT likes.stu_id     FROM likes     GROUP BY likes.stu_id     ORDER BY COUNT(*) DESC     LIMIT 1 )",
    "SELECT highschooler.name FROM highschooler WHERE highschooler.id IN (SELECT likes.stu_id FROM likes GROUP BY likes.stu_id HAVING COUNT(*) >= 2)",
    "SELECT DISTINCT highschooler.name FROM highschooler JOIN likes ON highschooler.id = likes.stu_id GROUP BY highschooler.id HAVING COUNT(likes.liked_id) >= 2",
    "SELECT COUNT(*) FROM likes WHERE stu_id = (SELECT id FROM highschooler WHERE name = 'Kyle')",
    "SELECT COUNT(*) FROM likes WHERE stu_id = (SELECT id FROM highschooler WHERE name = 'Kyle')",
    "SELECT name, gr FROM highschooler",
    "SELECT name, gr FROM highschooler",
    "SELECT gr FROM highschooler",
    "SELECT id, gr FROM highschooler",
    "SELECT gr FROM highschooler WHERE name = 'Kyle'",
    "SELECT gr FROM highschooler WHERE name = 'Kyle'",
    "SELECT name FROM highschooler WHERE gr = 10",
    "SELECT name FROM highschooler WHERE gr = 10",
    "SELECT COUNT(*) FROM highschooler WHERE gr IN (9, 10)",
    "SELECT COUNT(*) FROM highschooler WHERE gr IN (9, 10)",
    "SELECT gr, COUNT(*) FROM highschooler GROUP BY gr ORDER BY gr",
    "SELECT gr, COUNT(*) FROM highschooler GROUP BY gr",
    "SELECT gr, COUNT(*) AS num_highschoolers FROM highschooler GROUP BY gr ORDER BY num_highschoolers DESC LIMIT 1;",
    "SELECT gr FROM highschooler GROUP BY gr ORDER BY COUNT(*) DESC LIMIT 1",
    "SELECT gr FROM highschooler GROUP BY gr HAVING COUNT(*) >= 4",
    "SELECT gr FROM highschooler GROUP BY gr HAVING COUNT(*) >= 4",
    "SELECT friend.stu_id AS student_id, GROUP_CONCAT(friend.friend_id) AS friend_numbers FROM friend GROUP BY friend.stu_id;",
    "SELECT highschooler.id, COUNT(friend.friend_id) AS num_friends FROM highschooler LEFT JOIN friend ON highschooler.id = friend.stu_id GROUP BY highschooler.id",
    "SELECT highschooler.name, COUNT(friend.friend_id) AS num_friends FROM highschooler LEFT JOIN friend ON highschooler.id = friend.stu_id GROUP BY highschooler.id, highschooler.name",
    "SELECT highschooler.name, COUNT(friend.friend_id) AS num_friends FROM highschooler LEFT JOIN friend ON highschooler.id = friend.stu_id GROUP BY highschooler.id, highschooler.name",
    "SELECT h.name  FROM highschooler h  WHERE h.id = (     SELECT f.stu_id      FROM friend f      GROUP BY f.stu_id      ORDER BY COUNT(f.friend_id) DESC      LIMIT 1 )",
    "SELECT h.name  FROM highschooler h  WHERE h.id IN (     SELECT f.stu_id      FROM friend f      GROUP BY f.stu_id      ORDER BY COUNT(*) DESC      LIMIT 1 )",
    "SELECT h.name  FROM highschooler h  JOIN friend f ON h.id = f.stu_id  GROUP BY h.id  HAVING COUNT(f.friend_id) >= 3",
    "SELECT h.name FROM highschooler h WHERE h.id IN (SELECT f.stu_id FROM friend f GROUP BY f.stu_id HAVING COUNT(*) >= 3)",
    "SELECT h2.name  FROM highschooler h1  JOIN friend f ON h1.id = f.stu_id  JOIN highschooler h2 ON f.friend_id = h2.id  WHERE h1.name = 'Kyle'",
    "SELECT h2.name FROM highschooler h1 JOIN friend f ON h1.id = f.stu_id JOIN highschooler h2 ON f.friend_id = h2.id WHERE h1.name = 'Kyle'",
    "SELECT COUNT(*) FROM friend WHERE stu_id = (SELECT id FROM highschooler WHERE name = 'Kyle')",
    "SELECT COUNT(*) FROM friend WHERE stu_id = (SELECT id FROM highschooler WHERE name = 'Kyle')",
    "SELECT h1.id FROM highschooler h1 WHERE NOT EXISTS (     SELECT *     FROM friend f     WHERE f.stu_id = h1.id )",
    "SELECT id FROM highschooler WHERE id NOT IN (SELECT stu_id FROM friend)",
    "SELECT name FROM highschooler WHERE id NOT IN (SELECT stu_id FROM friend) AND id NOT IN (SELECT friend_id FROM friend)",
    "SELECT name FROM highschooler WHERE id NOT IN (SELECT stu_id FROM friend)",
    "SELECT DISTINCT h.id FROM highschooler h JOIN friend f ON h.id = f.stu_id JOIN likes l ON h.id = l.student_id AND f.friend_id = l.liked_id",
    "SELECT DISTINCT s1.id FROM highschooler s1, friend f1, likes l1 WHERE s1.id = f1.stu_id AND s1.id = l1.student_id AND s1.id IN (     SELECT f2.stu_id     FROM friend f2 ) AND s1.id IN (     SELECT l2.student_id     FROM likes l2 )",
    "SELECT h.name  FROM highschooler h  JOIN friend f ON h.id = f.stu_id  JOIN likes l ON h.id = l.student_id  WHERE h.gr > 5  GROUP BY h.id  HAVING COUNT(DISTINCT f.friend_id) >= 2",
    "SELECT name FROM highschooler WHERE gr > 5 AND id IN (SELECT stu_id FROM friend GROUP BY stu_id HAVING COUNT(*) >= 2)",
    "SELECT AVG(highschooler.gr) FROM highschooler WHERE highschooler.id IN (SELECT friend.stu_id FROM friend)",
    "SELECT AVG(gr) FROM highschooler WHERE id IN (SELECT stu_id FROM friend)",
    "SELECT MIN(gr) FROM highschooler WHERE id NOT IN (SELECT stu_id FROM friend UNION SELECT friend_id FROM friend)",
    "SELECT MIN(gr) FROM highschooler WHERE id NOT IN (SELECT stu_id FROM friend UNION SELECT friend_id FROM friend)",
    "SELECT name, gr FROM highschooler",
    "SELECT name, gr FROM highschooler",
    "SELECT gr FROM highschooler",
    "SELECT id, gr FROM highschooler",
    "SELECT gr FROM highschooler WHERE name = 'Kyle'",
    "SELECT gr FROM highschooler WHERE name = 'Kyle'",
    "SELECT name FROM highschooler WHERE gr = 10",
    "SELECT name FROM highschooler WHERE gr = 10",
    "SELECT COUNT(*) FROM highschooler WHERE gr IN (9, 10)",
    "SELECT COUNT(*) FROM highschooler WHERE gr IN (9, 10)",
    "SELECT gr, COUNT(*) FROM highschooler GROUP BY gr",
    "SELECT gr, COUNT(*) FROM highschooler GROUP BY gr",
    "SELECT gr, COUNT(*) AS num_highschoolers FROM highschooler GROUP BY gr ORDER BY num_highschoolers DESC LIMIT 1;",
    "SELECT gr FROM highschooler GROUP BY gr ORDER BY COUNT(*) DESC LIMIT 1",
    "SELECT gr FROM highschooler GROUP BY gr HAVING COUNT(*) >= 4",
    "SELECT gr FROM highschooler GROUP BY gr HAVING COUNT(*) >= 4",
    "SELECT h2.name  FROM highschooler h1  JOIN friend f ON h1.id = f.student_id  JOIN highschooler h2 ON f.frnd_id = h2.id  WHERE h1.name = 'Kyle'",
    "SELECT h2.name FROM highschooler h1, highschooler h2, friend f WHERE h1.name = 'Kyle' AND h1.id = f.student_id AND f.frnd_id = h2.id",
    "SELECT h.name  FROM highschooler h  JOIN friend f1 ON h.id = f1.student_id  JOIN friend f2 ON h.id = f2.student_id  JOIN likes l ON h.id = l.student_id  WHERE h.gr > 5 AND f1.frnd_id <> h.id AND f1.frnd_id = f2.frnd_id  GROUP BY h.id  HAVING COUNT(DISTINCT f1.frnd_id) >= 2",
    "SELECT name FROM highschooler WHERE gr > 5 AND id IN (SELECT student_id FROM friend GROUP BY student_id HAVING COUNT(*) >= 2)",
    "SELECT AVG(highschooler.gr) FROM highschooler WHERE highschooler.id IN (SELECT friend.student_id FROM friend)",
    "SELECT AVG(highschooler.gr) FROM highschooler WHERE highschooler.id IN (SELECT friend.student_id FROM friend)",
    "SELECT MIN(gr) FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend UNION SELECT frnd_id FROM friend)",
    "SELECT MIN(gr) FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend)",
    "SELECT pro_id, last_name, cell FROM professionals WHERE state = 'Indiana' OR pro_id IN (SELECT professional_id FROM treatments GROUP BY professional_id HAVING COUNT(*) > 2)",
    "SELECT id, last_name, cell FROM professionals WHERE state = 'Indiana' OR id IN (SELECT professional_id FROM treatments GROUP BY professional_id HAVING COUNT(*) > 2)",
    "SELECT name FROM dogs WHERE dog_id NOT IN (SELECT dog_id FROM treatments JOIN charges ON treatments.tx_type_code = charges.chrg_id WHERE charges.chrg_amt > 1000)",
    "SELECT name FROM dogs WHERE dog_id NOT IN (SELECT dog_id FROM treatments JOIN charges ON treatments.tx_type_code = charges.chrg_id WHERE charges.chrg_amt > 1000)",
    "SELECT professionals.pro_id, professionals.role_code, professionals.email_adr  FROM professionals  WHERE professionals.pro_id NOT IN      (SELECT treatments.professional_id       FROM treatments       WHERE treatments.tx_type_code IN           (SELECT treatment_types.tx_type_code            FROM treatment_types            WHERE treatment_types.tx_type_desc LIKE '%operate%'            AND treatment_types.tx_type_desc LIKE '%on dogs%'))",
    "SELECT pro_id, role_code, email_adr FROM professionals WHERE pro_id NOT IN (SELECT professional_id FROM treatments WHERE tx_type_code IN (SELECT tx_type_code FROM treatment_types WHERE tx_type_desc = 'dog'))",
    "SELECT professional_id, role_code, first_name FROM professionals WHERE professional_id IN (SELECT professional_id FROM treatments GROUP BY professional_id HAVING COUNT(DISTINCT dog_id) >= 2)",
    "SELECT professionals.pro_id, professionals.role_code, professionals.first_name FROM professionals JOIN treatments ON professionals.pro_id = treatments.professional_id GROUP BY treatments.professional_id HAVING COUNT(DISTINCT treatments.treatment_id) >= 2",
    "SELECT tx_type_desc FROM treatment_types WHERE tx_type_code = (SELECT tx_type_code FROM treatments GROUP BY tx_type_code ORDER BY SUM(chrg_amt) ASC LIMIT 1)",
    "SELECT tx_type_desc FROM treatment_types WHERE tx_type_code = (SELECT tx_type_code FROM treatments GROUP BY tx_type_code ORDER BY SUM(cot) ASC LIMIT 1)",
    "SELECT owner_id, zip_code FROM owners WHERE owner_id IN (     SELECT owner_id     FROM dogs     WHERE aband_yn = 'N'     GROUP BY owner_id     ORDER BY SUM(         SELECT chrg_amt         FROM charges         WHERE charges.chrg_id = treatments.tx_type_code     ) DESC     LIMIT 1 )",
    "SELECT dogs.owner_id, owners.zip_code FROM dogs JOIN owners ON dogs.owner_id = owners.owner_id GROUP BY dogs.owner_id, owners.zip_code ORDER BY SUM((SELECT chrg_amt FROM charges WHERE charges.chrg_id = treatments.tx_type_code)) DESC LIMIT 1",
    "SELECT professional_id, cell FROM treatments JOIN professionals ON treatments.professional_id = professionals.pro_id GROUP BY professional_id, cell HAVING COUNT(DISTINCT tx_type_code) >= 2",
    "SELECT professional_id, cell FROM professionals WHERE professional_id IN (SELECT professional_id FROM treatments GROUP BY professional_id HAVING COUNT(DISTINCT tx_type_code) >= 2)",
    "SELECT first_name, last_name FROM professionals  JOIN treatments ON professionals.pro_id = treatments.professional_id  WHERE treatments.cot < (SELECT AVG(chrg_amt) FROM charges)",
    "SELECT first_name, last_name FROM professionals WHERE pro_id IN (SELECT professional_id FROM treatments WHERE chrg_amt < (SELECT AVG(chrg_amt) FROM charges))",
    "SELECT treatments.dot, professionals.first_name FROM treatments JOIN professionals ON treatments.professional_id = professionals.pro_id",
    "SELECT treatments.dot, professionals.first_name FROM treatments JOIN professionals ON treatments.professional_id = professionals.pro_id",
    "SELECT charges.chrg_amt, treatment_types.tx_type_desc  FROM treatments  JOIN charges ON treatments.tx_type_code = charges.chrg_type  JOIN treatment_types ON treatments.tx_type_code = treatment_types.tx_type_code",
    "SELECT charges.chrg_amt, treatment_types.tx_type_desc FROM treatments JOIN charges ON treatments.tx_type_code = charges.chrg_type JOIN treatment_types ON treatments.tx_type_code = treatment_types.tx_type_code",
    "SELECT owners.first_name, owners.last_name, sizes.size_description FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id JOIN sizes ON dogs.sz_code = sizes.sz_code",
    "SELECT owners.first_name, owners.last_name, sizes.size_description FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id JOIN sizes ON dogs.sz_code = sizes.sz_code",
    "SELECT dogs.name, treatments.dot FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code JOIN (SELECT breed_code, COUNT(*) AS breed_count FROM dogs GROUP BY breed_code ORDER BY breed_count ASC LIMIT 1) AS rarest_breed ON dogs.breed_code = rarest_breed.breed_code JOIN treatments ON dogs.dog_id = treatments.dog_id",
    "SELECT dogs.name, treatments.dot FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code JOIN treatments ON dogs.dog_id = treatments.dog_id WHERE breeds.breed_name = (SELECT breed_name FROM breeds ORDER BY breed_code LIMIT 1)",
    "SELECT date_arr, date_departed FROM dogs JOIN treatments ON dogs.dog_id = treatments.dog_id WHERE tx_type_code IS NOT NULL",
    "SELECT date_arr, date_departed FROM dogs WHERE dog_id IN (SELECT dog_id FROM treatments)",
    "SELECT email_adr FROM professionals WHERE state = 'Hawaii' OR state = 'Wisconsin'",
    "SELECT email_adr FROM professionals WHERE state = 'Hawaii' OR state = 'Wisconsin'",
    "SELECT date_arr, date_departed FROM dogs",
    "SELECT date_arr, date_departed FROM dogs",
    "SELECT role_code, st, city, state FROM professionals WHERE city LIKE '%West%'",
    "SELECT role_code, st, city, state FROM professionals WHERE city LIKE '%West%'",
    "SELECT first_name, last_name, em_adr FROM owners WHERE state LIKE '%North%'",
    "SELECT first_name, last_name, em_adr FROM owners WHERE state LIKE '%North%'",
    "SELECT chrg_amt FROM charges ORDER BY chrg_id DESC LIMIT 1",
    "SELECT chrg_amt FROM charges ORDER BY cot DESC LIMIT 1",
    "SELECT COUNT(*) FROM professionals WHERE pro_id NOT IN (SELECT professional_id FROM treatments WHERE tx_type_code = 'operation')",
    "SELECT COUNT(*) FROM professionals WHERE pro_id NOT IN (SELECT DISTINCT professional_id FROM treatments WHERE tx_type_code = 'dog_treatment')",
    "SELECT name, age, wt FROM dogs WHERE aband_yn = 1",
    "SELECT name, age, wt FROM dogs WHERE aband_yn = 1",
    "SELECT chrg_type, chrg_amt FROM charges",
    "SELECT chrg_type, chrg_amt FROM charges",
    "SELECT MAX(chrg_amt) FROM charges",
    "SELECT MAX(chrg_amt) FROM charges",
    "SELECT email_adr, hp, cell FROM professionals",
    "SELECT email_adr, hp, cell FROM professionals",
    "SELECT breeds.breed_name, sizes.size_description FROM breeds, sizes",
    "SELECT DISTINCT breed_code, sz_code FROM dogs",
    "SELECT professionals.first_name, treatments.tx_type_desc  FROM professionals  JOIN treatments ON professionals.pro_id = treatments.professional_id",
    "SELECT professionals.first_name, treatments.tx_type_desc FROM professionals JOIN treatments ON professionals.pro_id = treatments.professional_id",
    "SELECT role_code, street, city, state FROM professionals WHERE city LIKE '%West%'",
    "SELECT role_code, street, city, state FROM professionals WHERE city LIKE '%West%'",
    "SELECT name, age, wt FROM dogs WHERE abandoned_yn = 1",
    "SELECT name, age, wt FROM dogs WHERE abandoned_yn = 1",
    "SELECT professional_id, last_name, cell_number FROM professionals WHERE state = 'Indiana' OR professional_id IN (SELECT pro_id FROM treatments GROUP BY pro_id HAVING COUNT(DISTINCT treatment_id) > 2)",
    "SELECT professional_id, last_name, cell_number FROM professionals  WHERE state = 'Indiana' OR professional_id IN  (SELECT pro_id FROM treatments GROUP BY pro_id HAVING COUNT(*) > 2)",
    "SELECT professionals.professional_id, professionals.role_code, professionals.email_adr FROM professionals WHERE professionals.professional_id NOT IN (     SELECT treatments.pro_id     FROM treatments     WHERE treatments.treatment_type_code IN (         SELECT treatment_types.treatment_type_code         FROM treatment_types         WHERE treatment_types.treatment_type_description = 'operating'     ) AND treatments.dog_id IN (         SELECT dogs.dog_id         FROM dogs     ) )",
    "SELECT professional_id, role_code, email_adr FROM professionals WHERE professional_id NOT IN (SELECT pro_id FROM treatments WHERE treatment_type_code = 'dog')",
    "SELECT professional_id, role_code, first_name FROM professionals WHERE professional_id IN (SELECT pro_id FROM treatments GROUP BY pro_id HAVING COUNT(DISTINCT treatment_id) >= 2)",
    "SELECT professionals.professional_id, professionals.role_code, professionals.first_name FROM professionals JOIN treatments ON professionals.professional_id = treatments.pro_id GROUP BY treatments.pro_id HAVING COUNT(DISTINCT treatments.treatment_id) >= 2",
    "SELECT pro_id, cell_number FROM professionals WHERE professional_id IN (SELECT pro_id FROM treatments GROUP BY pro_id HAVING COUNT(DISTINCT treatment_type_code) >= 2)",
    "SELECT pro_id, cell_number FROM professionals WHERE pro_id IN (SELECT pro_id FROM treatments GROUP BY pro_id HAVING COUNT(DISTINCT treatment_type_code) >= 2)",
    "SELECT treatments.date_of_treatment, professionals.first_name FROM treatments JOIN professionals ON treatments.pro_id = professionals.professional_id",
    "SELECT date_of_treatment, first_name FROM treatments JOIN professionals ON treatments.pro_id = professionals.professional_id",
    "SELECT email_adr FROM professionals WHERE state = 'Hawaii' OR state = 'Wisconsin'",
    "SELECT email_adr FROM professionals WHERE state = 'Hawaii' OR state = 'Wisconsin'",
    "SELECT COUNT(DISTINCT pro_id) FROM treatments WHERE treatment_type_code IS NOT NULL",
    "SELECT COUNT(DISTINCT pro_id) FROM treatments WHERE treatment_type_code IN (SELECT treatment_type_code FROM treatment_types WHERE treatment_type_description = 'treated dogs')",
    "SELECT COUNT(*) FROM professionals WHERE professional_id NOT IN (SELECT DISTINCT pro_id FROM treatments WHERE treatment_type_code = 'operation')",
    "SELECT COUNT(*) FROM professionals WHERE professional_id NOT IN (SELECT DISTINCT pro_id FROM treatments WHERE dog_id IN (SELECT dog_id FROM dogs WHERE breed_code IS NOT NULL))",
    "SELECT email_adr, home_phone, cell_number FROM professionals",
    "SELECT email_address, cell_number, home_phone FROM professionals",
    "SELECT professionals.first_name, treatments.treatment_type_description  FROM professionals  JOIN treatments ON professionals.professional_id = treatments.pro_id",
    "SELECT professionals.first_name, treatments.treatment_type_description FROM professionals JOIN treatments ON professionals.professional_id = treatments.pro_id",
    "SELECT pro_id, last_name, cell_number FROM professionals WHERE st = 'IN' OR pro_id IN (SELECT pro_id FROM treatments GROUP BY pro_id HAVING COUNT(DISTINCT tx_id) > 2)",
    "SELECT pro_id, last_name, cell_number FROM professionals  WHERE state = 'Indiana' OR pro_id IN (SELECT pro_id FROM treatments GROUP BY pro_id HAVING COUNT(*) > 2)",
    "SELECT name FROM dogs WHERE dog_id NOT IN (SELECT dog_id FROM treatments JOIN charges ON treatments.tx_type_code = charges.chrg_type WHERE charges.chrg_amt > 1000)",
    "SELECT name FROM dogs WHERE dog_id NOT IN (SELECT dog_id FROM treatments JOIN charges ON treatments.tx_type_code = charges.chrg_type WHERE charges.chrg_amt > 1000)",
    "SELECT professionals.pro_id, professionals.role_code, professionals.email_adr FROM professionals WHERE professionals.pro_id NOT IN (     SELECT treatments.pro_id     FROM treatments     WHERE treatments.tx_type_code IN (         SELECT treatment_types.tx_type_code         FROM treatment_types         WHERE treatment_types.tx_type_desc = 'operating'     ) AND treatments.dog_id IN (         SELECT dogs.dog_id         FROM dogs     ) )",
    "SELECT professionals.pro_id, professionals.role_code, professionals.email_adr  FROM professionals  WHERE professionals.pro_id NOT IN      (SELECT treatments.pro_id FROM treatments WHERE treatments.tx_type_code = 'dog')",
    "SELECT pro_id, role_code, first_name FROM professionals WHERE pro_id IN (SELECT pro_id FROM treatments GROUP BY pro_id HAVING COUNT(DISTINCT tx_id) >= 2)",
    "SELECT professionals.pro_id, professionals.role_code, professionals.first_name  FROM professionals  JOIN treatments ON treatments.pro_id = professionals.pro_id  GROUP BY treatments.pro_id  HAVING COUNT(DISTINCT treatments.tx_id) >= 2",
    "SELECT tx_type_desc FROM treatment_types WHERE tx_type_code = (SELECT tx_type_code FROM treatments                       GROUP BY tx_type_code                       ORDER BY SUM((SELECT chrg_amt FROM charges WHERE chrg_type = tx_type_code)) ASC                       LIMIT 1)",
    "SELECT tx_type_desc FROM treatment_types WHERE tx_type_code = (SELECT tx_type_code FROM treatments GROUP BY tx_type_code ORDER BY SUM(cot) ASC LIMIT 1)",
    "SELECT dogs.owner_id, owners.zip_code FROM dogs JOIN owners ON dogs.owner_id = owners.owner_id GROUP BY dogs.owner_id ORDER BY SUM(charges.chrg_amt) DESC LIMIT 1",
    "SELECT dogs.owner_id, owners.zip_code FROM dogs JOIN owners ON dogs.owner_id = owners.owner_id GROUP BY dogs.owner_id, owners.zip_code ORDER BY SUM((SELECT chrg_amt FROM charges WHERE charges.chrg_id = treatments.tx_id)) DESC LIMIT 1",
    "SELECT pro_id, cell_number FROM professionals WHERE pro_id IN (SELECT pro_id FROM treatments GROUP BY pro_id HAVING COUNT(DISTINCT tx_type_code) >= 2)",
    "SELECT pro_id, cell_number FROM professionals WHERE pro_id IN (SELECT pro_id FROM treatments GROUP BY pro_id HAVING COUNT(DISTINCT tx_type_code) >= 2)",
    "SELECT first_name, last_name FROM professionals  JOIN treatments ON treatments.pro_id = professionals.pro_id  WHERE cot < (SELECT AVG(cot) FROM treatments)",
    "SELECT first_name, last_name FROM professionals WHERE pro_id IN (SELECT pro_id FROM treatments WHERE tx_type_code IN (SELECT tx_type_code FROM treatments GROUP BY tx_type_code HAVING AVG(chrg_amt) > (SELECT AVG(chrg_amt) FROM treatments)) AND chrg_amt < (SELECT AVG(chrg_amt) FROM treatments GROUP BY tx_type_code HAVING AVG(chrg_amt) > (SELECT AVG(chrg_amt) FROM treatments)));",
    "SELECT treatments.dot, professionals.first_name FROM treatments JOIN professionals ON treatments.pro_id = professionals.pro_id",
    "SELECT treatments.dot, professionals.first_name FROM treatments JOIN professionals ON treatments.pro_id = professionals.pro_id",
    "SELECT charges.chrg_amt, treatment_types.tx_type_desc  FROM charges  JOIN treatments ON charges.chrg_id = treatments.tx_id  JOIN treatment_types ON treatments.tx_type_code = treatment_types.tx_type_code",
    "SELECT charges.chrg_amt, treatment_types.tx_type_desc FROM treatments JOIN charges ON treatments.tx_id = charges.chrg_id JOIN treatment_types ON treatments.tx_type_code = treatment_types.tx_type_code",
    "SELECT dogs.name, treatments.dot FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code JOIN (SELECT breed_code, COUNT(*) AS breed_count FROM dogs GROUP BY breed_code ORDER BY breed_count ASC LIMIT 1) AS rarest_breed ON dogs.breed_code = rarest_breed.breed_code JOIN treatments ON dogs.dog_id = treatments.dog_id",
    "SELECT dogs.name, treatments.dot FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code JOIN treatments ON dogs.dog_id = treatments.dog_id WHERE breeds.breed_name = (SELECT breeds.breed_name FROM breeds ORDER BY breeds.breed_code LIMIT 1) ORDER BY treatments.dot DESC",
    "SELECT date_arr, date_dpt FROM dogs JOIN treatments ON dogs.dog_id = treatments.dog_id WHERE tx_type_code IS NOT NULL",
    "SELECT date_arr, date_dpt FROM dogs INNER JOIN treatments ON dogs.dog_id = treatments.dog_id WHERE treatments.tx_id IS NOT NULL",
    "SELECT email_adr FROM professionals WHERE state = 'Hawaii' OR state = 'Wisconsin'",
    "SELECT email_adr FROM professionals WHERE state = 'Hawaii' OR state = 'Wisconsin'",
    "SELECT date_arr, date_dpt FROM dogs",
    "SELECT date_arr, date_dpt FROM dogs",
    "SELECT COUNT(DISTINCT pro_id) FROM treatments WHERE tx_type_code IS NOT NULL AND tx_type_code != ''",
    "SELECT COUNT(DISTINCT pro_id) FROM treatments WHERE tx_type_code IN (SELECT tx_type_code FROM treatment_types WHERE tx_type_desc = 'treated dogs')",
    "SELECT role_code, street, city, state FROM professionals WHERE city LIKE '%West%'",
    "SELECT role_code, street, city, state FROM professionals WHERE city LIKE '%West%'",
    "SELECT first_name, last_name, em_adr FROM owners WHERE state LIKE '%North%'",
    "SELECT first_name, last_name, em_adr FROM owners WHERE state LIKE '%North%'",
    "SELECT chrg_amt FROM charges ORDER BY chrg_id DESC LIMIT 1",
    "SELECT chrg_amt FROM charges ORDER BY cot DESC LIMIT 1",
    "SELECT COUNT(*) FROM professionals WHERE pro_id NOT IN (SELECT pro_id FROM treatments)",
    "SELECT COUNT(*) FROM professionals WHERE pro_id NOT IN (SELECT DISTINCT pro_id FROM treatments WHERE tx_type_code = 'tx_type_code_1')",
    "SELECT name, age, weight FROM dogs WHERE aband_yn = 1",
    "SELECT name, age, weight FROM dogs WHERE aband_yn = 1",
    "SELECT chrg_type, chrg_amt FROM charges",
    "SELECT chrg_type, chrg_amt FROM charges",
    "SELECT MAX(chrg_amt) FROM charges",
    "SELECT MAX(chrg_amt) FROM charges",
    "SELECT email_adr, hp, cell_number FROM professionals",
    "SELECT email_adr, hp, cell_number FROM professionals",
    "SELECT professionals.first_name, treatments.tx_type_desc  FROM professionals  JOIN treatments ON professionals.pro_id = treatments.pro_id",
    "SELECT professionals.first_name, treatments.tx_type_desc FROM professionals JOIN treatments ON professionals.pro_id = treatments.pro_id",
    "SELECT name FROM singer ORDER BY net_worth_m ASC",
    "SELECT name FROM singer ORDER BY net_worth_m ASC",
    "SELECT name FROM singer ORDER BY net_worth_m DESC LIMIT 1",
    "SELECT name FROM singer ORDER BY net_worth_m DESC LIMIT 1",
    "SELECT citizenship, MAX(net_worth_m) FROM singer GROUP BY citizenship",
    "SELECT citizenship, MAX(net_worth_m) FROM singer GROUP BY citizenship",
    "SELECT name FROM singer ORDER BY net_worth_m ASC",
    "SELECT name FROM singer ORDER BY net_worth_m ASC",
    "SELECT name FROM singer ORDER BY net_worth_m DESC LIMIT 1",
    "SELECT name FROM singer ORDER BY net_worth_m DESC LIMIT 1",
    "SELECT citizenship, MAX(net_worth_m) FROM singer GROUP BY citizenship",
    "SELECT citizenship, MAX(net_worth_m) FROM singer GROUP BY citizenship",
    "SELECT feature_type_name FROM ref_feature_types WHERE feat_type_code = (SELECT feat_type_code FROM other_available_features WHERE feat_name = 'AirCon')",
    "SELECT prop_type_desc FROM ref_property_types WHERE prop_type_code = (SELECT prop_type_code FROM properties WHERE property_id = [code])",
    "SELECT prop_name FROM properties WHERE (prop_type_code = 'APT' OR prop_type_code = 'HSE') AND room_count > 1",
    "SELECT feature_type_name FROM ref_feature_types WHERE feat_type_code = (SELECT feature_type_code FROM other_available_features WHERE feat_name = 'AirCon')",
    "SELECT prop_type_desc FROM ref_property_types WHERE property_type_code = (SELECT prop_type_code FROM properties WHERE prop_id = [code]);   Note: Replace [code] with the actual code of the property.",
    "SELECT prop_name FROM properties WHERE (prop_type_code = (SELECT property_type_code FROM ref_property_types WHERE prop_type_desc = 'house') OR prop_type_code = (SELECT property_type_code FROM ref_property_types WHERE prop_type_desc = 'apartment')) AND room_count > 1",
    "SELECT feat_type_name FROM ref_feature_types WHERE feat_type_code = (SELECT feat_type_code FROM other_available_features WHERE feat_name = 'AirCon')",
    "SELECT prop_type_desc FROM ref_property_types WHERE prop_type_code = (SELECT prop_type_code FROM properties WHERE prop_id = <code>)",
    "SELECT prop_name FROM properties WHERE (prop_type_code = 'APT' OR prop_type_code = 'HSE') AND room_cnt > 1",
    "SELECT feature_type_name FROM ref_feature_types WHERE feature_type_code = (SELECT feat_type_code FROM other_available_features WHERE feature_name = 'AirCon')",
    "SELECT prop_name FROM properties WHERE (property_type_code = 'APT' OR property_type_code = 'HSE') AND room_count > 1"
]