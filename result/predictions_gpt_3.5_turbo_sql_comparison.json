[
    "SELECT song_name FROM singer WHERE age < (SELECT AVG(age) FROM singer)",
    "SELECT song_name FROM singer WHERE age < (SELECT AVG(age) FROM singer)",
    "SELECT COUNT(*) FROM pets WHERE weight < 10",
    "SELECT student.fname, student.sex FROM student WHERE student.stuid IN (SELECT has_pet.stuid FROM has_pet) LIMIT 1",
    "SELECT fname, sex FROM student WHERE stuid IN (SELECT stuid FROM has_pet GROUP BY stuid HAVING COUNT(*) <= 1)",
    "SELECT student.fname, student.sex FROM student WHERE student.stuid IN (SELECT has_pet.stuid FROM has_pet)",
    "SELECT fname, sex FROM student WHERE stuid IN (SELECT stuid FROM has_pet GROUP BY stuid HAVING COUNT(*) <= 1)",
    "SELECT model FROM model_list WHERE modelid IN (SELECT makeid FROM cars_data WHERE weight > (SELECT AVG(weight) FROM cars_data))",
    "SELECT model FROM model_list WHERE modelid IN (SELECT makeid FROM cars_data WHERE weight > (SELECT AVG(weight) FROM cars_data))",
    "SELECT model FROM model_list WHERE modelid IN (SELECT makeid FROM cars_data WHERE weight >= (SELECT AVG(weight) FROM cars_data))",
    "SELECT DISTINCT model FROM model_list JOIN cars_data ON model_list.modelid = cars_data.id WHERE year < 1980",
    "SELECT DISTINCT model FROM model_list WHERE modelid IN (SELECT makeid FROM cars_data WHERE year < 1980)",
    "SELECT DISTINCT car_makers.id, car_makers.maker FROM car_makers  GROUP BY car_makers.country  HAVING COUNT(DISTINCT car_makers.maker) > 1  INNER JOIN countries ON car_makers.country = countries.countryid  ORDER BY car_makers.id ASC",
    "SELECT countries.countryid, countries.countryname FROM countries WHERE countries.countryid IN (     SELECT car_makers.country     FROM car_makers     GROUP BY car_makers.country     HAVING COUNT(DISTINCT car_makers.id) <= 1 )",
    "SELECT DISTINCT countries.countryid, countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryid, countries.countryname HAVING COUNT(DISTINCT car_makers.id) > 1",
    "SELECT countryid, countryname FROM countries WHERE countryid IN (SELECT country FROM car_makers GROUP BY country HAVING COUNT(DISTINCT maker) <= 1)",
    "SELECT COUNT(*) FROM cars_data WHERE horsepower < 150",
    "SELECT COUNT(*) FROM cars_data WHERE horsepower >= 150",
    "SELECT COUNT(*) FROM cars_data WHERE horsepower <= 150",
    "SELECT COUNT(*) FROM cars_data WHERE horsepower < 150",
    "SELECT COUNT(*) FROM cars_data WHERE horsepower >= 150",
    "SELECT COUNT(*) FROM cars_data WHERE horsepower <= 150",
    "SELECT countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country WHERE countries.continent = 'europe' GROUP BY countries.countryname HAVING COUNT(DISTINCT car_makers.maker) > 3",
    "SELECT countryname FROM countries WHERE continent = 'europe' GROUP BY countryname HAVING COUNT(DISTINCT maker) < 3",
    "SELECT countries.countryname  FROM countries  JOIN car_makers ON countries.countryid = car_makers.country  GROUP BY countries.countryid  HAVING COUNT(DISTINCT car_makers.maker) <= 3 AND countries.continent = 'europe'",
    "SELECT DISTINCT countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country WHERE countries.continent = 'Europe' GROUP BY countries.countryname HAVING COUNT(DISTINCT car_makers.maker) > 3",
    "SELECT countryname FROM countries  WHERE continent = 'Europe'  AND countryid NOT IN (SELECT country FROM car_makers GROUP BY country HAVING COUNT(DISTINCT maker) >= 3)",
    "SELECT countryname FROM countries  WHERE continent = 'Europe' AND countryid IN  (SELECT country FROM car_makers GROUP BY country HAVING COUNT(DISTINCT maker) <= 3)",
    "SELECT AVG(horsepower) FROM cars_data WHERE year > 1980",
    "SELECT AVG(horsepower) FROM cars_data WHERE year > 1980",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders < 4",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders >= 4",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders <= 4",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders < 4",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders >= 4",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders <= 4",
    "SELECT id, fullname FROM car_makers WHERE id IN (SELECT maker FROM model_list GROUP BY maker HAVING COUNT(*) < 3)",
    "SELECT id, fullname FROM car_makers WHERE id IN (SELECT maker FROM model_list GROUP BY maker HAVING COUNT(DISTINCT model) >= 3)",
    "SELECT id, fullname FROM car_makers WHERE id IN (SELECT maker FROM model_list GROUP BY maker HAVING COUNT(*) <= 3)",
    "SELECT id, maker FROM car_makers WHERE id IN (SELECT maker FROM model_list GROUP BY maker HAVING COUNT(*) < 3)",
    "SELECT id, maker FROM car_makers WHERE id IN (SELECT maker FROM model_list GROUP BY maker HAVING COUNT(*) >= 3)",
    "SELECT id, maker FROM car_makers WHERE id IN (SELECT maker FROM model_list GROUP BY maker HAVING COUNT(*) <= 3)",
    "SELECT DISTINCT model FROM model_list WHERE maker IN (SELECT maker FROM car_makers WHERE fullname = 'General Motors') OR maker IN (SELECT id FROM car_makers WHERE weight < 3500)",
    "SELECT DISTINCT model FROM model_list WHERE maker IN (SELECT maker FROM car_makers WHERE fullname = 'General Motors' OR id IN (SELECT id FROM cars_data WHERE weight <= 3500))",
    "SELECT DISTINCT model FROM model_list WHERE maker = 'General Motors' OR weight < 3500",
    "SELECT DISTINCT model FROM model_list WHERE maker = 'General Motors' OR weight <= 3500",
    "SELECT COUNT(DISTINCT countries.countryid) FROM countries LEFT JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryid HAVING COUNT(car_makers.id) < 2",
    "SELECT COUNT(DISTINCT countryid) FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countryid HAVING COUNT(DISTINCT maker) >= 2",
    "SELECT COUNT(DISTINCT countries.countryid) FROM countries LEFT JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryid HAVING COUNT(DISTINCT car_makers.id) <= 2",
    "SELECT COUNT(DISTINCT countries.countryid) FROM countries LEFT JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryid HAVING COUNT(car_makers.id) < 2",
    "SELECT COUNT(DISTINCT country) FROM car_makers cm1 JOIN car_makers cm2 ON cm1.country = cm2.country AND cm1.id <> cm2.id",
    "SELECT COUNT(DISTINCT countries.countryid)  FROM countries  LEFT JOIN car_makers ON countries.countryid = car_makers.country  GROUP BY countries.countryid  HAVING COUNT(DISTINCT car_makers.maker) <= 2",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders < 6",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders < 6",
    "SELECT model  FROM car_names  JOIN cars_data ON car_names.makeid = cars_data.id  JOIN model_list ON car_names.model = model_list.model  JOIN car_makers ON model_list.maker = car_makers.maker  WHERE weight > 3500 AND car_makers.country != 'Ford Motor Company'",
    "SELECT model FROM model_list  INNER JOIN car_makers ON model_list.maker = car_makers.maker  INNER JOIN cars_data ON model_list.modelid = cars_data.id  WHERE weight > 3500 AND car_makers.country != 'USA' AND car_makers.maker != 'Ford Motor Company'",
    "SELECT countryid, countryname FROM countries WHERE countryid IN (SELECT country FROM car_makers GROUP BY country HAVING COUNT(DISTINCT maker) < 3) OR countryid IN (SELECT country FROM car_makers WHERE maker = 'fiat')",
    "SELECT DISTINCT countries.countryid, countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country JOIN car_names ON car_makers.id = car_names.makeid WHERE car_makers.maker = 'fiat' OR countries.countryid IN (     SELECT country     FROM car_makers     GROUP BY country     HAVING COUNT(DISTINCT maker) >= 3 )",
    "SELECT countryid, countryname FROM countries WHERE countryid IN (SELECT country FROM car_makers GROUP BY country HAVING COUNT(DISTINCT maker) <= 3) OR countryid IN (SELECT DISTINCT country FROM car_makers WHERE maker = 'fiat')",
    "SELECT countryid, countryname FROM countries WHERE countryid IN (SELECT country FROM car_makers GROUP BY country HAVING COUNT(DISTINCT maker) < 3) OR countryid IN (SELECT DISTINCT country FROM car_makers WHERE maker = 'fiat')",
    "SELECT countryid, countryname FROM countries WHERE countryid IN (SELECT country FROM car_makers GROUP BY country HAVING COUNT(DISTINCT maker) >= 3) OR countryid IN (SELECT DISTINCT country FROM car_makers WHERE maker = 'fiat')",
    "SELECT countryid, countryname FROM countries WHERE countryid IN (SELECT country FROM car_makers GROUP BY country HAVING COUNT(DISTINCT maker) <= 3) OR countryid IN (SELECT DISTINCT country FROM car_makers WHERE maker = 'fiat')",
    "SELECT name FROM shop WHERE number_products < (SELECT AVG(number_products) FROM shop)",
    "SELECT name FROM shop WHERE number_products <= (SELECT AVG(number_products) FROM shop)",
    "SELECT name FROM shop WHERE number_products < (SELECT AVG(number_products) FROM shop)",
    "SELECT DISTINCT template_id FROM documents",
    "SELECT template_id FROM templates GROUP BY template_id HAVING COUNT(DISTINCT document_id) <= 1",
    "SELECT DISTINCT template_id FROM documents WHERE template_id IN (SELECT template_id FROM templates)",
    "SELECT template_id FROM documents GROUP BY template_id HAVING COUNT(*) <= 1",
    "SELECT version_number, template_type_code FROM templates WHERE version_number < 5",
    "SELECT version_number, template_type_code FROM templates WHERE version_number >= 5",
    "SELECT version_number, template_type_code FROM templates WHERE version_number <= 5",
    "SELECT template_type_code FROM ref_template_types  WHERE template_type_code IN  (SELECT template_type_code FROM templates  GROUP BY template_type_code  HAVING COUNT(*) > 3)",
    "SELECT template_type_code FROM ref_template_types  WHERE template_type_code IN  (SELECT template_type_code FROM templates  GROUP BY template_type_code  HAVING COUNT(DISTINCT template_id) >= 3)",
    "SELECT template_type_code FROM ref_template_types  WHERE template_type_code IN  (SELECT template_type_code FROM templates  GROUP BY template_type_code  HAVING COUNT(DISTINCT template_id) <= 3)",
    "SELECT document_id FROM paragraphs GROUP BY document_id HAVING COUNT(*) > 2",
    "SELECT document_id FROM documents  WHERE document_id NOT IN (SELECT document_id FROM paragraphs GROUP BY document_id HAVING COUNT(*) >= 2)",
    "SELECT document_id FROM documents  GROUP BY document_id  HAVING COUNT(DISTINCT paragraph_id) <= 2",
    "SELECT document_id FROM paragraphs GROUP BY document_id HAVING COUNT(*) <= 2",
    "SELECT name FROM teacher WHERE teacher_id IN (SELECT teacher_id FROM course_arrange GROUP BY teacher_id HAVING COUNT(*) < 2)",
    "SELECT name FROM teacher  WHERE teacher_id IN (     SELECT teacher_id FROM course_arrange      GROUP BY teacher_id      HAVING COUNT(*) <= 2 )",
    "SELECT name FROM teacher WHERE teacher_id IN (SELECT teacher_id FROM course_arrange GROUP BY teacher_id HAVING COUNT(*) < 2)",
    "SELECT name FROM teacher WHERE teacher_id IN (SELECT teacher_id FROM course_arrange GROUP BY teacher_id HAVING COUNT(*) <= 2)",
    "SELECT name FROM visitor WHERE level_of_membership < 4 ORDER BY level_of_membership DESC",
    "SELECT name FROM visitor WHERE level_of_membership <= 4 ORDER BY level_of_membership DESC",
    "SELECT name, level_of_membership FROM visitor WHERE level_of_membership < 4 ORDER BY age ASC",
    "SELECT name, level_of_membership FROM visitor WHERE level_of_membership <= 4 ORDER BY age ASC",
    "SELECT AVG(num_of_staff) FROM museum WHERE open_year > 2009",
    "SELECT name FROM museum WHERE num_of_staff > (SELECT MIN(num_of_staff) FROM museum WHERE open_year < 2010)",
    "SELECT COUNT(DISTINCT visitor_id) FROM visit WHERE museum_id NOT IN (SELECT museum_id FROM museum WHERE open_year < 2010)",
    "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) < 10",
    "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) <= 10",
    "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) < 10",
    "SELECT tourney_name FROM matches WHERE draw_size <= 10",
    "SELECT country_code FROM players GROUP BY country_code HAVING COUNT(*) < 50",
    "SELECT country_code FROM players GROUP BY country_code HAVING COUNT(*) <= 50",
    "SELECT country_code FROM players GROUP BY country_code HAVING COUNT(*) < 50",
    "SELECT country_code FROM players GROUP BY country_code HAVING COUNT(*) <= 50",
    "SELECT id, name FROM battle WHERE id IN (SELECT caused_by_ship_id FROM death GROUP BY caused_by_ship_id HAVING SUM(killed) + SUM(injured) < 10)",
    "SELECT id, name FROM battle WHERE id IN (SELECT caused_by_ship_id FROM death GROUP BY caused_by_ship_id HAVING SUM(killed) + SUM(injured) <= 10)",
    "SELECT course_id, course_name FROM courses WHERE course_id IN (SELECT course_id FROM sections GROUP BY course_id HAVING COUNT(*) < 2)",
    "SELECT course_id, course_name FROM courses WHERE course_id IN (SELECT course_id FROM sections GROUP BY course_id HAVING COUNT(*) >= 2)",
    "SELECT transcript_id, transcript_date FROM transcripts WHERE transcript_id IN (SELECT transcript_id FROM transcript_contents GROUP BY transcript_id HAVING COUNT(DISTINCT student_course_id) > 2)",
    "SELECT transcript_id, transcript_date FROM transcripts WHERE transcript_id IN (SELECT transcript_id FROM transcript_contents GROUP BY transcript_id HAVING COUNT(DISTINCT student_course_id) < 2)",
    "SELECT transcript_id, transcript_date FROM transcripts WHERE transcript_id IN (SELECT transcript_id FROM transcript_contents GROUP BY transcript_id HAVING COUNT(DISTINCT student_course_id) <= 2)",
    "SELECT transcript_id, transcript_date FROM transcripts WHERE transcript_id IN (SELECT transcript_id FROM transcript_contents GROUP BY transcript_id HAVING COUNT(DISTINCT student_course_id) > 2)",
    "SELECT transcript_id, transcript_date FROM transcripts WHERE transcript_id IN (SELECT transcript_id FROM transcript_contents GROUP BY transcript_id HAVING COUNT(DISTINCT student_course_id) < 2)",
    "SELECT transcript_id, transcript_date FROM transcripts WHERE transcript_id IN (SELECT transcript_id FROM transcript_contents GROUP BY transcript_id HAVING COUNT(DISTINCT student_course_id) <= 2)",
    "SELECT id FROM tv_channel WHERE country IN (SELECT country FROM tv_channel GROUP BY country HAVING COUNT(*) < 2)",
    "SELECT id FROM tv_channel WHERE country IN (SELECT country FROM tv_channel GROUP BY country HAVING COUNT(*) >= 2)",
    "SELECT id FROM tv_channel WHERE country IN (SELECT country FROM tv_channel GROUP BY country HAVING COUNT(*) <= 2)",
    "SELECT id FROM tv_channel GROUP BY id HAVING COUNT(*) < 2",
    "SELECT channel FROM tv_series GROUP BY channel HAVING COUNT(DISTINCT id) >= 2",
    "SELECT id FROM tv_channel GROUP BY id HAVING COUNT(*) <= 2",
    "SELECT MAX(final_table_made) FROM poker_player WHERE earnings > 200000",
    "SELECT MAX(final_table_made) FROM poker_player WHERE earnings >= 200000",
    "SELECT MAX(final_table_made) FROM poker_player WHERE earnings > 200000",
    "SELECT name FROM poker_player JOIN people ON poker_player.people_id = people.people_id WHERE earnings < 300000",
    "SELECT people.name FROM poker_player JOIN people ON poker_player.people_id = people.people_id WHERE poker_player.earnings <= 300000",
    "SELECT people.name FROM poker_player JOIN people ON poker_player.people_id = people.people_id WHERE poker_player.earnings < 300000",
    "SELECT AVG(earnings) FROM poker_player p JOIN people pe ON p.people_id = pe.people_id WHERE pe.height < 200",
    "SELECT AVG(earnings) FROM poker_player p JOIN people pe ON p.people_id = pe.people_id WHERE pe.height <= 200",
    "SELECT nationality FROM people GROUP BY nationality HAVING COUNT(*) < 2",
    "SELECT nationality FROM people GROUP BY nationality HAVING COUNT(DISTINCT people_id) <= 2",
    "SELECT nationality FROM people GROUP BY nationality HAVING COUNT(*) <= 2",
    "SELECT contestant_number, contestant_name FROM contestants WHERE contestant_number IN (SELECT contestant_number FROM votes GROUP BY contestant_number HAVING COUNT(*) < 2)",
    "SELECT contestant_number, contestant_name FROM contestants WHERE contestant_number IN (SELECT contestant_number FROM votes GROUP BY contestant_number HAVING COUNT(*) <= 2)",
    "SELECT name FROM country WHERE indepyear < 1950",
    "SELECT name FROM country WHERE indepyear < 1950",
    "SELECT COUNT(DISTINCT language) FROM countrylanguage cl JOIN country c ON cl.countrycode = c.code WHERE c.indepyear > 1930",
    "SELECT COUNT(DISTINCT language) FROM countrylanguage WHERE isofficial = 'T' AND countrycode IN (SELECT code FROM country WHERE indepyear > 1930)",
    "SELECT name FROM country WHERE continent = 'Asia' AND population < (SELECT MIN(population) FROM country WHERE continent = 'Africa')",
    "SELECT name FROM country WHERE continent = 'Asia' AND population <= (SELECT MAX(population) FROM country WHERE continent = 'Africa')",
    "SELECT name, COUNT(language) as num_languages FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.code HAVING num_languages < 2",
    "SELECT country.name, COUNT(DISTINCT countrylanguage.language) as num_languages FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.name HAVING num_languages >= 2",
    "SELECT country.name, COUNT(countrylanguage.language) as num_languages FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.name HAVING num_languages <= 2",
    "SELECT district, COUNT(*)  FROM city  WHERE population < (SELECT AVG(population) FROM city)  GROUP BY district",
    "SELECT district, COUNT(*)  FROM city  WHERE population <= (SELECT AVG(population) FROM city)  GROUP BY district",
    "SELECT district, COUNT(city.id)  FROM city  WHERE population < (SELECT AVG(population) FROM city)  GROUP BY district",
    "SELECT governmentform, SUM(population) as total_population FROM country WHERE lifeexpectancy > 72 GROUP BY governmentform",
    "SELECT governmentform, SUM(population) as total_population FROM country WHERE lifeexpectancy > 72 GROUP BY governmentform",
    "SELECT continent, SUM(population) AS total_population, AVG(lifeexpectancy) AS avg_life_expectancy FROM country WHERE AVG(lifeexpectancy) > 72 GROUP BY continent",
    "SELECT continent, SUM(population) AS total_population, AVG(lifeexpectancy) AS avg_life_expectancy FROM country GROUP BY continent HAVING AVG(lifeexpectancy) >= 72",
    "SELECT conductor.name FROM conductor  JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id  WHERE orchestra.year_of_founded < 2008",
    "SELECT DISTINCT c.name FROM conductor c JOIN orchestra o ON c.conductor_id = o.conductor_id WHERE o.year_of_founded < 2008",
    "SELECT name FROM highschooler WHERE id IN (SELECT student_id FROM friend GROUP BY student_id HAVING COUNT(friend_id) < 3)",
    "SELECT h.name  FROM highschooler h  WHERE h.id IN (     SELECT f.student_id      FROM friend f      GROUP BY f.student_id      HAVING COUNT(*) <= 3 )",
    "SELECT name FROM highschooler WHERE id IN (SELECT student_id FROM friend GROUP BY student_id HAVING COUNT(friend_id) <= 3)",
    "SELECT professional_id, last_name, cell_number FROM professionals WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM treatments GROUP BY professional_id HAVING COUNT(*) < 2)",
    "SELECT professional_id, last_name, cell_number FROM professionals WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM treatments GROUP BY professional_id HAVING COUNT(DISTINCT dog_id) >= 2)",
    "SELECT professional_id, last_name, cell_number FROM professionals WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM treatments GROUP BY professional_id HAVING COUNT(DISTINCT dog_id) <= 2)",
    "SELECT professional_id, last_name, cell_number FROM professionals WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM treatments GROUP BY professional_id HAVING COUNT(*) < 2)",
    "SELECT professional_id, last_name, cell_number FROM professionals WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM treatments GROUP BY professional_id HAVING COUNT(*) >= 2)",
    "SELECT professional_id, last_name, cell_number FROM professionals WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM treatments GROUP BY professional_id HAVING COUNT(*) <= 2)",
    "SELECT name FROM dogs WHERE dog_id NOT IN (SELECT dog_id FROM treatments WHERE cost_of_treatment < 1000)",
    "SELECT name FROM dogs WHERE dog_id NOT IN (SELECT dog_id FROM treatments JOIN charges ON treatments.treatment_type_code = charges.charge_type WHERE charge_amount > 1000)",
    "SELECT name FROM dogs WHERE dog_id IN (SELECT dog_id FROM treatments GROUP BY dog_id HAVING SUM(cost_of_treatment) >= 1000)",
    "SELECT name FROM dogs WHERE dog_id NOT IN (SELECT dog_id FROM treatments JOIN charges ON treatments.treatment_type_code = charges.charge_type WHERE charge_amount > 1000)",
    "SELECT professional_id, role_code, first_name FROM professionals WHERE professional_id IN (SELECT professional_id FROM treatments GROUP BY professional_id HAVING COUNT(*) > 2)",
    "SELECT professional_id, role_code, first_name FROM professionals WHERE professional_id IN (SELECT professional_id FROM treatments GROUP BY professional_id HAVING COUNT(*) < 2)",
    "SELECT professional_id, role_code, first_name FROM professionals WHERE professional_id IN (SELECT professional_id FROM treatments GROUP BY professional_id HAVING COUNT(*) <= 2)",
    "SELECT professional_id, role_code, first_name FROM professionals WHERE professional_id IN (SELECT professional_id FROM treatments GROUP BY professional_id HAVING COUNT(*) <= 2)",
    "SELECT professional_id, cell_number FROM professionals WHERE professional_id IN (SELECT professional_id FROM treatments GROUP BY professional_id HAVING COUNT(DISTINCT treatment_type_code) > 2)",
    "SELECT professional_id, cell_number FROM professionals WHERE professional_id IN (SELECT professional_id FROM treatments GROUP BY professional_id HAVING COUNT(DISTINCT treatment_type_code) < 2)",
    "SELECT professional_id, cell_number FROM professionals WHERE professional_id IN (     SELECT professional_id     FROM treatments     GROUP BY professional_id     HAVING COUNT(DISTINCT treatment_type_code) <= 2 )",
    "SELECT professional_id, cell_number FROM professionals WHERE professional_id IN (SELECT professional_id FROM treatments GROUP BY professional_id HAVING COUNT(DISTINCT treatment_type_code) <= 2)",
    "SELECT COUNT(*) FROM dogs WHERE age > (SELECT AVG(age) FROM dogs)",
    "SELECT COUNT(*) FROM dogs WHERE age > (SELECT AVG(age) FROM dogs)",
    "SELECT DISTINCT singer.name FROM singer JOIN song ON singer.singer_id = song.singer_id WHERE song.sales < 300000",
    "SELECT DISTINCT singer.name FROM singer JOIN song ON singer.singer_id = song.singer_id WHERE song.sales <= 300000",
    "SELECT DISTINCT name FROM singer WHERE singer_id IN (SELECT singer_id FROM song WHERE sales < 300000)",
    "SELECT name FROM singer WHERE singer_id IN (SELECT singer_id FROM song WHERE sales <= 300000)",
    "SELECT DISTINCT name FROM singer WHERE singer_id IN (SELECT singer_id FROM song)",
    "SELECT name FROM singer WHERE singer_id IN (SELECT singer_id FROM song GROUP BY singer_id HAVING COUNT(*) <= 1)",
    "SELECT DISTINCT name FROM singer WHERE singer_id IN (SELECT DISTINCT singer_id FROM song)",
    "SELECT name FROM singer WHERE singer_id IN (SELECT singer_id FROM song GROUP BY singer_id HAVING COUNT(*) <= 1)",
    "SELECT property_name FROM properties WHERE (property_type_code = 'APT' OR property_type_code = 'HSE') AND room_count < 1",
    "SELECT property_name FROM properties WHERE (property_type_code = 'APT' OR property_type_code = 'HSE') AND room_count <= 1"
]