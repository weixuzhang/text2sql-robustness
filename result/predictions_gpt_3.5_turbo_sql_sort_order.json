[
    "SELECT name, country, age FROM singer ORDER BY age ASC",
    "SELECT name, country, age FROM singer ORDER BY age ASC",
    "SELECT singer.name, singer.song_release_year FROM singer WHERE singer.age = (SELECT MIN(age) FROM singer)",
    "SELECT song_name, song_release_year FROM singer WHERE age = (SELECT MAX(age) FROM singer)",
    "SELECT name, capacity FROM stadium WHERE average = (SELECT MIN(average) FROM stadium)",
    "SELECT name, capacity FROM stadium WHERE average = (SELECT MIN(average) FROM stadium)",
    "SELECT name, capacity FROM stadium WHERE stadium_id = (SELECT stadium_id FROM concert WHERE year >= 2014 GROUP BY stadium_id ORDER BY COUNT(*) ASC LIMIT 1)",
    "SELECT name, capacity FROM stadium WHERE stadium_id = (SELECT stadium_id FROM concert WHERE year > 2013 GROUP BY stadium_id ORDER BY COUNT(*) ASC LIMIT 1)",
    "SELECT year FROM concert GROUP BY year ORDER BY COUNT(*) ASC LIMIT 1",
    "SELECT year FROM concert GROUP BY year ORDER BY COUNT(*) ASC LIMIT 1",
    "SELECT MAX(weight) FROM pets WHERE pettype = 'dog'",
    "SELECT MAX(weight) FROM pets",
    "SELECT pettype, weight FROM pets WHERE pet_age = (SELECT MAX(pet_age) FROM pets)",
    "SELECT pettype, weight FROM pets WHERE pet_age = (SELECT MAX(pet_age) FROM pets)",
    "SELECT model FROM car_names JOIN cars_data ON car_names.makeid = cars_data.id ORDER BY horsepower DESC LIMIT 1",
    "SELECT model FROM car_names  JOIN cars_data ON car_names.makeid = cars_data.id  WHERE horsepower = (SELECT MAX(horsepower) FROM cars_data)",
    "SELECT countries.countryname FROM countries LEFT JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryname ORDER BY COUNT(car_makers.id) LIMIT 1;",
    "SELECT countryname FROM countries  WHERE countryid = (SELECT country FROM car_makers                     GROUP BY country                     ORDER BY COUNT(DISTINCT maker) ASC                     LIMIT 1)",
    "SELECT MIN(horsepower), make FROM cars_data  JOIN car_names ON cars_data.id = car_names.makeid  JOIN model_list ON car_names.model = model_list.model  WHERE cylinders = 3  GROUP BY make",
    "SELECT MIN(horsepower), maker FROM cars_data  JOIN model_list ON cars_data.model = model_list.modelid  JOIN car_makers ON model_list.maker = car_makers.id  WHERE cylinders = 3  GROUP BY maker  ORDER BY MIN(horsepower) LIMIT 1",
    "SELECT model FROM model_list JOIN cars_data ON model_list.modelid = cars_data.id ORDER BY mpg DESC LIMIT 1",
    "SELECT model FROM model_list JOIN cars_data ON model_list.modelid = cars_data.id ORDER BY mpg ASC LIMIT 1",
    "SELECT model FROM model_list WHERE maker = (     SELECT maker     FROM car_makers     WHERE id = (         SELECT makeid         FROM cars_data         ORDER BY makeid ASC         LIMIT 1     ) ) ORDER BY model ASC LIMIT 1",
    "SELECT maker, model FROM model_list GROUP BY maker, model HAVING COUNT(DISTINCT modelid) = (SELECT MIN(cnt) FROM (SELECT COUNT(DISTINCT modelid) AS cnt FROM model_list GROUP BY maker) AS t)",
    "SELECT horsepower FROM cars_data WHERE accelerate = (SELECT MIN(accelerate) FROM cars_data)",
    "SELECT COUNT(*) FROM cars_data WHERE accelerate > (SELECT MIN(accelerate) FROM cars_data WHERE horsepower = (SELECT MIN(horsepower) FROM cars_data))",
    "SELECT COUNT(*) FROM cars_data WHERE accelerate > (SELECT MIN(accelerate) FROM cars_data WHERE horsepower = (SELECT MIN(horsepower) FROM cars_data))",
    "SELECT model FROM model_list  WHERE modelid IN (SELECT makeid FROM car_names WHERE cylinders = 4)  ORDER BY horsepower ASC LIMIT 1",
    "SELECT model FROM model_list WHERE cylinders = 4 ORDER BY horsepower ASC LIMIT 1",
    "SELECT airline FROM flights GROUP BY airline ORDER BY COUNT(*) ASC LIMIT 1",
    "SELECT airline FROM flights GROUP BY airline ORDER BY COUNT(*) ASC LIMIT 1;",
    "SELECT abbreviation, country FROM airlines WHERE uid = (SELECT airline FROM flights GROUP BY airline ORDER BY COUNT(*) DESC LIMIT 1)",
    "SELECT name FROM employee ORDER BY age DESC",
    "SELECT name FROM employee ORDER BY age DESC",
    "SELECT manager_name, district FROM shop WHERE number_products = (SELECT MIN(number_products) FROM shop)",
    "SELECT manager_name, district FROM shop WHERE number_products = (SELECT MIN(number_products) FROM shop)",
    "SELECT name, location, district FROM shop ORDER BY number_products ASC",
    "SELECT name, location, district FROM shop ORDER BY number_products ASC",
    "SELECT employee.name FROM employee LEFT JOIN evaluation ON employee.employee_id = evaluation.employee_id GROUP BY employee.employee_id ORDER BY COUNT(evaluation.bonus) ASC LIMIT 1",
    "SELECT employee.name FROM employee LEFT JOIN evaluation ON employee.employee_id = evaluation.employee_id GROUP BY employee.employee_id ORDER BY COUNT(evaluation.bonus) ASC LIMIT 1",
    "SELECT employee.name FROM employee JOIN evaluation ON employee.employee_id = evaluation.employee_id ORDER BY evaluation.bonus ASC LIMIT 1",
    "SELECT name FROM shop WHERE shop_id = (SELECT shop_id FROM hiring GROUP BY shop_id ORDER BY COUNT(*) LIMIT 1)",
    "SELECT name FROM shop WHERE number_products = (SELECT MIN(number_products) FROM shop)",
    "SELECT templates.template_id, templates.template_type_code FROM templates WHERE templates.template_id = (     SELECT documents.template_id     FROM documents     GROUP BY documents.template_id     ORDER BY COUNT(*) ASC     LIMIT 1 )",
    "SELECT template_id, template_type_code FROM templates WHERE template_id = (     SELECT template_id     FROM documents     GROUP BY template_id     ORDER BY COUNT(*) ASC     LIMIT 1 )",
    "SELECT template_type_code FROM ref_template_types  ORDER BY (SELECT COUNT(*) FROM templates WHERE templates.template_type_code = ref_template_types.template_type_code) ASC  LIMIT 1;",
    "SELECT template_type_code  FROM ref_template_types  WHERE template_type_code = (     SELECT template_type_code      FROM templates      GROUP BY template_type_code      ORDER BY COUNT(*) ASC      LIMIT 1 )",
    "SELECT template_type_code FROM ref_template_types WHERE template_type_code IN (     SELECT template_type_code     FROM templates     GROUP BY template_type_code     HAVING COUNT(*) = (         SELECT MIN(cnt)         FROM (             SELECT COUNT(*) AS cnt             FROM templates             GROUP BY template_type_code         ) AS counts     ) )",
    "SELECT template_type_code FROM ref_template_types JOIN templates ON ref_template_types.template_type_code = templates.template_type_code JOIN documents ON templates.template_id = documents.template_id GROUP BY template_type_code ORDER BY COUNT(DISTINCT documents.document_id) LIMIT 1;",
    "SELECT document_id, document_name FROM documents WHERE document_id IN (   SELECT document_id   FROM paragraphs   GROUP BY document_id   HAVING COUNT(*) = (     SELECT MIN(cnt)     FROM (       SELECT COUNT(*) AS cnt       FROM paragraphs       GROUP BY document_id     ) AS counts   ) )",
    "SELECT document_id, document_name FROM documents WHERE document_id = (SELECT document_id FROM paragraphs GROUP BY document_id ORDER BY COUNT(*) LIMIT 1)",
    "SELECT document_id FROM paragraphs GROUP BY document_id ORDER BY COUNT(*) DESC LIMIT 1",
    "SELECT name FROM teacher ORDER BY age DESC",
    "SELECT name FROM teacher ORDER BY age DESC",
    "SELECT hometown FROM teacher WHERE age = (SELECT MAX(age) FROM teacher)",
    "SELECT hometown FROM teacher ORDER BY age DESC LIMIT 1",
    "SELECT hometown, COUNT(*) as count_hometown FROM teacher GROUP BY hometown ORDER BY count_hometown ASC LIMIT 1;",
    "SELECT hometown, COUNT(*) as count FROM teacher GROUP BY hometown ORDER BY count ASC LIMIT 1",
    "SELECT teacher.name, course.course FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course_arrange.course_id = course.course_id ORDER BY teacher.name DESC",
    "SELECT teacher.name, course.course FROM teacher JOIN course_teach ON teacher.teacher_id = course_teach.teacher_id JOIN course ON course_teach.course_id = course.course_id ORDER BY teacher.name DESC",
    "SELECT name FROM visitor WHERE level_of_membership > 4 ORDER BY level_of_membership ASC",
    "SELECT name, level_of_membership FROM visitor WHERE level_of_membership > 4 ORDER BY age ASC",
    "SELECT museum_id, name FROM museum ORDER BY num_of_staff ASC LIMIT 1",
    "SELECT visitor.id, visitor.name, visitor.level_of_membership  FROM visitor  JOIN visit ON visitor.id = visit.visitor_id  GROUP BY visitor.id, visitor.name, visitor.level_of_membership  HAVING SUM(visit.total_spent) = (SELECT MIN(total_spent_sum)                                    FROM (SELECT SUM(total_spent) AS total_spent_sum                                          FROM visit                                          GROUP BY visitor_id) AS visitor_total_spent_sum)",
    "SELECT museum.museum_id, museum.name  FROM museum  LEFT JOIN visit ON museum.museum_id = visit.museum_id  GROUP BY museum.museum_id  ORDER BY COUNT(visit.museum_id) ASC  LIMIT 1;",
    "SELECT visitor.name, visitor.age FROM visitor JOIN visit ON visitor.id = visit.visitor_id GROUP BY visitor.id ORDER BY SUM(visit.num_of_ticket) ASC LIMIT 1;",
    "SELECT first_name, country_code FROM players WHERE player_id = (SELECT player_id FROM rankings GROUP BY player_id ORDER BY COUNT(*) LIMIT 1)",
    "SELECT first_name, country_code FROM players WHERE player_id = (SELECT player_id FROM rankings GROUP BY player_id ORDER BY COUNT(*) ASC LIMIT 1)",
    "SELECT year FROM matches GROUP BY year ORDER BY COUNT(*) ASC LIMIT 1",
    "SELECT year, COUNT(*) AS num_matches FROM matches GROUP BY year ORDER BY num_matches ASC LIMIT 1",
    "SELECT winner_name, winner_rank_points FROM matches WHERE winner_name = (SELECT winner_name FROM matches GROUP BY winner_name ORDER BY COUNT(*) ASC LIMIT 1) ORDER BY winner_rank_points DESC LIMIT 1",
    "SELECT p.first_name || ' ' || p.last_name, r.ranking_points FROM players p JOIN rankings r ON p.player_id = r.player_id WHERE p.player_id IN (     SELECT winner_id     FROM matches     GROUP BY winner_id     HAVING COUNT(*) = (         SELECT MIN(wins)         FROM (             SELECT COUNT(*) AS wins             FROM matches             GROUP BY winner_id         )     ) ) ORDER BY r.ranking_points DESC LIMIT 1;",
    "SELECT winner_name FROM matches WHERE tourney_name = 'Australian Open' AND winner_rank_points = (SELECT MIN(winner_rank_points) FROM matches WHERE tourney_name = 'Australian Open')",
    "SELECT winner_name FROM matches WHERE tourney_name = 'Australian Open' AND winner_rank_points = (SELECT MIN(winner_rank_points) FROM matches WHERE tourney_name = 'Australian Open')",
    "SELECT loser_name, winner_name FROM matches WHERE minutes = (SELECT MIN(minutes) FROM matches)",
    "SELECT winner_name, loser_name FROM matches WHERE minutes = (SELECT MIN(minutes) FROM matches)",
    "SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) ASC LIMIT 1",
    "SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) ASC LIMIT 1",
    "SELECT winner_name, winner_rank FROM matches ORDER BY winner_age DESC LIMIT 3",
    "SELECT winner_name, winner_rank FROM matches ORDER BY winner_age DESC LIMIT 3",
    "SELECT first_name, country_code, birth_date FROM players WHERE player_id = (SELECT winner_id FROM matches ORDER BY loser_rank_points ASC LIMIT 1)",
    "SELECT first_name, country_code, birth_date FROM players WHERE player_id = (SELECT loser_id FROM matches ORDER BY loser_rank_points ASC LIMIT 1)",
    "SELECT name, tonnage FROM ship ORDER BY name ASC",
    "SELECT ship.id, ship.name FROM ship JOIN death ON ship.id = death.caused_by_ship_id GROUP BY ship.id, ship.name ORDER BY SUM(death.injured) ASC LIMIT 1;",
    "SELECT department_id, department_name FROM departments WHERE department_id = (SELECT department_id FROM degree_programs GROUP BY department_id ORDER BY COUNT(*) ASC LIMIT 1)",
    "SELECT department_id, department_name FROM departments WHERE department_id = (SELECT department_id FROM degree_programs GROUP BY department_id ORDER BY COUNT(*) ASC LIMIT 1)",
    "SELECT section_name FROM sections ORDER BY section_name ASC",
    "SELECT section_name FROM sections ORDER BY section_name ASC",
    "SELECT semester_id, semester_name FROM student_enrolment JOIN semesters ON student_enrolment.semester_id = semesters.semester_id GROUP BY semester_id, semester_name ORDER BY COUNT(student_id) LIMIT 1;",
    "SELECT s.semester_id, s.semester_name, se.degree_program_id, COUNT(*) AS num_students_registered FROM semesters s JOIN student_enrolment se ON s.semester_id = se.semester_id JOIN student_enrolment_courses sec ON se.student_enrolment_id = sec.student_enrolment_id GROUP BY s.semester_id, s.semester_name, se.degree_program_id HAVING COUNT(*) = (   SELECT MIN(num_students_registered)   FROM (     SELECT s.semester_id, se.degree_program_id, COUNT(*) AS num_students_registered     FROM semesters s     JOIN student_enrolment se ON s.semester_id = se.semester_id     JOIN student_enrolment_courses sec ON se.student_enrolment_id = sec.student_enrolment_id     GROUP BY s.semester_id, se.degree_program_id   ) AS num_students_registered_per_semester_per_degree_program   WHERE num_students_registered_per_semester",
    "SELECT degree_programs.degree_summary_name, COUNT(*) AS num_students_enrolled FROM student_enrolment JOIN degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_program_id GROUP BY degree_programs.degree_summary_name ORDER BY num_students_enrolled ASC LIMIT 1;",
    "SELECT degree_summary_name FROM degree_programs  WHERE degree_program_id IN (     SELECT degree_program_id FROM student_enrolment      GROUP BY degree_program_id      ORDER BY COUNT(*) ASC      LIMIT 1 )",
    "SELECT degree_programs.degree_program_id, degree_programs.degree_summary_name FROM degree_programs JOIN student_enrolment ON degree_programs.degree_program_id = student_enrolment.degree_program_id GROUP BY degree_programs.degree_program_id, degree_programs.degree_summary_name ORDER BY COUNT(student_enrolment.student_id) LIMIT 1",
    "SELECT degree_program_id, degree_summary_name FROM degree_programs WHERE degree_program_id = (SELECT degree_program_id FROM student_enrolment GROUP BY degree_program_id ORDER BY COUNT(*) ASC LIMIT 1)",
    "SELECT student.student_id, student.first_name, student.middle_name, student.last_name, COUNT(student_enrolment.student_enrolment_id) AS num_enrollments FROM student JOIN student_enrolment ON student.student_id = student_enrolment.student_id GROUP BY student.student_id ORDER BY num_enrollments ASC LIMIT 1;",
    "SELECT s.first_name, s.middle_name, s.last_name, s.student_id, COUNT(*) AS num_enrollments FROM students s JOIN student_enrolment se ON s.student_id = se.student_id GROUP BY s.student_id HAVING COUNT(*) = (SELECT MIN(num_enrollments) FROM (SELECT COUNT(*) AS num_enrollments FROM student_enrolment GROUP BY student_id) AS t)  LIMIT 1",
    "SELECT course_name FROM courses WHERE course_id = (SELECT course_id FROM student_enrolment_courses GROUP BY course_id ORDER BY COUNT(*) ASC LIMIT 1)",
    "SELECT course_name FROM courses WHERE course_id = (SELECT course_id FROM student_enrolment_courses GROUP BY course_id ORDER BY COUNT(*) ASC LIMIT 1)",
    "SELECT first_name, middle_name, last_name FROM students ORDER BY date_first_registered DESC LIMIT 1",
    "SELECT first_name, middle_name, last_name FROM students  INNER JOIN student_enrolment ON students.student_id = student_enrolment.student_id  INNER JOIN student_enrolment_courses ON student_enrolment.student_enrolment_id = student_enrolment_courses.student_enrolment_id  INNER JOIN transcripts ON student_enrolment_courses.student_course_id = transcripts.student_course_id  ORDER BY transcript_date DESC LIMIT 1",
    "SELECT current_address_id AS address_id, line_1, line_2, line_3 FROM students s JOIN addresses a ON s.current_address_id = a.address_id GROUP BY current_address_id, line_1, line_2, line_3 ORDER BY COUNT(*) ASC LIMIT 1",
    "SELECT address_id, line_1, line_2 FROM addresses WHERE address_id = (SELECT current_address_id FROM students GROUP BY current_address_id ORDER BY COUNT(*) ASC LIMIT 1)",
    "SELECT MAX(transcript_date), * FROM transcripts",
    "SELECT student_course_id, COUNT(DISTINCT transcript_id) AS num_transcripts FROM transcript_contents GROUP BY student_course_id HAVING num_transcripts >= 2;",
    "SELECT MIN(enrollment_count), course_id FROM (SELECT COUNT(DISTINCT student_course_id) AS enrollment_count, course_id FROM student_enrolment_courses GROUP BY course_id) AS enrollment_counts",
    "SELECT transcript_id, transcript_date FROM transcripts WHERE transcript_id IN (     SELECT transcript_id     FROM transcript_contents     GROUP BY transcript_id     ORDER BY COUNT(*) DESC     LIMIT 1 )",
    "SELECT transcript_id, transcript_date FROM transcripts WHERE transcript_id = (SELECT transcript_id FROM transcript_contents GROUP BY transcript_id ORDER BY COUNT(*) DESC LIMIT 1)",
    "SELECT * FROM students ORDER BY last_name, first_name",
    "SELECT * FROM students ORDER BY last_name, first_name ASC",
    "SELECT title FROM cartoon ORDER BY title DESC",
    "SELECT country, COUNT(*) AS num_channels FROM tv_channel GROUP BY country ORDER BY num_channels ASC LIMIT 1;",
    "SELECT country, COUNT(*) AS num_channels FROM tv_channel GROUP BY country ORDER BY num_channels ASC LIMIT 1;",
    "SELECT language, COUNT(*) AS num_channels FROM tv_series GROUP BY language ORDER BY num_channels DESC LIMIT 1;",
    "SELECT language, COUNT(*) AS num_channels FROM tv_channel GROUP BY language ORDER BY num_channels DESC LIMIT 1;",
    "SELECT tv_series.episode, tv_series.rating FROM tv_series ORDER BY tv_series.rating ASC LIMIT 3",
    "SELECT episode, rating FROM tv_series ORDER BY rating LIMIT 3",
    "SELECT production_code, channel FROM cartoon WHERE original_air_date = (SELECT MIN(original_air_date) FROM cartoon)",
    "SELECT production_code, channel FROM cartoon ORDER BY original_air_date ASC LIMIT 1",
    "SELECT earnings FROM poker_player ORDER BY earnings ASC",
    "SELECT earnings FROM poker_player ORDER BY earnings ASC",
    "SELECT money_rank FROM poker_player ORDER BY earnings ASC LIMIT 1",
    "SELECT people.name FROM poker_player JOIN people ON poker_player.people_id = people.people_id ORDER BY poker_player.final_table_made DESC",
    "SELECT people.name FROM poker_player JOIN people ON poker_player.people_id = people.people_id ORDER BY poker_player.final_table_made DESC",
    "SELECT birth_date FROM people WHERE people_id = (SELECT people_id FROM poker_player ORDER BY earnings DESC LIMIT 1)",
    "SELECT birth_date FROM people WHERE people_id = (SELECT people_id FROM poker_player ORDER BY earnings DESC LIMIT 1)",
    "SELECT people.name FROM poker_player JOIN people ON poker_player.people_id = people.people_id ORDER BY poker_player.earnings ASC",
    "SELECT people.name FROM poker_player JOIN people ON poker_player.people_id = people.people_id ORDER BY poker_player.earnings ASC",
    "SELECT nationality, COUNT(*) AS count FROM people GROUP BY nationality ORDER BY count ASC LIMIT 1",
    "SELECT nationality FROM people GROUP BY nationality ORDER BY COUNT(*) ASC LIMIT 1",
    "SELECT name, birth_date FROM people ORDER BY name DESC",
    "SELECT name, birth_date FROM people ORDER BY name DESC",
    "SELECT contestant_number, contestant_name FROM contestants ORDER BY contestant_name ASC",
    "SELECT contestant_number, contestant_name FROM contestants WHERE contestant_number = (SELECT contestant_number FROM votes GROUP BY contestant_number ORDER BY COUNT(*) DESC LIMIT 1)",
    "SELECT area_code FROM area_code_state WHERE area_code IN (     SELECT phone_number/10000000     FROM votes     GROUP BY phone_number/10000000     HAVING COUNT(*) = (         SELECT MIN(vote_count)         FROM (             SELECT COUNT(*) AS vote_count             FROM votes             GROUP BY phone_number/10000000         ) AS vote_counts     ) ) LIMIT 1;",
    "SELECT language FROM countrylanguage WHERE countrycode = 'ABW' ORDER BY percentage ASC LIMIT 1",
    "SELECT name FROM country WHERE continent = 'Asia' ORDER BY lifeexpectancy DESC LIMIT 1",
    "SELECT name FROM country WHERE continent = 'Asia' ORDER BY lifeexpectancy DESC LIMIT 1",
    "SELECT name FROM country WHERE code = (SELECT countrycode FROM countrylanguage GROUP BY countrycode ORDER BY COUNT(*) LIMIT 1)",
    "SELECT name FROM country ORDER BY (SELECT COUNT(DISTINCT language) FROM countrylanguage WHERE countrycode = code) ASC LIMIT 1",
    "SELECT continent FROM country GROUP BY continent ORDER BY COUNT(DISTINCT language) ASC LIMIT 1;",
    "SELECT continent, COUNT(language) AS num_languages FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY continent ORDER BY num_languages ASC LIMIT 1;",
    "SELECT language FROM countrylanguage WHERE continent = 'Asia' ORDER BY percentage ASC LIMIT 1",
    "SELECT language FROM countrylanguage WHERE countrycode IN (     SELECT code     FROM country     WHERE continent = 'Asia'     ORDER BY population ASC     LIMIT 1 ) ORDER BY percentage ASC LIMIT 1",
    "SELECT city.name FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode WHERE language = 'English' ORDER BY population ASC LIMIT 1",
    "SELECT city.name FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode WHERE language = 'English' ORDER BY population ASC LIMIT 1",
    "SELECT name, population, lifeexpectancy  FROM country  WHERE continent = 'Asia'  ORDER BY surfacearea ASC  LIMIT 1",
    "SELECT name, population, lifeexpectancy FROM country WHERE continent = 'Asia' AND surfacearea = (SELECT MIN(surfacearea) FROM country WHERE continent = 'Asia')",
    "SELECT name, indepyear, surfacearea FROM country ORDER BY population DESC LIMIT 1",
    "SELECT c.name, c.indepyear, c.surfacearea  FROM country c  WHERE c.population = (SELECT MAX(c2.population) FROM country c2)",
    "SELECT population, name, headofstate FROM country WHERE surfacearea = (SELECT MIN(surfacearea) FROM country)",
    "SELECT name, population, headofstate FROM country ORDER BY surfacearea ASC LIMIT 1",
    "SELECT name, surfacearea FROM country ORDER BY surfacearea ASC LIMIT 5",
    "SELECT name, surfacearea FROM country ORDER BY surfacearea ASC LIMIT 5",
    "SELECT name FROM country ORDER BY population ASC LIMIT 3",
    "SELECT name FROM country ORDER BY population ASC LIMIT 3",
    "SELECT name FROM country ORDER BY population DESC LIMIT 3",
    "SELECT language FROM countrylanguage GROUP BY language HAVING COUNT(DISTINCT countrycode) = (     SELECT MIN(num_countries)     FROM (         SELECT COUNT(DISTINCT countrycode) AS num_countries         FROM countrylanguage         GROUP BY language     ) )",
    "SELECT language FROM countrylanguage GROUP BY language ORDER BY COUNT(DISTINCT countrycode) LIMIT 1",
    "SELECT name FROM conductor ORDER BY age DESC",
    "SELECT record_company FROM orchestra ORDER BY year_of_founded ASC",
    "SELECT record_company FROM orchestra WHERE orchestra = 'orchestra' ORDER BY year_of_founded ASC",
    "SELECT name FROM conductor ORDER BY year_of_work ASC",
    "SELECT name FROM conductor ORDER BY year_of_work ASC",
    "SELECT name FROM conductor ORDER BY year_of_work ASC LIMIT 1",
    "SELECT name FROM conductor ORDER BY year_of_work ASC LIMIT 1",
    "SELECT conductor.name FROM conductor LEFT JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id GROUP BY conductor.conductor_id ORDER BY COUNT(orchestra.orchestra_id) LIMIT 1;",
    "SELECT name FROM conductor ORDER BY (SELECT COUNT(*) FROM orchestra WHERE orchestra.conductor_id = conductor.conductor_id) ASC LIMIT 1",
    "SELECT orchestra, COUNT(*) as count FROM orchestra GROUP BY orchestra ORDER BY count DESC",
    "SELECT record_company FROM orchestra GROUP BY record_company HAVING COUNT(DISTINCT orchestra_id) = (     SELECT MIN(cnt)     FROM (         SELECT COUNT(DISTINCT orchestra_id) AS cnt         FROM orchestra         GROUP BY record_company     ) AS counts )",
    "SELECT record_company FROM orchestra GROUP BY record_company HAVING COUNT(DISTINCT orchestra_id) = (     SELECT MIN(num_orchestras)     FROM (         SELECT COUNT(DISTINCT orchestra_id) AS num_orchestras         FROM orchestra         GROUP BY record_company     ) AS num_orchestras )",
    "SELECT grade FROM highschooler GROUP BY grade ORDER BY COUNT(*) ASC LIMIT 1;",
    "SELECT grade FROM highschooler GROUP BY grade ORDER BY COUNT(*) LIMIT 1",
    "SELECT h.name  FROM highschooler h  WHERE h.id IN (     SELECT f.student_id      FROM friend f      GROUP BY f.student_id      ORDER BY COUNT(*) ASC      LIMIT 1 )",
    "SELECT name FROM highschooler WHERE id IN (SELECT student_id FROM friend GROUP BY student_id ORDER BY COUNT(friend_id) LIMIT 1)",
    "SELECT owner_id, first_name, last_name FROM owners WHERE owner_id IN (SELECT owner_id FROM dogs GROUP BY owner_id ORDER BY COUNT(*) ASC LIMIT 1)",
    "SELECT owner_id, first_name, last_name FROM owners WHERE owner_id = (SELECT owner_id FROM dogs GROUP BY owner_id ORDER BY COUNT(*) ASC LIMIT 1)",
    "SELECT breed_name FROM breeds WHERE breed_code = (SELECT breed_code FROM dogs GROUP BY breed_code ORDER BY COUNT(*) ASC LIMIT 1)",
    "SELECT breed_name FROM breeds WHERE breed_code = (SELECT breed_code FROM dogs GROUP BY breed_code ORDER BY COUNT(*) ASC LIMIT 1)",
    "SELECT owners.owner_id, owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id JOIN treatments ON dogs.dog_id = treatments.dog_id GROUP BY owners.owner_id ORDER BY SUM(treatments.cost_of_treatment) ASC LIMIT 1",
    "SELECT owner_id, last_name FROM owners WHERE owner_id = (SELECT owner_id FROM dogs GROUP BY owner_id ORDER BY SUM((SELECT charge_amount FROM charges WHERE charge_type = 'treatment') * (SELECT COUNT(*) FROM treatments WHERE treatments.dog_id = dogs.dog_id)) ASC LIMIT 1)",
    "SELECT treatment_types.treatment_type_description  FROM treatment_types  JOIN treatments ON treatment_types.treatment_type_code = treatments.treatment_type_code  GROUP BY treatments.treatment_type_code  ORDER BY SUM(treatments.cost_of_treatment) DESC  LIMIT 1",
    "SELECT treatment_types.treatment_type_description  FROM treatment_types  JOIN treatments ON treatment_types.treatment_type_code = treatments.treatment_type_code  GROUP BY treatments.treatment_type_code  ORDER BY SUM(treatments.cost_of_treatment) DESC  LIMIT 1;",
    "SELECT owner_id, zip_code FROM owners WHERE owner_id IN (     SELECT owner_id     FROM dogs     GROUP BY owner_id     ORDER BY SUM(         SELECT MIN(charge_amount)         FROM charges         WHERE charge_type = 'dog'     )     LIMIT 1 )",
    "SELECT owner_id, zip_code FROM owners WHERE owner_id IN (     SELECT owner_id     FROM dogs     GROUP BY owner_id     ORDER BY SUM(         (SELECT charge_amount FROM charges WHERE charge_type = 'adoption') +         (SELECT charge_amount FROM charges WHERE charge_type = 'treatment') *          (SELECT COUNT(*) FROM treatments WHERE dogs.dog_id = treatments.dog_id)     ) ASC     LIMIT 1 )",
    "select min(cost_of_treatment) from treatments",
    "SELECT cost_of_treatment FROM treatments ORDER BY date_of_treatment ASC LIMIT 1",
    "SELECT name FROM singer ORDER BY net_worth_millions DESC",
    "SELECT name FROM singer ORDER BY net_worth_millions DESC",
    "SELECT name FROM singer ORDER BY net_worth_millions ASC LIMIT 1",
    "SELECT name FROM singer ORDER BY net_worth_millions ASC LIMIT 1",
    "SELECT citizenship, COUNT(*) AS count FROM singer GROUP BY citizenship ORDER BY count ASC LIMIT 1",
    "SELECT citizenship, COUNT(*) AS count FROM singer GROUP BY citizenship ORDER BY count ASC LIMIT 1"
]