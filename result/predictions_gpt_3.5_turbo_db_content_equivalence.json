[
    "SELECT first_name || ' ' || last_name AS name, country, age  FROM singer  ORDER BY age DESC",
    "SELECT first_name, last_name, country, age FROM singer ORDER BY age DESC",
    "SELECT singer.first_name, singer.last_name, COUNT(concert_singer_0.singer_in_concert.concert_id) AS num_concerts FROM concert_singer_0.singer JOIN concert_singer_0.singer_in_concert ON singer.singer_id = concert_singer_0.singer_in_concert.singer_id GROUP BY singer.first_name, singer.last_name",
    "SELECT singer.first_name, singer.last_name, COUNT(concert_singer_0.singer_in_concert.concert_id) AS num_concerts FROM concert_singer_0.singer JOIN concert_singer_0.singer_in_concert ON singer.singer_id = concert_singer_0.singer_in_concert.singer_id GROUP BY singer.first_name, singer.last_name",
    "SELECT DISTINCT singer.first_name, singer.last_name  FROM singer  JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id  JOIN concert ON singer_in_concert.concert_id = concert.concert_id  WHERE concert.year = 2014",
    "SELECT DISTINCT singer.first_name, singer.last_name  FROM singer  JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id  JOIN concert ON concert.concert_id = singer_in_concert.concert_id  WHERE concert.year = 2014",
    "SELECT first_name, last_name, country FROM singer WHERE song_name LIKE '%Hey%'",
    "SELECT singer.first_name, singer.last_name, singer.country  FROM singer  JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id  JOIN concert ON singer_in_concert.concert_id = concert.concert_id  WHERE song_name LIKE '%Hey%'",
    "SELECT name, song_release_year FROM singer WHERE birthyear = (SELECT MIN(birthyear) FROM singer)",
    "SELECT song_name, song_release_year FROM singer WHERE birthyear = (SELECT MIN(birthyear) FROM singer)",
    "SELECT song_name FROM singer WHERE birthyear < (SELECT AVG(birthyear) FROM singer)",
    "SELECT DISTINCT song_name FROM singer WHERE birthyear < (SELECT AVG(birthyear) FROM singer)",
    "SELECT first_name, last_name, song_name, song_release_year FROM singer WHERE birthyear = (SELECT MIN(birthyear) FROM singer)",
    "SELECT song_name, song_release_year FROM singer WHERE birthyear = (SELECT MIN(birthyear) FROM singer)",
    "SELECT song_name FROM singer WHERE birthyear < (SELECT AVG(birthyear) FROM singer)",
    "SELECT song_name FROM singer WHERE birthyear < (SELECT AVG(birthyear) FROM singer)",
    "SELECT singer.first_name, singer.last_name, COUNT(concert.concert_id) AS num_concerts FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON concert.concert_id = singer_in_concert.concert_id GROUP BY singer.singer_id",
    "SELECT singer.first_name, singer.last_name, COUNT(concert_singer_5.singer_in_concert.concert_id) AS num_concerts FROM concert_singer_5.singer JOIN concert_singer_5.singer_in_concert ON singer.singer_id = concert_singer_5.singer_in_concert.singer_id GROUP BY singer.first_name, singer.last_name",
    "SELECT DISTINCT singer.first_name, singer.last_name  FROM singer  JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id  JOIN concert ON singer_in_concert.concert_id = concert.concert_id  WHERE concert.year = 2014",
    "SELECT singer.first_name, singer.last_name  FROM singer  JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id  JOIN concert ON concert.concert_id = singer_in_concert.concert_id  WHERE concert.year = 2014",
    "SELECT first_name, last_name, country FROM singer WHERE song_name LIKE '%Hey%'",
    "SELECT first_name, last_name, country FROM singer WHERE song_name LIKE '%Hey%'",
    "SELECT MIN(weight) FROM pets WHERE is_dog = true AND birthyear = (SELECT MIN(birthyear) FROM pets WHERE is_dog = true)",
    "SELECT MIN(weight) FROM pets WHERE is_dog = true",
    "SELECT COUNT(*) FROM pets WHERE is_dog = 1 AND petid IN (SELECT petid FROM has_pet WHERE stuid IN (SELECT stuid FROM student WHERE is_male = 0))",
    "SELECT COUNT(*) FROM has_pet hp JOIN pets p ON hp.petid = p.petid JOIN student s ON hp.stuid = s.stuid WHERE s.is_male = false AND p.is_dog = true",
    "SELECT DISTINCT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.is_cat = 1 OR pets.is_dog = 1",
    "SELECT DISTINCT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.is_cat = 1 OR pets.is_dog = 1",
    "SELECT DISTINCT s.fname FROM student s, has_pet hp1, has_pet hp2, pets p1, pets p2 WHERE s.stuid = hp1.stuid AND hp1.petid = p1.petid AND p1.is_cat = 1 AND s.stuid = hp2.stuid AND hp2.petid = p2.petid AND p2.is_dog = 1",
    "SELECT DISTINCT student.fname FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.is_cat = 1 AND pets.is_dog = 1",
    "SELECT stuid FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE is_cat = 1)",
    "SELECT DISTINCT student.stuid FROM student LEFT JOIN has_pet ON student.stuid = has_pet.stuid LEFT JOIN pets ON has_pet.petid = pets.petid WHERE pets.is_cat = 0 OR pets.is_cat IS NULL",
    "SELECT MIN(weight) FROM pets",
    "SELECT MIN(weight) FROM pets",
    "SELECT pettype, weight FROM pets WHERE birthyear = (SELECT MIN(birthyear) FROM pets)",
    "SELECT pettype, weight FROM pets WHERE birthyear = (SELECT MIN(birthyear) FROM pets)",
    "SELECT COUNT(*) FROM pets p JOIN has_pet hp ON p.petid = hp.petid JOIN student s ON hp.stuid = s.stuid WHERE p.pettype = 'dog' AND s.is_male = 'F'",
    "SELECT COUNT(*) FROM has_pet  JOIN pets ON has_pet.petid = pets.petid  JOIN student ON has_pet.stuid = student.stuid  WHERE pets.pettype = 'dog' AND student.is_male = false",
    "SELECT COUNT(*) FROM pets p JOIN has_pet hp ON p.petid = hp.petid JOIN student s ON hp.stuid = s.stuid WHERE p.is_dog = 1 AND s.sex = 'F'",
    "SELECT COUNT(*) FROM has_pet hp JOIN pets p ON hp.petid = p.petid JOIN student s ON hp.stuid = s.stuid WHERE s.sex = 'female' AND p.is_dog = 1",
    "SELECT DISTINCT student.fname FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.is_cat = 1 OR pets.is_dog = 1",
    "SELECT DISTINCT fname FROM student WHERE stuid IN (SELECT stuid FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE is_cat = 1 OR is_dog = 1)",
    "SELECT DISTINCT s.fname FROM student s, has_pet hp1, has_pet hp2, pets p1, pets p2 WHERE s.stuid = hp1.stuid AND hp1.petid = p1.petid AND p1.is_cat = 1 AND s.stuid = hp2.stuid AND hp2.petid = p2.petid AND p2.is_dog = 1",
    "SELECT DISTINCT student.fname FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid  WHERE pets.is_cat = 1 AND pets.is_dog = 1",
    "SELECT stuid FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE is_cat = 1)",
    "SELECT DISTINCT student.stuid FROM student WHERE student.stuid NOT IN (SELECT has_pet.stuid FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE pets.is_cat = 1)",
    "SELECT s.lname FROM student s, has_pet hp, pets p WHERE s.stuid = hp.stuid AND hp.petid = p.petid AND p.is_cat = 1 AND p.pet_age = 3 ORDER BY p.petid DESC LIMIT 1",
    "SELECT lname FROM student WHERE stuid IN (SELECT stuid FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE is_cat = 1 AND pet_age = 3) ORDER BY stuid DESC LIMIT 1",
    "SELECT MIN(weight) FROM pets WHERE pettype = 'dog' AND birthyear = (SELECT MIN(birthyear) FROM pets WHERE pettype = 'dog')",
    "SELECT MIN(weight) FROM pets",
    "SELECT COUNT(*) FROM pets WHERE pettype = 'dog' AND petid IN (SELECT petid FROM has_pet WHERE stuid IN (SELECT stuid FROM student WHERE is_male = 'F'))",
    "SELECT COUNT(*) FROM pets p JOIN has_pet hp ON p.petid = hp.petid JOIN student s ON hp.stuid = s.stuid WHERE p.pettype = 'dog' AND s.is_male = false",
    "SELECT pettype, weight FROM pets WHERE birthyear = (SELECT MIN(birthyear) FROM pets)",
    "SELECT pettype, weight FROM pets WHERE birthyear = (SELECT MIN(birthyear) FROM pets)",
    "SELECT first_name, last_name FROM employee ORDER BY age ASC",
    "SELECT first_name, last_name FROM employee ORDER BY age ASC",
    "SELECT manager_first_name, district FROM shop ORDER BY number_products DESC LIMIT 1",
    "SELECT manager_first_name, manager_last_name, district FROM shop WHERE number_products = (SELECT MAX(number_products) FROM shop)",
    "SELECT employee.first_name, employee.last_name FROM employee JOIN evaluation ON employee.employee_id = evaluation.employee_id GROUP BY employee.employee_id ORDER BY COUNT(*) DESC LIMIT 1",
    "SELECT e.first_name, e.last_name FROM employee e JOIN evaluation ev ON e.employee_id = ev.employee_id GROUP BY e.employee_id ORDER BY COUNT(*) DESC LIMIT 1;",
    "SELECT e.first_name, e.last_name FROM employee e JOIN evaluation ev ON e.employee_id = ev.employee_id WHERE ev.bonus = (SELECT MAX(bonus) FROM evaluation)",
    "SELECT e.first_name, e.last_name FROM employee e JOIN evaluation ev ON e.employee_id = ev.employee_id ORDER BY ev.bonus DESC LIMIT 1;",
    "SELECT first_name, last_name FROM employee WHERE employee_id NOT IN (SELECT employee_id FROM evaluation)",
    "SELECT first_name, last_name FROM employee WHERE employee_id NOT IN (SELECT employee_id FROM evaluation)",
    "SELECT name FROM employee ORDER BY birthyear ASC",
    "SELECT name FROM employee ORDER BY birthyear ASC",
    "SELECT manager_first_name, district FROM shop ORDER BY number_products DESC LIMIT 1",
    "SELECT manager_first_name, district FROM shop WHERE number_products = (SELECT MAX(number_products) FROM shop)",
    "SELECT first_name, last_name FROM employee ORDER BY birthyear ASC",
    "SELECT first_name, last_name FROM employee ORDER BY birthyear ASC",
    "SELECT manager_first_name, district FROM shop WHERE number_products = (SELECT MAX(number_products) FROM shop)",
    "SELECT manager_first_name, manager_last_name, district FROM shop WHERE number_products = (SELECT MAX(number_products) FROM shop)",
    "SELECT e.first_name, e.last_name FROM employee e JOIN evaluation ev ON e.employee_id = ev.employee_id GROUP BY e.employee_id ORDER BY COUNT(*) DESC LIMIT 1;",
    "SELECT e.first_name, e.last_name FROM employee e JOIN evaluation ev ON e.employee_id = ev.employee_id GROUP BY e.employee_id ORDER BY COUNT(*) DESC LIMIT 1;",
    "SELECT e.first_name, e.last_name FROM employee e JOIN evaluation ev ON e.employee_id = ev.employee_id WHERE ev.bonus = (SELECT MAX(bonus) FROM evaluation)",
    "SELECT e.first_name, e.last_name FROM employee e JOIN evaluation ev ON e.employee_id = ev.employee_id WHERE ev.bonus = (SELECT MAX(bonus) FROM evaluation)",
    "SELECT DISTINCT e.first_name, e.last_name  FROM employee e  WHERE NOT EXISTS (     SELECT *      FROM evaluation ev      WHERE ev.employee_id = e.employee_id )",
    "SELECT first_name, last_name FROM employee WHERE employee_id NOT IN (SELECT employee_id FROM evaluation)",
    "SELECT name FROM teacher ORDER BY birthyear ASC",
    "SELECT name FROM teacher ORDER BY birthyear ASC",
    "SELECT hometown FROM teacher WHERE birthyear = (SELECT MIN(birthyear) FROM teacher)",
    "SELECT hometown FROM teacher ORDER BY birthyear ASC LIMIT 1",
    "SELECT first_name, last_name FROM teacher ORDER BY age ASC",
    "SELECT first_name, last_name FROM teacher ORDER BY age ASC",
    "SELECT first_name, last_name FROM teacher WHERE hometown <> 'Little Lever Urban District'",
    "SELECT first_name, last_name FROM teacher WHERE hometown <> 'Little Lever Urban District'",
    "SELECT first_name, last_name FROM teacher WHERE age = 32 OR age = 33",
    "SELECT first_name, last_name FROM teacher WHERE age IN (32, 33)",
    "SELECT teacher.first_name, teacher.last_name, course.course FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course_arrange.course_id = course.course_id",
    "SELECT teacher.first_name, teacher.last_name, course.course FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course_arrange.course_id = course.course_id",
    "SELECT teacher.first_name, teacher.last_name, course.course FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course_arrange.course_id = course.course_id ORDER BY teacher.last_name ASC, teacher.first_name ASC",
    "SELECT teacher.first_name, teacher.last_name, course.course FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course_arrange.course_id = course.course_id ORDER BY teacher.last_name, teacher.first_name ASC",
    "SELECT teacher.first_name, teacher.last_name FROM course_arrange JOIN teacher ON course_arrange.teacher_id = teacher.teacher_id JOIN course ON course_arrange.course_id = course.course_id WHERE course.course = 'math'",
    "SELECT DISTINCT teacher.first_name, teacher.last_name  FROM teacher  JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id  JOIN course ON course_arrange.course_id = course.course_id  WHERE course.course = 'math'",
    "SELECT teacher.first_name, teacher.last_name, COUNT(course_arrange.course_id) AS num_courses_taught FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id GROUP BY teacher.teacher_id",
    "SELECT first_name, last_name, COUNT(course_id) AS num_courses_taught FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id GROUP BY teacher.teacher_id",
    "SELECT DISTINCT t.first_name, t.last_name  FROM teacher t  JOIN course_arrange ca ON t.teacher_id = ca.teacher_id  GROUP BY t.teacher_id  HAVING COUNT(DISTINCT ca.course_id) >= 2",
    "SELECT DISTINCT t.first_name, t.last_name  FROM teacher t  JOIN course_arrange ca ON t.teacher_id = ca.teacher_id  GROUP BY t.teacher_id  HAVING COUNT(DISTINCT ca.course_id) >= 2",
    "SELECT first_name, last_name FROM teacher WHERE teacher_id NOT IN (SELECT teacher_id FROM course_arrange)",
    "SELECT DISTINCT teacher.first_name, teacher.last_name  FROM teacher  LEFT JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id  WHERE course_arrange.course_id IS NULL",
    "SELECT name FROM teacher ORDER BY birthyear ASC",
    "SELECT name FROM teacher ORDER BY birthyear ASC",
    "SELECT hometown FROM teacher WHERE birthyear = (SELECT MIN(birthyear) FROM teacher)",
    "SELECT hometown FROM teacher ORDER BY birthyear ASC LIMIT 1",
    "SELECT first_name, last_name FROM teacher ORDER BY birthyear ASC",
    "SELECT first_name, last_name FROM teacher ORDER BY birthyear ASC",
    "SELECT first_name, last_name FROM teacher WHERE hometown <> 'Little Lever Urban District'",
    "SELECT first_name, last_name FROM teacher WHERE hometown <> 'Little Lever Urban District'",
    "SELECT hometown FROM teacher WHERE birthyear = (SELECT MIN(birthyear) FROM teacher)",
    "SELECT hometown FROM teacher ORDER BY birthyear ASC LIMIT 1",
    "SELECT teacher.first_name, teacher.last_name, course.course FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course_arrange.course_id = course.course_id",
    "SELECT teacher.first_name, teacher.last_name, course.course FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course_arrange.course_id = course.course_id",
    "SELECT teacher.first_name, teacher.last_name, course.course FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course_arrange.course_id = course.course_id ORDER BY teacher.last_name ASC, teacher.first_name ASC",
    "SELECT teacher.first_name, teacher.last_name, course.course FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course_arrange.course_id = course.course_id ORDER BY teacher.last_name, teacher.first_name ASC",
    "SELECT teacher.first_name, teacher.last_name FROM course_arrange JOIN teacher ON course_arrange.teacher_id = teacher.teacher_id WHERE course_arrange.course_id = 'math'",
    "SELECT DISTINCT teacher.first_name, teacher.last_name  FROM teacher  JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id  JOIN course ON course.course_id = course_arrange.course_id  WHERE course.course = 'math'",
    "SELECT teacher.first_name, teacher.last_name, COUNT(course_arrange.course_id) AS num_courses_taught FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id GROUP BY teacher.teacher_id",
    "SELECT first_name, last_name, COUNT(course_id) AS num_courses_taught FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id GROUP BY teacher.teacher_id",
    "SELECT DISTINCT t.first_name, t.last_name FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id GROUP BY t.teacher_id HAVING COUNT(DISTINCT ca.course_id) >= 2",
    "SELECT DISTINCT t.first_name, t.last_name  FROM teacher t  JOIN course_arrange ca ON t.teacher_id = ca.teacher_id  GROUP BY t.teacher_id  HAVING COUNT(DISTINCT ca.course_id) >= 2",
    "SELECT first_name, last_name FROM teacher WHERE teacher_id NOT IN (SELECT teacher_id FROM course_arrange)",
    "SELECT DISTINCT teacher.first_name, teacher.last_name  FROM teacher  LEFT JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id  WHERE course_arrange.course_id IS NULL",
    "SELECT first_name, last_name FROM visitor WHERE level_of_membership > 4 ORDER BY level_of_membership DESC",
    "SELECT first_name, last_name, level_of_membership FROM visitor WHERE level_of_membership > 4 ORDER BY birthyear ASC",
    "SELECT visitor.id, visitor.first_name, visitor.last_name, visitor.level_of_membership FROM visitor JOIN visit ON visitor.id = visit.visitor_id GROUP BY visitor.id, visitor.first_name, visitor.last_name, visitor.level_of_membership ORDER BY SUM(visit.total_spent) DESC LIMIT 1;",
    "SELECT DISTINCT v.first_name, v.last_name FROM visitor v JOIN visit v1 ON v.id = v1.visitor_id JOIN visit v2 ON v.id = v2.visitor_id JOIN museum m1 ON v1.museum_id = m1.museum_id JOIN museum m2 ON v2.museum_id = m2.museum_id WHERE m1.open_year < 2009 AND m2.open_year > 2011",
    "SELECT name, level_of_membership FROM visitor WHERE level_of_membership > 4 ORDER BY birthyear ASC",
    "SELECT first_name, birthyear || '-' || bithday AS birth_date FROM players WHERE country_code = 'USA'",
    "SELECT first_name, birthyear, bithday FROM players WHERE country_code = 'USA'",
    "SELECT first_name, country_code FROM players WHERE (birthyear = (SELECT MAX(birthyear) FROM players)) ORDER BY bithday ASC LIMIT 1",
    "SELECT first_name, country_code FROM players WHERE birthyear = (SELECT MAX(birthyear) FROM players)",
    "SELECT first_name, last_name FROM players ORDER BY birthyear, bithday",
    "SELECT CONCAT(first_name, ' ', last_name) AS full_name FROM players ORDER BY birthyear, bithday",
    "SELECT first_name, last_name FROM players WHERE is_right_handed = 'L' ORDER BY birthyear, bithday",
    "SELECT CONCAT(first_name, ' ', last_name) AS full_name FROM players WHERE is_right_handed = 0 ORDER BY birthyear, bithday",
    "SELECT COUNT(DISTINCT winner_id) FROM matches WHERE tourney_name = 'WTA Championships' AND is_winner_right_handed = 0",
    "SELECT COUNT(*) FROM players p JOIN matches m ON p.player_id = m.winner_id WHERE is_right_handed = 0 AND tourney_name = 'WTA Championships'",
    "SELECT players.first_name, players.country_code, players.birthday FROM players JOIN matches ON players.player_id = matches.winner_id WHERE matches.winner_rank_points = (SELECT MAX(winner_rank_points) FROM matches)",
    "SELECT players.first_name, players.country_code, players.birthdate FROM players JOIN matches ON players.player_id = matches.winner_id ORDER BY matches.winner_rank_points DESC LIMIT 1",
    "SELECT first_name, last_name FROM players WHERE is_right_handed = 'L' ORDER BY birth_date",
    "SELECT CONCAT(first_name, ' ', last_name) AS full_name FROM players WHERE is_right_handed = 'false' ORDER BY birth_date ASC",
    "SELECT tourney_date, COUNT(tours) AS total_tours FROM rankings GROUP BY tourney_date",
    "SELECT SUM(tours) FROM rankings GROUP BY year, month, day, ranking",
    "SELECT COUNT(*) FROM ship WHERE is_captured = true",
    "SELECT DISTINCT battle.id, battle.name FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.brig_ship = true",
    "SELECT COUNT(*) FROM ship WHERE is_captured = true",
    "SELECT semesters.semester_id, semesters.semester_term, semesters.semester_year FROM student_enrolment JOIN semesters ON student_enrolment.semester_id = semesters.semester_id GROUP BY student_enrolment.semester_id ORDER BY COUNT(student_enrolment.student_id) DESC LIMIT 1",
    "SELECT semesters.semester_id, semesters.semester_term, semesters.semester_year, sections.course_id, courses.course_name, COUNT(*) AS num_students_registered FROM student_enrolment JOIN semesters ON student_enrolment.semester_id = semesters.semester_id JOIN student_enrolment_courses ON student_enrolment.student_enrolment_id = student_enrolment_courses.student_enrolment_id JOIN sections ON student_enrolment_courses.course_id = sections.course_id JOIN courses ON sections.course_id = courses.course_id GROUP BY semesters.semester_id, sections.course_id HAVING COUNT(*) = (     SELECT MAX(num_students_registered)     FROM (         SELECT semesters.semester_id, sections.course_id, COUNT(*) AS num_students_registered         FROM student_enrolment         JOIN semesters ON student_enrolment.semester_id = semesters.semester_id         JOIN student_enrolment_courses ON student_enrolment.student_enrol",
    "SELECT first_name, middle_name, last_name FROM students  INNER JOIN student_enrolment ON students.student_id = student_enrolment.student_id  INNER JOIN degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_program_id  WHERE degree_programs.is_bachelor = true",
    "SELECT first_name, middle_name, last_name FROM students  JOIN student_enrolment ON students.student_id = student_enrolment.student_id  JOIN degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_program_id  WHERE degree_programs.is_bachelor = true",
    "SELECT semester_term, semester_year FROM semesters WHERE semester_id NOT IN (SELECT semester_id FROM student_enrolment)",
    "SELECT semester_name FROM semesters WHERE semester_id NOT IN (SELECT semester_id FROM student_enrolment)",
    "SELECT transcript_id, transcript_date FROM transcripts WHERE transcript_id IN (SELECT transcript_id FROM transcript_contents GROUP BY transcript_id HAVING COUNT(DISTINCT student_course_id) >= 2)",
    "SELECT transcript_id, transcript_date FROM transcripts WHERE transcript_id IN (SELECT transcript_id FROM transcript_contents GROUP BY transcript_id HAVING COUNT(DISTINCT student_course_id) >= 2)",
    "SELECT first_name, middle_name, last_name FROM students ORDER BY date_first_registered, time_first_registered LIMIT 1",
    "SELECT first_name, middle_name, last_name FROM students ORDER BY date_first_registered, time_first_registered LIMIT 1",
    "SELECT transcript_date, other_details FROM transcripts ORDER BY transcript_date LIMIT 1",
    "SELECT MIN(transcript_date), * FROM transcripts",
    "SELECT transcript_date FROM transcripts ORDER BY transcript_date DESC LIMIT 1",
    "SELECT MAX(transcript_date) FROM transcripts",
    "SELECT transcript_id, transcript_date FROM transcripts WHERE transcript_id = (SELECT transcript_id FROM transcript_contents GROUP BY transcript_id ORDER BY COUNT(*) ASC LIMIT 1)",
    "SELECT transcript_id, transcript_date FROM transcripts WHERE transcript_id = (SELECT transcript_id FROM transcript_contents GROUP BY transcript_id ORDER BY COUNT(*) ASC LIMIT 1)",
    "SELECT semester_id  FROM student_enrolment  WHERE degree_program_id IN (     SELECT degree_program_id      FROM degree_programs      WHERE is_bachelor = true ) AND semester_id IN (     SELECT semester_id      FROM student_enrolment      WHERE degree_program_id IN (         SELECT degree_program_id          FROM degree_programs          WHERE is_master = true     ) )",
    "SELECT semester_id FROM student_enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM degree_programs WHERE is_bachelor = 1) AND degree_program_id IN (SELECT degree_program_id FROM degree_programs WHERE is_master = 1) GROUP BY semester_id HAVING COUNT(DISTINCT degree_program_id) = 2",
    "SELECT first_name, middle_name, last_name FROM students ORDER BY year_first_registered, month_first_registered, day_first_registered, time_first_registered LIMIT 1",
    "SELECT first_name, middle_name, last_name FROM students ORDER BY year_first_registered, month_first_registered, day_first_registered, time_first_registered LIMIT 1",
    "SELECT first_name, middle_name, last_name FROM students ORDER BY year_first_registered, month_first_registered, day_first_registered LIMIT 1",
    "SELECT first_name, middle_name, last_name FROM students  INNER JOIN student_enrolment ON students.student_id = student_enrolment.student_id  INNER JOIN student_enrolment_courses ON student_enrolment.student_enrolment_id = student_enrolment_courses.student_enrolment_id  INNER JOIN transcripts ON student_enrolment_courses.student_course_id = transcripts.student_course_id  ORDER BY transcript_date ASC LIMIT 1",
    "SELECT first_name, middle_name, last_name FROM students ORDER BY year_first_registered, month_first_registered, day_first_registered, time_first_registered LIMIT 1",
    "SELECT first_name, middle_name, last_name FROM students ORDER BY year_first_registered, month_first_registered, day_first_registered, time_first_registered LIMIT 1",
    "SELECT first_name, middle_name, last_name FROM students  INNER JOIN student_enrolment ON students.student_id = student_enrolment.student_id  INNER JOIN degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_program_id  WHERE degree_programs.is_bachelor = true",
    "SELECT first_name, middle_name, last_name FROM students  JOIN student_enrolment ON students.student_id = student_enrolment.student_id  JOIN degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_program_id  WHERE degree_programs.is_bachelor = true",
    "SELECT first_name, middle_name, last_name FROM students ORDER BY date_first_registered, time_first_registered LIMIT 1",
    "SELECT first_name, middle_name, last_name FROM students ORDER BY date_first_registered, time_first_registered LIMIT 1",
    "SELECT semester_id FROM student_enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM degree_programs WHERE is_bachelor = true) AND semester_id IN (SELECT semester_id FROM student_enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM degree_programs WHERE is_master = true))",
    "SELECT semester_id FROM student_enrolment WHERE degree_program_id IN (SELECT degree_program_id FROM degree_programs WHERE is_bachelor = 1) AND degree_program_id IN (SELECT degree_program_id FROM degree_programs WHERE is_master = 1) GROUP BY semester_id HAVING COUNT(DISTINCT degree_program_id) = 2",
    "SELECT transcript_id, transcript_year, transcript_month, transcript_day FROM transcripts WHERE transcript_id IN (SELECT transcript_id FROM transcript_contents GROUP BY transcript_id HAVING COUNT(DISTINCT student_course_id) >= 2)",
    "SELECT transcript_id, CONCAT(transcript_year, '-', transcript_month, '-', transcript_day) AS date FROM transcripts WHERE transcript_id IN (     SELECT transcript_id     FROM transcript_contents     GROUP BY transcript_id     HAVING COUNT(DISTINCT course_id) >= 2 )",
    "SELECT first_name, middle_name, last_name FROM students s JOIN student_enrolment se ON s.student_id = se.student_id JOIN transcripts t ON se.student_enrolment_id = t.transcript_id ORDER BY transcript_year, transcript_month, transcript_day, transcript_time LIMIT 1",
    "SELECT first_name, middle_name, last_name FROM students  INNER JOIN student_enrolment ON students.student_id = student_enrolment.student_id  INNER JOIN student_enrolment_courses ON student_enrolment.student_enrolment_id = student_enrolment_courses.student_enrolment_id  INNER JOIN transcripts ON student_enrolment_courses.student_course_id = transcripts.student_course_id  ORDER BY transcript_year, transcript_month, transcript_day, transcript_time  LIMIT 1",
    "SELECT transcript_day, transcript_month, transcript_year, other_details FROM transcripts ORDER BY transcript_year, transcript_month, transcript_day LIMIT 1",
    "SELECT MIN(transcript_year || '-' || transcript_month || '-' || transcript_day) AS earliest_date, transcript_contents.* FROM transcripts JOIN transcript_contents ON transcripts.transcript_id = transcript_contents.transcript_id GROUP BY transcript_contents.transcript_id ORDER BY earliest_date ASC LIMIT 1",
    "SELECT MAX(transcript_year || '-' || transcript_month || '-' || transcript_day) AS last_transcript_release_date FROM transcripts",
    "SELECT MAX(transcript_year), MAX(transcript_month), MAX(transcript_day) FROM transcripts",
    "SELECT transcript_year, transcript_month, transcript_day, transcript_id FROM transcripts WHERE transcript_id IN (SELECT transcript_id FROM transcript_contents GROUP BY transcript_id ORDER BY COUNT(*) ASC LIMIT 1)",
    "SELECT transcript_id, CONCAT(transcript_year, '-', transcript_month, '-', transcript_day) AS date FROM transcripts JOIN transcript_contents ON transcripts.transcript_id = transcript_contents.transcript_id GROUP BY transcripts.transcript_id ORDER BY COUNT(*) ASC LIMIT 1",
    "SELECT title FROM cartoon WHERE director_firstname = 'Ben' AND director_lastname = 'Jones'",
    "SELECT title FROM cartoon WHERE director_firstname = 'Ben' AND director_lastname = 'Jones'",
    "SELECT COUNT(*) FROM cartoon WHERE writer_firstname = 'Joseph' AND writer_lastname = 'Kuhr'",
    "SELECT COUNT(*) FROM cartoon WHERE writer_firstname = 'Joseph' AND writer_lastname = 'Kuhr'",
    "SELECT cartoon.title, cartoon.director_firstname, cartoon.director_lastname FROM cartoon JOIN tv_series ON cartoon.id = tv_series.id ORDER BY tv_series.air_year, tv_series.air_month, tv_series.air_day",
    "SELECT title, director_firstname, director_lastname FROM cartoon ORDER BY air_year, air_month, air_day",
    "SELECT title FROM cartoon WHERE director_firstname = 'Ben' AND director_lastname = 'Jones' OR director_firstname = 'Brandon' AND director_lastname = 'Vietti'",
    "SELECT title FROM cartoon WHERE director_firstname = 'Ben' AND director_lastname = 'Jones' OR director_firstname = 'Brandon' AND director_lastname = 'Vietti'",
    "SELECT air_month, air_day, air_year FROM tv_series WHERE episode = \"A Love of a Lifetime\"",
    "SELECT air_month, air_day, air_year FROM tv_series WHERE episode = 'A Love of a Lifetime'",
    "SELECT director_firstname, director_lastname, COUNT(*) AS num_cartoons_directed FROM cartoon GROUP BY director_firstname, director_lastname",
    "SELECT director_firstname, director_lastname, COUNT(*) AS num_cartoons_created FROM cartoon GROUP BY director_firstname, director_lastname",
    "SELECT production_code, channel FROM cartoon WHERE air_year = (SELECT MAX(air_year) FROM cartoon) AND air_month = (SELECT MAX(air_month) FROM cartoon WHERE air_year = (SELECT MAX(air_year) FROM cartoon)) AND air_day = (SELECT MAX(air_day) FROM cartoon WHERE air_month = (SELECT MAX(air_month) FROM cartoon WHERE air_year = (SELECT MAX(air_year) FROM cartoon)) AND air_year = (SELECT MAX(air_year) FROM cartoon))",
    "SELECT production_code, channel FROM cartoon ORDER BY air_year DESC, air_month DESC, air_day DESC LIMIT 1",
    "SELECT DISTINCT tv_channel.country FROM tv_channel JOIN tv_series ON tv_channel.id = tv_series.channel JOIN cartoon ON tv_series.id = cartoon.channel WHERE cartoon.writer_firstname = 'Todd' AND cartoon.writer_lastname = 'Casey'",
    "SELECT DISTINCT tv_channel.country  FROM tv_channel  JOIN tv_series ON tv_channel.id = tv_series.channel  JOIN cartoon ON tv_series.id = cartoon.channel  WHERE cartoon.writer_firstname = 'Todd' AND cartoon.writer_lastname = 'Casey'",
    "SELECT DISTINCT tv_channel.country FROM tv_channel WHERE tv_channel.id NOT IN (SELECT cartoon.channel FROM cartoon WHERE cartoon.writer_firstname = 'Todd' AND cartoon.writer_lastname = 'Casey')",
    "SELECT DISTINCT country FROM tv_channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE writer_firstname = 'Todd' AND writer_lastname = 'Casey')",
    "SELECT tv_channel.series_name, tv_channel.country  FROM tv_channel  JOIN tv_series ON tv_channel.id = tv_series.channel  JOIN cartoon ON tv_series.id = cartoon.channel  WHERE cartoon.director_firstname = 'Ben' AND cartoon.director_lastname = 'Jones' AND cartoon.writer_firstname = 'Michael' AND cartoon.writer_lastname = 'Chang'",
    "SELECT tv_channel.series_name, tv_channel.country  FROM tv_channel  JOIN tv_series ON tv_channel.id = tv_series.channel  JOIN cartoon ON tv_series.id = cartoon.channel  WHERE cartoon.director_firstname = 'Ben' AND cartoon.director_lastname = 'Jones'  AND cartoon.director_firstname = 'Michael' AND cartoon.director_lastname = 'Chang'",
    "SELECT DISTINCT tv_channel.id FROM tv_channel LEFT JOIN tv_series ON tv_channel.id = tv_series.channel LEFT JOIN cartoon ON tv_series.id = cartoon.channel AND cartoon.director_firstname = 'Ben' AND cartoon.director_lastname = 'Jones' WHERE cartoon.id IS NULL",
    "SELECT DISTINCT tv_channel.id FROM tv_channel LEFT JOIN cartoon ON tv_channel.id = cartoon.channel WHERE cartoon.id IS NULL OR cartoon.director_firstname != 'Ben' OR cartoon.director_lastname != 'Jones'",
    "SELECT package_option  FROM tv_channel  WHERE id NOT IN      (SELECT channel       FROM cartoon       WHERE director_firstname = 'Ben' AND director_lastname = 'Jones')",
    "SELECT DISTINCT package_option FROM tv_channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE director_firstname = 'Ben' AND director_lastname = 'Jones')",
    "SELECT cartoon.title, cartoon.directed_by FROM cartoon ORDER BY cartoon.air_year, cartoon.air_month, cartoon.air_day",
    "SELECT title, directed_by FROM cartoon ORDER BY air_year, air_month, air_day",
    "SELECT air_month, air_day, air_year FROM tv_series WHERE episode = \"A Love of a Lifetime\"",
    "SELECT air_month, air_day, air_year FROM tv_series WHERE episode = 'A Love of a Lifetime'",
    "SELECT production_code, channel FROM cartoon WHERE air_year = (SELECT MAX(air_year) FROM cartoon) AND air_month = (SELECT MAX(air_month) FROM cartoon WHERE air_year = (SELECT MAX(air_year) FROM cartoon)) AND air_day = (SELECT MAX(air_day) FROM cartoon WHERE air_year = (SELECT MAX(air_year) FROM cartoon) AND air_month = (SELECT MAX(air_month) FROM cartoon WHERE air_year = (SELECT MAX(air_year) FROM cartoon)))",
    "SELECT production_code, channel FROM cartoon ORDER BY air_year DESC, air_month DESC, air_day DESC LIMIT 1",
    "SELECT title FROM cartoon WHERE director_firstname = 'Ben' AND director_lastname = 'Jones'",
    "SELECT title FROM cartoon WHERE director_firstname = 'Ben' AND director_lastname = 'Jones'",
    "SELECT cartoon.title, cartoon.director_firstname, cartoon.director_lastname FROM cartoon JOIN tv_series ON cartoon.id = tv_series.id ORDER BY tv_series.air_date ASC",
    "SELECT title, director_firstname, director_lastname FROM cartoon ORDER BY original_air_date",
    "SELECT title FROM cartoon WHERE director_firstname = 'Ben' AND director_lastname = 'Jones' OR director_firstname = 'Brandon' AND director_lastname = 'Vietti'",
    "SELECT title FROM cartoon WHERE director_firstname = 'Ben' AND director_lastname = 'Jones' OR director_firstname = 'Brandon' AND director_lastname = 'Vietti'",
    "SELECT director_firstname, director_lastname, COUNT(*) AS num_cartoons FROM cartoon GROUP BY director_firstname, director_lastname",
    "SELECT director_firstname, director_lastname, COUNT(*) AS num_cartoons_created FROM cartoon GROUP BY director_firstname, director_lastname",
    "SELECT tv_channel.series_name, tv_channel.country FROM tv_channel JOIN tv_series ON tv_channel.id = tv_series.channel JOIN cartoon ON tv_series.id = cartoon.channel WHERE cartoon.director_firstname = 'Ben' AND cartoon.director_lastname = 'Jones' AND cartoon.director_firstname = 'Michael' AND cartoon.director_lastname = 'Chang'",
    "SELECT tv_channel.series_name, tv_channel.country  FROM tv_channel  JOIN tv_series ON tv_channel.id = tv_series.channel  JOIN cartoon ON tv_series.id = cartoon.channel  WHERE cartoon.director_firstname = 'Ben' AND cartoon.director_lastname = 'Jones'  AND EXISTS (SELECT * FROM cartoon WHERE cartoon.director_firstname = 'Michael' AND cartoon.director_lastname = 'Chang')",
    "SELECT DISTINCT tv_channel.id FROM tv_channel LEFT JOIN tv_series ON tv_channel.id = tv_series.channel LEFT JOIN cartoon ON tv_series.id = cartoon.channel AND cartoon.director_firstname = 'Ben' AND cartoon.director_lastname = 'Jones' WHERE cartoon.id IS NULL",
    "SELECT DISTINCT tv_channel.id  FROM tv_channel  LEFT JOIN tv_series ON tv_channel.id = tv_series.channel  LEFT JOIN cartoon ON tv_series.id = cartoon.channel AND cartoon.director_firstname = 'Ben' AND cartoon.director_lastname = 'Jones'  WHERE cartoon.id IS NULL",
    "SELECT package_option  FROM tv_channel  WHERE id NOT IN      (SELECT channel       FROM cartoon       WHERE director_firstname = 'Ben' AND director_lastname = 'Jones')",
    "SELECT package_option FROM tv_channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE director_firstname = 'Ben' AND director_lastname = 'Jones')",
    "SELECT COUNT(*) FROM cartoon WHERE writer_firstname = 'Joseph' AND writer_lastname = 'Kuhr'",
    "SELECT COUNT(*) FROM cartoon WHERE writer_firstname = 'Joseph' AND writer_lastname = 'Kuhr'",
    "SELECT air_month, air_day, air_year FROM tv_series WHERE episode = \"A Love of a Lifetime\"",
    "SELECT air_month, air_day, air_year FROM tv_series WHERE episode = 'A Love of a Lifetime'",
    "SELECT DISTINCT tv_channel.country FROM tv_channel JOIN tv_series ON tv_channel.id = tv_series.channel JOIN cartoon ON tv_series.id = cartoon.id WHERE cartoon.writer_firstname = 'Todd' AND cartoon.writer_lastname = 'Casey'",
    "SELECT DISTINCT tv_channel.country  FROM tv_channel  JOIN tv_series ON tv_channel.id = tv_series.channel  JOIN cartoon ON tv_series.id = cartoon.channel  WHERE cartoon.writer_firstname = 'Todd' AND cartoon.writer_lastname = 'Casey'",
    "SELECT DISTINCT tv_channel.country FROM tv_channel WHERE tv_channel.id NOT IN (SELECT cartoon.channel FROM cartoon WHERE cartoon.writer_firstname = 'Todd' AND cartoon.writer_lastname = 'Casey')",
    "SELECT DISTINCT country FROM tv_channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE writer_firstname = 'Todd' AND writer_lastname = 'Casey')",
    "SELECT title FROM cartoon WHERE director_firstname = 'Ben' AND director_lastname = 'Jones'",
    "SELECT title FROM cartoon WHERE director_firstname = 'Ben' AND director_lastname = 'Jones'",
    "SELECT title, director_firstname, director_lastname FROM cartoon ORDER BY air_year, air_month, air_day, title, director_lastname, director_firstname",
    "SELECT title, director_firstname, director_lastname FROM cartoon ORDER BY air_year, air_month, air_day",
    "SELECT title FROM cartoon WHERE director_firstname = 'Ben' AND director_lastname = 'Jones' OR director_firstname = 'Brandon' AND director_lastname = 'Vietti'",
    "SELECT title FROM cartoon WHERE director_firstname = 'Ben' AND director_lastname = 'Jones' OR director_firstname = 'Brandon' AND director_lastname = 'Vietti'",
    "SELECT air_month, air_day, air_year FROM tv_series WHERE episode = \"A Love of a Lifetime\"",
    "SELECT air_month, air_day, air_year FROM tv_series WHERE episode = \"A Love of a Lifetime\"",
    "SELECT director_firstname, director_lastname, COUNT(*) AS num_cartoons FROM cartoon GROUP BY director_firstname, director_lastname",
    "SELECT director_firstname, director_lastname, COUNT(*) AS num_cartoons_created FROM cartoon GROUP BY director_firstname, director_lastname",
    "SELECT production_code, channel FROM cartoon WHERE air_year = (SELECT MAX(air_year) FROM cartoon) AND air_month = (SELECT MAX(air_month) FROM cartoon WHERE air_year = (SELECT MAX(air_year) FROM cartoon)) AND air_day = (SELECT MAX(air_day) FROM cartoon WHERE air_year = (SELECT MAX(air_year) FROM cartoon) AND air_month = (SELECT MAX(air_month) FROM cartoon WHERE air_year = (SELECT MAX(air_year) FROM cartoon)))",
    "SELECT production_code, channel FROM cartoon ORDER BY air_year DESC, air_month DESC, air_day DESC LIMIT 1",
    "SELECT tv_channel.series_name, tv_channel.country  FROM tv_channel  JOIN tv_series ON tv_channel.id = tv_series.channel  JOIN cartoon ON tv_series.id = cartoon.channel  WHERE cartoon.director_firstname = 'Ben' AND cartoon.director_lastname = 'Jones'  AND cartoon.director_firstname = 'Michael' AND cartoon.director_lastname = 'Chang'",
    "SELECT series_name, country FROM tv_channel  JOIN tv_series ON tv_channel.id = tv_series.channel  JOIN cartoon ON tv_series.id = cartoon.channel  WHERE (cartoon.director_firstname = 'Ben' AND cartoon.director_lastname = 'Jones')  AND (cartoon.director_firstname = 'Michael' AND cartoon.director_lastname = 'Chang')",
    "SELECT DISTINCT tv_channel.id FROM tv_channel LEFT JOIN tv_series ON tv_channel.id = tv_series.channel LEFT JOIN cartoon ON tv_series.id = cartoon.channel WHERE cartoon.id IS NULL OR cartoon.director_firstname <> 'Ben' AND cartoon.director_lastname <> 'Jones'",
    "SELECT DISTINCT tv_channel.id FROM tv_channel LEFT JOIN tv_series ON tv_channel.id = tv_series.channel LEFT JOIN cartoon ON tv_series.id = cartoon.channel AND cartoon.director_firstname = 'Ben' AND cartoon.director_lastname = 'Jones' WHERE cartoon.id IS NULL",
    "SELECT package_option  FROM tv_channel  WHERE id NOT IN      (SELECT channel       FROM cartoon       WHERE director_firstname = 'Ben' AND director_lastname = 'Jones' AND title LIKE '%cartoon%')",
    "SELECT DISTINCT package_option FROM tv_channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE director_firstname = 'Ben' AND director_lastname = 'Jones')",
    "SELECT first_name, last_name FROM people JOIN poker_player ON people.people_id = poker_player.people_id",
    "SELECT first_name, last_name FROM people JOIN poker_player ON people.people_id = poker_player.people_id",
    "SELECT people.first_name, people.last_name FROM poker_player JOIN people ON poker_player.people_id = people.people_id WHERE poker_player.earnings > 300000",
    "SELECT p.first_name, p.last_name  FROM poker_player_0.poker_player AS pp  JOIN poker_player_0.people AS p ON pp.people_id = p.people_id  WHERE pp.earnings > 300000",
    "SELECT people.first_name, people.last_name  FROM poker_player  JOIN people ON poker_player.people_id = people.people_id  ORDER BY poker_player.final_table_made ASC",
    "SELECT people.first_name, people.last_name FROM poker_player JOIN people ON poker_player.people_id = people.people_id ORDER BY poker_player.final_table_made ASC",
    "SELECT people.first_name, people.last_name  FROM poker_player  JOIN people ON poker_player.people_id = people.people_id  ORDER BY poker_player.earnings DESC",
    "SELECT people.first_name, people.last_name  FROM poker_player  JOIN people ON poker_player.people_id = people.people_id  ORDER BY poker_player.earnings DESC",
    "SELECT first_name, last_name, birth_date FROM people ORDER BY last_name, first_name ASC",
    "SELECT first_name, last_name, birth_date FROM people ORDER BY first_name ASC",
    "SELECT first_name, last_name FROM people WHERE nationality <> 'Russia'",
    "SELECT first_name, last_name FROM people WHERE nationality <> 'Russia'",
    "SELECT first_name, last_name FROM people WHERE people_id NOT IN (SELECT people_id FROM poker_player)",
    "SELECT p.first_name, p.last_name FROM people p WHERE p.people_id NOT IN (SELECT pp.people_id FROM poker_player pp)",
    "SELECT contestant_number, first_name || ' ' || last_name AS name FROM contestants ORDER BY name DESC",
    "SELECT first_name, last_name FROM contestants WHERE CONCAT(first_name, ' ', last_name) != 'Jessie Alloway'",
    "SELECT DISTINCT state, created_time FROM votes",
    "SELECT contestant_number, CONCAT(first_name, ' ', last_name) AS name FROM contestants WHERE contestant_number IN (     SELECT contestant_number     FROM votes     GROUP BY contestant_number     HAVING COUNT(*) >= 2 )",
    "SELECT contestant_number, CONCAT(first_name, ' ', last_name) AS name FROM contestants WHERE contestant_number IN (     SELECT contestant_number     FROM votes     WHERE vote_id IS NOT NULL     GROUP BY contestant_number     HAVING COUNT(*) = (         SELECT MIN(votes_count)         FROM (             SELECT COUNT(*) AS votes_count             FROM votes             WHERE vote_id IS NOT NULL             GROUP BY contestant_number         ) AS vote_counts     ) )",
    "SELECT created_year, created_month, created_day, state, phone_number  FROM votes  WHERE contestant_number = (SELECT contestant_number FROM contestants WHERE first_name = 'Tabatha' AND last_name = 'Gehling')",
    "SELECT DISTINCT area_code FROM voter_1_0.area_code_state AS acs JOIN voter_1_0.votes AS v1 ON acs.state = v1.state AND LEFT(v1.phone_number, 3) = acs.area_code JOIN voter_1_0.votes AS v2 ON v1.phone_number = v2.phone_number AND v1.contestant_number = 'Tabatha Gehling' AND v2.contestant_number = 'Kelly Clauss'",
    "SELECT DISTINCT state, created_time FROM votes",
    "SELECT created_year, created_month, created_day, state, phone_number  FROM votes  WHERE contestant_number = (SELECT contestant_number FROM contestants WHERE contestant_name = 'Tabatha Gehling')",
    "SELECT DISTINCT state, created_time FROM votes",
    "SELECT created_date, state, phone_number FROM votes WHERE contestant_number = (SELECT contestant_number FROM contestants WHERE contestant_name = 'Tabatha Gehling')",
    "SELECT contestant_number, CONCAT(first_name, ' ', last_name) AS name FROM contestants ORDER BY last_name DESC",
    "SELECT first_name, last_name FROM contestants WHERE CONCAT(first_name, ' ', last_name) != 'Jessie Alloway'",
    "SELECT DISTINCT state, created_time FROM votes",
    "SELECT contestant_number, CONCAT(first_name, ' ', last_name) AS name FROM contestants WHERE contestant_number IN (     SELECT contestant_number     FROM votes     GROUP BY contestant_number     HAVING COUNT(*) >= 2 )",
    "SELECT contestant_number, CONCAT(first_name, ' ', last_name) AS name FROM contestants WHERE contestant_number IN (     SELECT contestant_number     FROM votes     WHERE vote_id IS NOT NULL     GROUP BY contestant_number     HAVING COUNT(*) = (         SELECT MIN(votes_count)         FROM (             SELECT COUNT(*) AS votes_count             FROM votes             WHERE vote_id IS NOT NULL             GROUP BY contestant_number         ) AS vote_counts     ) )",
    "SELECT created_date, state, phone_number FROM votes WHERE contestant_number = (SELECT contestant_number FROM contestants WHERE first_name = 'Tabatha' AND last_name = 'Gehling')",
    "SELECT DISTINCT area_code FROM votes v1 JOIN votes v2 ON v1.phone_number = v2.phone_number AND v1.contestant_number = 'Tabatha Gehling' AND v2.contestant_number = 'Kelly Clauss' AND v1.state = v2.state JOIN area_code_state acs ON v1.state = acs.state",
    "SELECT first_name, last_name FROM conductor ORDER BY birthyear ASC",
    "SELECT first_name, last_name FROM conductor ORDER BY birthyear ASC",
    "SELECT first_name, last_name FROM conductor WHERE nationality <> 'USA'",
    "SELECT first_name, last_name FROM conductor WHERE nationality != 'USA'",
    "SELECT first_name, last_name FROM conductor ORDER BY year_start_to_work DESC",
    "SELECT first_name, last_name FROM conductor ORDER BY year_start_to_work DESC",
    "SELECT first_name, last_name FROM conductor ORDER BY year_start_to_work DESC LIMIT 1",
    "SELECT first_name, last_name FROM conductor ORDER BY (year_start_to_work - birthyear) DESC LIMIT 1",
    "SELECT conductor.first_name, conductor.last_name, orchestra.orchestra FROM conductor JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id",
    "SELECT conductor.first_name, conductor.last_name, orchestra.orchestra FROM conductor JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id",
    "SELECT conductor.first_name, conductor.last_name  FROM conductor  JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id  GROUP BY conductor.conductor_id  HAVING COUNT(DISTINCT orchestra.orchestra_id) > 1",
    "SELECT DISTINCT c.first_name, c.last_name  FROM conductor c  JOIN orchestra o ON c.conductor_id = o.conductor_id  GROUP BY c.conductor_id  HAVING COUNT(DISTINCT o.orchestra_id) > 1",
    "SELECT conductor.first_name, conductor.last_name FROM conductor JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id GROUP BY conductor.conductor_id ORDER BY COUNT(orchestra.orchestra_id) DESC LIMIT 1;",
    "SELECT conductor.first_name, conductor.last_name  FROM conductor  JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id  GROUP BY conductor.conductor_id  ORDER BY COUNT(orchestra.orchestra_id) DESC  LIMIT 1",
    "SELECT conductor.first_name, conductor.last_name  FROM conductor  JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id  WHERE orchestra.year_of_founded > 2008",
    "SELECT DISTINCT c.first_name, c.last_name FROM conductor c JOIN orchestra o ON c.conductor_id = o.conductor_id WHERE o.year_of_founded > 2008",
    "SELECT record_company FROM orchestra ORDER BY year_of_existence DESC",
    "SELECT record_company FROM orchestra WHERE orchestra = 'orchestra' ORDER BY year_of_existence DESC",
    "SELECT name FROM conductor ORDER BY year_start_to_work DESC",
    "SELECT name FROM conductor ORDER BY year_start_to_work DESC",
    "SELECT name FROM conductor ORDER BY year_start_to_work DESC LIMIT 1",
    "SELECT name FROM conductor ORDER BY year_start_to_work ASC LIMIT 1",
    "SELECT name FROM conductor ORDER BY year_start_to_work DESC",
    "SELECT name FROM conductor ORDER BY year_start_to_work DESC",
    "SELECT name FROM conductor ORDER BY year_start_to_work DESC LIMIT 1",
    "SELECT name FROM conductor ORDER BY year_start_to_work ASC LIMIT 1",
    "SELECT first_name, last_name FROM conductor ORDER BY age ASC",
    "SELECT first_name, last_name FROM conductor ORDER BY age",
    "SELECT first_name, last_name FROM conductor WHERE nationality <> 'USA'",
    "SELECT first_name, last_name FROM conductor WHERE nationality != 'USA'",
    "SELECT first_name, last_name FROM conductor ORDER BY year_start_to_work DESC",
    "SELECT first_name, last_name FROM conductor ORDER BY year_start_to_work DESC",
    "SELECT first_name, last_name FROM conductor ORDER BY year_start_to_work DESC LIMIT 1",
    "SELECT first_name, last_name FROM conductor ORDER BY (year_start_to_work - year_of_founded) DESC LIMIT 1",
    "SELECT conductor.first_name, conductor.last_name, orchestra.orchestra FROM conductor JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id",
    "SELECT conductor.first_name, conductor.last_name, orchestra.orchestra FROM conductor JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id",
    "SELECT conductor.first_name, conductor.last_name  FROM conductor  JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id  GROUP BY conductor.conductor_id  HAVING COUNT(DISTINCT orchestra.orchestra_id) > 1",
    "SELECT DISTINCT c.first_name, c.last_name  FROM conductor c  JOIN orchestra o ON c.conductor_id = o.conductor_id  GROUP BY c.conductor_id  HAVING COUNT(DISTINCT o.orchestra_id) > 1",
    "SELECT conductor.first_name, conductor.last_name FROM conductor JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id GROUP BY conductor.conductor_id ORDER BY COUNT(orchestra.orchestra_id) DESC LIMIT 1;",
    "SELECT c.first_name, c.last_name  FROM conductor c  JOIN orchestra o ON c.conductor_id = o.conductor_id  GROUP BY c.conductor_id  ORDER BY COUNT(o.orchestra_id) DESC  LIMIT 1",
    "SELECT conductor.first_name, conductor.last_name  FROM conductor  JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id  WHERE orchestra.year_of_founded > 2008",
    "SELECT conductor.first_name, conductor.last_name  FROM conductor  JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id  WHERE orchestra.year_of_founded > 2008",
    "SELECT record_company FROM orchestra ORDER BY year_of_existence DESC",
    "SELECT record_company FROM orchestra WHERE orchestra = 'orchestra' ORDER BY year_of_existence DESC",
    "SELECT treatments.date_of_treatment, professionals.first_name FROM treatments JOIN professionals ON treatments.professional_id = professionals.professional_id",
    "SELECT date_of_treatment, first_name FROM treatments JOIN professionals ON treatments.professional_id = professionals.professional_id",
    "SELECT dogs.name, treatments.date_of_treatment  FROM dogs  JOIN breeds ON dogs.breed_code = breeds.breed_code  JOIN treatments ON dogs.dog_id = treatments.dog_id  WHERE breeds.breed_code = (SELECT breed_code FROM dogs GROUP BY breed_code ORDER BY COUNT(*) LIMIT 1)",
    "SELECT d.name, t.date_of_treatment FROM dogs d JOIN breeds b ON d.breed_code = b.breed_code JOIN treatments t ON d.dog_id = t.dog_id WHERE b.breed_name = (SELECT breed_name FROM breeds ORDER BY breed_code LIMIT 1) ORDER BY t.date_of_treatment ASC",
    "SELECT date_arrived, date_departed FROM dogs JOIN treatments ON dogs.dog_id = treatments.dog_id WHERE treatment_type_code IS NOT NULL",
    "SELECT date_arrived, date_departed FROM dogs JOIN treatments ON dogs.dog_id = treatments.dog_id WHERE treatments.treatment_id IS NOT NULL",
    "SELECT date_arrived, date_departed FROM dogs",
    "SELECT date_arrived, date_departed FROM dogs",
    "SELECT cost_of_treatment FROM treatments ORDER BY date_of_treatment DESC, time_of_treatment DESC LIMIT 1",
    "SELECT cost_of_treatment FROM treatments ORDER BY date_of_treatment DESC, time_of_treatment DESC LIMIT 1",
    "SELECT treatments.day_of_treatment, professionals.first_name FROM treatments JOIN professionals ON treatments.professional_id = professionals.professional_id",
    "SELECT treatments.day_of_treatment, professionals.first_name FROM treatments JOIN professionals ON treatments.professional_id = professionals.professional_id",
    "SELECT d.name, t.year_of_treatment, t.month_of_treatment, t.day_of_treatment FROM dogs d JOIN breeds b ON d.breed_code = b.breed_code JOIN treatments t ON d.dog_id = t.dog_id WHERE b.breed_code = (SELECT breed_code FROM dogs GROUP BY breed_code ORDER BY COUNT(*) ASC LIMIT 1)",
    "SELECT d.name, t.year_of_treatment, t.month_of_treatment, t.day_of_treatment FROM dogs d JOIN breeds b ON d.breed_code = b.breed_code JOIN treatments t ON d.dog_id = t.dog_id WHERE b.breed_name = (SELECT breed_name FROM breeds ORDER BY breed_code LIMIT 1) ORDER BY t.year_of_treatment, t.month_of_treatment, t.day_of_treatment",
    "SELECT date_arrived, date_departed FROM dogs WHERE dog_id IN (SELECT dog_id FROM treatments)",
    "SELECT date_arrived, date_departed FROM dogs WHERE dog_id IN (SELECT dog_id FROM treatments)",
    "SELECT date_arrived, date_departed FROM dogs",
    "SELECT date_arrived, date_departed FROM dogs",
    "SELECT cost_of_treatment FROM treatments ORDER BY year_of_treatment DESC, month_of_treatment DESC, day_of_treatment DESC LIMIT 1",
    "SELECT cost_of_treatment FROM treatments ORDER BY year_of_treatment DESC, month_of_treatment DESC, day_of_treatment DESC, time_of_treatment DESC LIMIT 1",
    "SELECT date_arrived, date_departed FROM dogs WHERE dog_id IN (SELECT dog_id FROM treatments)",
    "SELECT date_arrived, date_departed FROM dogs WHERE dog_id IN (SELECT dog_id FROM treatments)",
    "SELECT date_arrived, date_departed FROM dogs",
    "SELECT date_arrived, date_departed FROM dogs",
    "SELECT treatments.date_of_treatment, professionals.first_name FROM treatments JOIN professionals ON treatments.professional_id = professionals.professional_id",
    "SELECT date_of_treatment, first_name FROM treatments JOIN professionals ON treatments.professional_id = professionals.professional_id",
    "SELECT dogs.name, treatments.date_of_treatment FROM dogs  JOIN breeds ON dogs.breed_code = breeds.breed_code  JOIN treatments ON dogs.dog_id = treatments.dog_id  WHERE breeds.breed_code = (SELECT breed_code FROM dogs GROUP BY breed_code ORDER BY COUNT(*) ASC LIMIT 1)",
    "SELECT dogs.name, treatments.date_of_treatment FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code JOIN treatments ON dogs.dog_id = treatments.dog_id WHERE breeds.breed_name = (SELECT breed_name FROM breeds ORDER BY breed_code LIMIT 1) ORDER BY treatments.date_of_treatment ASC",
    "SELECT date_arrived, date_departed FROM dogs WHERE dog_id IN (SELECT dog_id FROM treatments)",
    "SELECT date_arrived, date_departed FROM dogs WHERE dog_id IN (SELECT dog_id FROM treatments)",
    "SELECT date_arrived, date_departed FROM dogs",
    "SELECT date_arrived, date_departed FROM dogs",
    "SELECT MAX(cost_of_treatment) FROM treatments",
    "SELECT cost_of_treatment FROM treatments ORDER BY date_of_treatment DESC, time_of_treatment DESC LIMIT 1",
    "SELECT first_name, last_name FROM singer_0 ORDER BY net_worth_millions ASC",
    "SELECT first_name, last_name FROM singer ORDER BY net_worth_millions ASC",
    "SELECT first_name, last_name FROM singer_0 WHERE citizenship <> 'France'",
    "SELECT first_name, last_name FROM singer WHERE citizenship <> 'French'",
    "SELECT first_name, last_name FROM singer ORDER BY net_worth_millions DESC LIMIT 1",
    "SELECT first_name, last_name FROM singer ORDER BY net_worth_millions DESC LIMIT 1",
    "SELECT song.title, singer.first_name, singer.last_name FROM song JOIN singer ON song.singer_id = singer.singer_id",
    "SELECT title, first_name, last_name FROM song JOIN singer ON song.singer_id = singer.singer_id",
    "SELECT DISTINCT singer.first_name, singer.last_name  FROM singer  JOIN song ON singer.singer_id = song.singer_id  WHERE song.sales > 300000",
    "SELECT DISTINCT first_name, last_name FROM singer WHERE singer_id IN (SELECT singer_id FROM song WHERE sales > 300000)",
    "SELECT DISTINCT s.first_name, s.last_name FROM singer s JOIN song so ON s.singer_id = so.singer_id GROUP BY s.singer_id HAVING COUNT(so.song_id) > 1;",
    "SELECT DISTINCT singer.first_name, singer.last_name FROM singer INNER JOIN song ON singer.singer_id = song.singer_id GROUP BY singer.singer_id HAVING COUNT(song.song_id) > 1",
    "SELECT singer.first_name, singer.last_name, SUM(song.sales) as total_sales FROM singer JOIN song ON singer.singer_id = song.singer_id GROUP BY singer.singer_id",
    "SELECT singer.first_name, singer.last_name, SUM(song.sales) AS total_sales FROM singer JOIN song ON singer.singer_id = song.singer_id GROUP BY singer.first_name, singer.last_name",
    "SELECT first_name, last_name FROM singer WHERE singer_id NOT IN (SELECT singer_id FROM song)",
    "SELECT singer.last_name FROM singer LEFT JOIN song ON singer.singer_id = song.singer_id WHERE song.singer_id IS NULL"
]