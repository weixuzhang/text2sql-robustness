[
    "SELECT COUNT(*) FROM concert WHERE year = 2014 OR year = 2025",
    "SELECT COUNT(*) FROM concert WHERE year = 2014 OR year = 2019",
    "SELECT COUNT(*) FROM concert WHERE year = 2014 OR year = 2009",
    "SELECT COUNT(*) FROM concert WHERE year = 2014 OR year = '2014'",
    "SELECT COUNT(*) FROM concert WHERE year = 2014 OR year = 2022",
    "SELECT COUNT(*) FROM concert WHERE year = 2024 OR year = 2015",
    "SELECT COUNT(*) FROM concert WHERE year = 2018 OR year = 2015",
    "SELECT COUNT(*) FROM concert WHERE year = 2008 OR year = 2015",
    "SELECT COUNT(*) FROM concert WHERE year = 2013 OR year = 2015",
    "SELECT COUNT(*) FROM concert WHERE year = 2021 OR year = 2015",
    "SELECT COUNT(*) FROM concert WHERE year = 2014 OR year = 2025",
    "SELECT COUNT(*) FROM concert WHERE year = 2014 OR year = 2019",
    "SELECT COUNT(*) FROM concert WHERE year = 2014 OR year = 2009",
    "SELECT COUNT(*) FROM concert WHERE year = 2014 OR year = 2015",
    "SELECT COUNT(*) FROM concert WHERE year = 2014 OR year = 2022",
    "SELECT COUNT(*) FROM concert WHERE year = 2024 OR year = 2015",
    "SELECT COUNT(*) FROM concert WHERE year = 2018 OR year = 2015",
    "SELECT COUNT(*) FROM concert WHERE year = 2008 OR year = 2015",
    "SELECT COUNT(*) FROM concert WHERE year = 2013 OR year = 2015",
    "SELECT COUNT(*) FROM concert WHERE year = 2021 OR year = 2015",
    "SELECT name, capacity FROM stadium WHERE stadium_id = (SELECT stadium_id FROM concert WHERE year >= 2015 GROUP BY stadium_id ORDER BY COUNT(*) DESC LIMIT 1)",
    "SELECT name, capacity FROM stadium WHERE stadium_id = (SELECT stadium_id FROM concert WHERE year > 2014 GROUP BY stadium_id ORDER BY COUNT(*) DESC LIMIT 1)",
    "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert WHERE year = 2024)",
    "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert WHERE year = 2018)",
    "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert WHERE year = 2008)",
    "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert WHERE year = 2013)",
    "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert WHERE year = 2021)",
    "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert WHERE year = 2024)",
    "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert WHERE year = 2018)",
    "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert WHERE year = 2008)",
    "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert WHERE year = 2013)",
    "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert WHERE year = 2021)",
    "SELECT DISTINCT singer.name  FROM singer  JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id  JOIN concert ON singer_in_concert.concert_id = concert.concert_id  WHERE concert.year = 2015",
    "SELECT DISTINCT singer.name FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON concert.concert_id = singer_in_concert.concert_id WHERE concert.year = 2015",
    "SELECT DISTINCT s.name, s.location  FROM stadium s  JOIN concert c ON s.stadium_id = c.stadium_id  WHERE c.year = 2014  AND EXISTS (SELECT * FROM concert WHERE stadium_id = s.stadium_id AND year = 2015)",
    "SELECT DISTINCT s.name, s.location FROM stadium s JOIN concert c ON s.stadium_id = c.stadium_id WHERE c.year = 2015 AND EXISTS (     SELECT 1 FROM concert WHERE stadium_id = s.stadium_id AND year = 2016 )",
    "SELECT DISTINCT s.name, s.location  FROM stadium s  JOIN concert c1 ON s.stadium_id = c1.stadium_id  JOIN concert c2 ON s.stadium_id = c2.stadium_id  WHERE c1.year = 2014 AND c2.year = 2015",
    "SELECT DISTINCT s.name, s.location  FROM stadium s  JOIN concert c1 ON s.stadium_id = c1.stadium_id  JOIN concert c2 ON s.stadium_id = c2.stadium_id  WHERE c1.year = 2015 AND c2.year = 2016",
    "SELECT COUNT(*) FROM pets WHERE weight > 7",
    "SELECT COUNT(*) FROM pets WHERE weight > 5.",
    "SELECT COUNT(*) FROM pets WHERE weight > 8.",
    "SELECT COUNT(*) FROM pets WHERE weight > 13.",
    "SELECT COUNT(*) FROM pets WHERE weight > 9.",
    "SELECT COUNT(*) FROM pets WHERE weight > 7",
    "SELECT COUNT(*) FROM pets WHERE weight > 5",
    "SELECT COUNT(*) FROM pets WHERE weight > 8",
    "SELECT COUNT(*) FROM pets WHERE weight > 13.",
    "SELECT COUNT(*) FROM pets WHERE weight > 9.",
    "SELECT petid, weight FROM pets WHERE pet_age > 2",
    "SELECT petid, weight FROM pets WHERE pet_age > 2",
    "SELECT DISTINCT model FROM model_list JOIN cars_data ON model_list.modelid = cars_data.id WHERE year > 1974",
    "SELECT DISTINCT model FROM model_list JOIN cars_data ON model_list.modelid = cars_data.id WHERE year > 1979",
    "SELECT DISTINCT model FROM model_list JOIN cars_data ON model_list.modelid = cars_data.id WHERE year > 1977",
    "SELECT DISTINCT model FROM model_list JOIN cars_data ON model_list.modelid = cars_data.id WHERE year > 1976",
    "SELECT DISTINCT model FROM model_list JOIN cars_data ON model_list.modelid = cars_data.id WHERE year > 1978",
    "SELECT DISTINCT model FROM model_list JOIN cars_data ON model_list.modelid = cars_data.id WHERE year > 1974",
    "SELECT DISTINCT model FROM model_list JOIN cars_data ON model_list.modelid = cars_data.id WHERE year > 1979",
    "SELECT DISTINCT model FROM model_list JOIN cars_data ON model_list.modelid = cars_data.id WHERE year > 1977",
    "SELECT DISTINCT model FROM model_list JOIN cars_data ON model_list.modelid = cars_data.id WHERE year > 1976",
    "SELECT DISTINCT model FROM model_list JOIN cars_data ON model_list.modelid = cars_data.id WHERE year > 1978",
    "SELECT AVG(mpg) FROM cars_data WHERE cylinders = 3",
    "SELECT AVG(mpg) FROM cars_data WHERE cylinders = 5",
    "SELECT AVG(mpg) FROM cars_data WHERE cylinders = 10",
    "SELECT AVG(mpg) FROM cars_data WHERE cylinders = 6",
    "SELECT AVG(mpg) FROM cars_data WHERE cylinders = 13",
    "SELECT AVG(mpg) FROM cars_data WHERE cylinders = 3",
    "SELECT AVG(mpg) FROM cars_data WHERE cylinders = 5",
    "SELECT AVG(mpg) FROM cars_data WHERE cylinders = 10",
    "SELECT AVG(mpg) FROM cars_data WHERE cylinders = 6",
    "SELECT AVG(mpg) FROM cars_data WHERE cylinders = 13",
    "SELECT MIN(weight) FROM cars_data WHERE cylinders = 8 AND year = 1984",
    "SELECT MIN(weight) FROM cars_data WHERE cylinders = 8 AND year = 1978",
    "SELECT MIN(weight) FROM cars_data WHERE cylinders = 8 AND year = 1968",
    "SELECT MIN(weight) FROM cars_data WHERE cylinders = 8 AND year = 1973",
    "SELECT MIN(weight) FROM cars_data WHERE cylinders = 8 AND year = 1981",
    "SELECT MIN(weight) FROM cars_data WHERE cylinders = 17 AND year = 1974",
    "SELECT MIN(weight) FROM cars_data WHERE cylinders = 3 AND year = 1974",
    "SELECT MIN(weight) FROM cars_data WHERE cylinders = 7 AND year = 1974",
    "SELECT MIN(weight) FROM cars_data WHERE cylinders = 5 AND year = 1974",
    "SELECT MIN(weight) FROM cars_data WHERE cylinders = 9 AND year = 1974",
    "SELECT MIN(weight) FROM cars_data WHERE cylinders = 8 AND year = 1984",
    "SELECT MIN(weight) FROM cars_data WHERE cylinders = 8 AND year = 1978",
    "SELECT MIN(weight) FROM cars_data WHERE cylinders = 8 AND year = 1968",
    "SELECT MIN(weight) FROM cars_data WHERE cylinders = 8 AND year = 1973",
    "SELECT MIN(weight) FROM cars_data WHERE cylinders = 8 AND year = 1981",
    "SELECT MIN(weight) FROM cars_data WHERE cylinders = 17 AND year = 1974",
    "SELECT MIN(weight) FROM cars_data WHERE cylinders = 3 AND year = 1974",
    "SELECT MIN(weight) FROM cars_data WHERE cylinders = 7 AND year = 1974",
    "SELECT MIN(weight) FROM cars_data WHERE cylinders = 5 AND year = 1974",
    "SELECT MIN(weight) FROM cars_data WHERE cylinders = 9 AND year = 1974",
    "SELECT COUNT(*) FROM cars_data WHERE horsepower > 160",
    "SELECT COUNT(*) FROM cars_data WHERE horsepower > 154",
    "SELECT COUNT(*) FROM cars_data WHERE horsepower > 144",
    "SELECT COUNT(*) FROM cars_data WHERE horsepower > 149",
    "SELECT COUNT(*) FROM cars_data WHERE horsepower > 157",
    "SELECT COUNT(*) FROM cars_data WHERE horsepower > 160",
    "SELECT COUNT(*) FROM cars_data WHERE horsepower > 154",
    "SELECT COUNT(*) FROM cars_data WHERE horsepower > 144",
    "SELECT COUNT(*) FROM cars_data WHERE horsepower > 149",
    "SELECT COUNT(*) FROM cars_data WHERE horsepower > 157",
    "SELECT MAX(horsepower), make FROM cars_data  JOIN car_names ON cars_data.id = car_names.makeid  WHERE cylinders = 4  GROUP BY make",
    "SELECT MAX(horsepower), make FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid JOIN model_list ON car_names.model = model_list.modelid WHERE cylinders = 5 GROUP BY make",
    "SELECT MAX(horsepower), make FROM cars_data  INNER JOIN car_names ON cars_data.id = car_names.makeid  INNER JOIN model_list ON car_names.model = model_list.model  WHERE cylinders = 6  GROUP BY make",
    "SELECT MAX(horsepower), make FROM cars_data  JOIN car_names ON cars_data.id = car_names.makeid  JOIN model_list ON car_names.model = model_list.model  WHERE cylinders = 8 GROUP BY make",
    "SELECT MAX(horsepower), maker FROM cars_data  JOIN car_makers ON cars_data.id = car_makers.id  WHERE cylinders = 4 GROUP BY maker",
    "SELECT MAX(horsepower), maker FROM cars_data  JOIN model_list ON cars_data.id = model_list.modelid  JOIN car_makers ON model_list.maker = car_makers.id  WHERE cylinders = 5  GROUP BY maker",
    "SELECT MAX(horsepower), maker FROM cars_data  JOIN car_makers ON cars_data.id = car_makers.id  WHERE cylinders = 6  GROUP BY maker",
    "SELECT MAX(horsepower), maker FROM cars_data  JOIN car_makers ON cars_data.id = car_makers.id  WHERE cylinders = 8 GROUP BY maker",
    "SELECT AVG(horsepower) FROM cars_data WHERE year < 1990",
    "SELECT AVG(horsepower) FROM cars_data WHERE year < 1984",
    "SELECT AVG(horsepower) FROM cars_data WHERE year < 1974",
    "SELECT AVG(horsepower) FROM cars_data WHERE year < 1979",
    "SELECT AVG(horsepower) FROM cars_data WHERE year < 1987",
    "SELECT AVG(horsepower) FROM cars_data WHERE year < 1990",
    "SELECT AVG(horsepower) FROM cars_data WHERE year < 1984",
    "SELECT AVG(horsepower) FROM cars_data WHERE year < 1974",
    "SELECT AVG(horsepower) FROM cars_data WHERE year < 1979",
    "SELECT AVG(horsepower) FROM cars_data WHERE year < 1987",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 3",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 5",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 6",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 7",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 1",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 3",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 5",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 6",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 7",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 1",
    "SELECT COUNT(*) FROM cars_data WHERE year = 1974",
    "SELECT COUNT(*) FROM cars_data WHERE year = 1977",
    "SELECT COUNT(*) FROM cars_data WHERE year = 1976",
    "SELECT COUNT(*) FROM cars_data WHERE year = 1978",
    "SELECT COUNT(*) FROM cars_data WHERE year = 1975",
    "SELECT COUNT(*) FROM cars_data WHERE year = 1974",
    "SELECT COUNT(*) FROM cars_data WHERE year = 1977",
    "SELECT COUNT(*) FROM cars_data WHERE year = 1976",
    "SELECT COUNT(*) FROM cars_data WHERE year = 1978",
    "SELECT COUNT(*) FROM cars_data WHERE year = 1975",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 5",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 4",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 3",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 1",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 2",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 5",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 4",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 3",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 1",
    "SELECT COUNT(*) FROM cars_data WHERE cylinders > 2",
    "SELECT model FROM model_list  JOIN cars_data ON model_list.modelid = cars_data.id  WHERE cars_data.cylinders = 3  ORDER BY cars_data.horsepower DESC  LIMIT 1",
    "SELECT model FROM model_list  JOIN cars_data ON model_list.modelid = cars_data.id  WHERE cars_data.cylinders = 5  ORDER BY cars_data.horsepower DESC  LIMIT 1",
    "SELECT model FROM model_list  JOIN cars_data ON model_list.modelid = cars_data.id  WHERE cars_data.cylinders = 8  ORDER BY cars_data.horsepower DESC  LIMIT 1",
    "SELECT model  FROM car_names  JOIN cars_data ON car_names.makeid = cars_data.id  WHERE cylinders = 3  ORDER BY horsepower DESC  LIMIT 1",
    "SELECT model FROM model_list WHERE cylinders = 5 ORDER BY horsepower DESC LIMIT 1",
    "SELECT model FROM model_list WHERE modelid IN (SELECT makeid FROM cars_data WHERE cylinders = 8 AND horsepower = (SELECT MAX(horsepower) FROM cars_data WHERE cylinders = 8))",
    "SELECT DISTINCT car_makers.id, car_makers.maker  FROM car_makers  JOIN car_names ON car_makers.id = car_names.makeid  JOIN cars_data ON car_names.makeid = cars_data.id  WHERE cars_data.horsepower > (SELECT MIN(horsepower) FROM cars_data)  AND cars_data.cylinders <= 4",
    "SELECT DISTINCT car_makers.id, car_makers.maker  FROM car_makers  JOIN car_names ON car_makers.id = car_names.makeid  JOIN cars_data ON car_names.makeid = cars_data.id  WHERE cars_data.horsepower > (SELECT MIN(horsepower) FROM cars_data)  AND cars_data.cylinders <= 5",
    "SELECT makeid, maker FROM car_names WHERE horsepower > (SELECT MIN(horsepower) FROM cars_data WHERE cylinders > 10) AND makeid NOT IN (SELECT makeid FROM cars_data WHERE cylinders > 10)",
    "SELECT makeid, maker FROM car_names WHERE horsepower > (SELECT MIN(horsepower) FROM cars_data WHERE cylinders > 6) AND makeid NOT IN (SELECT makeid FROM cars_data WHERE cylinders > 6)",
    "SELECT makeid, maker FROM car_names WHERE horsepower > (SELECT MIN(horsepower) FROM cars_data WHERE cylinders > 13) AND makeid NOT IN (SELECT makeid FROM cars_data WHERE cylinders > 13)",
    "SELECT makeid, maker FROM car_names  WHERE cylinders < 5 AND horsepower > (SELECT MIN(horsepower) FROM cars_data)",
    "SELECT makeid, maker FROM car_names WHERE horsepower > (SELECT MIN(horsepower) FROM cars_data) AND cylinders < 10",
    "SELECT makeid, maker FROM car_names  WHERE cylinders < 6 AND horsepower > (SELECT MIN(horsepower) FROM cars_data)",
    "SELECT makeid, maker FROM car_names  WHERE horsepower > (SELECT MIN(horsepower) FROM cars_data)  AND cylinders < 13",
    "SELECT makeid, maker FROM car_names  WHERE horsepower > (SELECT MIN(horsepower) FROM cars_data)  AND cylinders < 8",
    "SELECT model  FROM car_names  JOIN cars_data ON car_names.makeid = cars_data.id  JOIN model_list ON car_names.model = model_list.model  JOIN car_makers ON model_list.maker = car_makers.maker  WHERE weight < 3510 AND car_makers.fullname != 'Ford Motor Company'",
    "SELECT model  FROM car_names  JOIN cars_data ON car_names.makeid = cars_data.id  JOIN model_list ON car_names.model = model_list.model  JOIN car_makers ON model_list.maker = car_makers.maker  WHERE weight < 3507 AND car_makers.maker != 'Ford Motor Company'",
    "SELECT model  FROM car_names  JOIN cars_data ON car_names.makeid = cars_data.id  JOIN model_list ON car_names.model = model_list.model  JOIN car_makers ON model_list.maker = car_makers.maker  WHERE weight < 3508 AND car_makers.maker != 'Ford Motor Company'",
    "SELECT model  FROM car_names  JOIN cars_data ON car_names.makeid = cars_data.id  JOIN model_list ON car_names.model = model_list.model  JOIN car_makers ON model_list.maker = car_makers.maker  WHERE weight < 3509 AND car_makers.fullname != 'Ford Motor Company'",
    "SELECT model  FROM car_names  JOIN cars_data ON car_names.makeid = cars_data.id  JOIN model_list ON car_names.model = model_list.model  JOIN car_makers ON model_list.maker = car_makers.maker  WHERE weight < 3506 AND car_makers.maker != 'Ford Motor Company'",
    "SELECT model FROM model_list  WHERE maker NOT LIKE '%Ford%'  AND modelid IN (SELECT makeid FROM cars_data WHERE weight < 3510)",
    "SELECT model FROM model_list  WHERE maker <> 'Ford Motor Company' AND modelid IN  (SELECT makeid FROM cars_data WHERE weight < 3507)",
    "SELECT model FROM model_list  WHERE maker NOT LIKE 'Ford%' AND weight < 3508",
    "SELECT model FROM model_list  WHERE maker <> 'Ford Motor Company' AND modelid IN  (SELECT makeid FROM cars_data WHERE weight < 3509)",
    "SELECT model FROM model_list  WHERE maker <> 'Ford Motor Company' AND modelid IN  (SELECT makeid FROM cars_data WHERE weight < 3506)",
    "SELECT city FROM employee GROUP BY city HAVING COUNT(*) > 1 AND MAX(age) < 40",
    "SELECT city FROM employee GROUP BY city HAVING COUNT(*) > 1 AND MAX(age) < 34",
    "SELECT city FROM employee GROUP BY city HAVING COUNT(*) > 1 AND MAX(age) < 37",
    "SELECT city FROM employee GROUP BY city HAVING COUNT(*) > 1 AND MAX(age) < 38",
    "SELECT city FROM employee GROUP BY city HAVING COUNT(*) > 1 AND MAX(age) < 39",
    "SELECT city FROM employee GROUP BY city HAVING COUNT(*) > 1 AND MAX(age) < 40",
    "SELECT city FROM employee GROUP BY city HAVING COUNT(*) > 1 AND MAX(age) < 34",
    "SELECT city FROM employee GROUP BY city HAVING COUNT(*) > 1 AND MAX(age) < 37",
    "SELECT city FROM employee GROUP BY city HAVING COUNT(*) > 1 AND MAX(age) < 38",
    "SELECT city FROM employee GROUP BY city HAVING COUNT(*) > 1 AND MAX(age) < 39",
    "SELECT version_number, template_type_code FROM templates WHERE version_number > 6",
    "SELECT version_number, template_type_code FROM templates WHERE version_number > 7",
    "SELECT version_number, template_type_code FROM templates WHERE version_number > 4",
    "SELECT version_number, template_type_code FROM templates WHERE version_number > 8",
    "SELECT version_number, template_type_code FROM templates WHERE version_number > 3",
    "SELECT version_number, template_type_code FROM templates WHERE version_number > 6",
    "SELECT version_number, template_type_code FROM templates WHERE version_number > 7",
    "SELECT version_number, template_type_code FROM templates WHERE version_number > 4",
    "SELECT version_number, template_type_code FROM templates WHERE version_number > 8",
    "SELECT version_number, template_type_code FROM templates WHERE version_number > 3",
    "SELECT name FROM teacher WHERE age = 42 OR age = 33",
    "SELECT name FROM teacher WHERE age = 36 OR age = 33",
    "SELECT name FROM teacher WHERE age = 26 OR age = 33",
    "SELECT name FROM teacher WHERE age = 31 OR age = 33",
    "SELECT name FROM teacher WHERE age = 39 OR age = 33",
    "SELECT name FROM teacher WHERE age = 32 OR age = 43",
    "SELECT name FROM teacher WHERE age = 32 OR age = 37",
    "SELECT name FROM teacher WHERE age = 32 OR age = 27",
    "SELECT name FROM teacher WHERE age = 32 OR age = 32",
    "SELECT name FROM teacher WHERE age = 32 OR age = 40",
    "SELECT name FROM teacher WHERE age = 42 OR age = 33",
    "SELECT name FROM teacher WHERE age = 36 OR age = 33",
    "SELECT name FROM teacher WHERE age = 26 OR age = 33",
    "SELECT name FROM teacher WHERE age IN (31, 33)",
    "SELECT name FROM teacher WHERE age = 39 OR age = 33",
    "SELECT name FROM teacher WHERE age = 32 OR age = 43",
    "SELECT name FROM teacher WHERE age = 32 OR age = 37",
    "SELECT name FROM teacher WHERE age = 32 OR age = 27",
    "SELECT name FROM teacher WHERE age = 32",
    "SELECT name FROM teacher WHERE age = 32 OR age = 40",
    "SELECT COUNT(*) FROM visitor WHERE age < 40",
    "SELECT COUNT(*) FROM visitor WHERE age < 37",
    "SELECT COUNT(*) FROM visitor WHERE age < 27",
    "SELECT COUNT(*) FROM visitor WHERE age < 26",
    "SELECT COUNT(*) FROM visitor WHERE age < 28",
    "SELECT name FROM visitor WHERE level_of_membership > 5 ORDER BY level_of_membership DESC",
    "SELECT name FROM visitor WHERE level_of_membership > 6 ORDER BY level_of_membership DESC",
    "SELECT name FROM visitor WHERE level_of_membership > 7 ORDER BY level_of_membership DESC",
    "SELECT name FROM visitor WHERE level_of_membership > 1 ORDER BY level_of_membership DESC",
    "SELECT AVG(age) FROM visitor WHERE level_of_membership <= 5",
    "SELECT AVG(age) FROM visitor WHERE level_of_membership <= 10",
    "SELECT AVG(age) FROM visitor WHERE level_of_membership <= 6",
    "SELECT AVG(age) FROM visitor WHERE level_of_membership <= 13",
    "SELECT AVG(age) FROM visitor WHERE level_of_membership <= 8",
    "SELECT name, level_of_membership FROM visitor WHERE level_of_membership > 5 ORDER BY age ASC",
    "SELECT name, level_of_membership FROM visitor WHERE level_of_membership > 6 ORDER BY age ASC",
    "SELECT name, level_of_membership FROM visitor WHERE level_of_membership > 7 ORDER BY age ASC",
    "SELECT name, level_of_membership FROM visitor WHERE level_of_membership > 1 ORDER BY age ASC",
    "SELECT AVG(num_of_staff) FROM museum WHERE open_year < 2019",
    "SELECT AVG(num_of_staff) FROM museum WHERE open_year < 2013",
    "SELECT AVG(num_of_staff) FROM museum WHERE open_year < 2003",
    "SELECT AVG(num_of_staff) FROM museum WHERE open_year < 2008",
    "SELECT AVG(num_of_staff) FROM museum WHERE open_year < 2016",
    "SELECT name FROM museum WHERE num_of_staff > (SELECT MIN(num_of_staff) FROM museum WHERE open_year > 2004)",
    "SELECT name FROM museum WHERE num_of_staff > (SELECT MIN(num_of_staff) FROM museum WHERE open_year > 2009)",
    "SELECT name FROM museum WHERE num_of_staff > (SELECT MIN(num_of_staff) FROM museum WHERE open_year > 2007)",
    "SELECT name FROM museum WHERE num_of_staff > (SELECT MIN(num_of_staff) FROM museum WHERE open_year > 2006)",
    "SELECT name FROM museum WHERE num_of_staff > (SELECT MIN(num_of_staff) FROM museum WHERE open_year > 2008)",
    "SELECT SUM(total_spent) FROM visit WHERE visitor_id IN (SELECT id FROM visitor WHERE level_of_membership = 4)",
    "SELECT SUM(total_spent) FROM visit WHERE visitor_id IN (SELECT id FROM visitor WHERE level_of_membership = 10)",
    "SELECT SUM(total_spent) FROM visit WHERE visitor_id IN (SELECT id FROM visitor WHERE level_of_membership = 5)",
    "SELECT SUM(total_spent) FROM visit WHERE visitor_id IN (SELECT id FROM visitor WHERE level_of_membership = 7)",
    "SELECT SUM(total_spent) FROM visit WHERE visitor_id IN (SELECT id FROM visitor WHERE level_of_membership = 8)",
    "SELECT DISTINCT v.name  FROM visitor v  JOIN visit v1 ON v.id = v1.visitor_id  JOIN visit v2 ON v.id = v2.visitor_id  JOIN museum m1 ON v1.museum_id = m1.museum_id  JOIN museum m2 ON v2.museum_id = m2.museum_id  WHERE m1.open_year < 2019 AND m2.open_year > 2011",
    "SELECT DISTINCT v.name  FROM visitor v  JOIN visit v1 ON v.id = v1.visitor_id  JOIN visit v2 ON v.id = v2.visitor_id  JOIN museum m1 ON v1.museum_id = m1.museum_id  JOIN museum m2 ON v2.museum_id = m2.museum_id  WHERE m1.open_year < 2013 AND m2.open_year > 2011",
    "SELECT DISTINCT v.name  FROM visitor v  JOIN visit v1 ON v.id = v1.visitor_id  JOIN visit v2 ON v.id = v2.visitor_id  JOIN museum m1 ON v1.museum_id = m1.museum_id  JOIN museum m2 ON v2.museum_id = m2.museum_id  WHERE m1.open_year < 2016 AND m2.open_year > 2011",
    "SELECT DISTINCT v.name  FROM visitor v  JOIN visit v1 ON v.id = v1.visitor_id  JOIN visit v2 ON v.id = v2.visitor_id  JOIN museum m1 ON v1.museum_id = m1.museum_id  JOIN museum m2 ON v2.museum_id = m2.museum_id  WHERE m1.open_year < 2017 AND m2.open_year > 2011 AND v1.museum_id <> v2.museum_id",
    "SELECT DISTINCT v.name  FROM visitor v  JOIN visit v1 ON v.id = v1.visitor_id  JOIN visit v2 ON v.id = v2.visitor_id  JOIN museum m1 ON v1.museum_id = m1.museum_id  JOIN museum m2 ON v2.museum_id = m2.museum_id  WHERE m1.open_year < 2018 AND m2.open_year > 2011",
    "SELECT COUNT(*) FROM visitor WHERE id NOT IN (SELECT visitor_id FROM visit JOIN museum ON visit.museum_id = museum.museum_id WHERE museum.open_year > 2020)",
    "SELECT COUNT(*) FROM visitor WHERE id NOT IN (SELECT visitor_id FROM visit JOIN museum ON visit.museum_id = museum.museum_id WHERE museum.open_year > 2014)",
    "SELECT COUNT(*) FROM visitor WHERE id NOT IN (SELECT visitor_id FROM visit JOIN museum ON visit.museum_id = museum.museum_id WHERE museum.open_year > 2017)",
    "SELECT COUNT(*) FROM visitor WHERE id NOT IN (SELECT visitor_id FROM visit JOIN museum ON visit.museum_id = museum.museum_id WHERE museum.open_year > 2018)",
    "SELECT COUNT(*) FROM visitor WHERE id NOT IN (SELECT visitor_id FROM visit JOIN museum ON visit.museum_id = museum.museum_id WHERE museum.open_year > 2019)",
    "SELECT COUNT(*) FROM museum WHERE open_year > 2007 OR open_year < 2008",
    "SELECT COUNT(*) FROM museum WHERE open_year > 2010 OR open_year < 2008",
    "SELECT COUNT(*) FROM museum WHERE open_year > 2009 OR open_year < 2008",
    "SELECT COUNT(*) FROM museum WHERE open_year > 2011 OR open_year < 2008",
    "SELECT COUNT(*) FROM museum WHERE open_year > 2008 OR open_year < 2008",
    "SELECT COUNT(*) FROM museum WHERE open_year > 2013 OR open_year < 2018",
    "SELECT COUNT(*) FROM museum WHERE open_year > 2013 OR open_year < 2012",
    "SELECT COUNT(*) FROM museum WHERE open_year > 2013 OR open_year < 2015",
    "SELECT COUNT(*) FROM museum WHERE open_year > 2013 OR open_year < 2016",
    "SELECT COUNT(*) FROM museum WHERE open_year > 2013 OR open_year < 2017",
    "SELECT DISTINCT p1.first_name, p1.last_name FROM players p1 JOIN matches m1 ON p1.player_id = m1.winner_id AND m1.year = 2013 JOIN matches m2 ON p1.player_id = m2.winner_id AND m2.year = 2014",
    "SELECT DISTINCT p.first_name, p.last_name FROM players p JOIN matches m1 ON p.player_id = m1.winner_id AND m1.year = 2013 JOIN matches m2 ON p.player_id = m2.winner_id AND m2.year = 2017",
    "SELECT DISTINCT p.first_name, p.last_name FROM players p JOIN matches m1 ON p.player_id = m1.winner_id AND m1.year = 2016 JOIN matches m2 ON p.player_id = m2.winner_id AND m2.year = 2017",
    "SELECT DISTINCT p1.first_name, p1.last_name FROM players p1 JOIN matches m1 ON p1.player_id = m1.winner_id AND m1.year = 2016 JOIN matches m2 ON p1.player_id = m2.winner_id AND m2.year = 2017",
    "SELECT DISTINCT p.first_name, p.last_name  FROM players p  JOIN matches m1 ON p.player_id = m1.winner_id  JOIN matches m2 ON p.player_id = m2.winner_id  WHERE m1.year = 2013 AND m2.year = 2014",
    "SELECT DISTINCT p.first_name, p.last_name  FROM players p  JOIN matches m1 ON p.player_id = m1.winner_id AND m1.year = 2013  JOIN matches m2 ON p.player_id = m2.winner_id AND m2.year = 2017",
    "SELECT DISTINCT p.first_name, p.last_name  FROM players p  JOIN matches m1 ON p.player_id = m1.winner_id AND m1.year = 2017  JOIN matches m2 ON p.player_id = m2.winner_id AND m2.year = 2016",
    "SELECT DISTINCT p.first_name, p.last_name  FROM players p  JOIN matches m1 ON p.player_id = m1.winner_id  JOIN matches m2 ON p.player_id = m2.winner_id  WHERE m1.year = 2016 AND m2.year = 2017",
    "SELECT COUNT(*) FROM matches WHERE year = 2013 OR year = 2026",
    "SELECT COUNT(*) FROM matches WHERE year = 2013 OR year = 2020",
    "SELECT COUNT(*) FROM matches WHERE year = 2013 OR year = 2010",
    "SELECT COUNT(*) FROM matches WHERE year = 2013 OR year = 2015",
    "SELECT COUNT(*) FROM matches WHERE year = 2013 OR year = 2023",
    "SELECT COUNT(*) FROM matches WHERE year = 2023 OR year = 2016",
    "SELECT COUNT(*) FROM matches WHERE year IN (2016, 2017)",
    "SELECT COUNT(*) FROM matches WHERE year = 2007 OR year = 2016",
    "SELECT COUNT(*) FROM matches WHERE year = 2012 OR year = 2016",
    "SELECT COUNT(*) FROM matches WHERE year = 2020 OR year = 2016",
    "select count(*) from matches where year = 2013 or year = 2026",
    "select count(*) from matches where year = 2013 or year = 2020",
    "select count(*) from matches where year = 2013 or year = 2010",
    "SELECT COUNT(*) FROM matches WHERE year = 2013 OR year = 2015",
    "select count(*) from matches where year = 2013 or year = 2023",
    "SELECT COUNT(*) FROM matches WHERE year = 2023 OR year = 2016",
    "SELECT COUNT(*) FROM matches WHERE year = 2017 OR year = 2016",
    "select count(*) from matches where year = 2007 or year = 2016",
    "SELECT COUNT(*) FROM matches WHERE year = 2012 OR year = 2016",
    "select count(*) from matches where year = 2020 or year = 2016",
    "SELECT id, name FROM battle WHERE id IN (SELECT caused_by_ship_id FROM death GROUP BY caused_by_ship_id HAVING SUM(killed) + SUM(injured) > 2)",
    "SELECT battle.id, battle.name FROM battle JOIN death ON battle.id = death.caused_by_ship_id GROUP BY battle.id, battle.name HAVING SUM(death.killed) > 1",
    "SELECT AVG(earnings) FROM poker_player p JOIN people pe ON p.people_id = pe.people_id WHERE pe.height > 210",
    "SELECT AVG(earnings) FROM poker_player p JOIN people pe ON p.people_id = pe.people_id WHERE pe.height > 194.",
    "SELECT AVG(earnings) FROM poker_player p JOIN people pe ON p.people_id = pe.people_id WHERE pe.height > 207",
    "SELECT AVG(earnings) FROM poker_player p JOIN people pe ON p.people_id = pe.people_id WHERE pe.height > 208",
    "SELECT AVG(earnings) FROM poker_player p JOIN people pe ON p.people_id = pe.people_id WHERE pe.height > 209",
    "SELECT AVG(earnings) FROM poker_player p JOIN people pe ON p.people_id = pe.people_id WHERE pe.height > 210.",
    "SELECT AVG(earnings) FROM poker_player p JOIN people pe ON p.people_id = pe.people_id WHERE pe.height > 194.",
    "SELECT AVG(earnings) FROM poker_player p JOIN people pe ON p.people_id = pe.people_id WHERE pe.height > 207.",
    "SELECT AVG(earnings) FROM poker_player p JOIN people pe ON p.people_id = pe.people_id WHERE pe.height > 208.",
    "SELECT AVG(earnings) FROM poker_player p JOIN people pe ON p.people_id = pe.people_id WHERE pe.height > 209.",
    "SELECT name FROM country WHERE indepyear > 1960",
    "SELECT name FROM country WHERE indepyear > 1954",
    "SELECT name FROM country WHERE indepyear > 1944",
    "SELECT name FROM country WHERE indepyear > 1957",
    "SELECT name FROM country WHERE indepyear > 1947",
    "SELECT name FROM country WHERE indepyear > 1960",
    "SELECT name FROM country WHERE indepyear > 1954",
    "SELECT name FROM country WHERE indepyear > 1944",
    "SELECT name FROM country WHERE indepyear > 1957",
    "SELECT name FROM country WHERE indepyear > 1947",
    "SELECT COUNT(DISTINCT language) FROM countrylanguage cl JOIN country c ON cl.countrycode = c.code WHERE c.indepyear < 1921 AND cl.isofficial = 'T'",
    "SELECT COUNT(DISTINCT language) FROM countrylanguage cl JOIN country c ON cl.countrycode = c.code WHERE c.indepyear < 1922 AND cl.isofficial = 'T'",
    "SELECT COUNT(DISTINCT language) FROM countrylanguage cl JOIN country c ON cl.countrycode = c.code WHERE c.indepyear < 1920 AND cl.isofficial = 'T'",
    "SELECT COUNT(DISTINCT language) FROM countrylanguage cl JOIN country c ON cl.countrycode = c.code WHERE c.indepyear < 1923",
    "SELECT COUNT(DISTINCT language) FROM countrylanguage cl JOIN country c ON cl.countrycode = c.code WHERE c.indepyear < 1921 AND cl.isofficial = 'T'",
    "SELECT COUNT(DISTINCT language) FROM countrylanguage cl JOIN country c ON cl.countrycode = c.code WHERE c.indepyear < 1922 AND cl.isofficial = 'T'",
    "SELECT COUNT(DISTINCT language) FROM countrylanguage cl JOIN country c ON cl.countrycode = c.code WHERE c.indepyear < 1920 AND cl.isofficial = 'T'",
    "SELECT COUNT(DISTINCT language) FROM countrylanguage WHERE countrycode IN (SELECT code FROM country WHERE indepyear < 1923) AND isofficial = 'T'",
    "SELECT governmentform, SUM(population) AS total_population FROM country WHERE lifeexpectancy > 82 GROUP BY governmentform",
    "SELECT governmentform, SUM(population) AS total_population FROM country WHERE lifeexpectancy > 76 GROUP BY governmentform",
    "SELECT governmentform, SUM(population) AS total_population FROM country WHERE lifeexpectancy > 66 GROUP BY governmentform",
    "SELECT governmentform, SUM(population) AS total_population FROM country WHERE lifeexpectancy > 71 GROUP BY governmentform",
    "SELECT governmentform, SUM(population) AS total_population FROM country WHERE lifeexpectancy > 79 GROUP BY governmentform",
    "SELECT governmentform, SUM(population) AS total_population FROM country WHERE lifeexpectancy > 82 GROUP BY governmentform",
    "SELECT governmentform, SUM(population) AS total_population FROM country WHERE lifeexpectancy > 76 GROUP BY governmentform",
    "SELECT governmentform, SUM(population) AS total_population FROM country WHERE lifeexpectancy > 66 GROUP BY governmentform",
    "SELECT governmentform, SUM(population) AS total_population FROM country WHERE lifeexpectancy > 71 GROUP BY governmentform",
    "SELECT governmentform, SUM(population) AS total_population FROM country WHERE lifeexpectancy > 79 GROUP BY governmentform",
    "SELECT AVG(lifeexpectancy), SUM(population), continent FROM country GROUP BY continent HAVING AVG(lifeexpectancy) < 82",
    "SELECT AVG(lifeexpectancy), SUM(population), continent FROM country GROUP BY continent HAVING AVG(lifeexpectancy) < 76",
    "SELECT AVG(lifeexpectancy), SUM(population), continent FROM country GROUP BY continent HAVING AVG(lifeexpectancy) < 66",
    "SELECT AVG(lifeexpectancy), SUM(population), continent FROM country GROUP BY continent HAVING AVG(lifeexpectancy) < 79",
    "SELECT AVG(lifeexpectancy), SUM(population), continent FROM country GROUP BY continent HAVING AVG(lifeexpectancy) < 69",
    "SELECT continent, SUM(population) AS total_population, AVG(lifeexpectancy) AS avg_life_expectancy FROM country GROUP BY continent HAVING AVG(lifeexpectancy) < 82;",
    "SELECT continent, SUM(population) AS total_population, AVG(lifeexpectancy) AS avg_life_expectancy FROM country WHERE continent IN (     SELECT continent     FROM country     GROUP BY continent     HAVING AVG(lifeexpectancy) < 76 ) GROUP BY continent",
    "SELECT continent, SUM(population) AS total_population, AVG(lifeexpectancy) AS avg_life_expectancy FROM country GROUP BY continent HAVING AVG(lifeexpectancy) < 66;",
    "SELECT continent, SUM(population) AS total_population, AVG(lifeexpectancy) AS avg_life_expectancy FROM country WHERE continent IN (     SELECT continent     FROM country     GROUP BY continent     HAVING AVG(lifeexpectancy) < 79 ) GROUP BY continent",
    "SELECT continent, SUM(population) AS total_population, AVG(lifeexpectancy) AS avg_life_expectancy FROM country WHERE continent IN (     SELECT continent     FROM country     GROUP BY continent     HAVING AVG(lifeexpectancy) < 69 ) GROUP BY continent",
    "SELECT conductor.name FROM conductor  JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id  WHERE orchestra.year_of_founded > 2002",
    "SELECT conductor.name FROM conductor  JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id  WHERE orchestra.year_of_founded > 2007",
    "SELECT conductor.name FROM conductor  JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id  WHERE orchestra.year_of_founded > 2005",
    "SELECT conductor.name FROM conductor  JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id  WHERE orchestra.year_of_founded > 2004",
    "SELECT conductor.name FROM conductor  JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id  WHERE orchestra.year_of_founded > 2006",
    "SELECT conductor.name FROM conductor JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id WHERE orchestra.year_of_founded > 2002",
    "SELECT conductor.name FROM conductor JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id WHERE orchestra.year_of_founded > 2007",
    "SELECT conductor.name FROM conductor JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id WHERE orchestra.year_of_founded > 2005",
    "SELECT conductor.name FROM conductor JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id WHERE orchestra.year_of_founded > 2004",
    "SELECT conductor.name FROM conductor JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id WHERE orchestra.year_of_founded > 2006",
    "SELECT name FROM highschooler WHERE grade = 9",
    "SELECT name FROM highschooler WHERE grade = 12",
    "SELECT name FROM highschooler WHERE grade = 11",
    "SELECT name FROM highschooler WHERE grade = 9",
    "SELECT name FROM highschooler WHERE grade = 12",
    "SELECT name FROM highschooler WHERE grade = 11",
    "SELECT COUNT(*) FROM highschooler WHERE grade = 9 OR grade = 19",
    "SELECT COUNT(*) FROM highschooler WHERE grade = 9 OR grade = 17",
    "SELECT COUNT(*) FROM highschooler WHERE grade = 9 OR grade = 7",
    "SELECT COUNT(*) FROM highschooler WHERE grade = 9 OR grade = 5",
    "SELECT COUNT(*) FROM highschooler WHERE grade IN (8, 9)",
    "SELECT COUNT(*) FROM highschooler WHERE grade = 18 OR grade = 10",
    "SELECT COUNT(*) FROM highschooler WHERE grade IN (3, 10)",
    "SELECT COUNT(*) FROM highschooler WHERE grade IN (7, 10)",
    "SELECT COUNT(*) FROM highschooler WHERE grade IN (5, 10)",
    "SELECT COUNT(*) FROM highschooler WHERE grade IN (8, 10)",
    "SELECT COUNT(*) FROM highschooler WHERE grade = 9 OR grade = 10",
    "SELECT COUNT(*) FROM highschooler WHERE grade = 9 OR grade = 17",
    "SELECT COUNT(*) FROM highschooler WHERE grade = 9 OR grade = 7",
    "SELECT COUNT(*) FROM highschooler WHERE grade = 9 OR grade = 5",
    "SELECT COUNT(*) FROM highschooler WHERE grade IN (8, 9)",
    "SELECT COUNT(*) FROM highschooler WHERE grade = 10 OR grade = 12",
    "SELECT COUNT(*) FROM highschooler WHERE grade = 3 OR grade = 10",
    "SELECT COUNT(*) FROM highschooler WHERE grade = 7 OR grade = 10",
    "SELECT COUNT(*) FROM highschooler WHERE grade = 5 OR grade = 10",
    "SELECT COUNT(*) FROM highschooler WHERE grade IN (8, 10)",
    "SELECT h.name  FROM highschooler h  JOIN likes l ON h.id = l.student_id  JOIN friend f ON h.id = f.student_id  WHERE h.grade > 10  GROUP BY h.id  HAVING COUNT(DISTINCT f.friend_id) >= 2",
    "SELECT h.name  FROM highschooler h  JOIN likes l ON h.id = l.student_id  JOIN friend f ON h.id = f.student_id  WHERE h.grade > 9  GROUP BY h.id  HAVING COUNT(DISTINCT f.friend_id) >= 2",
    "SELECT h.name  FROM highschooler h  JOIN friend f ON h.id = f.student_id  JOIN friend f2 ON h.id = f2.student_id AND f.friend_id <> f2.friend_id  JOIN likes l ON h.id = l.student_id  WHERE h.grade > 10  GROUP BY h.id  HAVING COUNT(DISTINCT f.friend_id) >= 2",
    "SELECT h.name  FROM highschooler h  JOIN friend f ON h.id = f.student_id  JOIN friend f2 ON h.id = f2.student_id AND f.friend_id <> f2.friend_id  JOIN likes l ON h.id = l.student_id  WHERE h.grade > 9  GROUP BY h.id  HAVING COUNT(DISTINCT f.friend_id) >= 2",
    "SELECT name FROM singer WHERE birth_year = 1948 OR birth_year = 1959",
    "SELECT name FROM singer WHERE birth_year = 1948 OR birth_year = 1953",
    "SELECT name FROM singer WHERE birth_year = 1948 OR birth_year = 1943",
    "SELECT name FROM singer WHERE birth_year = 1948 OR birth_year = 1949",
    "SELECT name FROM singer WHERE birth_year = 1948 OR birth_year = 1956",
    "SELECT name FROM singer WHERE birth_year = 1958 OR birth_year = 1949",
    "SELECT name FROM singer WHERE birth_year = 1952 OR birth_year = 1949",
    "SELECT name FROM singer WHERE birth_year = 1942 OR birth_year = 1949",
    "SELECT name FROM singer WHERE birth_year = 1947 OR birth_year = 1949",
    "SELECT name FROM singer WHERE birth_year = 1955 OR birth_year = 1949",
    "SELECT name FROM singer WHERE birth_year = 1948 OR birth_year = 1959",
    "SELECT name FROM singer WHERE birth_year = 1948 OR birth_year = 1953",
    "SELECT name FROM singer WHERE birth_year = 1948 OR birth_year = 1943",
    "SELECT name FROM singer WHERE birth_year = 1948 OR birth_year = 1949",
    "SELECT name FROM singer WHERE birth_year = 1948 OR birth_year = 1956",
    "SELECT name FROM singer WHERE birth_year = 1958 OR birth_year = 1949",
    "SELECT name FROM singer WHERE birth_year = 1952 OR birth_year = 1949",
    "SELECT name FROM singer WHERE birth_year = 1942 OR birth_year = 1949",
    "SELECT name FROM singer WHERE birth_year = 1947 OR birth_year = 1949",
    "SELECT name FROM singer WHERE birth_year = 1955 OR birth_year = 1949",
    "SELECT property_name FROM properties WHERE (property_type_code = 'APT' OR property_type_code = 'HSE') AND room_count > 4",
    "SELECT property_name FROM properties WHERE (property_type_code = 'APT' OR property_type_code = 'HSE') AND room_count > 10",
    "SELECT property_name FROM properties WHERE (property_type_code = 'APT' OR property_type_code = 'HSE') AND room_count > 5",
    "SELECT property_name FROM properties WHERE (property_type_code = 'APT' OR property_type_code = 'HSE') AND room_count > 7",
    "SELECT property_name FROM properties WHERE (property_type_code = 'APT' OR property_type_code = 'HSE') AND room_count > 8"
]