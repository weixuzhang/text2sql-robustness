[
    "SELECT DISTINCT c.countryname FROM countries c JOIN car_makers cm ON c.countryid = cm.country WHERE c.continent = 'europe' GROUP BY c.countryid HAVING COUNT(DISTINCT cm.maker) >= 2",
    "SELECT countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country WHERE countries.continent = 'europe' GROUP BY countries.countryname HAVING COUNT(DISTINCT car_makers.maker) >= 4",
    "SELECT DISTINCT countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country WHERE countries.continent = 'Europe' GROUP BY countries.countryname HAVING COUNT(DISTINCT car_makers.maker) >= 2",
    "SELECT DISTINCT countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country WHERE countries.continent = 'Europe' GROUP BY countries.countryname HAVING COUNT(DISTINCT car_makers.maker) >= 4",
    "SELECT id, fullname FROM car_makers WHERE id IN (SELECT maker FROM model_list GROUP BY maker HAVING COUNT(DISTINCT model) > 2)",
    "SELECT id, fullname FROM car_makers WHERE id IN (SELECT maker FROM model_list GROUP BY maker HAVING COUNT(DISTINCT model) > 4)",
    "SELECT id, maker FROM car_makers WHERE id IN (SELECT maker FROM model_list GROUP BY maker HAVING COUNT(*) > 2)",
    "SELECT id, maker FROM car_makers WHERE id IN (SELECT maker FROM model_list GROUP BY maker HAVING COUNT(*) > 4)",
    "SELECT COUNT(DISTINCT countries.countryid) FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryid HAVING COUNT(DISTINCT car_makers.maker) > 3",
    "SELECT COUNT(DISTINCT countries.countryid) FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryid HAVING COUNT(DISTINCT car_makers.maker) > 4",
    "SELECT COUNT(DISTINCT countries.countryid) FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryid HAVING COUNT(DISTINCT car_makers.maker) > 3",
    "SELECT COUNT(DISTINCT countries.countryid) FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryid HAVING COUNT(DISTINCT car_makers.maker) > 4",
    "SELECT template_type_code FROM ref_template_types  WHERE template_type_code IN  (SELECT template_type_code FROM templates  GROUP BY template_type_code  HAVING COUNT(*) < 5)",
    "SELECT template_type_code FROM ref_template_types  WHERE template_type_code IN  (SELECT template_type_code FROM templates  GROUP BY template_type_code  HAVING COUNT(*) < 13)",
    "SELECT template_type_code FROM ref_template_types  WHERE template_type_code IN  (SELECT template_type_code FROM templates  GROUP BY template_type_code  HAVING COUNT(*) < 6)",
    "SELECT template_type_code FROM ref_template_types  WHERE template_type_code IN  (SELECT template_type_code FROM templates  GROUP BY template_type_code  HAVING COUNT(*) < 8)",
    "SELECT template_type_code FROM ref_template_types  WHERE template_type_code IN  (SELECT template_type_code FROM templates  GROUP BY template_type_code  HAVING COUNT(*) < 11)",
    "SELECT template_type_code FROM ref_template_types  WHERE template_type_code IN  (SELECT template_type_code FROM templates  GROUP BY template_type_code  HAVING COUNT(*) < 5)",
    "SELECT template_type_code FROM ref_template_types WHERE template_type_code IN (SELECT template_type_code FROM templates GROUP BY template_type_code HAVING COUNT(*) < 13)",
    "SELECT template_type_code FROM ref_template_types  WHERE template_type_code IN  (SELECT template_type_code FROM templates  GROUP BY template_type_code  HAVING COUNT(template_id) < 6)",
    "SELECT template_type_code FROM ref_template_types WHERE template_type_code IN (SELECT template_type_code FROM templates GROUP BY template_type_code HAVING COUNT(*) < 8)",
    "SELECT template_type_code FROM ref_template_types WHERE template_type_code IN (SELECT template_type_code FROM templates GROUP BY template_type_code HAVING COUNT(*) < 11)",
    "SELECT document_id FROM paragraphs GROUP BY document_id HAVING COUNT(*) >= 3",
    "SELECT document_id FROM paragraphs GROUP BY document_id HAVING COUNT(*) >= 3",
    "SELECT document_id FROM documents WHERE document_id IN (SELECT document_id FROM paragraphs GROUP BY document_id HAVING COUNT(*) BETWEEN 1 AND 5)",
    "SELECT document_id FROM paragraphs GROUP BY document_id HAVING COUNT(*) BETWEEN 1 AND 11",
    "SELECT document_id FROM documents WHERE document_id IN (SELECT document_id FROM paragraphs GROUP BY document_id HAVING COUNT(*) BETWEEN 1 AND 6)",
    "SELECT document_id FROM documents WHERE document_id IN (SELECT document_id FROM paragraphs GROUP BY document_id HAVING COUNT(*) BETWEEN 1 AND 8)",
    "SELECT document_id FROM paragraphs GROUP BY document_id HAVING COUNT(*) BETWEEN 1 AND 9",
    "SELECT document_id FROM documents  WHERE document_id IN (SELECT document_id FROM paragraphs GROUP BY document_id HAVING COUNT(*) BETWEEN 1 AND 5)",
    "SELECT document_id FROM paragraphs GROUP BY document_id HAVING COUNT(*) BETWEEN 1 AND 11",
    "SELECT document_id FROM documents  WHERE document_id IN (SELECT document_id FROM paragraphs GROUP BY document_id HAVING COUNT(*) BETWEEN 1 AND 6)",
    "SELECT document_id FROM documents  WHERE document_id IN (SELECT document_id FROM paragraphs GROUP BY document_id HAVING COUNT(*) BETWEEN 1 AND 8)",
    "SELECT document_id FROM paragraphs GROUP BY document_id HAVING COUNT(*) BETWEEN 1 AND 9",
    "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 19",
    "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 4",
    "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 8",
    "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 6",
    "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 14",
    "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 19",
    "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 4",
    "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 8",
    "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 6",
    "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 14",
    "SELECT country_code FROM players GROUP BY country_code HAVING COUNT(*) > 60",
    "SELECT country_code FROM players GROUP BY country_code HAVING COUNT(*) > 44",
    "SELECT country_code FROM players GROUP BY country_code HAVING COUNT(*) > 57",
    "SELECT country_code FROM players GROUP BY country_code HAVING COUNT(*) > 47",
    "SELECT country_code FROM players GROUP BY country_code HAVING COUNT(*) > 46",
    "SELECT country_code FROM players GROUP BY country_code HAVING COUNT(*) > 60",
    "SELECT country_code FROM players GROUP BY country_code HAVING COUNT(*) > 44",
    "SELECT country_code FROM players GROUP BY country_code HAVING COUNT(*) > 57",
    "SELECT country_code FROM players GROUP BY country_code HAVING COUNT(*) > 47",
    "SELECT country_code FROM players GROUP BY country_code HAVING COUNT(*) > 46",
    "SELECT winner_name, winner_rank FROM matches ORDER BY winner_age LIMIT 5",
    "SELECT winner_name, winner_rank FROM matches ORDER BY winner_age LIMIT 13",
    "SELECT winner_name, winner_rank FROM matches ORDER BY winner_age LIMIT 6",
    "SELECT winner_name, winner_rank FROM matches ORDER BY winner_age LIMIT 8",
    "SELECT winner_name, winner_rank FROM matches ORDER BY winner_age LIMIT 11",
    "SELECT winner_name, winner_rank FROM matches ORDER BY winner_age ASC LIMIT 5",
    "SELECT first_name, last_name, winner_rank FROM players JOIN matches ON players.player_id = matches.winner_id ORDER BY winner_age LIMIT 13",
    "SELECT winner_name, winner_rank FROM matches ORDER BY winner_age ASC LIMIT 6",
    "SELECT winner_name, winner_rank FROM matches ORDER BY winner_age ASC LIMIT 8",
    "SELECT winner_name, winner_rank FROM matches ORDER BY winner_age ASC LIMIT 11",
    "SELECT students.first_name, students.middle_name, students.last_name, students.student_id FROM students JOIN student_enrolment ON students.student_id = student_enrolment.student_id GROUP BY students.student_id HAVING COUNT(DISTINCT student_enrolment.degree_program_id) = 3 AND COUNT(DISTINCT student_enrolment.semester_id) = 1",
    "SELECT student_id, first_name, middle_name, last_name FROM students WHERE student_id IN (     SELECT student_id     FROM student_enrolment     WHERE degree_program_id IN (         SELECT degree_program_id         FROM student_enrolment         GROUP BY student_id, semester_id         HAVING COUNT(DISTINCT degree_program_id) = 3     )     GROUP BY student_id, semester_id     HAVING COUNT(DISTINCT degree_program_id) = 3 )",
    "SELECT transcript_id, transcript_date FROM transcripts WHERE transcript_id IN (SELECT transcript_id FROM transcript_contents GROUP BY transcript_id HAVING COUNT(DISTINCT student_course_id) >= 3)",
    "SELECT transcript_id, transcript_date FROM transcripts WHERE transcript_id IN (SELECT transcript_id FROM transcript_contents GROUP BY transcript_id HAVING COUNT(DISTINCT student_course_id) >= 3)",
    "SELECT tv_series.episode, tv_series.rating  FROM tvshow.tv_series  ORDER BY tv_series.rating DESC  LIMIT 5",
    "SELECT tv_series.episode, tv_series.rating  FROM tv_series  ORDER BY tv_series.rating DESC  LIMIT 6",
    "SELECT tv_series.episode, tv_series.rating  FROM tvshow.tv_series  ORDER BY tv_series.rating DESC  LIMIT 8",
    "SELECT tv_series.episode, tv_series.rating  FROM tvshow.tv_series  ORDER BY tv_series.rating DESC  LIMIT 11",
    "SELECT tv_series.episode, tv_series.rating  FROM tvshow.tv_series  ORDER BY tv_series.rating DESC  LIMIT 7",
    "SELECT episode, rating FROM tv_series ORDER BY rating DESC LIMIT 5",
    "SELECT episode, rating FROM tv_series ORDER BY rating DESC LIMIT 6",
    "SELECT episode, rating FROM tv_series ORDER BY rating DESC LIMIT 8",
    "SELECT episode, rating FROM tv_series ORDER BY rating DESC LIMIT 11",
    "SELECT episode, rating FROM tv_series ORDER BY rating DESC LIMIT 7",
    "SELECT country.name, COUNT(countrylanguage.language) AS num_languages FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.name HAVING num_languages > 5",
    "SELECT country.name, COUNT(countrylanguage.language) AS num_languages FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.name HAVING num_languages > 11",
    "SELECT country.name, COUNT(countrylanguage.language) AS num_languages FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.name HAVING num_languages > 6",
    "SELECT name, COUNT(language) AS num_languages FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY countrycode HAVING num_languages > 8",
    "SELECT name, COUNT(language) AS num_languages FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY countrycode HAVING num_languages > 9",
    "SELECT name, surfacearea FROM country ORDER BY surfacearea DESC LIMIT 4",
    "SELECT name, surfacearea FROM country ORDER BY surfacearea DESC LIMIT 6",
    "SELECT name, surfacearea FROM country ORDER BY surfacearea DESC LIMIT 11",
    "SELECT name, surfacearea FROM country ORDER BY surfacearea DESC LIMIT 7",
    "SELECT name, surfacearea FROM country ORDER BY surfacearea DESC LIMIT 14",
    "SELECT name, surfacearea FROM country ORDER BY surfacearea DESC LIMIT 4",
    "SELECT name, surfacearea FROM country ORDER BY surfacearea DESC LIMIT 6",
    "SELECT name, surfacearea FROM country ORDER BY surfacearea DESC LIMIT 11",
    "SELECT name, surfacearea FROM country ORDER BY surfacearea DESC LIMIT 7",
    "SELECT name, surfacearea FROM country ORDER BY surfacearea DESC LIMIT 14",
    "SELECT name FROM country ORDER BY population DESC LIMIT 5",
    "SELECT name FROM country ORDER BY population DESC LIMIT 13",
    "SELECT name FROM country ORDER BY population DESC LIMIT 6",
    "SELECT name FROM country ORDER BY population DESC LIMIT 8",
    "SELECT name FROM country ORDER BY population DESC LIMIT 11",
    "SELECT name FROM country ORDER BY population DESC LIMIT 5",
    "SELECT name FROM country ORDER BY population DESC LIMIT 13",
    "SELECT name FROM country ORDER BY population DESC LIMIT 6",
    "SELECT name FROM country ORDER BY population DESC LIMIT 8",
    "SELECT name FROM country ORDER BY population DESC LIMIT 11",
    "SELECT name FROM country ORDER BY population ASC LIMIT 5",
    "SELECT name FROM country ORDER BY population ASC LIMIT 13",
    "SELECT name FROM country ORDER BY population ASC LIMIT 6",
    "SELECT name FROM country ORDER BY population ASC LIMIT 8",
    "SELECT name FROM country ORDER BY population ASC LIMIT 11",
    "SELECT name FROM country ORDER BY population ASC LIMIT 5",
    "SELECT name FROM country ORDER BY population ASC LIMIT 13",
    "SELECT name FROM country ORDER BY population ASC LIMIT 6",
    "SELECT name FROM country ORDER BY population ASC LIMIT 8",
    "SELECT name FROM country ORDER BY population ASC LIMIT 11",
    "SELECT h.name  FROM highschooler h  JOIN friend f ON h.id = f.student_id  GROUP BY h.id  HAVING COUNT(f.friend_id) >= 2",
    "SELECT h.name FROM highschooler h  WHERE h.id IN (SELECT f.student_id FROM friend f GROUP BY f.student_id HAVING COUNT(*) >= 2)",
    "SELECT h.name  FROM highschooler h  JOIN friend f ON h.id = f.student_id  JOIN likes l ON h.id = l.student_id  WHERE h.grade > 5  GROUP BY h.id  HAVING COUNT(DISTINCT f.friend_id) >= 3",
    "SELECT name FROM highschooler WHERE grade > 5 AND id IN (SELECT student_id FROM friend GROUP BY student_id HAVING COUNT(*) >= 3)",
    "SELECT professional_id, last_name, cell_number FROM professionals WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM treatments GROUP BY professional_id HAVING COUNT(*) > 5)",
    "SELECT professional_id, last_name, cell_number FROM professionals WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM treatments GROUP BY professional_id HAVING COUNT(*) > 11)",
    "SELECT professional_id, last_name, cell_number FROM professionals WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM treatments GROUP BY professional_id HAVING COUNT(*) > 6)",
    "SELECT professional_id, last_name, cell_number FROM professionals WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM treatments GROUP BY professional_id HAVING COUNT(*) > 8)",
    "SELECT professional_id, last_name, cell_number FROM professionals WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM treatments GROUP BY professional_id HAVING COUNT(*) > 9)",
    "SELECT professional_id, last_name, cell_number FROM professionals WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM treatments GROUP BY professional_id HAVING COUNT(*) > 5)",
    "SELECT professional_id, last_name, cell_number FROM professionals WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM treatments GROUP BY professional_id HAVING COUNT(*) > 11)",
    "SELECT professional_id, last_name, cell_number FROM professionals WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM treatments GROUP BY professional_id HAVING COUNT(*) > 6)",
    "SELECT professional_id, last_name, cell_number FROM professionals WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM treatments GROUP BY professional_id HAVING COUNT(*) > 8)",
    "SELECT professional_id, last_name, cell_number FROM professionals WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM treatments GROUP BY professional_id HAVING COUNT(*) > 9)",
    "SELECT professional_id, role_code, first_name FROM professionals WHERE professional_id IN (SELECT professional_id FROM treatments GROUP BY professional_id HAVING COUNT(DISTINCT treatment_id) >= 3)",
    "SELECT id, role, first_name FROM professionals WHERE professional_id IN (SELECT professional_id FROM treatments GROUP BY professional_id HAVING COUNT(*) >= 3)",
    "SELECT professional_id, cell_number FROM professionals WHERE professional_id IN (SELECT professional_id FROM treatments GROUP BY professional_id HAVING COUNT(DISTINCT treatment_type_code) >= 3)",
    "SELECT professional_id, cell_number FROM professionals WHERE professional_id IN (SELECT professional_id FROM treatments GROUP BY professional_id HAVING COUNT(DISTINCT treatment_type_code) >= 3)"
]