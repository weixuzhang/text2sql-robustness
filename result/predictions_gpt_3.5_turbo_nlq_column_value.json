[
    "SELECT DISTINCT country FROM singer WHERE age > 20 AND is_male = 0",
    "SELECT DISTINCT country FROM singer WHERE age > 20",
    "SELECT DISTINCT country FROM singer WHERE age > 20",
    "SELECT DISTINCT country FROM singer WHERE age > 20",
    "SELECT DISTINCT country FROM singer WHERE age > 20",
    "SELECT DISTINCT country FROM singer WHERE age > 20",
    "SELECT location, name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",
    "SELECT COUNT(*) FROM concert WHERE year = 2014 OR year = 2015",
    "SELECT COUNT(*) FROM concert WHERE year = 2014 OR year = 2015",
    "SELECT COUNT(*) FROM concert WHERE year = 2014 OR year = 2015",
    "SELECT COUNT(*) FROM concert WHERE year IN (2014, 2015)",
    "SELECT name, capacity FROM stadium WHERE stadium_id IN (SELECT stadium_id FROM concert WHERE year >= 2014 GROUP BY stadium_id HAVING COUNT(*) = (SELECT COUNT(*) FROM concert WHERE year >= 2014 GROUP BY stadium_id ORDER BY COUNT(*) DESC LIMIT 1))",
    "SELECT name, capacity FROM stadium WHERE stadium_id = (SELECT stadium_id FROM concert WHERE year >= 2014 GROUP BY stadium_id ORDER BY COUNT(*) DESC LIMIT 1)",
    "SELECT name, capacity FROM stadium WHERE stadium_id = (SELECT stadium_id FROM concert GROUP BY stadium_id HAVING COUNT(*) = (SELECT MAX(concert_count) FROM (SELECT COUNT(*) AS concert_count FROM concert WHERE year >= 2014 GROUP BY stadium_id) AS counts))",
    "SELECT name, capacity FROM stadium WHERE stadium_id = (SELECT stadium_id FROM concert WHERE theme = 'concerts' AND year >= 2014 GROUP BY stadium_id ORDER BY COUNT(*) DESC LIMIT 1)",
    "SELECT DISTINCT s1.country FROM singer s1, singer s2, singer_in_concert sc1, singer_in_concert sc2, concert c WHERE s1.singer_id = sc1.singer_id AND s2.singer_id = sc2.singer_id AND sc1.concert_id = sc2.concert_id AND s1.age > 40 AND s2.age < 30 AND s1.country = s2.country",
    "SELECT DISTINCT s1.country FROM singer s1, singer s2, singer_in_concert sc1, singer_in_concert sc2 WHERE s1.age > 40 AND s2.age < 30 AND s1.singer_id = sc1.singer_id AND s2.singer_id = sc2.singer_id AND sc1.concert_id = sc2.concert_id",
    "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert WHERE year = 2014)",
    "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert WHERE year = 2014)",
    "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert WHERE year = 2014)",
    "SELECT DISTINCT singer.name FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id WHERE concert.year = 2014",
    "SELECT singer.name FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id WHERE concert.year = 2014",
    "SELECT singer.name  FROM singer  JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id  JOIN concert ON concert.concert_id = singer_in_concert.concert_id  WHERE concert.year = 2014",
    "SELECT DISTINCT singer.name FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id WHERE concert.year = 2014",
    "SELECT DISTINCT singer.name FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id WHERE concert.year = 2014",
    "SELECT singer.name FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON concert.concert_id = singer_in_concert.concert_id WHERE concert.year = 2014",
    "SELECT DISTINCT singer.name  FROM singer  JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id  JOIN concert ON singer_in_concert.concert_id = concert.concert_id  WHERE concert.year = 2014",
    "SELECT singer.name FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id WHERE concert.year = 2014",
    "SELECT name, location FROM stadium WHERE stadium_id IN (SELECT stadium_id FROM concert WHERE year IN (2014, 2015))",
    "SELECT DISTINCT stadium.name, stadium.location  FROM concert  JOIN stadium ON concert.stadium_id = stadium.stadium_id  WHERE concert.year = 2014 AND concert.stadium_id IN      (SELECT stadium_id FROM concert WHERE year = 2015)",
    "SELECT DISTINCT s.name, s.location FROM stadium s INNER JOIN concert c1 ON s.stadium_id = c1.stadium_id INNER JOIN concert c2 ON s.stadium_id = c2.stadium_id WHERE c1.year = 2014 AND c2.year = 2015",
    "SELECT DISTINCT stadium.name, stadium.location FROM concert JOIN stadium ON concert.stadium_id = stadium.stadium_id WHERE concert.year IN (2014, 2015)",
    "SELECT DISTINCT stadium.name, stadium.location FROM concert JOIN stadium ON concert.stadium_id = stadium.stadium_id WHERE concert.year IN (2014, 2015)",
    "SELECT DISTINCT s.name, s.location FROM stadium s INNER JOIN concert c1 ON s.stadium_id = c1.stadium_id AND c1.year = 2014 INNER JOIN concert c2 ON s.stadium_id = c2.stadium_id AND c2.year = 2015",
    "SELECT name, location FROM stadium WHERE stadium_id IN  (SELECT stadium_id FROM concert WHERE year = 2014) AND stadium_id IN (SELECT stadium_id FROM concert WHERE year = 2015)",
    "SELECT COUNT(*) FROM pets WHERE weight > 10",
    "SELECT COUNT(*) FROM pets WHERE weight > 10",
    "SELECT COUNT(*) FROM has_pet JOIN pets ON has_pet.petid = pets.petid WHERE pets.weight > 10",
    "SELECT COUNT(*) FROM pets WHERE weight > 10",
    "SELECT COUNT(*) FROM pets WHERE weight > 10;",
    "SELECT COUNT(*) FROM pets WHERE weight > 10",
    "I'm sorry, but the question you provided doesn't make sense. Could you please rephrase it or provide more context?",
    "SELECT COUNT(*) FROM pets WHERE weight > 10",
    "SELECT COUNT(*) FROM pets WHERE weight > 10",
    "SELECT COUNT(DISTINCT has_pet.petid)  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  WHERE student.age > 20",
    "SELECT COUNT(*) FROM pets p JOIN has_pet hp ON p.petid = hp.petid JOIN student s ON hp.stuid = s.stuid WHERE p.pettype = 'dog' AND p.sex = 'female'",
    "SELECT COUNT(pets.petid) FROM pets JOIN has_pet ON pets.petid = has_pet.petid JOIN student ON has_pet.stuid = student.stuid WHERE student.sex = 'F' AND pets.pettype = 'dog'",
    "SELECT COUNT(pets.petid)  FROM pets  JOIN has_pet ON pets.petid = has_pet.petid  JOIN student ON has_pet.stuid = student.stuid  WHERE pets.pettype = 'dog' AND student.sex = 'F'",
    "SELECT COUNT(*) FROM pets p JOIN has_pet hp ON p.petid = hp.petid JOIN student s ON hp.stuid = s.stuid WHERE p.pettype = 'dog' AND p.sex = 'F'",
    "SELECT COUNT(*) FROM has_pet JOIN pets ON has_pet.petid = pets.petid JOIN student ON has_pet.stuid = student.stuid WHERE pets.pettype = 'dog' AND student.sex = 'female'",
    "SELECT COUNT(pets.petid) FROM pets JOIN has_pet ON pets.petid = has_pet.petid JOIN student ON has_pet.stuid = student.stuid WHERE pets.pettype = 'dog' AND student.sex = 'F'",
    "SELECT car_makers.maker  FROM car_makers  JOIN car_names ON car_makers.id = car_names.makeid  JOIN cars_data ON car_names.modelid = cars_data.id  WHERE cars_data.year = 1970",
    "SELECT DISTINCT car_makers.maker  FROM car_makers  JOIN cars_data ON car_makers.id = cars_data.id  WHERE cars_data.year = 1970",
    "SELECT DISTINCT maker FROM car_makers  JOIN car_names ON car_makers.id = car_names.makeid  JOIN cars_data ON car_names.model = cars_data.model  WHERE year = 1970",
    "SELECT DISTINCT car_makers.maker  FROM car_makers  JOIN car_names ON car_makers.id = car_names.makeid  JOIN cars_data ON car_names.modelid = cars_data.id  WHERE cars_data.year = 1970",
    "SELECT DISTINCT car_makers.maker FROM car_makers INNER JOIN cars_data ON car_makers.id = cars_data.id WHERE cars_data.year = 1970",
    "SELECT DISTINCT car_makers.maker FROM car_makers JOIN car_names ON car_makers.id = car_names.makeid JOIN cars_data ON car_names.model = cars_data.id WHERE cars_data.year = 1970",
    "SELECT DISTINCT maker FROM car_makers  JOIN cars_data ON car_makers.id = cars_data.id  WHERE year = 1970 AND maker IS NOT NULL",
    "SELECT DISTINCT maker FROM car_makers  INNER JOIN cars_data ON car_makers.id = cars_data.id  WHERE year = 1970",
    "SELECT accelerate FROM cars_data  JOIN car_names ON cars_data.id = car_names.makeid  WHERE model = 'hornet sports about sw' AND maker = 'amc'",
    "SELECT accelerate FROM cars_data WHERE makeid = (SELECT id FROM car_names WHERE model = 'amc hornet sportabout (sw)')",
    "SELECT accelerate FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid WHERE car_names.model = 'amc hornet sportabout (sw)'",
    "SELECT accelerate FROM cars_data WHERE makeid = (SELECT id FROM car_names WHERE model = 'Hornet Sportabout (SW)')",
    "I'm sorry, but the serialized schema you provided does not contain any information about the sound output of a car horn. Could you please provide a schema that includes this information?",
    "I'm sorry, but the serialized schema you provided does not contain the necessary information to answer the question. It seems to be missing tables that would contain information about the 'Hornet sportabout' and the 'AMC Hornet'. Could you please provide a more complete schema?",
    "SELECT accelerate FROM cars_data WHERE make = 'amc hornet sportabout sw'",
    "SELECT accelerate FROM cars_data  JOIN car_names ON cars_data.id = car_names.makeid  WHERE car_names.model = 'AMC Hornet Sportsabout'",
    "I'm sorry, but the serialized schema you provided does not contain any information about the car hornet sportabout. Could you please provide the necessary information about the car hornet sportabout?",
    "SELECT AVG(edispl) FROM cars_data  WHERE makeid IN (SELECT id FROM car_makers WHERE maker = 'Volvo')",
    "SELECT AVG(edispl) FROM cars_data  WHERE id IN (     SELECT cars_data.id FROM cars_data      JOIN car_names ON cars_data.id = car_names.makeid      JOIN car_makers ON car_names.model = car_makers.maker      WHERE car_makers.fullname = 'Volvo' )",
    "SELECT COUNT(*) FROM cars_data  JOIN car_names ON cars_data.id = car_names.makeid  JOIN car_makers ON car_names.maker = car_makers.maker  WHERE car_makers.maker = 'American Motor Company'",
    "SELECT COUNT(DISTINCT model) FROM model_list WHERE maker = 'American Motor Company'",
    "SELECT COUNT(DISTINCT model) FROM model_list WHERE maker = 'American Motors'",
    "SELECT COUNT(*) FROM car_names cn JOIN car_makers cm ON cn.makeid = cm.id WHERE cm.maker = 'American Motors'",
    "SELECT COUNT(DISTINCT modelid) FROM model_list WHERE maker = 'American Motor Company'",
    "SELECT COUNT(*) FROM cars_data  JOIN car_names ON cars_data.id = car_names.makeid  JOIN car_makers ON car_names.model = car_makers.maker  WHERE car_makers.fullname = 'American Motor Company'",
    "SELECT COUNT(*) FROM cars_data  JOIN car_names ON cars_data.id = car_names.makeid  JOIN car_makers ON car_names.maker = car_makers.maker  WHERE car_makers.fullname = 'American Motor Company'",
    "SELECT COUNT(*) FROM cars_data cd JOIN car_makers cm ON cd.id = cm.id WHERE cm.maker = 'American Motor Company'",
    "SELECT COUNT(*) FROM cars_data cd JOIN car_makers cm ON cd.id = cm.id JOIN model_list ml ON cm.id = ml.maker JOIN car_names cn ON ml.modelid = cn.model WHERE cm.country = 'American Motors Company'",
    "SELECT COUNT(DISTINCT makeid) FROM car_names JOIN car_makers ON car_names.makeid = car_makers.id WHERE car_makers.maker = 'American Car Company'",
    "SELECT DISTINCT model FROM model_list WHERE (maker = 'General Motors') OR (weight > 3500)",
    "SELECT DISTINCT model_list.model  FROM car_makers  JOIN model_list ON car_makers.id = model_list.maker  JOIN cars_data ON model_list.modelid = cars_data.id  WHERE car_makers.maker = 'General Motors' AND cars_data.weight > 3500",
    "SELECT model_list.modelid, car_makers.maker FROM model_list JOIN car_makers ON model_list.maker = car_makers.id JOIN cars_data ON model_list.modelid = cars_data.id WHERE car_makers.maker = 'General Motors' AND cars_data.weight > 3500",
    "SELECT model FROM car_names JOIN cars_data ON car_names.makeid = cars_data.id JOIN car_makers ON car_names.makeid = car_makers.id WHERE car_makers.maker = 'General Motors' AND cars_data.weight > 3500",
    "SELECT DISTINCT model FROM model_list JOIN car_makers ON model_list.maker = car_makers.maker JOIN cars_data ON model_list.modelid = cars_data.id WHERE car_makers.country = 'GM' AND cars_data.weight > 3500",
    "SELECT model FROM model_list JOIN cars_data ON model_list.modelid = cars_data.id WHERE weight > 3500 AND maker = 'GM'",
    "SELECT model FROM model_list JOIN car_makers ON model_list.maker = car_makers.maker JOIN cars_data ON model_list.modelid = cars_data.id WHERE car_makers.maker = 'GM' AND cars_data.weight > 3500",
    "SELECT model FROM car_names JOIN cars_data ON car_names.makeid = cars_data.id JOIN model_list ON car_names.model = model_list.model WHERE car_makers.maker = 'General Motors' AND cars_data.weight > 3500",
    "SELECT DISTINCT model FROM car_names  JOIN cars_data ON car_names.makeid = cars_data.id  JOIN car_makers ON car_names.makeid = car_makers.id  WHERE car_makers.maker = 'General Motors' AND cars_data.weight > 3500",
    "SELECT model FROM car_names  JOIN cars_data ON car_names.makeid = cars_data.id  JOIN car_makers ON car_names.makeid = car_makers.id  WHERE car_makers.fullname = 'General Motors' AND cars_data.weight > 3500",
    "SELECT DISTINCT year FROM cars_data WHERE weight < 4000 AND weight > 3000",
    "SELECT cylinders FROM cars_data  INNER JOIN car_names ON cars_data.id = car_names.makeid  WHERE car_names.make = 'volvo' AND cars_data.accelerate = 'slowly'",
    "SELECT cylinders FROM cars_data WHERE id IN (SELECT id FROM car_names WHERE model = 'volvo' ORDER BY accelerate LIMIT 1)",
    "SELECT cylinders FROM cars_data  WHERE id IN (     SELECT id FROM car_names      WHERE model = 'Volvo'  )  ORDER BY accelerate ASC  LIMIT 1",
    "SELECT cylinders FROM cars_data WHERE accelerate = (SELECT MIN(accelerate) FROM cars_data WHERE makeid = (SELECT id FROM car_makers WHERE maker = 'Volvo'))",
    "SELECT cylinders FROM cars_data WHERE accelerate = (SELECT MIN(accelerate) FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid JOIN model_list ON car_names.model = model_list.model WHERE maker = 'Volvo')",
    "SELECT DISTINCT countries.countryname  FROM countries  JOIN car_makers ON countries.countryid = car_makers.country  WHERE (SELECT COUNT(DISTINCT car_makers.maker)         FROM car_makers         WHERE car_makers.country = countries.countryid) > 3     OR car_makers.maker IN (SELECT car_makers.maker                             FROM car_makers                             JOIN car_names ON car_makers.id = car_names.makeid                             WHERE car_names.make = 'Fiat')",
    "SELECT DISTINCT countries.countryid, countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country JOIN car_names ON car_makers.id = car_names.makeid WHERE car_makers.maker = 'fiat' GROUP BY countries.countryid, countries.countryname HAVING COUNT(DISTINCT car_makers.id) > 3",
    "SELECT airportcode, airportname FROM airports WHERE city = 'Anthony'",
    "SELECT airportcode, airportname FROM airports WHERE city = 'Anthony'",
    "SELECT airportcode, airportname FROM airports WHERE city = 'Anthony'",
    "SELECT airline FROM airlines WHERE abbreviation = 'UAL'",
    "SELECT airline FROM airlines WHERE abbreviation = 'UAL'",
    "SELECT airportname FROM airports WHERE city = 'Aberdeen'",
    "SELECT airportname FROM airports WHERE city = 'Aberdeen'",
    "SELECT airportname FROM airports WHERE city = 'Aberdeen'",
    "SELECT airportname FROM airports WHERE city = 'Aberdeen'",
    "SELECT airportname FROM airports WHERE city = 'Aberdeen'",
    "SELECT airportname FROM airports WHERE city = 'Aberdeen'",
    "SELECT airportname FROM airports WHERE city = 'Aberdeen'",
    "SELECT COUNT(*) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = 'Aberdeen'",
    "SELECT COUNT(*) FROM flights WHERE destairport = 'Aberdeen'",
    "SELECT COUNT(*) FROM flights WHERE sourceairport = 'Aberdeen' AND destairport = 'Ashley'",
    "SELECT COUNT(*) FROM flights f JOIN airports a1 ON f.sourceairport = a1.airportcode JOIN airports a2 ON f.destairport = a2.airportcode WHERE a1.city = 'Aberdeen' AND a2.city = 'Ashley'",
    "SELECT COUNT(*) FROM flights AS f1 JOIN flights AS f2 ON f1.destairport = 'ABZ' AND f2.sourceairport = 'ABZ' AND f1.destairport = f2.sourceairport AND f2.destairport = 'ASH'",
    "SELECT COUNT(*) FROM flights WHERE sourceairport = 'Aberdeen' AND destairport = 'Ashley'",
    "SELECT COUNT(*) FROM flights WHERE sourceairport = 'Aberdeen' AND destairport = 'Ashley'",
    "SELECT COUNT(*) FROM flights WHERE sourceairport = 'Aberdeen' AND destairport = 'Ashley'",
    "SELECT COUNT(*) FROM flights WHERE sourceairport = 'Aberdeen' AND destairport = 'Ashley'",
    "SELECT COUNT(*) FROM flights WHERE sourceairport = 'Aberdeen' AND destairport = 'Ashley'",
    "SELECT COUNT(*) FROM flights WHERE sourceairport = 'Aberdeen' AND destairport = 'Ashley' AND sourceairport = 'Aberdeen'",
    "SELECT COUNT(*) FROM flights f JOIN airports a ON f.destairport = a.airportcode WHERE f.sourceairport = 'Aberdeen' AND a.airportname = 'Ashley'",
    "SELECT COUNT(*) FROM flights f JOIN airlines a ON f.airline = a.uid WHERE f.destairport = 'Aberdeen' AND a.airline = 'United Airlines'",
    "SELECT COUNT(*) FROM flights f JOIN airlines a ON f.airline = a.uid WHERE f.destairport = 'Aberdeen' AND a.airline = 'United Airlines'",
    "SELECT COUNT(*) FROM flights f JOIN airports a ON f.destairport = a.airportcode WHERE a.city = 'Aberdeen' AND f.airline = 'United'",
    "SELECT COUNT(*) FROM flights f JOIN airports a ON f.destairport = a.airportcode JOIN airlines al ON f.airline = al.abbreviation WHERE a.city = 'Aberdeen' AND al.airline = 'United Airlines'",
    "SELECT COUNT(*) FROM flights f JOIN airlines a ON f.airline = a.uid WHERE f.destairport = 'Aberdeen' AND a.airline = 'UnitedAirlines'",
    "SELECT COUNT(*) FROM flights f JOIN airports a ON f.destairport = a.airportcode JOIN airlines al ON f.airline = al.abbreviation WHERE a.city = 'Aberdeen' AND al.airline = 'United Airlines'",
    "SELECT COUNT(*) FROM flights f JOIN airports a ON f.destairport = a.airportcode JOIN airlines al ON f.airline = al.abbreviation WHERE a.city = 'Aberdeen' AND al.airline = 'United Airlines'",
    "SELECT COUNT(*) FROM flights WHERE airline = 'United Airlines' AND destairport = 'Aberdeen'",
    "SELECT COUNT(*) FROM flights f JOIN airlines a ON f.airline = a.abbreviation WHERE f.destairport = 'Aberdeen' AND a.airline = 'United Airlines'",
    "SELECT COUNT(*) FROM flights f JOIN airports a ON f.sourceairport = a.airportcode JOIN airlines al ON f.airline = al.abbreviation WHERE a.city = 'Aberdeen' AND al.airline = 'United Airlines'",
    "SELECT flightno FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = 'Aberdeen'",
    "SELECT flightno FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = 'Aberdeen'",
    "SELECT flightno FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.airportname = 'Aberdeen'",
    "SELECT flightno FROM flights WHERE sourceairport = 'Aberdeen'",
    "SELECT flightno FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.airportname = 'Aberdeen'",
    "SELECT flightno FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = 'Aberdeen'",
    "SELECT flightno FROM flights WHERE sourceairport = 'Aberdeen'",
    "SELECT flightno FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = 'Aberdeen'",
    "SELECT flightno FROM flights WHERE destairport = 'Aberdeen'",
    "SELECT flightno FROM flights WHERE sourceairport = 'Aberdeen'",
    "SELECT flightno FROM flights JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = 'Aberdeen'",
    "SELECT sourceairport, destairport FROM flights WHERE destairport = 'Aberdeen'",
    "SELECT flightno FROM flights WHERE destairport = 'Aberdeen'",
    "SELECT flightno FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen'",
    "SELECT flightno FROM flights WHERE destairport = 'Aberdeen'",
    "SELECT flightno FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen'",
    "SELECT flightno FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen'",
    "SELECT flightno FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen'",
    "SELECT COUNT(*) FROM flights WHERE destairport = 'Aberdeen' OR destairport = 'Abilene';",
    "SELECT COUNT(*) FROM flights WHERE destairport = 'Abilene' OR destairport = 'Aberdeen'",
    "SELECT DISTINCT city FROM employee GROUP BY city HAVING COUNT(CASE WHEN age < 30 THEN 1 END) > 1",
    "SELECT DISTINCT city FROM employee GROUP BY city HAVING COUNT(CASE WHEN age < 30 THEN 1 END) >= 2",
    "SELECT city FROM employee GROUP BY city HAVING COUNT(*) > 1 AND MAX(age) < 30",
    "SELECT document_id, template_id, document_description FROM documents WHERE document_name = 'Robbin CV'",
    "SELECT documents.document_id, documents.template_id, documents.document_description FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE documents.document_name = 'Robbin''s CV'",
    "SELECT template_type_code FROM templates GROUP BY template_type_code",
    "SELECT template_type_description  FROM ref_template_types  WHERE template_type_code = 'AD'",
    "SELECT template_type_description FROM ref_template_types WHERE template_type_code = 'AD'",
    "SELECT COUNT(*) FROM paragraphs WHERE document_id IN (SELECT document_id FROM documents WHERE document_name = 'Summer Show')",
    "SELECT COUNT(*) FROM paragraphs WHERE document_id = (SELECT document_id FROM documents WHERE document_name = 'Summer Show')",
    "SELECT COUNT(*) FROM paragraphs p JOIN documents d ON p.document_id = d.document_id JOIN templates t ON d.template_id = t.template_id WHERE t.template_details = 'Summer Show'",
    "SELECT DISTINCT d.document_id FROM documents d JOIN paragraphs p1 ON d.document_id = p1.document_id JOIN paragraphs p2 ON d.document_id = p2.document_id JOIN templates t ON d.template_id = t.template_id WHERE p1.paragraph_text LIKE '%Ireland%' AND p2.paragraph_text LIKE '%Brazil%'",
    "SELECT documents.document_id  FROM documents  JOIN paragraphs ON documents.document_id = paragraphs.document_id  JOIN templates ON documents.template_id = templates.template_id  WHERE paragraphs.paragraph_text LIKE '%Brazil%' AND templates.template_type_description = 'Ireland'",
    "SELECT name FROM teacher WHERE age BETWEEN 32 AND 33",
    "SELECT name FROM teacher WHERE age IN (32, 33)",
    "SELECT name FROM teacher WHERE age = 32 OR age = 33",
    "SELECT name FROM teacher WHERE age = 32 OR age = 33",
    "SELECT name FROM teacher WHERE age = 32 OR age = 33",
    "SELECT name FROM teacher WHERE age = 33",
    "SELECT name FROM teacher WHERE age = 32 OR age = 33",
    "SELECT name FROM teacher WHERE age = 32 OR age = 33",
    "SELECT teacher.name FROM course_teach  JOIN course_arrange ON course_teach.course_id = course_arrange.course_id  JOIN teacher ON course_arrange.teacher_id = teacher.teacher_id  WHERE course_teach.course = 'Math'",
    "SELECT teacher.name FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course.course_id = course_arrange.course_id WHERE course.course = 'math'",
    "SELECT teacher.name FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course.course_id = course_arrange.course_id WHERE course.course = 'math'",
    "SELECT name FROM teacher WHERE teacher_id IN (SELECT teacher_id FROM course_teach WHERE course = 'math')",
    "SELECT teacher.name FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course.course_id = course_arrange.course_id WHERE course.course = 'math'",
    "SELECT teacher.name FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course.course_id = course_arrange.course_id WHERE course.course = 'mathematics'",
    "SELECT teacher.name FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course.course_id = course_arrange.course_id WHERE course.course = 'math'",
    "SELECT teacher.name FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course.course_id = course_arrange.course_id WHERE course.course = 'math'",
    "SELECT name FROM teacher WHERE teacher_id IN (SELECT teacher_id FROM course_teach WHERE course = 'mathematics')",
    "SELECT * FROM visitor WHERE age < 30",
    "SELECT COUNT(*) FROM visitor WHERE age < 30",
    "SELECT COUNT(*) FROM visitor WHERE age < 30",
    "SELECT COUNT(*) FROM visitor WHERE age < 30",
    "SELECT * FROM visitor WHERE age < 30",
    "SELECT open_year, num_of_staff FROM museum WHERE name = 'Plaza Museum'",
    "SELECT open_year, num_of_staff FROM museum WHERE name = 'Plaza Museum'",
    "SELECT open_year, num_of_staff FROM museum WHERE name = 'Plaza Museum'",
    "SELECT open_year, num_of_staff FROM museum WHERE name = 'Plaza Museum'",
    "SELECT COUNT(DISTINCT players.player_id) FROM players JOIN matches ON players.player_id = matches.winner_id WHERE matches.year = 2013 OR matches.year = 2016 UNION SELECT COUNT(DISTINCT players.player_id) FROM players JOIN matches ON players.player_id = matches.loser_id WHERE matches.year = 2013 OR matches.year = 2016",
    "SELECT COUNT(*) FROM players WHERE player_id IN (SELECT winner_id FROM matches WHERE year = 2013 OR year = 2016) OR player_id IN (SELECT loser_id FROM matches WHERE year = 2013 OR year = 2016)",
    "SELECT battle.name, battle.date FROM battle INNER JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.name IN ('Lettice', 'HMS Atalanta')",
    "SELECT zip_postcode FROM addresses WHERE city = 'Port Chelsea'",
    "SELECT zip_postcode FROM addresses WHERE city = 'Port Chelsea'",
    "SELECT zip_postcode FROM addresses WHERE city = 'Port Chelsea'",
    "SELECT cell_mobile_number FROM students WHERE first_name = 'Timmothy' AND last_name = 'Ward'",
    "SELECT cell_mobile_number FROM students WHERE first_name = 'Timmothy' AND last_name = 'Ward'",
    "select section_description from sections where section_name = 'h'",
    "SELECT section_description FROM sections WHERE section_name = 'h'",
    "SELECT section_description FROM sections WHERE section_name = 'h'",
    "SELECT first_name FROM students  WHERE current_address_id IN (SELECT address_id FROM addresses WHERE country = 'Haiti')  OR cell_mobile_number = '09700166582'",
    "SELECT first_name FROM students  WHERE current_address_id IN (SELECT address_id FROM addresses WHERE country = 'Haiti')  OR cell_mobile_number = '09700166582'  LIMIT 1",
    "SELECT first_name FROM students WHERE current_address_id IN (SELECT address_id FROM addresses WHERE country = 'Haiti') OR cell_mobile_number = '09700166582' LIMIT 1",
    "SELECT package_option FROM tv_channel WHERE series_name = 'Sky radio'",
    "SELECT DISTINCT channel FROM tv_series WHERE language = 'English'",
    "SELECT series_name FROM tv_channel WHERE language = 'English'",
    "SELECT COUNT(*) FROM tv_channel WHERE language = 'English'",
    "SELECT COUNT(*) FROM tv_channel WHERE language = 'english'",
    "SELECT COUNT(*) FROM tv_channel WHERE language = 'English'",
    "SELECT COUNT(*) FROM tv_series WHERE language = 'English'",
    "SELECT cartoon.title FROM cartoon JOIN tv_series ON cartoon.id = tv_series.id JOIN tv_channel ON tv_series.channel = tv_channel.id WHERE tv_channel.series_name = 'Sky Radio'",
    "SELECT cartoon.title FROM cartoon JOIN tv_series ON cartoon.id = tv_series.id WHERE tv_series.channel IN (SELECT tv_channel.id FROM tv_channel WHERE tv_channel.series_name = 'Sky Radio')",
    "SELECT title FROM cartoon INNER JOIN tv_series ON cartoon.id = tv_series.id INNER JOIN tv_channel ON tv_series.channel = tv_channel.id WHERE tv_channel.series_name = 'Sky radio'",
    "SELECT weekly_rank FROM tv_series WHERE series_name = 'A love of a lifetime' AND episode = 1",
    "SELECT tv_channel.series_name, tv_series.id FROM tv_channel JOIN tv_series ON tv_channel.id = tv_series.channel WHERE tv_series.series_name = 'A love of a lifetime'",
    "SELECT tv_series.episode FROM tv_channel JOIN tv_series ON tv_channel.id = tv_series.channel WHERE tv_channel.series_name = 'Sky Radio'",
    "I'm sorry, but the provided schema doesn't seem to have a table that contains information about the episodes of a TV channel. Can you please provide a schema that includes this information?",
    "SELECT series_name FROM tv_channel JOIN tv_series ON tv_channel.id = tv_series.channel WHERE series_name IS NOT NULL AND tv_channel.series_name = 'Sky Radio'",
    "SELECT * FROM tv_series WHERE channel = 'Sky Radio'",
    "I'm sorry, but the provided schema does not contain any information about the episode name of a TV show named 'sky radio'. Could you please provide the correct schema or more information about the database?",
    "I'm sorry, but the serialized schema you provided does not contain any information about which table contains the 'Sky Radio' TV show. Could you please provide more information about the schema or the table that contains the 'Sky Radio' TV show?",
    "SELECT DISTINCT tv_channel.country FROM tv_channel JOIN cartoon ON tv_channel.id = cartoon.channel WHERE cartoon.title = 'Todd Casey'",
    "SELECT DISTINCT tv_channel.id FROM tv_channel LEFT JOIN cartoon ON tv_channel.id = cartoon.channel WHERE cartoon.id IS NULL OR cartoon.directed_by != 'Ben Jones'",
    "SELECT DISTINCT tv_channel.id FROM tv_channel LEFT JOIN tv_series ON tv_channel.id = tv_series.channel LEFT JOIN cartoon ON tv_series.id = cartoon.channel WHERE cartoon.id IS NULL OR cartoon.directed_by != 'Ben Jones'",
    "SELECT tv_channel.id FROM tv_channel WHERE tv_channel.id NOT IN (SELECT cartoon.channel FROM cartoon WHERE cartoon.directed_by = 'Ben Jones') AND tv_channel.content = 'cartoon'",
    "SELECT AVG(earnings) FROM poker_player JOIN people ON poker_player.people_id = people.people_id WHERE height > 200.",
    "SELECT name FROM people WHERE nationality <> 'Russian'",
    "SELECT name FROM people WHERE nationality <> 'Russian'",
    "SELECT created FROM votes WHERE state = 'California' ORDER BY created DESC LIMIT 1",
    "SELECT MAX(created) FROM votes WHERE state = 'CA'",
    "SELECT MAX(created) FROM votes WHERE state = 'CA'",
    "SELECT COUNT(*) FROM votes WHERE state = 'California' AND created = (SELECT MAX(created) FROM votes)",
    "SELECT COUNT(*) FROM votes WHERE state = 'NY' OR state = 'CA'",
    "SELECT state, SUM(created) AS total_votes FROM votes GROUP BY state ORDER BY total_votes DESC LIMIT 1",
    "SELECT COUNT(*) FROM votes WHERE state = 'California' AND phone_number LIKE '%NY%'",
    "SELECT COUNT(*) FROM votes WHERE state = 'NY' OR state = 'CA'",
    "SELECT COUNT(*) FROM votes WHERE state = 'CA' OR state = 'NY'",
    "SELECT created, state, phone_number FROM votes WHERE contestant_number = (SELECT contestant_number FROM contestants WHERE contestant_name = 'Tabatha Gehling')",
    "SELECT created, state, phone_number  FROM votes  WHERE contestant_number = (SELECT contestant_number FROM contestants WHERE contestant_name = 'Tabatha Gehling')",
    "SELECT SUM(surfacearea) FROM country WHERE continent = 'Caribbean'",
    "SELECT SUM(surfacearea) FROM country WHERE continent = 'Caribbean'",
    "SELECT SUM(surfacearea) FROM country WHERE continent = 'Caribbean'",
    "SELECT SUM(surfacearea) FROM country WHERE continent = 'Caribbean'",
    "SELECT SUM(surfacearea) FROM country WHERE continent = 'Caribbean'",
    "SELECT SUM(surfacearea) FROM country WHERE continent = 'Caribbean'",
    "SELECT SUM(surfacearea) FROM country WHERE continent = 'Caribbean'",
    "SELECT continent FROM country WHERE name = 'Anguilla'",
    "SELECT continent FROM country WHERE name = 'Anguilla'",
    "SELECT AVG(lifeexpectancy) FROM country WHERE continent = 'Central Africa'",
    "SELECT AVG(lifeexpectancy) FROM country WHERE continent = 'Central Africa'",
    "SELECT AVG(lifeexpectancy) FROM country WHERE continent = 'Central Africa'",
    "SELECT AVG(lifeexpectancy) FROM country WHERE continent = 'Central Africa'",
    "SELECT AVG(lifeexpectancy) FROM country WHERE continent = 'Central Africa'",
    "SELECT SUM(surfacearea) FROM country WHERE continent = 'Asia' OR continent = 'Europe'",
    "SELECT SUM(surfacearea) FROM country WHERE continent = 'Asia' OR continent = 'Europe'",
    "SELECT SUM(surfacearea) FROM country WHERE continent = 'Asia' OR continent = 'Europe'",
    "SELECT SUM(surfacearea) FROM country WHERE continent = 'Asia' OR continent = 'Europe'",
    "SELECT SUM(population) FROM city WHERE district = 'Gelderland'",
    "SELECT SUM(population) FROM city WHERE district = 'Gelderland'",
    "SELECT COUNT(*) FROM city WHERE district = 'Gelderland'",
    "SELECT SUM(population) FROM city WHERE district = 'Gelderland'",
    "SELECT SUM(population) FROM city WHERE countrycode = 'NLD' AND district = 'Gelderland'",
    "SELECT language FROM countrylanguage WHERE countrycode IN (SELECT code FROM country WHERE continent = 'Asia') ORDER BY percentage DESC LIMIT 1",
    "SELECT language FROM countrylanguage WHERE countrycode IN (SELECT code FROM country WHERE continent = 'Asia') ORDER BY percentage DESC LIMIT 1",
    "SELECT language FROM countrylanguage WHERE countrycode IN (SELECT code FROM country WHERE continent = 'Asia') ORDER BY percentage DESC LIMIT 1",
    "SELECT language FROM countrylanguage WHERE countrycode IN (SELECT code FROM country WHERE continent = 'Asia') AND isofficial = 'T' ORDER BY percentage DESC LIMIT 1",
    "SELECT language FROM countrylanguage WHERE countrycode IN (SELECT code FROM country WHERE continent = 'Asia') ORDER BY percentage DESC LIMIT 1",
    "SELECT DISTINCT country.code FROM country  JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE language != 'English'",
    "SELECT DISTINCT code FROM country WHERE code NOT IN (SELECT DISTINCT countrycode FROM countrylanguage WHERE language = 'English')",
    "SELECT name FROM country WHERE continent = 'Europe' AND population = 80000  Example: If there is a country named \"Exampleland\" in Europe with exactly 80000 people, the query will return \"Exampleland\".",
    "SELECT name FROM conductor WHERE nationality <> 'American'",
    "SELECT * FROM conductor WHERE name != 'USA'",
    "SELECT name FROM conductor WHERE nationality <> 'American'",
    "SELECT name FROM conductor WHERE nationality <> 'American'",
    "SELECT MAX(share), MIN(share) FROM performance WHERE type != 'live finals'",
    "SELECT MAX(percentage), MIN(percentage) FROM  (SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM performance WHERE type != 'live finals') AS percentage  FROM performance WHERE type != 'live finals' GROUP BY orchestra_id) AS percentages",
    "SELECT MAX(share), MIN(share) FROM performance WHERE type = 'non-live finals'",
    "SELECT MAX(share), MIN(share) FROM performance WHERE type != 'live finals'",
    "SELECT grade FROM highschooler WHERE name = 'Kyle'",
    "SELECT id FROM highschooler WHERE name = 'Kyle'",
    "SELECT highschooler.name FROM highschooler JOIN friend ON highschooler.id = friend.friend_id WHERE friend.student_id = (SELECT id FROM highschooler WHERE name = 'Kyle')",
    "SELECT h2.name  FROM highschooler h1, highschooler h2, friend f  WHERE h1.name = 'Kyle' AND h1.id = f.student_id AND f.friend_id = h2.id",
    "SELECT COUNT(*) FROM likes WHERE student_id = (SELECT id FROM highschooler WHERE name = 'Kyle' AND grade = 'high')",
    "SELECT professionals.professional_id, professionals.last_name, professionals.cell_number FROM treatments JOIN professionals ON treatments.professional_id = professionals.professional_id WHERE treatments.professional_id IN (     SELECT professional_id     FROM treatments     WHERE state = 'Indiana'     GROUP BY professional_id     HAVING COUNT(DISTINCT dog_id) > 2 )",
    "SELECT professionals.professional_id, professionals.last_name, professionals.cell_number FROM professionals JOIN treatments ON treatments.professional_id = professionals.professional_id JOIN dogs ON dogs.dog_id = treatments.dog_id JOIN owners ON owners.owner_id = dogs.owner_id WHERE owners.state = 'Indiana' AND       treatments.treatment_type_code > 2;",
    "SELECT owners.owner_id, owners.last_name, owners.cell_number FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id JOIN treatments ON dogs.dog_id = treatments.dog_id WHERE owners.state = 'Indiana' AND treatments.professional_id IN (     SELECT professional_id     FROM treatments     GROUP BY professional_id     HAVING COUNT(DISTINCT dog_id) > 2 )",
    "SELECT professional_id, first_name, cell_number FROM professionals  WHERE state = 'Indiana' OR professional_id IN  (SELECT professional_id FROM treatments GROUP BY professional_id HAVING COUNT(DISTINCT dog_id) > 2)",
    "SELECT professional_id, last_name, cell_number FROM professionals WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM treatments GROUP BY professional_id HAVING COUNT(*) > 2)",
    "SELECT professional_id, last_name, cell_number FROM professionals WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM treatments GROUP BY professional_id HAVING COUNT(*) > 2)",
    "SELECT dogs.owner_id, owners.last_name, owners.cell_number FROM dogs JOIN owners ON dogs.owner_id = owners.owner_id WHERE owners.state = 'Indiana' AND       (SELECT COUNT(*) FROM treatments WHERE treatments.dog_id = dogs.dog_id) > 2",
    "SELECT email_address FROM professionals WHERE state = 'Wisconsin' OR state = 'Hawaii'",
    "SELECT email_address FROM professionals WHERE state = 'Wisconsin' OR state = 'Hawaii'",
    "SELECT email_address FROM professionals WHERE state = 'Wisconsin' OR state = 'Hawaii'",
    "SELECT email_address FROM professionals WHERE state = 'Wisconsin' OR state = 'Hawaii'",
    "SELECT email_address FROM professionals WHERE state = 'Hawaii' OR state = 'Wisconsin'",
    "SELECT email_address FROM professionals WHERE state = 'Hawaii' OR state = 'Wisconsin'",
    "SELECT email_address FROM professionals WHERE state = 'Hawaii' OR state = 'Wisconsin'",
    "SELECT email_address FROM professionals WHERE state = 'Hawaii' OR state = 'Wisconsin'",
    "SELECT email_address FROM professionals WHERE state = 'Wisconsin' OR state = 'Hawaii'",
    "SELECT email_address FROM professionals WHERE state = 'Wisconsin' OR state = 'Hawaii'",
    "SELECT name FROM singer WHERE citizenship <> 'French'",
    "SELECT name FROM singer WHERE citizenship <> 'French' AND singer_id IN (SELECT singer_id FROM song)"
]